
FREERTOS_SHELL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000052a4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000012e  00802000  000052a4  00005338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00001112  0080212e  0080212e  00005466  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00005466  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005498  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000008c8  00000000  00000000  000054d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00015c11  00000000  00000000  00005da0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00006dac  00000000  00000000  0001b9b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000079e8  00000000  00000000  0002275d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000210c  00000000  00000000  0002a148  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00034958  00000000  00000000  0002c254  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000085a0  00000000  00000000  00060bac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000760  00000000  00000000  0006914c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00001872  00000000  00000000  000698ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e2 01 	jmp	0x3c4	; 0x3c4 <__ctors_end>
       4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
       8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
       c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      10:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      14:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      18:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      1c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      20:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      24:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      28:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      2c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      30:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      34:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      38:	0c 94 44 09 	jmp	0x1288	; 0x1288 <__vector_14>
      3c:	0c 94 71 09 	jmp	0x12e2	; 0x12e2 <__vector_15>
      40:	0c 94 9e 09 	jmp	0x133c	; 0x133c <__vector_16>
      44:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__vector_17>
      48:	0c 94 f8 09 	jmp	0x13f0	; 0x13f0 <__vector_18>
      4c:	0c 94 25 0a 	jmp	0x144a	; 0x144a <__vector_19>
      50:	0c 94 52 0a 	jmp	0x14a4	; 0x14a4 <__vector_20>
      54:	0c 94 7f 0a 	jmp	0x14fe	; 0x14fe <__vector_21>
      58:	0c 94 ac 0a 	jmp	0x1558	; 0x1558 <__vector_22>
      5c:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__vector_23>
      60:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      64:	0c 94 1c 22 	jmp	0x4438	; 0x4438 <__vector_25>
      68:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      6c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      70:	0c 94 74 22 	jmp	0x44e8	; 0x44e8 <__vector_28>
      74:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      78:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      7c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      80:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      84:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      88:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      8c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      90:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      94:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      98:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      9c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      a0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      a4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      a8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      ac:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      b0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      b4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      b8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      bc:	0c 94 c8 0c 	jmp	0x1990	; 0x1990 <__vector_47>
      c0:	0c 94 f5 0c 	jmp	0x19ea	; 0x19ea <__vector_48>
      c4:	0c 94 22 0d 	jmp	0x1a44	; 0x1a44 <__vector_49>
      c8:	0c 94 4f 0d 	jmp	0x1a9e	; 0x1a9e <__vector_50>
      cc:	0c 94 7c 0d 	jmp	0x1af8	; 0x1af8 <__vector_51>
      d0:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <__vector_52>
      d4:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__vector_53>
      d8:	0c 94 03 0e 	jmp	0x1c06	; 0x1c06 <__vector_54>
      dc:	0c 94 63 14 	jmp	0x28c6	; 0x28c6 <__vector_55>
      e0:	0c 94 30 0e 	jmp	0x1c60	; 0x1c60 <__vector_56>
      e4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      e8:	0c 94 7c 23 	jmp	0x46f8	; 0x46f8 <__vector_58>
      ec:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      f0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      f4:	0c 94 d4 23 	jmp	0x47a8	; 0x47a8 <__vector_61>
      f8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      fc:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     100:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     104:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     108:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     10c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     110:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     114:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     118:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     11c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     120:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     124:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     128:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     12c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     130:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     134:	0c 94 06 0b 	jmp	0x160c	; 0x160c <__vector_77>
     138:	0c 94 33 0b 	jmp	0x1666	; 0x1666 <__vector_78>
     13c:	0c 94 60 0b 	jmp	0x16c0	; 0x16c0 <__vector_79>
     140:	0c 94 8d 0b 	jmp	0x171a	; 0x171a <__vector_80>
     144:	0c 94 ba 0b 	jmp	0x1774	; 0x1774 <__vector_81>
     148:	0c 94 e7 0b 	jmp	0x17ce	; 0x17ce <__vector_82>
     14c:	0c 94 14 0c 	jmp	0x1828	; 0x1828 <__vector_83>
     150:	0c 94 41 0c 	jmp	0x1882	; 0x1882 <__vector_84>
     154:	0c 94 6e 0c 	jmp	0x18dc	; 0x18dc <__vector_85>
     158:	0c 94 9b 0c 	jmp	0x1936	; 0x1936 <__vector_86>
     15c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     160:	0c 94 cc 22 	jmp	0x4598	; 0x4598 <__vector_88>
     164:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     168:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     16c:	0c 94 24 23 	jmp	0x4648	; 0x4648 <__vector_91>
     170:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     174:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     178:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     17c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     180:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     184:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     188:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     18c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     190:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     194:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     198:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     19c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1a0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1a4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1a8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1ac:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1b0:	0c 94 5d 0e 	jmp	0x1cba	; 0x1cba <__vector_108>
     1b4:	0c 94 8a 0e 	jmp	0x1d14	; 0x1d14 <__vector_109>
     1b8:	0c 94 b7 0e 	jmp	0x1d6e	; 0x1d6e <__vector_110>
     1bc:	0c 94 e4 0e 	jmp	0x1dc8	; 0x1dc8 <__vector_111>
     1c0:	0c 94 11 0f 	jmp	0x1e22	; 0x1e22 <__vector_112>
     1c4:	0c 94 3e 0f 	jmp	0x1e7c	; 0x1e7c <__vector_113>
     1c8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1cc:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1d0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1d4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1d8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1dc:	0c 94 2c 24 	jmp	0x4858	; 0x4858 <__vector_119>
     1e0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1e4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1e8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1ec:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1f0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1f4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1f8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1fc:	69 10       	cpse	r6, r9
     1fe:	7c 10       	cpse	r7, r12
     200:	8f 10       	cpse	r8, r15
     202:	a2 10       	cpse	r10, r2
     204:	b5 10       	cpse	r11, r5
     206:	c8 10       	cpse	r12, r8
     208:	db 10       	cpse	r13, r11
     20a:	a5 1f       	adc	r26, r21
     20c:	a8 1f       	adc	r26, r24
     20e:	ab 1f       	adc	r26, r27
     210:	ae 1f       	adc	r26, r30
     212:	b1 1f       	adc	r27, r17
     214:	b4 1f       	adc	r27, r20
     216:	b6 1f       	adc	r27, r22
     218:	c7 1f       	adc	r28, r23
     21a:	cf 1f       	adc	r28, r31
     21c:	d9 1f       	adc	r29, r25
     21e:	d7 1f       	adc	r29, r23
     220:	08 4a       	sbci	r16, 0xA8	; 168
     222:	d7 3b       	cpi	r29, 0xB7	; 183
     224:	3b ce       	rjmp	.-906    	; 0xfffffe9c <__eeprom_end+0xff7efe9c>
     226:	01 6e       	ori	r16, 0xE1	; 225
     228:	84 bc       	out	0x24, r8	; 36
     22a:	bf fd       	.word	0xfdbf	; ????
     22c:	c1 2f       	mov	r28, r17
     22e:	3d 6c       	ori	r19, 0xCD	; 205
     230:	74 31       	cpi	r23, 0x14	; 20
     232:	9a bd       	out	0x2a, r25	; 42
     234:	56 83       	std	Z+6, r21	; 0x06
     236:	3d da       	rcall	.-2950   	; 0xfffff6b2 <__eeprom_end+0xff7ef6b2>
     238:	3d 00       	.word	0x003d	; ????
     23a:	c7 7f       	andi	r28, 0xF7	; 247
     23c:	11 be       	out	0x31, r1	; 49
     23e:	d9 e4       	ldi	r29, 0x49	; 73
     240:	bb 4c       	sbci	r27, 0xCB	; 203
     242:	3e 91       	ld	r19, -X
     244:	6b aa       	std	Y+51, r6	; 0x33
     246:	aa be       	out	0x3a, r10	; 58
     248:	00 00       	nop
     24a:	00 80       	ld	r0, Z
     24c:	3f 05       	cpc	r19, r15
     24e:	a8 4c       	sbci	r26, 0xC8	; 200
     250:	cd b2       	in	r12, 0x1d	; 29
     252:	d4 4e       	sbci	r29, 0xE4	; 228
     254:	b9 38       	cpi	r27, 0x89	; 137
     256:	36 a9       	ldd	r19, Z+54	; 0x36
     258:	02 0c       	add	r0, r2
     25a:	50 b9       	out	0x00, r21	; 0
     25c:	91 86       	std	Z+9, r9	; 0x09
     25e:	88 08       	sbc	r8, r8
     260:	3c a6       	std	Y+44, r3	; 0x2c
     262:	aa aa       	std	Y+50, r10	; 0x32
     264:	2a be       	out	0x3a, r2	; 58
     266:	00 00       	nop
     268:	00 80       	ld	r0, Z
     26a:	3f 00       	.word	0x003f	; ????

0000026c <__trampolines_start>:
     26c:	0c 94 ae 1f 	jmp	0x3f5c	; 0x3f5c <_ZN8emstreamlsE15ser_manipulator+0x30>
     270:	0c 94 a8 1f 	jmp	0x3f50	; 0x3f50 <_ZN8emstreamlsE15ser_manipulator+0x24>
     274:	0c 94 48 1f 	jmp	0x3e90	; 0x3e90 <_ZN8emstream13ready_to_sendEv>
     278:	0c 94 d7 1f 	jmp	0x3fae	; 0x3fae <_ZN8emstreamlsE15ser_manipulator+0x82>
     27c:	0c 94 44 1e 	jmp	0x3c88	; 0x3c88 <_ZN14frt_text_queue7putcharEc>
     280:	0c 94 ef 16 	jmp	0x2dde	; 0x2dde <prvIdleTask>
     284:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <_ZN10task_motor3runEv>
     288:	0c 94 50 1f 	jmp	0x3ea0	; 0x3ea0 <_ZN8emstream12clear_screenEv>
     28c:	0c 94 a2 10 	jmp	0x2144	; 0x2144 <pwm_init+0x98>
     290:	0c 94 4d 1f 	jmp	0x3e9a	; 0x3e9a <_ZN8emstream14check_for_charEv>
     294:	0c 94 7c 10 	jmp	0x20f8	; 0x20f8 <pwm_init+0x4c>
     298:	0c 94 c7 1f 	jmp	0x3f8e	; 0x3f8e <_ZN8emstreamlsE15ser_manipulator+0x62>
     29c:	0c 94 4a 1f 	jmp	0x3e94	; 0x3e94 <_ZN8emstream7getcharEv>
     2a0:	0c 94 1b 1e 	jmp	0x3c36	; 0x3c36 <_ZN14frt_text_queue7getcharEv>
     2a4:	0c 94 69 10 	jmp	0x20d2	; 0x20d2 <pwm_init+0x26>
     2a8:	0c 94 cf 1f 	jmp	0x3f9e	; 0x3f9e <_ZN8emstreamlsE15ser_manipulator+0x72>
     2ac:	0c 94 df 01 	jmp	0x3be	; 0x3be <_call_static_run_method>
     2b0:	0c 94 c8 10 	jmp	0x2190	; 0x2190 <pwm_init+0xe4>
     2b4:	0c 94 14 21 	jmp	0x4228	; 0x4228 <_ZN5rs2327putcharEc>
     2b8:	0c 94 b4 1f 	jmp	0x3f68	; 0x3f68 <_ZN8emstreamlsE15ser_manipulator+0x3c>
     2bc:	0c 94 e2 24 	jmp	0x49c4	; 0x49c4 <_GLOBAL__sub_I_print_ser_queue>
     2c0:	0c 94 b1 1f 	jmp	0x3f62	; 0x3f62 <_ZN8emstreamlsE15ser_manipulator+0x36>
     2c4:	0c 94 db 10 	jmp	0x21b6	; 0x21b6 <pwm_init+0x10a>
     2c8:	0c 94 39 1e 	jmp	0x3c72	; 0x3c72 <_ZN14frt_text_queue14check_for_charEv>
     2cc:	0c 94 a5 1f 	jmp	0x3f4a	; 0x3f4a <_ZN8emstreamlsE15ser_manipulator+0x1e>
     2d0:	0c 94 b5 10 	jmp	0x216a	; 0x216a <pwm_init+0xbe>
     2d4:	0c 94 71 21 	jmp	0x42e2	; 0x42e2 <_ZN5rs23212clear_screenEv>
     2d8:	0c 94 ab 1f 	jmp	0x3f56	; 0x3f56 <_ZN8emstreamlsE15ser_manipulator+0x2a>
     2dc:	0c 94 d7 06 	jmp	0xdae	; 0xdae <_ZN16task_Robot_State3runEv>
     2e0:	0c 94 8b 1d 	jmp	0x3b16	; 0x3b16 <_ZN8frt_task12print_statusER8emstream>
     2e4:	0c 94 b6 1f 	jmp	0x3f6c	; 0x3f6c <_ZN8emstreamlsE15ser_manipulator+0x40>
     2e8:	0c 94 5e 21 	jmp	0x42bc	; 0x42bc <_ZN5rs23214check_for_charEv>
     2ec:	0c 94 4f 1f 	jmp	0x3e9e	; 0x3e9e <_ZN8emstream12transmit_nowEv>
     2f0:	0c 94 38 21 	jmp	0x4270	; 0x4270 <_ZN5rs2327getcharEv>
     2f4:	0c 94 97 1e 	jmp	0x3d2e	; 0x3d2e <__cxa_pure_virtual>
     2f8:	0c 94 d9 1f 	jmp	0x3fb2	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
     2fc:	0c 94 8f 10 	jmp	0x211e	; 0x211e <pwm_init+0x72>

00000300 <__trampolines_end>:
     300:	52 65       	ori	r21, 0x52	; 82
     302:	73 65       	ori	r23, 0x53	; 83
     304:	74 74       	andi	r23, 0x44	; 68
     306:	69 6e       	ori	r22, 0xE9	; 233
     308:	67 00       	.word	0x0067	; ????

0000030a <_ZZN8frt_task15emergency_resetEvE3__c>:
     30a:	45 52 52 4f 52 20 69 6e 20 74 61 73 6b 20 00        ERROR in task .

00000319 <_ZZN8frt_taskC4EPKchjP8emstreamE3__c_2>:
     319:	45 52 52 4f 52 20 63 72 65 61 74 69 6e 67 20 74     ERROR creating t
     329:	61 73 6b 20 00                                      ask .

0000032e <_ZZN8frt_taskC4EPKchjP8emstreamE3__c_1>:
     32e:	2c 20 73 74 61 63 6b 20 61 74 20 30 78 00           , stack at 0x.

0000033c <_ZZN8frt_taskC4EPKchjP8emstreamE3__c_0>:
     33c:	20 63 72 65 61 74 65 64 00                           created.

00000345 <_ZZN8frt_taskC4EPKchjP8emstreamE3__c>:
     345:	54 61 73 6b 20 00                                   Task .

0000034b <_ZZ15print_task_listP8emstreamE3__c_9>:
     34b:	09 09 00                                            ...

0000034e <_ZZ15print_task_listP8emstreamE3__c_8>:
     34e:	2f 00                                               /.

00000350 <_ZZ15print_task_listP8emstreamE3__c_7>:
     350:	49 44 4c 45 09 09 30 09 2d 09 00                    IDLE..0.-..

0000035b <_ZZ15print_task_listP8emstreamE3__c_6>:
     35b:	09 2d 2d 2d 2d 00                                   .----.

00000361 <_ZZ15print_task_listP8emstreamE3__c_5>:
     361:	09 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 00                 .----------.

0000036d <_ZZ15print_task_listP8emstreamE3__c_4>:
     36d:	2d 2d 2d 2d 09 09 2d 2d 2d 2d 09 2d 2d 2d 2d 2d     ----..----.-----
	...

0000037e <_ZZ15print_task_listP8emstreamE3__c_3>:
     37e:	09 52 75 6e 73 00                                   .Runs.

00000384 <_ZZ15print_task_listP8emstreamE3__c_2>:
     384:	09 46 72 65 65 2f 54 6f 74 61 6c 00                 .Free/Total.

00000390 <_ZZ15print_task_listP8emstreamE3__c_1>:
     390:	4e 61 6d 65 09 09 50 72 69 2e 09 53 74 61 74 65     Name..Pri..State
	...

000003a1 <_ZZ15print_task_listP8emstreamE3__c_0>:
     3a1:	09 53 74 61 63 6b 00                                .Stack.

000003a8 <_ZZ15print_task_listP8emstreamE3__c>:
     3a8:	54 61 73 6b 09 09 20 20 09 20 00                    Task..  . .

000003b3 <_ZZN8frt_task12print_statusER8emstreamE3__c_3>:
     3b3:	09 00                                               ..

000003b5 <_ZZN8frt_task12print_statusER8emstreamE3__c_2>:
     3b5:	09 00                                               ..

000003b7 <_ZZN8frt_task12print_statusER8emstreamE3__c_1>:
     3b7:	2f 00                                               /.

000003b9 <_ZZN8frt_task12print_statusER8emstreamE3__c_0>:
     3b9:	09 00                                               ..

000003bb <_ZZN8frt_task12print_statusER8emstreamE3__c>:
     3bb:	09 00 00                                            ...

000003be <_call_static_run_method>:
     3be:	0e 94 b1 1c 	call	0x3962	; 0x3962 <_ZN8frt_task22_call_users_run_methodEPS_>

000003c2 <__ctors_start>:
     3c2:	e2 24       	eor	r14, r2

000003c4 <__ctors_end>:
     3c4:	11 24       	eor	r1, r1
     3c6:	1f be       	out	0x3f, r1	; 63
     3c8:	cf ef       	ldi	r28, 0xFF	; 255
     3ca:	cd bf       	out	0x3d, r28	; 61
     3cc:	df e3       	ldi	r29, 0x3F	; 63
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	00 e0       	ldi	r16, 0x00	; 0
     3d2:	0c bf       	out	0x3c, r16	; 60

000003d4 <__do_copy_data>:
     3d4:	11 e2       	ldi	r17, 0x21	; 33
     3d6:	a0 e0       	ldi	r26, 0x00	; 0
     3d8:	b0 e2       	ldi	r27, 0x20	; 32
     3da:	e4 ea       	ldi	r30, 0xA4	; 164
     3dc:	f2 e5       	ldi	r31, 0x52	; 82
     3de:	00 e0       	ldi	r16, 0x00	; 0
     3e0:	0b bf       	out	0x3b, r16	; 59
     3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <__do_copy_data+0x14>
     3e4:	07 90       	elpm	r0, Z+
     3e6:	0d 92       	st	X+, r0
     3e8:	ae 32       	cpi	r26, 0x2E	; 46
     3ea:	b1 07       	cpc	r27, r17
     3ec:	d9 f7       	brne	.-10     	; 0x3e4 <__do_copy_data+0x10>

000003ee <__do_clear_bss>:
     3ee:	22 e3       	ldi	r18, 0x32	; 50
     3f0:	ae e2       	ldi	r26, 0x2E	; 46
     3f2:	b1 e2       	ldi	r27, 0x21	; 33
     3f4:	01 c0       	rjmp	.+2      	; 0x3f8 <.do_clear_bss_start>

000003f6 <.do_clear_bss_loop>:
     3f6:	1d 92       	st	X+, r1

000003f8 <.do_clear_bss_start>:
     3f8:	a0 34       	cpi	r26, 0x40	; 64
     3fa:	b2 07       	cpc	r27, r18
     3fc:	e1 f7       	brne	.-8      	; 0x3f6 <.do_clear_bss_loop>

000003fe <__do_global_ctors>:
     3fe:	11 e0       	ldi	r17, 0x01	; 1
     400:	c2 ee       	ldi	r28, 0xE2	; 226
     402:	d1 e0       	ldi	r29, 0x01	; 1
     404:	00 e0       	ldi	r16, 0x00	; 0
     406:	06 c0       	rjmp	.+12     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     408:	21 97       	sbiw	r28, 0x01	; 1
     40a:	01 09       	sbc	r16, r1
     40c:	80 2f       	mov	r24, r16
     40e:	fe 01       	movw	r30, r28
     410:	0e 94 99 28 	call	0x5132	; 0x5132 <__tablejump2__>
     414:	c1 3e       	cpi	r28, 0xE1	; 225
     416:	d1 07       	cpc	r29, r17
     418:	80 e0       	ldi	r24, 0x00	; 0
     41a:	08 07       	cpc	r16, r24
     41c:	a9 f7       	brne	.-22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     41e:	0e 94 84 24 	call	0x4908	; 0x4908 <main>
     422:	0c 94 50 29 	jmp	0x52a0	; 0x52a0 <_exit>

00000426 <__bad_interrupt>:
     426:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000042a <_ZN11motorDriver7set_k_lEiii>:
 */

void motorDriver::zero_esum_a(void)
 {
	 // Resetting esum_a
	 esum_a = 0;
     42a:	fc 01       	movw	r30, r24
     42c:	61 8b       	std	Z+17, r22	; 0x11
     42e:	72 8b       	std	Z+18, r23	; 0x12
     430:	43 8b       	std	Z+19, r20	; 0x13
     432:	54 8b       	std	Z+20, r21	; 0x14
     434:	25 8b       	std	Z+21, r18	; 0x15
     436:	36 8b       	std	Z+22, r19	; 0x16
     438:	08 95       	ret

0000043a <_ZN11motorDriver7set_k_aEiii>:
     43a:	fc 01       	movw	r30, r24
     43c:	67 8b       	std	Z+23, r22	; 0x17
     43e:	70 8f       	std	Z+24, r23	; 0x18
     440:	41 8f       	std	Z+25, r20	; 0x19
     442:	52 8f       	std	Z+26, r21	; 0x1a
     444:	23 8f       	std	Z+27, r18	; 0x1b
     446:	34 8f       	std	Z+28, r19	; 0x1c
     448:	08 95       	ret

0000044a <_ZN11motorDriver15set_pwm_scalingEi>:
     44a:	fc 01       	movw	r30, r24
     44c:	65 8f       	std	Z+29, r22	; 0x1d
     44e:	76 8f       	std	Z+30, r23	; 0x1e
     450:	08 95       	ret

00000452 <_ZN11motorDriver11set_pwm_limEi>:
     452:	65 36       	cpi	r22, 0x65	; 101
     454:	71 05       	cpc	r23, r1
     456:	34 f0       	brlt	.+12     	; 0x464 <_ZN11motorDriver11set_pwm_limEi+0x12>
     458:	24 e6       	ldi	r18, 0x64	; 100
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	fc 01       	movw	r30, r24
     45e:	25 ab       	std	Z+53, r18	; 0x35
     460:	36 ab       	std	Z+54, r19	; 0x36
     462:	08 95       	ret
     464:	fc 01       	movw	r30, r24
     466:	65 ab       	std	Z+53, r22	; 0x35
     468:	76 ab       	std	Z+54, r23	; 0x36
     46a:	08 95       	ret

0000046c <_ZN11motorDriver18set_pwm_lim_linearEi>:
     46c:	fc 01       	movw	r30, r24
     46e:	25 a9       	ldd	r18, Z+53	; 0x35
     470:	36 a9       	ldd	r19, Z+54	; 0x36
     472:	26 17       	cp	r18, r22
     474:	37 07       	cpc	r19, r23
     476:	1c f4       	brge	.+6      	; 0x47e <_ZN11motorDriver18set_pwm_lim_linearEi+0x12>
     478:	27 ab       	std	Z+55, r18	; 0x37
     47a:	30 af       	std	Z+56, r19	; 0x38
     47c:	08 95       	ret
     47e:	fc 01       	movw	r30, r24
     480:	67 ab       	std	Z+55, r22	; 0x37
     482:	70 af       	std	Z+56, r23	; 0x38
     484:	08 95       	ret

00000486 <_ZN11motorDriverC1EcP8emstream>:
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
     48a:	ec 01       	movw	r28, r24
     48c:	4e 87       	std	Y+14, r20	; 0x0e
     48e:	5f 87       	std	Y+15, r21	; 0x0f
     490:	68 8b       	std	Y+16, r22	; 0x10
     492:	61 33       	cpi	r22, 0x31	; 49
     494:	99 f4       	brne	.+38     	; 0x4bc <_ZN11motorDriverC1EcP8emstream+0x36>
     496:	24 ef       	ldi	r18, 0xF4	; 244
     498:	31 e0       	ldi	r19, 0x01	; 1
     49a:	41 e0       	ldi	r20, 0x01	; 1
     49c:	60 e0       	ldi	r22, 0x00	; 0
     49e:	0e 94 56 10 	call	0x20ac	; 0x20ac <pwm_init>
     4a2:	24 ef       	ldi	r18, 0xF4	; 244
     4a4:	31 e0       	ldi	r19, 0x01	; 1
     4a6:	42 e0       	ldi	r20, 0x02	; 2
     4a8:	60 e0       	ldi	r22, 0x00	; 0
     4aa:	ce 01       	movw	r24, r28
     4ac:	07 96       	adiw	r24, 0x07	; 7
     4ae:	0e 94 56 10 	call	0x20ac	; 0x20ac <pwm_init>
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	8f a3       	std	Y+39, r24	; 0x27
     4b8:	98 a7       	std	Y+40, r25	; 0x28
     4ba:	14 c0       	rjmp	.+40     	; 0x4e4 <_ZN11motorDriverC1EcP8emstream+0x5e>
     4bc:	62 33       	cpi	r22, 0x32	; 50
     4be:	91 f4       	brne	.+36     	; 0x4e4 <_ZN11motorDriverC1EcP8emstream+0x5e>
     4c0:	24 ef       	ldi	r18, 0xF4	; 244
     4c2:	31 e0       	ldi	r19, 0x01	; 1
     4c4:	43 e0       	ldi	r20, 0x03	; 3
     4c6:	60 e0       	ldi	r22, 0x00	; 0
     4c8:	0e 94 56 10 	call	0x20ac	; 0x20ac <pwm_init>
     4cc:	24 ef       	ldi	r18, 0xF4	; 244
     4ce:	31 e0       	ldi	r19, 0x01	; 1
     4d0:	44 e0       	ldi	r20, 0x04	; 4
     4d2:	60 e0       	ldi	r22, 0x00	; 0
     4d4:	ce 01       	movw	r24, r28
     4d6:	07 96       	adiw	r24, 0x07	; 7
     4d8:	0e 94 56 10 	call	0x20ac	; 0x20ac <pwm_init>
     4dc:	8f ef       	ldi	r24, 0xFF	; 255
     4de:	9f ef       	ldi	r25, 0xFF	; 255
     4e0:	8f a3       	std	Y+39, r24	; 0x27
     4e2:	98 a7       	std	Y+40, r25	; 0x28
     4e4:	1b a6       	std	Y+43, r1	; 0x2b
     4e6:	1c a6       	std	Y+44, r1	; 0x2c
     4e8:	19 aa       	std	Y+49, r1	; 0x31
     4ea:	1a aa       	std	Y+50, r1	; 0x32
     4ec:	19 8a       	std	Y+17, r1	; 0x11
     4ee:	1a 8a       	std	Y+18, r1	; 0x12
     4f0:	1b 8a       	std	Y+19, r1	; 0x13
     4f2:	1c 8a       	std	Y+20, r1	; 0x14
     4f4:	1d 8a       	std	Y+21, r1	; 0x15
     4f6:	1e 8a       	std	Y+22, r1	; 0x16
     4f8:	1f 8a       	std	Y+23, r1	; 0x17
     4fa:	18 8e       	std	Y+24, r1	; 0x18
     4fc:	19 8e       	std	Y+25, r1	; 0x19
     4fe:	1a 8e       	std	Y+26, r1	; 0x1a
     500:	1b 8e       	std	Y+27, r1	; 0x1b
     502:	1c 8e       	std	Y+28, r1	; 0x1c
     504:	1d aa       	std	Y+53, r1	; 0x35
     506:	1e aa       	std	Y+54, r1	; 0x36
     508:	60 e0       	ldi	r22, 0x00	; 0
     50a:	70 e0       	ldi	r23, 0x00	; 0
     50c:	ce 01       	movw	r24, r28
     50e:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN11motorDriver18set_pwm_lim_linearEi>
     512:	19 ae       	std	Y+57, r1	; 0x39
     514:	1a ae       	std	Y+58, r1	; 0x3a
     516:	1b ae       	std	Y+59, r1	; 0x3b
     518:	1c ae       	std	Y+60, r1	; 0x3c
     51a:	1f 8e       	std	Y+31, r1	; 0x1f
     51c:	18 a2       	std	Y+32, r1	; 0x20
     51e:	1d a2       	std	Y+37, r1	; 0x25
     520:	1e a2       	std	Y+38, r1	; 0x26
     522:	19 a2       	std	Y+33, r1	; 0x21
     524:	1a a2       	std	Y+34, r1	; 0x22
     526:	1b a2       	std	Y+35, r1	; 0x23
     528:	1c a2       	std	Y+36, r1	; 0x24
     52a:	81 e0       	ldi	r24, 0x01	; 1
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	8d 8f       	std	Y+29, r24	; 0x1d
     530:	9e 8f       	std	Y+30, r25	; 0x1e
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	08 95       	ret

00000538 <_ZN11motorDriver14set_esum_l_limEi>:
     538:	fc 01       	movw	r30, r24
     53a:	61 af       	std	Z+57, r22	; 0x39
     53c:	72 af       	std	Z+58, r23	; 0x3a
     53e:	08 95       	ret

00000540 <_ZN11motorDriver14set_esum_a_limEi>:
     540:	fc 01       	movw	r30, r24
     542:	63 af       	std	Z+59, r22	; 0x3b
     544:	74 af       	std	Z+60, r23	; 0x3c
     546:	08 95       	ret

00000548 <_ZN11motorDriver14set_setpoint_lEi>:
     548:	fc 01       	movw	r30, r24
     54a:	67 8f       	std	Z+31, r22	; 0x1f
     54c:	70 a3       	std	Z+32, r23	; 0x20
     54e:	08 95       	ret

00000550 <_ZN11motorDriver14set_setpoint_aEi>:
     550:	fc 01       	movw	r30, r24
     552:	65 a3       	std	Z+37, r22	; 0x25
     554:	76 a3       	std	Z+38, r23	; 0x26
     556:	08 95       	ret

00000558 <_ZN11motorDriver12set_positionEi>:
     558:	fc 01       	movw	r30, r24
     55a:	61 a3       	std	Z+33, r22	; 0x21
     55c:	72 a3       	std	Z+34, r23	; 0x22
     55e:	08 95       	ret

00000560 <_ZN11motorDriver9set_angleEi>:
     560:	fc 01       	movw	r30, r24
     562:	63 a3       	std	Z+35, r22	; 0x23
     564:	74 a3       	std	Z+36, r23	; 0x24
     566:	08 95       	ret

00000568 <_ZN11motorDriver3runEbbbb>:
 */



diagnostic motorDriver::run(bool en_p = 0, bool en_i = 0, bool en_d = 0, bool op_type = 0)
 {
     568:	5f 92       	push	r5
     56a:	6f 92       	push	r6
     56c:	7f 92       	push	r7
     56e:	8f 92       	push	r8
     570:	9f 92       	push	r9
     572:	af 92       	push	r10
     574:	bf 92       	push	r11
     576:	cf 92       	push	r12
     578:	df 92       	push	r13
     57a:	ef 92       	push	r14
     57c:	ff 92       	push	r15
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	cf 93       	push	r28
     584:	df 93       	push	r29
     586:	8c 01       	movw	r16, r24
     588:	eb 01       	movw	r28, r22
     58a:	5e 2c       	mov	r5, r14
	// Calculating error terms
   error_l = setpoint_l - position;
     58c:	6f 8d       	ldd	r22, Y+31	; 0x1f
     58e:	78 a1       	ldd	r23, Y+32	; 0x20
     590:	89 a1       	ldd	r24, Y+33	; 0x21
     592:	9a a1       	ldd	r25, Y+34	; 0x22
     594:	68 1b       	sub	r22, r24
     596:	79 0b       	sbc	r23, r25
     598:	69 a7       	std	Y+41, r22	; 0x29
     59a:	7a a7       	std	Y+42, r23	; 0x2a
   error_a = setpoint_a - angle;
     59c:	ed a1       	ldd	r30, Y+37	; 0x25
     59e:	fe a1       	ldd	r31, Y+38	; 0x26
     5a0:	8b a1       	ldd	r24, Y+35	; 0x23
     5a2:	9c a1       	ldd	r25, Y+36	; 0x24
     5a4:	e8 1b       	sub	r30, r24
     5a6:	f9 0b       	sbc	r31, r25
     5a8:	ef a7       	std	Y+47, r30	; 0x2f
     5aa:	f8 ab       	std	Y+48, r31	; 0x30
   esum_l += error_l;
     5ac:	8b a5       	ldd	r24, Y+43	; 0x2b
     5ae:	9c a5       	ldd	r25, Y+44	; 0x2c
     5b0:	86 0f       	add	r24, r22
     5b2:	97 1f       	adc	r25, r23
     5b4:	8b a7       	std	Y+43, r24	; 0x2b
     5b6:	9c a7       	std	Y+44, r25	; 0x2c
   if (esum_l > esum_l_lim) // Rounding esum_l to esum_l_lim on either end
     5b8:	a9 ad       	ldd	r26, Y+57	; 0x39
     5ba:	ba ad       	ldd	r27, Y+58	; 0x3a
     5bc:	a8 17       	cp	r26, r24
     5be:	b9 07       	cpc	r27, r25
     5c0:	1c f4       	brge	.+6      	; 0x5c8 <_ZN11motorDriver3runEbbbb+0x60>
   {
       esum_l = esum_l_lim;
     5c2:	ab a7       	std	Y+43, r26	; 0x2b
     5c4:	bc a7       	std	Y+44, r27	; 0x2c
     5c6:	08 c0       	rjmp	.+16     	; 0x5d8 <_ZN11motorDriver3runEbbbb+0x70>
   } else if (esum_l < -esum_l_lim)
     5c8:	b1 95       	neg	r27
     5ca:	a1 95       	neg	r26
     5cc:	b1 09       	sbc	r27, r1
     5ce:	8a 17       	cp	r24, r26
     5d0:	9b 07       	cpc	r25, r27
     5d2:	14 f4       	brge	.+4      	; 0x5d8 <_ZN11motorDriver3runEbbbb+0x70>
   {
       esum_l = -esum_l_lim;
     5d4:	ab a7       	std	Y+43, r26	; 0x2b
     5d6:	bc a7       	std	Y+44, r27	; 0x2c
   }
   esum_a += error_a;
     5d8:	89 a9       	ldd	r24, Y+49	; 0x31
     5da:	9a a9       	ldd	r25, Y+50	; 0x32
     5dc:	8e 0f       	add	r24, r30
     5de:	9f 1f       	adc	r25, r31
     5e0:	89 ab       	std	Y+49, r24	; 0x31
     5e2:	9a ab       	std	Y+50, r25	; 0x32
   if (esum_a > esum_a_lim) // Rounding esum_a to esum_a_lim on either end
     5e4:	ab ad       	ldd	r26, Y+59	; 0x3b
     5e6:	bc ad       	ldd	r27, Y+60	; 0x3c
     5e8:	a8 17       	cp	r26, r24
     5ea:	b9 07       	cpc	r27, r25
     5ec:	1c f4       	brge	.+6      	; 0x5f4 <_ZN11motorDriver3runEbbbb+0x8c>
   {
	   esum_a = esum_a_lim;
     5ee:	a9 ab       	std	Y+49, r26	; 0x31
     5f0:	ba ab       	std	Y+50, r27	; 0x32
     5f2:	08 c0       	rjmp	.+16     	; 0x604 <_ZN11motorDriver3runEbbbb+0x9c>
   } else if (esum_a < -esum_a_lim)
     5f4:	b1 95       	neg	r27
     5f6:	a1 95       	neg	r26
     5f8:	b1 09       	sbc	r27, r1
     5fa:	8a 17       	cp	r24, r26
     5fc:	9b 07       	cpc	r25, r27
     5fe:	14 f4       	brge	.+4      	; 0x604 <_ZN11motorDriver3runEbbbb+0x9c>
   {
	   esum_a = -esum_a_lim;
     600:	a9 ab       	std	Y+49, r26	; 0x31
     602:	ba ab       	std	Y+50, r27	; 0x32
   }
   eder_l = 0;  // Placeholder
     604:	1d a6       	std	Y+45, r1	; 0x2d
     606:	1e a6       	std	Y+46, r1	; 0x2e
   eder_a = 0;  // Placeholder
     608:	1b aa       	std	Y+51, r1	; 0x33
     60a:	1c aa       	std	Y+52, r1	; 0x34

   // Calculating linear signal components
   int16_t signal_l_p = kp_l*error_l;
   int16_t signal_l_i = ki_l*esum_l;
   int16_t signal_l_d = kd_l*eder_l;
   int16_t pwm_percent_linear = (((int16_t) en_p)*signal_l_p + ((int16_t) en_i)*signal_l_i + ((int16_t) en_d)*signal_l_d)/pwm_scale;
     60c:	c4 2e       	mov	r12, r20
     60e:	d1 2c       	mov	r13, r1
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	ad 8c       	ldd	r10, Y+29	; 0x1d
     614:	be 8c       	ldd	r11, Y+30	; 0x1e
     616:	ab 89       	ldd	r26, Y+19	; 0x13
     618:	bc 89       	ldd	r27, Y+20	; 0x14
     61a:	8b a5       	ldd	r24, Y+43	; 0x2b
     61c:	9c a5       	ldd	r25, Y+44	; 0x2c
     61e:	a8 9f       	mul	r26, r24
     620:	a0 01       	movw	r20, r0
     622:	a9 9f       	mul	r26, r25
     624:	50 0d       	add	r21, r0
     626:	b8 9f       	mul	r27, r24
     628:	50 0d       	add	r21, r0
     62a:	11 24       	eor	r1, r1
     62c:	42 9f       	mul	r20, r18
     62e:	c0 01       	movw	r24, r0
     630:	43 9f       	mul	r20, r19
     632:	90 0d       	add	r25, r0
     634:	52 9f       	mul	r21, r18
     636:	90 0d       	add	r25, r0
     638:	11 24       	eor	r1, r1
     63a:	a9 89       	ldd	r26, Y+17	; 0x11
     63c:	ba 89       	ldd	r27, Y+18	; 0x12
     63e:	6a 9f       	mul	r22, r26
     640:	a0 01       	movw	r20, r0
     642:	6b 9f       	mul	r22, r27
     644:	50 0d       	add	r21, r0
     646:	7a 9f       	mul	r23, r26
     648:	50 0d       	add	r21, r0
     64a:	11 24       	eor	r1, r1
     64c:	4c 9d       	mul	r20, r12
     64e:	b0 01       	movw	r22, r0
     650:	4d 9d       	mul	r20, r13
     652:	70 0d       	add	r23, r0
     654:	5c 9d       	mul	r21, r12
     656:	70 0d       	add	r23, r0
     658:	11 24       	eor	r1, r1
     65a:	86 0f       	add	r24, r22
     65c:	97 1f       	adc	r25, r23
     65e:	b5 01       	movw	r22, r10
     660:	0e 94 63 28 	call	0x50c6	; 0x50c6 <__divmodhi4>
   if (pwm_percent_linear > pwm_lim_linear)	// Saturating linear component of pwm_percent
     664:	ef a8       	ldd	r14, Y+55	; 0x37
     666:	f8 ac       	ldd	r15, Y+56	; 0x38
     668:	e6 16       	cp	r14, r22
     66a:	f7 06       	cpc	r15, r23
     66c:	54 f0       	brlt	.+20     	; 0x682 <_ZN11motorDriver3runEbbbb+0x11a>
   {
	   pwm_percent_linear = pwm_lim_linear;
   }
   else if (pwm_percent_linear < -pwm_lim_linear)
     66e:	88 27       	eor	r24, r24
     670:	99 27       	eor	r25, r25
     672:	8e 19       	sub	r24, r14
     674:	9f 09       	sbc	r25, r15
     676:	3b 01       	movw	r6, r22
     678:	68 17       	cp	r22, r24
     67a:	79 07       	cpc	r23, r25
     67c:	1c f4       	brge	.+6      	; 0x684 <_ZN11motorDriver3runEbbbb+0x11c>
     67e:	3c 01       	movw	r6, r24
     680:	01 c0       	rjmp	.+2      	; 0x684 <_ZN11motorDriver3runEbbbb+0x11c>
   int16_t signal_l_i = ki_l*esum_l;
   int16_t signal_l_d = kd_l*eder_l;
   int16_t pwm_percent_linear = (((int16_t) en_p)*signal_l_p + ((int16_t) en_i)*signal_l_i + ((int16_t) en_d)*signal_l_d)/pwm_scale;
   if (pwm_percent_linear > pwm_lim_linear)	// Saturating linear component of pwm_percent
   {
	   pwm_percent_linear = pwm_lim_linear;
     682:	37 01       	movw	r6, r14

   // Calculating angular signal components
   int16_t signal_a_p = kp_a*error_a;
   int16_t signal_a_i = ki_a*esum_a;
   int16_t signal_a_d = kd_a*eder_a;
   int16_t pwm_percent_angular = (((int16_t) en_p)*signal_a_p + ((int16_t) en_i)*signal_a_i + ((int16_t) en_d)*signal_a_d)*motor_dir/pwm_scale;	// This entire term needs to be either positive or negative depending on how we define the angle externally
     684:	8f a0       	ldd	r8, Y+39	; 0x27
     686:	98 a4       	ldd	r9, Y+40	; 0x28
     688:	69 8d       	ldd	r22, Y+25	; 0x19
     68a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     68c:	49 a9       	ldd	r20, Y+49	; 0x31
     68e:	5a a9       	ldd	r21, Y+50	; 0x32
     690:	64 9f       	mul	r22, r20
     692:	c0 01       	movw	r24, r0
     694:	65 9f       	mul	r22, r21
     696:	90 0d       	add	r25, r0
     698:	74 9f       	mul	r23, r20
     69a:	90 0d       	add	r25, r0
     69c:	11 24       	eor	r1, r1
     69e:	82 9f       	mul	r24, r18
     6a0:	a0 01       	movw	r20, r0
     6a2:	83 9f       	mul	r24, r19
     6a4:	50 0d       	add	r21, r0
     6a6:	92 9f       	mul	r25, r18
     6a8:	50 0d       	add	r21, r0
     6aa:	11 24       	eor	r1, r1
     6ac:	2f 89       	ldd	r18, Y+23	; 0x17
     6ae:	38 8d       	ldd	r19, Y+24	; 0x18
     6b0:	e2 9f       	mul	r30, r18
     6b2:	c0 01       	movw	r24, r0
     6b4:	e3 9f       	mul	r30, r19
     6b6:	90 0d       	add	r25, r0
     6b8:	f2 9f       	mul	r31, r18
     6ba:	90 0d       	add	r25, r0
     6bc:	11 24       	eor	r1, r1
     6be:	8c 9d       	mul	r24, r12
     6c0:	90 01       	movw	r18, r0
     6c2:	8d 9d       	mul	r24, r13
     6c4:	30 0d       	add	r19, r0
     6c6:	9c 9d       	mul	r25, r12
     6c8:	30 0d       	add	r19, r0
     6ca:	11 24       	eor	r1, r1
     6cc:	42 0f       	add	r20, r18
     6ce:	53 1f       	adc	r21, r19
     6d0:	48 9d       	mul	r20, r8
     6d2:	c0 01       	movw	r24, r0
     6d4:	49 9d       	mul	r20, r9
     6d6:	90 0d       	add	r25, r0
     6d8:	58 9d       	mul	r21, r8
     6da:	90 0d       	add	r25, r0
     6dc:	11 24       	eor	r1, r1
     6de:	b5 01       	movw	r22, r10
     6e0:	0e 94 63 28 	call	0x50c6	; 0x50c6 <__divmodhi4>
   if (pwm_percent_angular > (pwm_lim - pwm_lim_linear))	// Saturating angular component of pwm_percent
     6e4:	cd a8       	ldd	r12, Y+53	; 0x35
     6e6:	de a8       	ldd	r13, Y+54	; 0x36
     6e8:	56 01       	movw	r10, r12
     6ea:	ae 18       	sub	r10, r14
     6ec:	bf 08       	sbc	r11, r15
     6ee:	a6 16       	cp	r10, r22
     6f0:	b7 06       	cpc	r11, r23
     6f2:	3c f0       	brlt	.+14     	; 0x702 <_ZN11motorDriver3runEbbbb+0x19a>
   {
	   pwm_percent_angular = pwm_lim - pwm_lim_linear;
   }
   else if (pwm_percent_angular < -(pwm_lim - pwm_lim_linear))
     6f4:	ec 18       	sub	r14, r12
     6f6:	fd 08       	sbc	r15, r13
     6f8:	5b 01       	movw	r10, r22
     6fa:	6e 15       	cp	r22, r14
     6fc:	7f 05       	cpc	r23, r15
     6fe:	0c f4       	brge	.+2      	; 0x702 <_ZN11motorDriver3runEbbbb+0x19a>
     700:	57 01       	movw	r10, r14
   {
	   pwm_percent_angular = -(pwm_lim - pwm_lim_linear);
   }
   
   // Calculating total signal to motors
   int16_t pwm_percent = (pwm_percent_linear + pwm_percent_angular)*motor_dir;
     702:	93 01       	movw	r18, r6
     704:	2a 0d       	add	r18, r10
     706:	3b 1d       	adc	r19, r11
     708:	28 9d       	mul	r18, r8
     70a:	c0 01       	movw	r24, r0
     70c:	29 9d       	mul	r18, r9
     70e:	90 0d       	add	r25, r0
     710:	38 9d       	mul	r19, r8
     712:	90 0d       	add	r25, r0
     714:	11 24       	eor	r1, r1
   
   // Serial diagnostics
   //*ser_out << "Motor " << motor_ID << " Signal P " << signal_l_p << " I " << signal_l_i << " esum " << esum_l << " D " << signal_l_d << " PWM % " << pwm_percent << endl;
   
   // Limiting total pwm percentage 
   if (pwm_percent > pwm_lim)	
     716:	c8 16       	cp	r12, r24
     718:	d9 06       	cpc	r13, r25
     71a:	4c f0       	brlt	.+18     	; 0x72e <_ZN11motorDriver3runEbbbb+0x1c6>
   {
	   pwm_percent = pwm_lim;
   } 
   else if (pwm_percent < -pwm_lim)
     71c:	22 27       	eor	r18, r18
     71e:	33 27       	eor	r19, r19
     720:	2c 19       	sub	r18, r12
     722:	3d 09       	sbc	r19, r13
     724:	6c 01       	movw	r12, r24
     726:	82 17       	cp	r24, r18
     728:	93 07       	cpc	r25, r19
     72a:	0c f4       	brge	.+2      	; 0x72e <_ZN11motorDriver3runEbbbb+0x1c6>
     72c:	69 01       	movw	r12, r18
   {
	   pwm_percent = -pwm_lim;
   }

   // Operating motor
   if (op_type)	// Drive-brake mode. Modulates brake pin instead of drive pin, higher performance (?).
     72e:	55 20       	and	r5, r5
     730:	39 f1       	breq	.+78     	; 0x780 <_ZN11motorDriver3runEbbbb+0x218>
   {
	   if (pwm_percent > 0)
     732:	1c 14       	cp	r1, r12
     734:	1d 04       	cpc	r1, r13
     736:	94 f4       	brge	.+36     	; 0x75c <_ZN11motorDriver3runEbbbb+0x1f4>
	   {
		   pwm_start(&pwm_1, 100);	// Setting IN1 high 
     738:	64 e6       	ldi	r22, 0x64	; 100
     73a:	ce 01       	movw	r24, r28
     73c:	0e 94 1f 11 	call	0x223e	; 0x223e <pwm_start>
		   pwm_start(&pwm_2, 100 - abs(pwm_percent));	// Modulating IN2 low
     740:	c6 01       	movw	r24, r12
     742:	dd 20       	and	r13, r13
     744:	24 f4       	brge	.+8      	; 0x74e <_ZN11motorDriver3runEbbbb+0x1e6>
     746:	88 27       	eor	r24, r24
     748:	99 27       	eor	r25, r25
     74a:	8c 19       	sub	r24, r12
     74c:	9d 09       	sbc	r25, r13
     74e:	64 e6       	ldi	r22, 0x64	; 100
     750:	68 1b       	sub	r22, r24
     752:	ce 01       	movw	r24, r28
     754:	07 96       	adiw	r24, 0x07	; 7
     756:	0e 94 1f 11 	call	0x223e	; 0x223e <pwm_start>
     75a:	34 c0       	rjmp	.+104    	; 0x7c4 <_ZN11motorDriver3runEbbbb+0x25c>
	   } else {
		   pwm_start(&pwm_1, 100 - abs(pwm_percent));	// Modulating IN1 low
     75c:	c6 01       	movw	r24, r12
     75e:	dd 20       	and	r13, r13
     760:	24 f4       	brge	.+8      	; 0x76a <_ZN11motorDriver3runEbbbb+0x202>
     762:	88 27       	eor	r24, r24
     764:	99 27       	eor	r25, r25
     766:	8c 19       	sub	r24, r12
     768:	9d 09       	sbc	r25, r13
     76a:	64 e6       	ldi	r22, 0x64	; 100
     76c:	68 1b       	sub	r22, r24
     76e:	ce 01       	movw	r24, r28
     770:	0e 94 1f 11 	call	0x223e	; 0x223e <pwm_start>
		   pwm_start(&pwm_2, 100);	// Setting IN2 high
     774:	64 e6       	ldi	r22, 0x64	; 100
     776:	ce 01       	movw	r24, r28
     778:	07 96       	adiw	r24, 0x07	; 7
     77a:	0e 94 1f 11 	call	0x223e	; 0x223e <pwm_start>
     77e:	22 c0       	rjmp	.+68     	; 0x7c4 <_ZN11motorDriver3runEbbbb+0x25c>
	   }
   } 
   else // Drive-coast mode. Modulates drive pin, higher current decay
   { 
	   if (pwm_percent > 0)
     780:	1c 14       	cp	r1, r12
     782:	1d 04       	cpc	r1, r13
     784:	84 f4       	brge	.+32     	; 0x7a6 <_ZN11motorDriver3runEbbbb+0x23e>
	   {
		   pwm_start(&pwm_1, abs(pwm_percent));	// Modulating IN1 high 
     786:	b6 01       	movw	r22, r12
     788:	dd 20       	and	r13, r13
     78a:	24 f4       	brge	.+8      	; 0x794 <_ZN11motorDriver3runEbbbb+0x22c>
     78c:	66 27       	eor	r22, r22
     78e:	77 27       	eor	r23, r23
     790:	6c 19       	sub	r22, r12
     792:	7d 09       	sbc	r23, r13
     794:	ce 01       	movw	r24, r28
     796:	0e 94 1f 11 	call	0x223e	; 0x223e <pwm_start>
		   pwm_start(&pwm_2, 0);	// Setting IN2 low
     79a:	60 e0       	ldi	r22, 0x00	; 0
     79c:	ce 01       	movw	r24, r28
     79e:	07 96       	adiw	r24, 0x07	; 7
     7a0:	0e 94 1f 11 	call	0x223e	; 0x223e <pwm_start>
     7a4:	0f c0       	rjmp	.+30     	; 0x7c4 <_ZN11motorDriver3runEbbbb+0x25c>
	   } else {
		   pwm_start(&pwm_1, 0);	// Setting IN1 low
     7a6:	60 e0       	ldi	r22, 0x00	; 0
     7a8:	ce 01       	movw	r24, r28
     7aa:	0e 94 1f 11 	call	0x223e	; 0x223e <pwm_start>
		   pwm_start(&pwm_2, abs(pwm_percent));	// Modulating IN2 high
     7ae:	b6 01       	movw	r22, r12
     7b0:	dd 20       	and	r13, r13
     7b2:	24 f4       	brge	.+8      	; 0x7bc <_ZN11motorDriver3runEbbbb+0x254>
     7b4:	66 27       	eor	r22, r22
     7b6:	77 27       	eor	r23, r23
     7b8:	6c 19       	sub	r22, r12
     7ba:	7d 09       	sbc	r23, r13
     7bc:	ce 01       	movw	r24, r28
     7be:	07 96       	adiw	r24, 0x07	; 7
     7c0:	0e 94 1f 11 	call	0x223e	; 0x223e <pwm_start>
	   }
   }

   diagnostic diag;
   diag.pwm_tot = pwm_percent;
     7c4:	f8 01       	movw	r30, r16
     7c6:	c0 82       	st	Z, r12
     7c8:	d1 82       	std	Z+1, r13	; 0x01
   diag.pwm_lin = pwm_percent_linear;
     7ca:	62 82       	std	Z+2, r6	; 0x02
     7cc:	73 82       	std	Z+3, r7	; 0x03
   diag.pwm_ang = pwm_percent_angular;
     7ce:	a4 82       	std	Z+4, r10	; 0x04
     7d0:	b5 82       	std	Z+5, r11	; 0x05
   diag.esum_a_ = esum_a;
     7d2:	89 a9       	ldd	r24, Y+49	; 0x31
     7d4:	9a a9       	ldd	r25, Y+50	; 0x32
     7d6:	86 83       	std	Z+6, r24	; 0x06
     7d8:	97 83       	std	Z+7, r25	; 0x07
   diag.esum_l_ = esum_l;
     7da:	8b a5       	ldd	r24, Y+43	; 0x2b
     7dc:	9c a5       	ldd	r25, Y+44	; 0x2c
     7de:	80 87       	std	Z+8, r24	; 0x08
     7e0:	91 87       	std	Z+9, r25	; 0x09

   return diag;
 }
     7e2:	c8 01       	movw	r24, r16
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	1f 91       	pop	r17
     7ea:	0f 91       	pop	r16
     7ec:	ff 90       	pop	r15
     7ee:	ef 90       	pop	r14
     7f0:	df 90       	pop	r13
     7f2:	cf 90       	pop	r12
     7f4:	bf 90       	pop	r11
     7f6:	af 90       	pop	r10
     7f8:	9f 90       	pop	r9
     7fa:	8f 90       	pop	r8
     7fc:	7f 90       	pop	r7
     7fe:	6f 90       	pop	r6
     800:	5f 90       	pop	r5
     802:	08 95       	ret

00000804 <_Z15QDEC_Port_SetupP11PORT_structhbb>:
     804:	fc 01       	movw	r30, r24
     806:	44 23       	and	r20, r20
     808:	f9 f0       	breq	.+62     	; 0x848 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x44>
     80a:	66 30       	cpi	r22, 0x06	; 6
     80c:	e8 f5       	brcc	.+122    	; 0x888 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x84>
     80e:	87 e0       	ldi	r24, 0x07	; 7
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	06 2e       	mov	r0, r22
     814:	02 c0       	rjmp	.+4      	; 0x81a <_Z15QDEC_Port_SetupP11PORT_structhbb+0x16>
     816:	88 0f       	add	r24, r24
     818:	99 1f       	adc	r25, r25
     81a:	0a 94       	dec	r0
     81c:	e2 f7       	brpl	.-8      	; 0x816 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x12>
     81e:	82 83       	std	Z+2, r24	; 0x02
     820:	84 e0       	ldi	r24, 0x04	; 4
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	06 2e       	mov	r0, r22
     826:	02 c0       	rjmp	.+4      	; 0x82c <_Z15QDEC_Port_SetupP11PORT_structhbb+0x28>
     828:	88 0f       	add	r24, r24
     82a:	99 1f       	adc	r25, r25
     82c:	0a 94       	dec	r0
     82e:	e2 f7       	brpl	.-8      	; 0x828 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x24>
     830:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
     834:	80 89       	ldd	r24, Z+16	; 0x10
     836:	88 7f       	andi	r24, 0xF8	; 248
     838:	21 11       	cpse	r18, r1
     83a:	02 c0       	rjmp	.+4      	; 0x840 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x3c>
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	01 c0       	rjmp	.+2      	; 0x842 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x3e>
     840:	90 e4       	ldi	r25, 0x40	; 64
     842:	89 2b       	or	r24, r25
     844:	80 8b       	std	Z+16, r24	; 0x10
     846:	0b c0       	rjmp	.+22     	; 0x85e <_Z15QDEC_Port_SetupP11PORT_structhbb+0x5a>
     848:	67 30       	cpi	r22, 0x07	; 7
     84a:	00 f5       	brcc	.+64     	; 0x88c <_Z15QDEC_Port_SetupP11PORT_structhbb+0x88>
     84c:	83 e0       	ldi	r24, 0x03	; 3
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	06 2e       	mov	r0, r22
     852:	02 c0       	rjmp	.+4      	; 0x858 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x54>
     854:	88 0f       	add	r24, r24
     856:	99 1f       	adc	r25, r25
     858:	0a 94       	dec	r0
     85a:	e2 f7       	brpl	.-8      	; 0x854 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x50>
     85c:	82 83       	std	Z+2, r24	; 0x02
     85e:	83 e0       	ldi	r24, 0x03	; 3
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	02 c0       	rjmp	.+4      	; 0x868 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x64>
     864:	88 0f       	add	r24, r24
     866:	99 1f       	adc	r25, r25
     868:	6a 95       	dec	r22
     86a:	e2 f7       	brpl	.-8      	; 0x864 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x60>
     86c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
     870:	90 89       	ldd	r25, Z+16	; 0x10
     872:	98 7f       	andi	r25, 0xF8	; 248
     874:	93 60       	ori	r25, 0x03	; 3
     876:	21 11       	cpse	r18, r1
     878:	02 c0       	rjmp	.+4      	; 0x87e <_Z15QDEC_Port_SetupP11PORT_structhbb+0x7a>
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	01 c0       	rjmp	.+2      	; 0x880 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x7c>
     87e:	80 e4       	ldi	r24, 0x40	; 64
     880:	98 2b       	or	r25, r24
     882:	90 8b       	std	Z+16, r25	; 0x10
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	08 95       	ret
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	08 95       	ret
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	08 95       	ret

00000890 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum>:
     890:	82 30       	cpi	r24, 0x02	; 2
     892:	a9 f0       	breq	.+42     	; 0x8be <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x2e>
     894:	84 30       	cpi	r24, 0x04	; 4
     896:	21 f1       	breq	.+72     	; 0x8e0 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x50>
     898:	81 11       	cpse	r24, r1
     89a:	33 c0       	rjmp	.+102    	; 0x902 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x72>
     89c:	e0 e8       	ldi	r30, 0x80	; 128
     89e:	f1 e0       	ldi	r31, 0x01	; 1
     8a0:	60 83       	st	Z, r22
     8a2:	89 e0       	ldi	r24, 0x09	; 9
     8a4:	80 87       	std	Z+8, r24	; 0x08
     8a6:	44 23       	and	r20, r20
     8a8:	71 f1       	breq	.+92     	; 0x906 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x76>
     8aa:	6e 5f       	subi	r22, 0xFE	; 254
     8ac:	61 83       	std	Z+1, r22	; 0x01
     8ae:	81 e0       	ldi	r24, 0x01	; 1
     8b0:	81 87       	std	Z+9, r24	; 0x09
     8b2:	80 85       	ldd	r24, Z+8	; 0x08
     8b4:	80 61       	ori	r24, 0x10	; 16
     8b6:	28 2b       	or	r18, r24
     8b8:	20 87       	std	Z+8, r18	; 0x08
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	08 95       	ret
     8be:	e0 e8       	ldi	r30, 0x80	; 128
     8c0:	f1 e0       	ldi	r31, 0x01	; 1
     8c2:	62 83       	std	Z+2, r22	; 0x02
     8c4:	89 e0       	ldi	r24, 0x09	; 9
     8c6:	82 87       	std	Z+10, r24	; 0x0a
     8c8:	44 23       	and	r20, r20
     8ca:	f9 f0       	breq	.+62     	; 0x90a <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x7a>
     8cc:	6e 5f       	subi	r22, 0xFE	; 254
     8ce:	63 83       	std	Z+3, r22	; 0x03
     8d0:	81 e0       	ldi	r24, 0x01	; 1
     8d2:	83 87       	std	Z+11, r24	; 0x0b
     8d4:	82 85       	ldd	r24, Z+10	; 0x0a
     8d6:	80 61       	ori	r24, 0x10	; 16
     8d8:	28 2b       	or	r18, r24
     8da:	22 87       	std	Z+10, r18	; 0x0a
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	08 95       	ret
     8e0:	e0 e8       	ldi	r30, 0x80	; 128
     8e2:	f1 e0       	ldi	r31, 0x01	; 1
     8e4:	64 83       	std	Z+4, r22	; 0x04
     8e6:	89 e0       	ldi	r24, 0x09	; 9
     8e8:	84 87       	std	Z+12, r24	; 0x0c
     8ea:	44 23       	and	r20, r20
     8ec:	81 f0       	breq	.+32     	; 0x90e <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x7e>
     8ee:	6e 5f       	subi	r22, 0xFE	; 254
     8f0:	65 83       	std	Z+5, r22	; 0x05
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	85 87       	std	Z+13, r24	; 0x0d
     8f6:	84 85       	ldd	r24, Z+12	; 0x0c
     8f8:	80 61       	ori	r24, 0x10	; 16
     8fa:	28 2b       	or	r18, r24
     8fc:	24 87       	std	Z+12, r18	; 0x0c
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	08 95       	ret
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	08 95       	ret
     906:	81 e0       	ldi	r24, 0x01	; 1
     908:	08 95       	ret
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	08 95       	ret
     90e:	81 e0       	ldi	r24, 0x01	; 1
     910:	08 95       	ret

00000912 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC0_struct13TC_EVSEL_enumj>:
     912:	8f 92       	push	r8
     914:	af 92       	push	r10
     916:	bf 92       	push	r11
     918:	cf 92       	push	r12
     91a:	df 92       	push	r13
     91c:	ef 92       	push	r14
     91e:	ff 92       	push	r15
     920:	0f 93       	push	r16
     922:	1f 93       	push	r17
     924:	cf 93       	push	r28
     926:	df 93       	push	r29
     928:	cd b7       	in	r28, 0x3d	; 61
     92a:	de b7       	in	r29, 0x3e	; 62
     92c:	12 2f       	mov	r17, r18
     92e:	df 84       	ldd	r13, Y+15	; 0x0f
     930:	f8 88       	ldd	r15, Y+16	; 0x10
     932:	24 2f       	mov	r18, r20
     934:	4e 2d       	mov	r20, r14
     936:	0e 94 02 04 	call	0x804	; 0x804 <_Z15QDEC_Port_SetupP11PORT_structhbb>
     93a:	88 23       	and	r24, r24
     93c:	81 f0       	breq	.+32     	; 0x95e <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC0_struct13TC_EVSEL_enumj+0x4c>
     93e:	2c 2d       	mov	r18, r12
     940:	4e 2d       	mov	r20, r14
     942:	60 2f       	mov	r22, r16
     944:	81 2f       	mov	r24, r17
     946:	0e 94 48 04 	call	0x890	; 0x890 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum>
     94a:	88 23       	and	r24, r24
     94c:	41 f0       	breq	.+16     	; 0x95e <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC0_struct13TC_EVSEL_enumj+0x4c>
     94e:	98 2d       	mov	r25, r8
     950:	90 66       	ori	r25, 0x60	; 96
     952:	f5 01       	movw	r30, r10
     954:	93 83       	std	Z+3, r25	; 0x03
     956:	d6 a2       	std	Z+38, r13	; 0x26
     958:	f7 a2       	std	Z+39, r15	; 0x27
     95a:	91 e0       	ldi	r25, 0x01	; 1
     95c:	90 83       	st	Z, r25
     95e:	df 91       	pop	r29
     960:	cf 91       	pop	r28
     962:	1f 91       	pop	r17
     964:	0f 91       	pop	r16
     966:	ff 90       	pop	r15
     968:	ef 90       	pop	r14
     96a:	df 90       	pop	r13
     96c:	cf 90       	pop	r12
     96e:	bf 90       	pop	r11
     970:	af 90       	pop	r10
     972:	8f 90       	pop	r8
     974:	08 95       	ret

00000976 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC1_struct13TC_EVSEL_enumj>:
     976:	8f 92       	push	r8
     978:	af 92       	push	r10
     97a:	bf 92       	push	r11
     97c:	cf 92       	push	r12
     97e:	df 92       	push	r13
     980:	ef 92       	push	r14
     982:	ff 92       	push	r15
     984:	0f 93       	push	r16
     986:	1f 93       	push	r17
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	cd b7       	in	r28, 0x3d	; 61
     98e:	de b7       	in	r29, 0x3e	; 62
     990:	12 2f       	mov	r17, r18
     992:	df 84       	ldd	r13, Y+15	; 0x0f
     994:	f8 88       	ldd	r15, Y+16	; 0x10
     996:	24 2f       	mov	r18, r20
     998:	4e 2d       	mov	r20, r14
     99a:	0e 94 02 04 	call	0x804	; 0x804 <_Z15QDEC_Port_SetupP11PORT_structhbb>
     99e:	88 23       	and	r24, r24
     9a0:	81 f0       	breq	.+32     	; 0x9c2 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC1_struct13TC_EVSEL_enumj+0x4c>
     9a2:	2c 2d       	mov	r18, r12
     9a4:	4e 2d       	mov	r20, r14
     9a6:	60 2f       	mov	r22, r16
     9a8:	81 2f       	mov	r24, r17
     9aa:	0e 94 48 04 	call	0x890	; 0x890 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum>
     9ae:	88 23       	and	r24, r24
     9b0:	41 f0       	breq	.+16     	; 0x9c2 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC1_struct13TC_EVSEL_enumj+0x4c>
     9b2:	98 2d       	mov	r25, r8
     9b4:	90 66       	ori	r25, 0x60	; 96
     9b6:	f5 01       	movw	r30, r10
     9b8:	93 83       	std	Z+3, r25	; 0x03
     9ba:	d6 a2       	std	Z+38, r13	; 0x26
     9bc:	f7 a2       	std	Z+39, r15	; 0x27
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	90 83       	st	Z, r25
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	1f 91       	pop	r17
     9c8:	0f 91       	pop	r16
     9ca:	ff 90       	pop	r15
     9cc:	ef 90       	pop	r14
     9ce:	df 90       	pop	r13
     9d0:	cf 90       	pop	r12
     9d2:	bf 90       	pop	r11
     9d4:	af 90       	pop	r10
     9d6:	8f 90       	pop	r8
     9d8:	08 95       	ret

000009da <_Z12QDEC_Read_TCP10TC0_struct>:
     9da:	fc 01       	movw	r30, r24
     9dc:	90 a1       	ldd	r25, Z+32	; 0x20
     9de:	21 a1       	ldd	r18, Z+33	; 0x21
     9e0:	89 2f       	mov	r24, r25
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	92 2b       	or	r25, r18
     9e6:	08 95       	ret

000009e8 <_Z12QDEC_Read_TCP10TC1_struct>:
     9e8:	fc 01       	movw	r30, r24
     9ea:	90 a1       	ldd	r25, Z+32	; 0x20
     9ec:	21 a1       	ldd	r18, Z+33	; 0x21
     9ee:	89 2f       	mov	r24, r25
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	92 2b       	or	r25, r18
     9f4:	08 95       	ret

000009f6 <_ZN10task_motor3runEv>:
/** This task updates the motors with their current position and setpoints (intertask
*	variables) and adjusts the output pwm signals.
*/

void task_motor::run (void)
{
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	cd b7       	in	r28, 0x3d	; 61
     9fc:	de b7       	in	r29, 0x3e	; 62
     9fe:	c6 59       	subi	r28, 0x96	; 150
     a00:	d1 09       	sbc	r29, r1
     a02:	cd bf       	out	0x3d, r28	; 61
     a04:	de bf       	out	0x3e, r29	; 62
     a06:	8c 01       	movw	r16, r24
	// Initializing objects driver
		// All gains, limits, and positions are initialized to zero.
	motorDriver motor1 ('1', p_serial);
     a08:	fc 01       	movw	r30, r24
     a0a:	46 81       	ldd	r20, Z+6	; 0x06
     a0c:	57 81       	ldd	r21, Z+7	; 0x07
     a0e:	61 e3       	ldi	r22, 0x31	; 49
     a10:	ce 01       	movw	r24, r28
     a12:	01 96       	adiw	r24, 0x01	; 1
     a14:	0e 94 43 02 	call	0x486	; 0x486 <_ZN11motorDriverC1EcP8emstream>
	motorDriver motor2 ('2', p_serial);
     a18:	f8 01       	movw	r30, r16
     a1a:	46 81       	ldd	r20, Z+6	; 0x06
     a1c:	57 81       	ldd	r21, Z+7	; 0x07
     a1e:	62 e3       	ldi	r22, 0x32	; 50
     a20:	ce 01       	movw	r24, r28
     a22:	ce 96       	adiw	r24, 0x3e	; 62
     a24:	0e 94 43 02 	call	0x486	; 0x486 <_ZN11motorDriverC1EcP8emstream>
	
	// Setting gain scaling
		// Gain scaling is the factor by which signals are divided. Allows for gains
		// to be scaled appropriately for int limits. Currently set to 1 (no scaling).
	int16_t pwm_scale = 100;
	motor1.set_pwm_scaling(pwm_scale);
     a28:	64 e6       	ldi	r22, 0x64	; 100
     a2a:	70 e0       	ldi	r23, 0x00	; 0
     a2c:	ce 01       	movw	r24, r28
     a2e:	01 96       	adiw	r24, 0x01	; 1
     a30:	0e 94 25 02 	call	0x44a	; 0x44a <_ZN11motorDriver15set_pwm_scalingEi>
	motor2.set_pwm_scaling(pwm_scale);
     a34:	64 e6       	ldi	r22, 0x64	; 100
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	ce 01       	movw	r24, r28
     a3a:	ce 96       	adiw	r24, 0x3e	; 62
     a3c:	0e 94 25 02 	call	0x44a	; 0x44a <_ZN11motorDriver15set_pwm_scalingEi>

	// Setting linear gains
	int16_t kp_l = 30;
	int16_t ki_l = 1;
	int16_t kd_l = 0;
	motor1.set_k_l(kp_l,ki_l,kd_l);
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	41 e0       	ldi	r20, 0x01	; 1
     a46:	50 e0       	ldi	r21, 0x00	; 0
     a48:	6e e1       	ldi	r22, 0x1E	; 30
     a4a:	70 e0       	ldi	r23, 0x00	; 0
     a4c:	ce 01       	movw	r24, r28
     a4e:	01 96       	adiw	r24, 0x01	; 1
     a50:	0e 94 15 02 	call	0x42a	; 0x42a <_ZN11motorDriver7set_k_lEiii>
	motor2.set_k_l(kp_l,ki_l,kd_l);
     a54:	20 e0       	ldi	r18, 0x00	; 0
     a56:	30 e0       	ldi	r19, 0x00	; 0
     a58:	41 e0       	ldi	r20, 0x01	; 1
     a5a:	50 e0       	ldi	r21, 0x00	; 0
     a5c:	6e e1       	ldi	r22, 0x1E	; 30
     a5e:	70 e0       	ldi	r23, 0x00	; 0
     a60:	ce 01       	movw	r24, r28
     a62:	ce 96       	adiw	r24, 0x3e	; 62
     a64:	0e 94 15 02 	call	0x42a	; 0x42a <_ZN11motorDriver7set_k_lEiii>

	// Setting angular gains
	int16_t kp_a = 60;
	int16_t ki_a = 10;
	int16_t kd_a = 0;
	motor1.set_k_a(kp_a,ki_a,kd_a);
     a68:	20 e0       	ldi	r18, 0x00	; 0
     a6a:	30 e0       	ldi	r19, 0x00	; 0
     a6c:	4a e0       	ldi	r20, 0x0A	; 10
     a6e:	50 e0       	ldi	r21, 0x00	; 0
     a70:	6c e3       	ldi	r22, 0x3C	; 60
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	ce 01       	movw	r24, r28
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	0e 94 1d 02 	call	0x43a	; 0x43a <_ZN11motorDriver7set_k_aEiii>
	motor2.set_k_a(kp_a,ki_a,kd_a);
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	4a e0       	ldi	r20, 0x0A	; 10
     a82:	50 e0       	ldi	r21, 0x00	; 0
     a84:	6c e3       	ldi	r22, 0x3C	; 60
     a86:	70 e0       	ldi	r23, 0x00	; 0
     a88:	ce 01       	movw	r24, r28
     a8a:	ce 96       	adiw	r24, 0x3e	; 62
     a8c:	0e 94 1d 02 	call	0x43a	; 0x43a <_ZN11motorDriver7set_k_aEiii>
		// esum_lim is the limit for the accumulation of errors for integral gain.
	int16_t pwm_lim = 50;	// Max percentage pwm output
	int16_t pwm_lim_linear = 3*pwm_lim/5;	// Portion of pwm_lim used for linear driving. Rest is for angular
	int16_t esum_l_lim = pwm_lim*pwm_scale/10;	// Note: esum_lim is used prior to the pwm being scaled
	int16_t esum_a_lim = (pwm_lim-pwm_lim_linear)*pwm_scale;
	motor1.set_pwm_lim(pwm_lim); // Needs to be performed prior to set_pwm_lim_linear
     a90:	62 e3       	ldi	r22, 0x32	; 50
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	ce 01       	movw	r24, r28
     a96:	01 96       	adiw	r24, 0x01	; 1
     a98:	0e 94 29 02 	call	0x452	; 0x452 <_ZN11motorDriver11set_pwm_limEi>
	motor2.set_pwm_lim(pwm_lim);
     a9c:	62 e3       	ldi	r22, 0x32	; 50
     a9e:	70 e0       	ldi	r23, 0x00	; 0
     aa0:	ce 01       	movw	r24, r28
     aa2:	ce 96       	adiw	r24, 0x3e	; 62
     aa4:	0e 94 29 02 	call	0x452	; 0x452 <_ZN11motorDriver11set_pwm_limEi>
	motor1.set_pwm_lim_linear(pwm_lim_linear);
     aa8:	6e e1       	ldi	r22, 0x1E	; 30
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	ce 01       	movw	r24, r28
     aae:	01 96       	adiw	r24, 0x01	; 1
     ab0:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN11motorDriver18set_pwm_lim_linearEi>
	motor2.set_pwm_lim_linear(pwm_lim_linear);
     ab4:	6e e1       	ldi	r22, 0x1E	; 30
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	ce 01       	movw	r24, r28
     aba:	ce 96       	adiw	r24, 0x3e	; 62
     abc:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN11motorDriver18set_pwm_lim_linearEi>
	motor1.set_esum_l_lim(esum_l_lim);
     ac0:	64 ef       	ldi	r22, 0xF4	; 244
     ac2:	71 e0       	ldi	r23, 0x01	; 1
     ac4:	ce 01       	movw	r24, r28
     ac6:	01 96       	adiw	r24, 0x01	; 1
     ac8:	0e 94 9c 02 	call	0x538	; 0x538 <_ZN11motorDriver14set_esum_l_limEi>
	motor2.set_esum_l_lim(esum_l_lim);
     acc:	64 ef       	ldi	r22, 0xF4	; 244
     ace:	71 e0       	ldi	r23, 0x01	; 1
     ad0:	ce 01       	movw	r24, r28
     ad2:	ce 96       	adiw	r24, 0x3e	; 62
     ad4:	0e 94 9c 02 	call	0x538	; 0x538 <_ZN11motorDriver14set_esum_l_limEi>
	motor1.set_esum_a_lim(esum_a_lim);
     ad8:	60 ed       	ldi	r22, 0xD0	; 208
     ada:	77 e0       	ldi	r23, 0x07	; 7
     adc:	ce 01       	movw	r24, r28
     ade:	01 96       	adiw	r24, 0x01	; 1
     ae0:	0e 94 a0 02 	call	0x540	; 0x540 <_ZN11motorDriver14set_esum_a_limEi>
	motor2.set_esum_a_lim(esum_a_lim);
     ae4:	60 ed       	ldi	r22, 0xD0	; 208
     ae6:	77 e0       	ldi	r23, 0x07	; 7
     ae8:	ce 01       	movw	r24, r28
     aea:	ce 96       	adiw	r24, 0x3e	; 62
     aec:	0e 94 a0 02 	call	0x540	; 0x540 <_ZN11motorDriver14set_esum_a_limEi>
	diagnostic diag_1;
	diagnostic diag_2;

	// This is an infinite loop; it runs until the power is turned off. This loop
	// continually updates motor position, setpoint, and pwm output.
	portTickType previousTicks = xTaskGetTickCount ();
     af0:	0e 94 8e 18 	call	0x311c	; 0x311c <xTaskGetTickCount>
     af4:	c1 57       	subi	r28, 0x71	; 113
     af6:	df 4f       	sbci	r29, 0xFF	; 255
     af8:	68 83       	st	Y, r22
     afa:	79 83       	std	Y+1, r23	; 0x01
     afc:	8a 83       	std	Y+2, r24	; 0x02
     afe:	9b 83       	std	Y+3, r25	; 0x03
     b00:	cf 58       	subi	r28, 0x8F	; 143
     b02:	d0 40       	sbci	r29, 0x00	; 0
	*p_serial << "this should only appear once" << endl;
     b04:	f8 01       	movw	r30, r16
     b06:	06 81       	ldd	r16, Z+6	; 0x06
     b08:	17 81       	ldd	r17, Z+7	; 0x07
		 *          reference is used to string (bad pun) printable items together with 
		 *          many "<<" operators
		 */
		emstream& operator<< (const char* p_string)
		{
			puts (p_string);
     b0a:	6a e0       	ldi	r22, 0x0A	; 10
     b0c:	70 e2       	ldi	r23, 0x20	; 32
     b0e:	c8 01       	movw	r24, r16
     b10:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
     b14:	66 e0       	ldi	r22, 0x06	; 6
     b16:	c8 01       	movw	r24, r16
     b18:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
	while(1)
	{
		
		//calculate linear distance from the setpoint, then pass that linear distance to both motors. We control distance from goal and angular heading.
		LinearDistance = sqrt(pow((setpoint_l_2 - Robot_Pos_Y_INERT),2) + pow((setpoint_l_1-Robot_Pos_X_INERT),2));
     b1c:	60 91 00 20 	lds	r22, 0x2000	; 0x802000 <__data_start>
     b20:	70 91 01 20 	lds	r23, 0x2001	; 0x802001 <__data_start+0x1>
     b24:	80 91 48 21 	lds	r24, 0x2148	; 0x802148 <Robot_Pos_Y_INERT>
     b28:	90 91 49 21 	lds	r25, 0x2149	; 0x802149 <Robot_Pos_Y_INERT+0x1>
     b2c:	68 1b       	sub	r22, r24
     b2e:	79 0b       	sbc	r23, r25
     b30:	07 2e       	mov	r0, r23
     b32:	00 0c       	add	r0, r0
     b34:	88 0b       	sbc	r24, r24
     b36:	99 0b       	sbc	r25, r25
     b38:	0e 94 81 26 	call	0x4d02	; 0x4d02 <__floatsisf>
     b3c:	6b 01       	movw	r12, r22
     b3e:	7c 01       	movw	r14, r24
     b40:	00 91 02 20 	lds	r16, 0x2002	; 0x802002 <setpoint_l_1>
     b44:	10 91 03 20 	lds	r17, 0x2003	; 0x802003 <setpoint_l_1+0x1>
     b48:	80 91 4a 21 	lds	r24, 0x214A	; 0x80214a <Robot_Pos_X_INERT>
     b4c:	90 91 4b 21 	lds	r25, 0x214B	; 0x80214b <Robot_Pos_X_INERT+0x1>
     b50:	08 1b       	sub	r16, r24
     b52:	19 0b       	sbc	r17, r25
     b54:	b8 01       	movw	r22, r16
     b56:	01 2e       	mov	r0, r17
     b58:	00 0c       	add	r0, r0
     b5a:	88 0b       	sbc	r24, r24
     b5c:	99 0b       	sbc	r25, r25
     b5e:	0e 94 81 26 	call	0x4d02	; 0x4d02 <__floatsisf>
     b62:	4b 01       	movw	r8, r22
     b64:	5c 01       	movw	r10, r24
     b66:	a7 01       	movw	r20, r14
     b68:	96 01       	movw	r18, r12
     b6a:	c7 01       	movw	r24, r14
     b6c:	b6 01       	movw	r22, r12
     b6e:	0e 94 7b 27 	call	0x4ef6	; 0x4ef6 <__mulsf3>
     b72:	2b 01       	movw	r4, r22
     b74:	3c 01       	movw	r6, r24
     b76:	a5 01       	movw	r20, r10
     b78:	94 01       	movw	r18, r8
     b7a:	c5 01       	movw	r24, r10
     b7c:	b4 01       	movw	r22, r8
     b7e:	0e 94 7b 27 	call	0x4ef6	; 0x4ef6 <__mulsf3>
     b82:	cd 56       	subi	r28, 0x6D	; 109
     b84:	df 4f       	sbci	r29, 0xFF	; 255
     b86:	68 83       	st	Y, r22
     b88:	79 83       	std	Y+1, r23	; 0x01
     b8a:	8a 83       	std	Y+2, r24	; 0x02
     b8c:	9b 83       	std	Y+3, r25	; 0x03
     b8e:	c3 59       	subi	r28, 0x93	; 147
     b90:	d0 40       	sbci	r29, 0x00	; 0
     b92:	cd 56       	subi	r28, 0x6D	; 109
     b94:	df 4f       	sbci	r29, 0xFF	; 255
     b96:	28 81       	ld	r18, Y
     b98:	39 81       	ldd	r19, Y+1	; 0x01
     b9a:	4a 81       	ldd	r20, Y+2	; 0x02
     b9c:	5b 81       	ldd	r21, Y+3	; 0x03
     b9e:	c3 59       	subi	r28, 0x93	; 147
     ba0:	d0 40       	sbci	r29, 0x00	; 0
     ba2:	c3 01       	movw	r24, r6
     ba4:	b2 01       	movw	r22, r4
     ba6:	0e 94 f4 24 	call	0x49e8	; 0x49e8 <__addsf3>
     baa:	0e 94 f6 27 	call	0x4fec	; 0x4fec <sqrt>
     bae:	0e 94 49 26 	call	0x4c92	; 0x4c92 <__fixsfsi>
     bb2:	2b 01       	movw	r4, r22
     bb4:	3c 01       	movw	r6, r24
     bb6:	60 93 30 21 	sts	0x2130, r22	; 0x802130 <LinearDistance>
     bba:	70 93 31 21 	sts	0x2131, r23	; 0x802131 <LinearDistance+0x1>
		int16_t AngleGoal = atan2((setpoint_l_2 - Robot_Pos_Y_INERT), (setpoint_l_1-Robot_Pos_X_INERT));
     bbe:	a5 01       	movw	r20, r10
     bc0:	94 01       	movw	r18, r8
     bc2:	c7 01       	movw	r24, r14
     bc4:	b6 01       	movw	r22, r12
     bc6:	0e 94 73 25 	call	0x4ae6	; 0x4ae6 <atan2>
     bca:	0e 94 49 26 	call	0x4c92	; 0x4c92 <__fixsfsi>
     bce:	6b 01       	movw	r12, r22
     bd0:	7c 01       	movw	r14, r24
		setpoint_a_1 = AngleGoal - LinearDistance;
     bd2:	cb 01       	movw	r24, r22
     bd4:	84 19       	sub	r24, r4
     bd6:	95 09       	sbc	r25, r5
     bd8:	80 93 2e 21 	sts	0x212E, r24	; 0x80212e <__data_end>
     bdc:	90 93 2f 21 	sts	0x212F, r25	; 0x80212f <__data_end+0x1>
		if(setpoint_l_1-Robot_Pos_X_INERT <= 0)
     be0:	10 16       	cp	r1, r16
     be2:	11 06       	cpc	r1, r17
     be4:	3c f0       	brlt	.+14     	; 0xbf4 <_ZN10task_motor3runEv+0x1fe>
		{
			LinearDistance = LinearDistance * -1;
     be6:	51 94       	neg	r5
     be8:	41 94       	neg	r4
     bea:	51 08       	sbc	r5, r1
     bec:	40 92 30 21 	sts	0x2130, r4	; 0x802130 <LinearDistance>
     bf0:	50 92 31 21 	sts	0x2131, r5	; 0x802131 <LinearDistance+0x1>
		else {
			//do nothing
		}
		
		// Updating positions, always zero because we've calculated the error above
		motor1.set_position(0);
     bf4:	60 e0       	ldi	r22, 0x00	; 0
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	ce 01       	movw	r24, r28
     bfa:	01 96       	adiw	r24, 0x01	; 1
     bfc:	0e 94 ac 02 	call	0x558	; 0x558 <_ZN11motorDriver12set_positionEi>
		motor2.set_position(0);
     c00:	60 e0       	ldi	r22, 0x00	; 0
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	ce 01       	movw	r24, r28
     c06:	ce 96       	adiw	r24, 0x3e	; 62
     c08:	0e 94 ac 02 	call	0x558	; 0x558 <_ZN11motorDriver12set_positionEi>
		
		// Updating motor linear setpoints
		motor1.set_setpoint_l(LinearDistance);
     c0c:	60 91 30 21 	lds	r22, 0x2130	; 0x802130 <LinearDistance>
     c10:	70 91 31 21 	lds	r23, 0x2131	; 0x802131 <LinearDistance+0x1>
     c14:	ce 01       	movw	r24, r28
     c16:	01 96       	adiw	r24, 0x01	; 1
     c18:	0e 94 a4 02 	call	0x548	; 0x548 <_ZN11motorDriver14set_setpoint_lEi>
		motor2.set_setpoint_l(LinearDistance);
     c1c:	60 91 30 21 	lds	r22, 0x2130	; 0x802130 <LinearDistance>
     c20:	70 91 31 21 	lds	r23, 0x2131	; 0x802131 <LinearDistance+0x1>
     c24:	ce 01       	movw	r24, r28
     c26:	ce 96       	adiw	r24, 0x3e	; 62
     c28:	0e 94 a4 02 	call	0x548	; 0x548 <_ZN11motorDriver14set_setpoint_lEi>

		// Updating angles
		motor1.set_angle(AngleGoal - Robot_Angle_Theta_INERT);
     c2c:	80 91 46 21 	lds	r24, 0x2146	; 0x802146 <Robot_Angle_Theta_INERT>
     c30:	90 91 47 21 	lds	r25, 0x2147	; 0x802147 <Robot_Angle_Theta_INERT+0x1>
     c34:	b6 01       	movw	r22, r12
     c36:	68 1b       	sub	r22, r24
     c38:	79 0b       	sbc	r23, r25
     c3a:	ce 01       	movw	r24, r28
     c3c:	01 96       	adiw	r24, 0x01	; 1
     c3e:	0e 94 b0 02 	call	0x560	; 0x560 <_ZN11motorDriver9set_angleEi>
		motor2.set_angle(AngleGoal - Robot_Angle_Theta_INERT);
     c42:	80 91 46 21 	lds	r24, 0x2146	; 0x802146 <Robot_Angle_Theta_INERT>
     c46:	90 91 47 21 	lds	r25, 0x2147	; 0x802147 <Robot_Angle_Theta_INERT+0x1>
     c4a:	b6 01       	movw	r22, r12
     c4c:	68 1b       	sub	r22, r24
     c4e:	79 0b       	sbc	r23, r25
     c50:	ce 01       	movw	r24, r28
     c52:	ce 96       	adiw	r24, 0x3e	; 62
     c54:	0e 94 b0 02 	call	0x560	; 0x560 <_ZN11motorDriver9set_angleEi>
		
		// Updating angular setpoints, setpoint_a_1 is the goal angle of the robot.
		motor1.set_setpoint_a(setpoint_a_1);
     c58:	60 91 2e 21 	lds	r22, 0x212E	; 0x80212e <__data_end>
     c5c:	70 91 2f 21 	lds	r23, 0x212F	; 0x80212f <__data_end+0x1>
     c60:	ce 01       	movw	r24, r28
     c62:	01 96       	adiw	r24, 0x01	; 1
     c64:	0e 94 a8 02 	call	0x550	; 0x550 <_ZN11motorDriver14set_setpoint_aEi>
		motor2.set_setpoint_a(setpoint_a_1);
     c68:	60 91 2e 21 	lds	r22, 0x212E	; 0x80212e <__data_end>
     c6c:	70 91 2f 21 	lds	r23, 0x212F	; 0x80212f <__data_end+0x1>
     c70:	ce 01       	movw	r24, r28
     c72:	ce 96       	adiw	r24, 0x3e	; 62
     c74:	0e 94 a8 02 	call	0x550	; 0x550 <_ZN11motorDriver14set_setpoint_aEi>
			// PWM signal is calculated using the sum of each action that is
			// enabled (the first three arguments). The pins are modulated
			// according to the drive mode. True means higher performance,
			// false means lower current (ish). Higher performance is recommended,
			// especially for lower pwm's.
		diag_1 = motor1.run(true,true,false,true);
     c78:	ee 24       	eor	r14, r14
     c7a:	e3 94       	inc	r14
     c7c:	00 e0       	ldi	r16, 0x00	; 0
     c7e:	21 e0       	ldi	r18, 0x01	; 1
     c80:	41 e0       	ldi	r20, 0x01	; 1
     c82:	be 01       	movw	r22, r28
     c84:	6f 5f       	subi	r22, 0xFF	; 255
     c86:	7f 4f       	sbci	r23, 0xFF	; 255
     c88:	ce 01       	movw	r24, r28
     c8a:	85 58       	subi	r24, 0x85	; 133
     c8c:	9f 4f       	sbci	r25, 0xFF	; 255
     c8e:	0e 94 b4 02 	call	0x568	; 0x568 <_ZN11motorDriver3runEbbbb>
		diag_2 = motor2.run(true,true,false,true);	// Currently is set to run in PI mode
     c92:	21 e0       	ldi	r18, 0x01	; 1
     c94:	41 e0       	ldi	r20, 0x01	; 1
     c96:	be 01       	movw	r22, r28
     c98:	62 5c       	subi	r22, 0xC2	; 194
     c9a:	7f 4f       	sbci	r23, 0xFF	; 255
     c9c:	ce 01       	movw	r24, r28
     c9e:	8b 57       	subi	r24, 0x7B	; 123
     ca0:	9f 4f       	sbci	r25, 0xFF	; 255
     ca2:	0e 94 b4 02 	call	0x568	; 0x568 <_ZN11motorDriver3runEbbbb>

		// Updating diagnostic shares
		pwm_tot_1 = diag_1.pwm_tot;
     ca6:	ed 96       	adiw	r28, 0x3d	; 61
     ca8:	8e ad       	ldd	r24, Y+62	; 0x3e
     caa:	9f ad       	ldd	r25, Y+63	; 0x3f
     cac:	ed 97       	sbiw	r28, 0x3d	; 61
     cae:	80 93 44 21 	sts	0x2144, r24	; 0x802144 <pwm_tot_1>
     cb2:	90 93 45 21 	sts	0x2145, r25	; 0x802145 <pwm_tot_1+0x1>
		pwm_tot_2 = diag_2.pwm_tot;
     cb6:	cb 57       	subi	r28, 0x7B	; 123
     cb8:	df 4f       	sbci	r29, 0xFF	; 255
     cba:	88 81       	ld	r24, Y
     cbc:	99 81       	ldd	r25, Y+1	; 0x01
     cbe:	c5 58       	subi	r28, 0x85	; 133
     cc0:	d0 40       	sbci	r29, 0x00	; 0
     cc2:	80 93 42 21 	sts	0x2142, r24	; 0x802142 <pwm_tot_2>
     cc6:	90 93 43 21 	sts	0x2143, r25	; 0x802143 <pwm_tot_2+0x1>
		pwm_lin_1 = diag_1.pwm_lin;
     cca:	ef 96       	adiw	r28, 0x3f	; 63
     ccc:	8e ad       	ldd	r24, Y+62	; 0x3e
     cce:	9f ad       	ldd	r25, Y+63	; 0x3f
     cd0:	ef 97       	sbiw	r28, 0x3f	; 63
     cd2:	80 93 38 21 	sts	0x2138, r24	; 0x802138 <pwm_lin_1>
     cd6:	90 93 39 21 	sts	0x2139, r25	; 0x802139 <pwm_lin_1+0x1>
		pwm_lin_2 = diag_2.pwm_lin;
     cda:	c9 57       	subi	r28, 0x79	; 121
     cdc:	df 4f       	sbci	r29, 0xFF	; 255
     cde:	88 81       	ld	r24, Y
     ce0:	99 81       	ldd	r25, Y+1	; 0x01
     ce2:	c7 58       	subi	r28, 0x87	; 135
     ce4:	d0 40       	sbci	r29, 0x00	; 0
     ce6:	80 93 36 21 	sts	0x2136, r24	; 0x802136 <pwm_lin_2>
     cea:	90 93 37 21 	sts	0x2137, r25	; 0x802137 <pwm_lin_2+0x1>
		pwm_ang_1 = diag_1.pwm_ang;
     cee:	c1 58       	subi	r28, 0x81	; 129
     cf0:	df 4f       	sbci	r29, 0xFF	; 255
     cf2:	88 81       	ld	r24, Y
     cf4:	99 81       	ldd	r25, Y+1	; 0x01
     cf6:	cf 57       	subi	r28, 0x7F	; 127
     cf8:	d0 40       	sbci	r29, 0x00	; 0
     cfa:	80 93 34 21 	sts	0x2134, r24	; 0x802134 <pwm_ang_1>
     cfe:	90 93 35 21 	sts	0x2135, r25	; 0x802135 <pwm_ang_1+0x1>
		pwm_ang_2 = diag_2.pwm_ang;
     d02:	c7 57       	subi	r28, 0x77	; 119
     d04:	df 4f       	sbci	r29, 0xFF	; 255
     d06:	88 81       	ld	r24, Y
     d08:	99 81       	ldd	r25, Y+1	; 0x01
     d0a:	c9 58       	subi	r28, 0x89	; 137
     d0c:	d0 40       	sbci	r29, 0x00	; 0
     d0e:	80 93 32 21 	sts	0x2132, r24	; 0x802132 <pwm_ang_2>
     d12:	90 93 33 21 	sts	0x2133, r25	; 0x802133 <pwm_ang_2+0x1>
		esum_l_1 = diag_1.esum_l_;
     d16:	cd 57       	subi	r28, 0x7D	; 125
     d18:	df 4f       	sbci	r29, 0xFF	; 255
     d1a:	88 81       	ld	r24, Y
     d1c:	99 81       	ldd	r25, Y+1	; 0x01
     d1e:	c3 58       	subi	r28, 0x83	; 131
     d20:	d0 40       	sbci	r29, 0x00	; 0
     d22:	80 93 40 21 	sts	0x2140, r24	; 0x802140 <esum_l_1>
     d26:	90 93 41 21 	sts	0x2141, r25	; 0x802141 <esum_l_1+0x1>
		esum_l_2 = diag_2.esum_l_;
     d2a:	c3 57       	subi	r28, 0x73	; 115
     d2c:	df 4f       	sbci	r29, 0xFF	; 255
     d2e:	88 81       	ld	r24, Y
     d30:	99 81       	ldd	r25, Y+1	; 0x01
     d32:	cd 58       	subi	r28, 0x8D	; 141
     d34:	d0 40       	sbci	r29, 0x00	; 0
     d36:	80 93 3e 21 	sts	0x213E, r24	; 0x80213e <esum_l_2>
     d3a:	90 93 3f 21 	sts	0x213F, r25	; 0x80213f <esum_l_2+0x1>
		esum_a_1 = diag_1.esum_a_;
     d3e:	cf 57       	subi	r28, 0x7F	; 127
     d40:	df 4f       	sbci	r29, 0xFF	; 255
     d42:	88 81       	ld	r24, Y
     d44:	99 81       	ldd	r25, Y+1	; 0x01
     d46:	c1 58       	subi	r28, 0x81	; 129
     d48:	d0 40       	sbci	r29, 0x00	; 0
     d4a:	80 93 3c 21 	sts	0x213C, r24	; 0x80213c <esum_a_1>
     d4e:	90 93 3d 21 	sts	0x213D, r25	; 0x80213d <esum_a_1+0x1>
		esum_a_2 = diag_2.esum_a_;
     d52:	c5 57       	subi	r28, 0x75	; 117
     d54:	df 4f       	sbci	r29, 0xFF	; 255
     d56:	88 81       	ld	r24, Y
     d58:	99 81       	ldd	r25, Y+1	; 0x01
     d5a:	cb 58       	subi	r28, 0x8B	; 139
     d5c:	d0 40       	sbci	r29, 0x00	; 0
     d5e:	80 93 3a 21 	sts	0x213A, r24	; 0x80213a <esum_a_2>
     d62:	90 93 3b 21 	sts	0x213B, r25	; 0x80213b <esum_a_2+0x1>

		// Sending serial diagnostics
		//*p_serial << "PWM setting (M1)" << pwm_1 << " (M2) " << pwm_2 << " time " << previousTicks << endl;

		// Delaying
		previousTicks = xTaskGetTickCount();
     d66:	0e 94 8e 18 	call	0x311c	; 0x311c <xTaskGetTickCount>
     d6a:	c1 57       	subi	r28, 0x71	; 113
     d6c:	df 4f       	sbci	r29, 0xFF	; 255
     d6e:	68 83       	st	Y, r22
     d70:	79 83       	std	Y+1, r23	; 0x01
     d72:	8a 83       	std	Y+2, r24	; 0x02
     d74:	9b 83       	std	Y+3, r25	; 0x03
     d76:	cf 58       	subi	r28, 0x8F	; 143
     d78:	d0 40       	sbci	r29, 0x00	; 0
		 *  @param milliseconds The duration of the delay interval in milliseconds
		 */
		void delay_from_to_ms (portTickType& from_ticks, portTickType milliseconds)
		{
			portTickType interval = configMS_TO_TICKS (milliseconds);
			vTaskDelayUntil (&from_ticks, interval);
     d7a:	4a e0       	ldi	r20, 0x0A	; 10
     d7c:	50 e0       	ldi	r21, 0x00	; 0
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	ce 01       	movw	r24, r28
     d84:	81 57       	subi	r24, 0x71	; 113
     d86:	9f 4f       	sbci	r25, 0xFF	; 255
     d88:	0e 94 27 1a 	call	0x344e	; 0x344e <vTaskDelayUntil>
     d8c:	c7 ce       	rjmp	.-626    	; 0xb1c <_ZN10task_motor3runEv+0x126>

00000d8e <_ZN10task_motorC1EPKchjP8emstream>:
 *                      (default: configMINIMAL_STACK_SIZE)
 *  @param p_ser_dev Pointer to a serial device (port, radio, SD card, etc.) which can
 *                   be used by this task to communicate (default: NULL)
 */

task_motor::task_motor (const char* a_name, 
     d8e:	0f 93       	push	r16
     d90:	1f 93       	push	r17
     d92:	cf 93       	push	r28
     d94:	df 93       	push	r29
     d96:	ec 01       	movw	r28, r24
					  unsigned portBASE_TYPE a_priority, 
					  size_t a_stack_size,
					  emstream* p_ser_dev
					 )
	: frt_task (a_name, a_priority, a_stack_size, p_ser_dev)
     d98:	0e 94 c4 1c 	call	0x3988	; 0x3988 <_ZN8frt_taskC1EPKchjP8emstream>
     d9c:	8b e2       	ldi	r24, 0x2B	; 43
     d9e:	90 e2       	ldi	r25, 0x20	; 32
     da0:	88 83       	st	Y, r24
     da2:	99 83       	std	Y+1, r25	; 0x01
{
	
	// Nothing is done in the body of this constructor. All the work is done in the
	// call to the frt_task constructor on the line just above this one
}
     da4:	df 91       	pop	r29
     da6:	cf 91       	pop	r28
     da8:	1f 91       	pop	r17
     daa:	0f 91       	pop	r16
     dac:	08 95       	ret

00000dae <_ZN16task_Robot_State3runEv>:

//-------------------------------------------------------------------------------------


void task_Robot_State::run (void)
{
     dae:	cf 93       	push	r28
     db0:	df 93       	push	r29
     db2:	cd b7       	in	r28, 0x3d	; 61
     db4:	de b7       	in	r29, 0x3e	; 62
     db6:	28 97       	sbiw	r28, 0x08	; 8
     db8:	cd bf       	out	0x3d, r28	; 61
     dba:	de bf       	out	0x3e, r29	; 62
     dbc:	3c 01       	movw	r6, r24
	// Make a variable which will hold times to use for precise task scheduling
	portTickType previousTicks = xTaskGetTickCount ();
     dbe:	0e 94 8e 18 	call	0x311c	; 0x311c <xTaskGetTickCount>
     dc2:	69 83       	std	Y+1, r22	; 0x01
     dc4:	7a 83       	std	Y+2, r23	; 0x02
     dc6:	8b 83       	std	Y+3, r24	; 0x03
     dc8:	9c 83       	std	Y+4, r25	; 0x04
		 *  @param milliseconds The number of milliseconds to delay
		 */
		void delay_ms (portTickType milliseconds)
		{
			portTickType duration = configMS_TO_TICKS (milliseconds);
			vTaskDelay (duration);
     dca:	6a e0       	ldi	r22, 0x0A	; 10
     dcc:	70 e0       	ldi	r23, 0x00	; 0
     dce:	80 e0       	ldi	r24, 0x00	; 0
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 94 1a 	call	0x3528	; 0x3528 <vTaskDelay>
		case (0):
			//setting up quadrature encoders!
			// ENC1 is Left side of bot
			// ENC2 is right side of bot
			
			success = QDEC_Total_Setup(&PORTD, 4, false, 0, EVSYS_CHMUX_PORTD_PIN4_gc, false, EVSYS_QDIRM_00_gc, &TCD1, TC_EVSEL_CH0_gc, 0xFFFF); //setup M_ENC1 quad. encoder
     dd6:	55 24       	eor	r5, r5
     dd8:	5a 94       	dec	r5
				M_DifferTick = (M_2_DistTick - M_1_DistTick); //left shifted by two from earlier
				*p_serial << "Differential Encoder Values" << M_1_DistTick << " " << M_2_DistTick << endl;
				
				//remain in tick units (leftshifted two) to maintain maximal resolution
				//calculate v1 & v2 (ticks/timetasktakestorun)
				M_1_v1 = M_1_DistTick / (DELAYINTERVAL_MS << 2);			//calculate linear velocity of left wheel (ticks/ms)
     dda:	0f 2e       	mov	r0, r31
     ddc:	f4 e1       	ldi	r31, 0x14	; 20
     dde:	2f 2e       	mov	r2, r31
     de0:	31 2c       	mov	r3, r1
     de2:	f0 2d       	mov	r31, r0
				M_2_v2 = M_2_DistTick / (DELAYINTERVAL_MS << 2);			//calculate linear velocity of right wheel (ticks/ms)
				*p_serial << "M vel 1" << hex << (M_1_v1>>0) << " " << (M_1_v1>>1)  << " M2 V " << (M_2_v2) << " " << (M_2_v2 >> 1) << endl;
				//calculate vbar and angular position of the drivebase in robot coordinates.
				R_V_Bar = (M_2_v2 + M_1_v1) / (2<<2);					//calculate Vbar for the robot (ticks/ms)
				R_POS_Y_delta = ((M_2_v2 + M_1_v1) / (2<<2)) * (DELAYINTERVAL_MS << 2); //delta y position in local frame
     de4:	0f 2e       	mov	r0, r31
     de6:	f4 e1       	ldi	r31, 0x14	; 20
     de8:	4f 2e       	mov	r4, r31
     dea:	f0 2d       	mov	r31, r0
	bool success = false;
	//configure both quadrature counter elements
	
	while(1)
	{
		switch (state)
     dec:	f3 01       	movw	r30, r6
     dee:	84 85       	ldd	r24, Z+12	; 0x0c
     df0:	88 23       	and	r24, r24
     df2:	21 f0       	breq	.+8      	; 0xdfc <_ZN16task_Robot_State3runEv+0x4e>
     df4:	81 30       	cpi	r24, 0x01	; 1
     df6:	09 f4       	brne	.+2      	; 0xdfa <_ZN16task_Robot_State3runEv+0x4c>
     df8:	62 c0       	rjmp	.+196    	; 0xebe <_ZN16task_Robot_State3runEv+0x110>
     dfa:	c3 c1       	rjmp	.+902    	; 0x1182 <_ZN16task_Robot_State3runEv+0x3d4>
		case (0):
			//setting up quadrature encoders!
			// ENC1 is Left side of bot
			// ENC2 is right side of bot
			
			success = QDEC_Total_Setup(&PORTD, 4, false, 0, EVSYS_CHMUX_PORTD_PIN4_gc, false, EVSYS_QDIRM_00_gc, &TCD1, TC_EVSEL_CH0_gc, 0xFFFF); //setup M_ENC1 quad. encoder
     dfc:	5f 92       	push	r5
     dfe:	5f 92       	push	r5
     e00:	68 94       	set
     e02:	88 24       	eor	r8, r8
     e04:	83 f8       	bld	r8, 3
     e06:	0f 2e       	mov	r0, r31
     e08:	f0 e4       	ldi	r31, 0x40	; 64
     e0a:	af 2e       	mov	r10, r31
     e0c:	f9 e0       	ldi	r31, 0x09	; 9
     e0e:	bf 2e       	mov	r11, r31
     e10:	f0 2d       	mov	r31, r0
     e12:	c1 2c       	mov	r12, r1
     e14:	e1 2c       	mov	r14, r1
     e16:	0c e6       	ldi	r16, 0x6C	; 108
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	40 e0       	ldi	r20, 0x00	; 0
     e1c:	64 e0       	ldi	r22, 0x04	; 4
     e1e:	80 e6       	ldi	r24, 0x60	; 96
     e20:	96 e0       	ldi	r25, 0x06	; 6
     e22:	0e 94 bb 04 	call	0x976	; 0x976 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC1_struct13TC_EVSEL_enumj>
     e26:	f8 2e       	mov	r15, r24
			*p_serial << "ENC1 Setup Success? " << success << endl;
     e28:	f3 01       	movw	r30, r6
     e2a:	06 81       	ldd	r16, Z+6	; 0x06
     e2c:	17 81       	ldd	r17, Z+7	; 0x07
     e2e:	6f e2       	ldi	r22, 0x2F	; 47
     e30:	70 e2       	ldi	r23, 0x20	; 32
     e32:	c8 01       	movw	r24, r16
     e34:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
     e38:	6f 2d       	mov	r22, r15
     e3a:	c8 01       	movw	r24, r16
     e3c:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <_ZN8emstreamlsEb>
     e40:	66 e0       	ldi	r22, 0x06	; 6
     e42:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
			success = false;
			success = QDEC_Total_Setup(&PORTE, 4, false, 2, EVSYS_CHMUX_PORTE_PIN4_gc, false, EVSYS_QDIRM_00_gc, &TCF0, TC_EVSEL_CH2_gc, 0xFFFF); //setup M_ENC2 quad. encoder
     e46:	5f 92       	push	r5
     e48:	5f 92       	push	r5
     e4a:	0f 2e       	mov	r0, r31
     e4c:	fa e0       	ldi	r31, 0x0A	; 10
     e4e:	8f 2e       	mov	r8, r31
     e50:	f0 2d       	mov	r31, r0
     e52:	0f 2e       	mov	r0, r31
     e54:	a1 2c       	mov	r10, r1
     e56:	fb e0       	ldi	r31, 0x0B	; 11
     e58:	bf 2e       	mov	r11, r31
     e5a:	f0 2d       	mov	r31, r0
     e5c:	04 e7       	ldi	r16, 0x74	; 116
     e5e:	22 e0       	ldi	r18, 0x02	; 2
     e60:	40 e0       	ldi	r20, 0x00	; 0
     e62:	64 e0       	ldi	r22, 0x04	; 4
     e64:	80 e8       	ldi	r24, 0x80	; 128
     e66:	96 e0       	ldi	r25, 0x06	; 6
     e68:	0e 94 89 04 	call	0x912	; 0x912 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC0_struct13TC_EVSEL_enumj>
     e6c:	f8 2e       	mov	r15, r24
			*p_serial << "ENC2 Setup Success? " << success << endl;
     e6e:	f3 01       	movw	r30, r6
     e70:	06 81       	ldd	r16, Z+6	; 0x06
     e72:	17 81       	ldd	r17, Z+7	; 0x07
     e74:	64 e4       	ldi	r22, 0x44	; 68
     e76:	70 e2       	ldi	r23, 0x20	; 32
     e78:	c8 01       	movw	r24, r16
     e7a:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
     e7e:	6f 2d       	mov	r22, r15
     e80:	c8 01       	movw	r24, r16
     e82:	0e 94 dd 1f 	call	0x3fba	; 0x3fba <_ZN8emstreamlsEb>
     e86:	66 e0       	ldi	r22, 0x06	; 6
     e88:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
			M_Enc1_Val_Prev = QDEC_Read_TC(&TCD1); //read value of encoders for starting value
     e8c:	80 e4       	ldi	r24, 0x40	; 64
     e8e:	99 e0       	ldi	r25, 0x09	; 9
     e90:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <_Z12QDEC_Read_TCP10TC1_struct>
     e94:	f3 01       	movw	r30, r6
     e96:	87 8b       	std	Z+23, r24	; 0x17
     e98:	90 8f       	std	Z+24, r25	; 0x18
			M_Enc2_Val_Prev = QDEC_Read_TC(&TCF0);
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	9b e0       	ldi	r25, 0x0B	; 11
     e9e:	0e 94 ed 04 	call	0x9da	; 0x9da <_Z12QDEC_Read_TCP10TC0_struct>
     ea2:	f3 01       	movw	r30, r6
     ea4:	81 8f       	std	Z+25, r24	; 0x19
     ea6:	92 8f       	std	Z+26, r25	; 0x1a
			R_THETA_Delta = 0; //zero out the angular position of the robot upon startup.
     ea8:	13 a6       	std	Z+43, r1	; 0x2b
     eaa:	14 a6       	std	Z+44, r1	; 0x2c
			transition_to(1);
     eac:	61 e0       	ldi	r22, 0x01	; 1
     eae:	c3 01       	movw	r24, r6
     eb0:	0e 94 c0 1c 	call	0x3980	; 0x3980 <_ZN8frt_task13transition_toEh>
			break;
     eb4:	0f 90       	pop	r0
     eb6:	0f 90       	pop	r0
     eb8:	0f 90       	pop	r0
     eba:	0f 90       	pop	r0
     ebc:	62 c1       	rjmp	.+708    	; 0x1182 <_ZN16task_Robot_State3runEv+0x3d4>
			
		case (1):
				//get current encoder values
				M_Enc1_Val = -1 * QDEC_Read_TC(&TCD1); //multiply by -1 so that positive encoder count is forwards on both sides.
     ebe:	80 e4       	ldi	r24, 0x40	; 64
     ec0:	99 e0       	ldi	r25, 0x09	; 9
     ec2:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <_Z12QDEC_Read_TCP10TC1_struct>
     ec6:	91 95       	neg	r25
     ec8:	81 95       	neg	r24
     eca:	91 09       	sbc	r25, r1
     ecc:	f3 01       	movw	r30, r6
     ece:	83 8b       	std	Z+19, r24	; 0x13
     ed0:	94 8b       	std	Z+20, r25	; 0x14
				M_Enc2_Val = QDEC_Read_TC(&TCF0);
     ed2:	80 e0       	ldi	r24, 0x00	; 0
     ed4:	9b e0       	ldi	r25, 0x0B	; 11
     ed6:	0e 94 ed 04 	call	0x9da	; 0x9da <_Z12QDEC_Read_TCP10TC0_struct>
     eda:	f3 01       	movw	r30, r6
     edc:	85 8b       	std	Z+21, r24	; 0x15
     ede:	96 8b       	std	Z+22, r25	; 0x16
				
				//calculate ticks elapsed since last iteration, we'll left shift by 2 bits to increase data resolution (at max speed, we run the risk of losing MSB data, should quantify this risk)
				M_1_DistTick = ((M_Enc1_Val-M_Enc1_Val_Prev) << 2);
     ee0:	e3 88       	ldd	r14, Z+19	; 0x13
     ee2:	f4 88       	ldd	r15, Z+20	; 0x14
     ee4:	27 89       	ldd	r18, Z+23	; 0x17
     ee6:	30 8d       	ldd	r19, Z+24	; 0x18
     ee8:	e2 1a       	sub	r14, r18
     eea:	f3 0a       	sbc	r15, r19
     eec:	ee 0c       	add	r14, r14
     eee:	ff 1c       	adc	r15, r15
     ef0:	ee 0c       	add	r14, r14
     ef2:	ff 1c       	adc	r15, r15
     ef4:	e3 8e       	std	Z+27, r14	; 0x1b
     ef6:	f4 8e       	std	Z+28, r15	; 0x1c
				M_2_DistTick = ((M_Enc2_Val-M_Enc2_Val_Prev) << 2);
     ef8:	21 8d       	ldd	r18, Z+25	; 0x19
     efa:	32 8d       	ldd	r19, Z+26	; 0x1a
     efc:	82 1b       	sub	r24, r18
     efe:	93 0b       	sbc	r25, r19
     f00:	8c 01       	movw	r16, r24
     f02:	00 0f       	add	r16, r16
     f04:	11 1f       	adc	r17, r17
     f06:	00 0f       	add	r16, r16
     f08:	11 1f       	adc	r17, r17
     f0a:	05 8f       	std	Z+29, r16	; 0x1d
     f0c:	16 8f       	std	Z+30, r17	; 0x1e
				//calculate differential ticks between the motors.
				//Positive M_DifferTick = CCW Rotation (right faster than left)
				//Negative M_DifferTick = CW Rotation (left side faster than right)
				M_DifferTick = (M_2_DistTick - M_1_DistTick); //left shifted by two from earlier
     f0e:	c8 01       	movw	r24, r16
     f10:	8e 19       	sub	r24, r14
     f12:	9f 09       	sbc	r25, r15
     f14:	87 8f       	std	Z+31, r24	; 0x1f
     f16:	90 a3       	std	Z+32, r25	; 0x20
				*p_serial << "Differential Encoder Values" << M_1_DistTick << " " << M_2_DistTick << endl;
     f18:	c6 80       	ldd	r12, Z+6	; 0x06
     f1a:	d7 80       	ldd	r13, Z+7	; 0x07
     f1c:	69 e5       	ldi	r22, 0x59	; 89
     f1e:	70 e2       	ldi	r23, 0x20	; 32
     f20:	c6 01       	movw	r24, r12
     f22:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
     f26:	b7 01       	movw	r22, r14
     f28:	c6 01       	movw	r24, r12
     f2a:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
     f2e:	7c 01       	movw	r14, r24
     f30:	62 e4       	ldi	r22, 0x42	; 66
     f32:	70 e2       	ldi	r23, 0x20	; 32
     f34:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
     f38:	b8 01       	movw	r22, r16
     f3a:	c7 01       	movw	r24, r14
     f3c:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
     f40:	66 e0       	ldi	r22, 0x06	; 6
     f42:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
				
				//remain in tick units (leftshifted two) to maintain maximal resolution
				//calculate v1 & v2 (ticks/timetasktakestorun)
				M_1_v1 = M_1_DistTick / (DELAYINTERVAL_MS << 2);			//calculate linear velocity of left wheel (ticks/ms)
     f46:	f3 01       	movw	r30, r6
     f48:	83 8d       	ldd	r24, Z+27	; 0x1b
     f4a:	94 8d       	ldd	r25, Z+28	; 0x1c
     f4c:	b1 01       	movw	r22, r2
     f4e:	0e 94 63 28 	call	0x50c6	; 0x50c6 <__divmodhi4>
     f52:	7b 01       	movw	r14, r22
     f54:	61 a3       	std	Z+33, r22	; 0x21
     f56:	72 a3       	std	Z+34, r23	; 0x22
				M_2_v2 = M_2_DistTick / (DELAYINTERVAL_MS << 2);			//calculate linear velocity of right wheel (ticks/ms)
     f58:	85 8d       	ldd	r24, Z+29	; 0x1d
     f5a:	96 8d       	ldd	r25, Z+30	; 0x1e
     f5c:	b1 01       	movw	r22, r2
     f5e:	0e 94 63 28 	call	0x50c6	; 0x50c6 <__divmodhi4>
     f62:	8b 01       	movw	r16, r22
     f64:	63 a3       	std	Z+35, r22	; 0x23
     f66:	74 a3       	std	Z+36, r23	; 0x24
				*p_serial << "M vel 1" << hex << (M_1_v1>>0) << " " << (M_1_v1>>1)  << " M2 V " << (M_2_v2) << " " << (M_2_v2 >> 1) << endl;
     f68:	c6 80       	ldd	r12, Z+6	; 0x06
     f6a:	d7 80       	ldd	r13, Z+7	; 0x07
     f6c:	65 e7       	ldi	r22, 0x75	; 117
     f6e:	70 e2       	ldi	r23, 0x20	; 32
     f70:	c6 01       	movw	r24, r12
     f72:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
     f76:	63 e0       	ldi	r22, 0x03	; 3
     f78:	c6 01       	movw	r24, r12
     f7a:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
     f7e:	b7 01       	movw	r22, r14
     f80:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
     f84:	6c 01       	movw	r12, r24
     f86:	62 e4       	ldi	r22, 0x42	; 66
     f88:	70 e2       	ldi	r23, 0x20	; 32
     f8a:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
     f8e:	b7 01       	movw	r22, r14
     f90:	75 95       	asr	r23
     f92:	67 95       	ror	r22
     f94:	c6 01       	movw	r24, r12
     f96:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
     f9a:	7c 01       	movw	r14, r24
     f9c:	6d e7       	ldi	r22, 0x7D	; 125
     f9e:	70 e2       	ldi	r23, 0x20	; 32
     fa0:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
     fa4:	b8 01       	movw	r22, r16
     fa6:	c7 01       	movw	r24, r14
     fa8:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
     fac:	7c 01       	movw	r14, r24
     fae:	62 e4       	ldi	r22, 0x42	; 66
     fb0:	70 e2       	ldi	r23, 0x20	; 32
     fb2:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
     fb6:	b8 01       	movw	r22, r16
     fb8:	75 95       	asr	r23
     fba:	67 95       	ror	r22
     fbc:	c7 01       	movw	r24, r14
     fbe:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
     fc2:	66 e0       	ldi	r22, 0x06	; 6
     fc4:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
				//calculate vbar and angular position of the drivebase in robot coordinates.
				R_V_Bar = (M_2_v2 + M_1_v1) / (2<<2);					//calculate Vbar for the robot (ticks/ms)
     fc8:	f3 01       	movw	r30, r6
     fca:	23 a1       	ldd	r18, Z+35	; 0x23
     fcc:	34 a1       	ldd	r19, Z+36	; 0x24
     fce:	81 a1       	ldd	r24, Z+33	; 0x21
     fd0:	92 a1       	ldd	r25, Z+34	; 0x22
     fd2:	89 01       	movw	r16, r18
     fd4:	08 0f       	add	r16, r24
     fd6:	19 1f       	adc	r17, r25
     fd8:	11 23       	and	r17, r17
     fda:	14 f4       	brge	.+4      	; 0xfe0 <_ZN16task_Robot_State3runEv+0x232>
     fdc:	09 5f       	subi	r16, 0xF9	; 249
     fde:	1f 4f       	sbci	r17, 0xFF	; 255
     fe0:	15 95       	asr	r17
     fe2:	07 95       	ror	r16
     fe4:	15 95       	asr	r17
     fe6:	07 95       	ror	r16
     fe8:	15 95       	asr	r17
     fea:	07 95       	ror	r16
     fec:	f3 01       	movw	r30, r6
     fee:	05 a3       	std	Z+37, r16	; 0x25
     ff0:	16 a3       	std	Z+38, r17	; 0x26
				R_POS_Y_delta = ((M_2_v2 + M_1_v1) / (2<<2)) * (DELAYINTERVAL_MS << 2); //delta y position in local frame
     ff2:	40 9e       	mul	r4, r16
     ff4:	50 01       	movw	r10, r0
     ff6:	41 9e       	mul	r4, r17
     ff8:	b0 0c       	add	r11, r0
     ffa:	11 24       	eor	r1, r1
     ffc:	a1 a6       	std	Z+41, r10	; 0x29
     ffe:	b2 a6       	std	Z+42, r11	; 0x2a
				R_Omega = (M_2_v2 - M_1_v1) / (WHEELBASE_TICKS << 2);	//angular velocity (rad/ms) -> only calculated for debugging. Angular position is calculated directly.
    1000:	28 1b       	sub	r18, r24
    1002:	39 0b       	sbc	r19, r25
    1004:	c9 01       	movw	r24, r18
    1006:	6c e4       	ldi	r22, 0x4C	; 76
    1008:	78 e0       	ldi	r23, 0x08	; 8
    100a:	0e 94 63 28 	call	0x50c6	; 0x50c6 <__divmodhi4>
    100e:	6b 01       	movw	r12, r22
    1010:	67 a3       	std	Z+39, r22	; 0x27
    1012:	70 a7       	std	Z+40, r23	; 0x28
				R_THETA_Delta = ((M_2_v2 - M_1_v1) * (DELAYINTERVAL_MS << 2)) / (WHEELBASE_TICKS<<2);		//calculate angular position change for the robot (we calculate directly to avoid losing resolution (rad))
    1014:	42 9e       	mul	r4, r18
    1016:	c0 01       	movw	r24, r0
    1018:	43 9e       	mul	r4, r19
    101a:	90 0d       	add	r25, r0
    101c:	11 24       	eor	r1, r1
    101e:	6c e4       	ldi	r22, 0x4C	; 76
    1020:	78 e0       	ldi	r23, 0x08	; 8
    1022:	0e 94 63 28 	call	0x50c6	; 0x50c6 <__divmodhi4>
    1026:	7b 01       	movw	r14, r22
    1028:	63 a7       	std	Z+43, r22	; 0x2b
    102a:	74 a7       	std	Z+44, r23	; 0x2c
				
				*p_serial << "R_V_Bar " << hex << R_V_Bar << " RPOSYDELTA " << R_POS_Y_delta << " ROMEGA " << R_Omega << " R_THETA_DELTA " << R_THETA_Delta << endl;
    102c:	86 80       	ldd	r8, Z+6	; 0x06
    102e:	97 80       	ldd	r9, Z+7	; 0x07
    1030:	64 e8       	ldi	r22, 0x84	; 132
    1032:	70 e2       	ldi	r23, 0x20	; 32
    1034:	c4 01       	movw	r24, r8
    1036:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    103a:	63 e0       	ldi	r22, 0x03	; 3
    103c:	c4 01       	movw	r24, r8
    103e:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    1042:	b8 01       	movw	r22, r16
    1044:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
    1048:	8c 01       	movw	r16, r24
    104a:	6d e8       	ldi	r22, 0x8D	; 141
    104c:	70 e2       	ldi	r23, 0x20	; 32
    104e:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    1052:	b5 01       	movw	r22, r10
    1054:	c8 01       	movw	r24, r16
    1056:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
    105a:	8c 01       	movw	r16, r24
    105c:	6a e9       	ldi	r22, 0x9A	; 154
    105e:	70 e2       	ldi	r23, 0x20	; 32
    1060:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    1064:	b6 01       	movw	r22, r12
    1066:	c8 01       	movw	r24, r16
    1068:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
    106c:	8c 01       	movw	r16, r24
    106e:	63 ea       	ldi	r22, 0xA3	; 163
    1070:	70 e2       	ldi	r23, 0x20	; 32
    1072:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    1076:	b7 01       	movw	r22, r14
    1078:	c8 01       	movw	r24, r16
    107a:	0e 94 f5 1f 	call	0x3fea	; 0x3fea <_ZN8emstreamlsEi>
    107e:	66 e0       	ldi	r22, 0x06	; 6
    1080:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
				R_INERT_Theta = R_INERT_Theta + (R_THETA_Delta>>2); //update the angular position of the robot with the new estimate (right shift two for compatibility).
    1084:	f3 01       	movw	r30, r6
    1086:	03 a5       	ldd	r16, Z+43	; 0x2b
    1088:	14 a5       	ldd	r17, Z+44	; 0x2c
    108a:	15 95       	asr	r17
    108c:	07 95       	ror	r16
    108e:	15 95       	asr	r17
    1090:	07 95       	ror	r16
    1092:	87 a5       	ldd	r24, Z+47	; 0x2f
    1094:	90 a9       	ldd	r25, Z+48	; 0x30
    1096:	08 0f       	add	r16, r24
    1098:	19 1f       	adc	r17, r25
    109a:	07 a7       	std	Z+47, r16	; 0x2f
    109c:	10 ab       	std	Z+48, r17	; 0x30
				//now translate R_POS_Y_delta back to inertial frame
				
				R_I_POS_X_delta = R_POS_Y_delta * cos(R_INERT_Theta);	//calculate vbar component in x inertial frame
    109e:	61 a5       	ldd	r22, Z+41	; 0x29
    10a0:	72 a5       	ldd	r23, Z+42	; 0x2a
    10a2:	07 2e       	mov	r0, r23
    10a4:	00 0c       	add	r0, r0
    10a6:	88 0b       	sbc	r24, r24
    10a8:	99 0b       	sbc	r25, r25
    10aa:	0e 94 81 26 	call	0x4d02	; 0x4d02 <__floatsisf>
    10ae:	4b 01       	movw	r8, r22
    10b0:	5c 01       	movw	r10, r24
    10b2:	b8 01       	movw	r22, r16
    10b4:	01 2e       	mov	r0, r17
    10b6:	00 0c       	add	r0, r0
    10b8:	88 0b       	sbc	r24, r24
    10ba:	99 0b       	sbc	r25, r25
    10bc:	0e 94 81 26 	call	0x4d02	; 0x4d02 <__floatsisf>
    10c0:	6d 83       	std	Y+5, r22	; 0x05
    10c2:	7e 83       	std	Y+6, r23	; 0x06
    10c4:	8f 83       	std	Y+7, r24	; 0x07
    10c6:	98 87       	std	Y+8, r25	; 0x08
    10c8:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <cos>
    10cc:	9b 01       	movw	r18, r22
    10ce:	ac 01       	movw	r20, r24
    10d0:	c5 01       	movw	r24, r10
    10d2:	b4 01       	movw	r22, r8
    10d4:	0e 94 7b 27 	call	0x4ef6	; 0x4ef6 <__mulsf3>
    10d8:	0e 94 49 26 	call	0x4c92	; 0x4c92 <__fixsfsi>
    10dc:	6b 01       	movw	r12, r22
    10de:	7c 01       	movw	r14, r24
    10e0:	f3 01       	movw	r30, r6
    10e2:	61 ab       	std	Z+49, r22	; 0x31
    10e4:	72 ab       	std	Z+50, r23	; 0x32
				R_I_POS_Y_delta = R_POS_Y_delta * sin(R_INERT_Theta);	//calculate vbar component in y intertial frame
    10e6:	6d 81       	ldd	r22, Y+5	; 0x05
    10e8:	7e 81       	ldd	r23, Y+6	; 0x06
    10ea:	8f 81       	ldd	r24, Y+7	; 0x07
    10ec:	98 85       	ldd	r25, Y+8	; 0x08
    10ee:	0e 94 e8 27 	call	0x4fd0	; 0x4fd0 <sin>
    10f2:	9b 01       	movw	r18, r22
    10f4:	ac 01       	movw	r20, r24
    10f6:	c5 01       	movw	r24, r10
    10f8:	b4 01       	movw	r22, r8
    10fa:	0e 94 7b 27 	call	0x4ef6	; 0x4ef6 <__mulsf3>
    10fe:	0e 94 49 26 	call	0x4c92	; 0x4c92 <__fixsfsi>
    1102:	f3 01       	movw	r30, r6
    1104:	63 ab       	std	Z+51, r22	; 0x33
    1106:	74 ab       	std	Z+52, r23	; 0x34
				R_I_POS_X = R_I_POS_X + (R_I_POS_X_delta>>2);				//compute new robot position in X inertial
    1108:	d5 94       	asr	r13
    110a:	c7 94       	ror	r12
    110c:	d5 94       	asr	r13
    110e:	c7 94       	ror	r12
    1110:	25 a9       	ldd	r18, Z+53	; 0x35
    1112:	36 a9       	ldd	r19, Z+54	; 0x36
    1114:	c2 0e       	add	r12, r18
    1116:	d3 1e       	adc	r13, r19
    1118:	c5 aa       	std	Z+53, r12	; 0x35
    111a:	d6 aa       	std	Z+54, r13	; 0x36
				R_I_POS_Y = R_I_POS_Y + (R_I_POS_Y_delta>>2);				//compute new robot position in Y inertial
    111c:	ab 01       	movw	r20, r22
    111e:	55 95       	asr	r21
    1120:	47 95       	ror	r20
    1122:	55 95       	asr	r21
    1124:	47 95       	ror	r20
    1126:	87 a9       	ldd	r24, Z+55	; 0x37
    1128:	90 ad       	ldd	r25, Z+56	; 0x38
    112a:	ba 01       	movw	r22, r20
    112c:	68 0f       	add	r22, r24
    112e:	79 1f       	adc	r23, r25
    1130:	67 ab       	std	Z+55, r22	; 0x37
    1132:	70 af       	std	Z+56, r23	; 0x38
				
				//we are back to regular no leftshift data!
				//output X,Y,Theta to motordriver task via shares.
				Robot_Pos_X_INERT = R_I_POS_X;
    1134:	c0 92 4a 21 	sts	0x214A, r12	; 0x80214a <Robot_Pos_X_INERT>
    1138:	d0 92 4b 21 	sts	0x214B, r13	; 0x80214b <Robot_Pos_X_INERT+0x1>
				Robot_Pos_Y_INERT = R_I_POS_Y;
    113c:	60 93 48 21 	sts	0x2148, r22	; 0x802148 <Robot_Pos_Y_INERT>
    1140:	70 93 49 21 	sts	0x2149, r23	; 0x802149 <Robot_Pos_Y_INERT+0x1>
				Robot_Angle_Theta_INERT = R_INERT_Theta;
    1144:	00 93 46 21 	sts	0x2146, r16	; 0x802146 <Robot_Angle_Theta_INERT>
    1148:	10 93 47 21 	sts	0x2147, r17	; 0x802147 <Robot_Angle_Theta_INERT+0x1>
				
				
				
				M_Enc1_Val_Prev = M_Enc1_Val;
    114c:	83 89       	ldd	r24, Z+19	; 0x13
    114e:	94 89       	ldd	r25, Z+20	; 0x14
    1150:	87 8b       	std	Z+23, r24	; 0x17
    1152:	90 8f       	std	Z+24, r25	; 0x18
				M_Enc2_Val_Prev = M_Enc2_Val;
    1154:	85 89       	ldd	r24, Z+21	; 0x15
    1156:	96 89       	ldd	r25, Z+22	; 0x16
    1158:	81 8f       	std	Z+25, r24	; 0x19
    115a:	92 8f       	std	Z+26, r25	; 0x1a
				runs++;
    115c:	86 85       	ldd	r24, Z+14	; 0x0e
    115e:	97 85       	ldd	r25, Z+15	; 0x0f
    1160:	a0 89       	ldd	r26, Z+16	; 0x10
    1162:	b1 89       	ldd	r27, Z+17	; 0x11
    1164:	01 96       	adiw	r24, 0x01	; 1
    1166:	a1 1d       	adc	r26, r1
    1168:	b1 1d       	adc	r27, r1
    116a:	86 87       	std	Z+14, r24	; 0x0e
    116c:	97 87       	std	Z+15, r25	; 0x0f
    116e:	a0 8b       	std	Z+16, r26	; 0x10
    1170:	b1 8b       	std	Z+17, r27	; 0x11
		 *  @param milliseconds The duration of the delay interval in milliseconds
		 */
		void delay_from_to_ms (portTickType& from_ticks, portTickType milliseconds)
		{
			portTickType interval = configMS_TO_TICKS (milliseconds);
			vTaskDelayUntil (&from_ticks, interval);
    1172:	45 e0       	ldi	r20, 0x05	; 5
    1174:	50 e0       	ldi	r21, 0x00	; 0
    1176:	60 e0       	ldi	r22, 0x00	; 0
    1178:	70 e0       	ldi	r23, 0x00	; 0
    117a:	ce 01       	movw	r24, r28
    117c:	01 96       	adiw	r24, 0x01	; 1
    117e:	0e 94 27 1a 	call	0x344e	; 0x344e <vTaskDelayUntil>
				delay_from_to_ms(previousTicks,DELAYINTERVAL_MS);
			
			
		}
		runs++;
    1182:	f3 01       	movw	r30, r6
    1184:	86 85       	ldd	r24, Z+14	; 0x0e
    1186:	97 85       	ldd	r25, Z+15	; 0x0f
    1188:	a0 89       	ldd	r26, Z+16	; 0x10
    118a:	b1 89       	ldd	r27, Z+17	; 0x11
    118c:	01 96       	adiw	r24, 0x01	; 1
    118e:	a1 1d       	adc	r26, r1
    1190:	b1 1d       	adc	r27, r1
    1192:	86 87       	std	Z+14, r24	; 0x0e
    1194:	97 87       	std	Z+15, r25	; 0x0f
    1196:	a0 8b       	std	Z+16, r26	; 0x10
    1198:	b1 8b       	std	Z+17, r27	; 0x11
    119a:	4a e0       	ldi	r20, 0x0A	; 10
    119c:	50 e0       	ldi	r21, 0x00	; 0
    119e:	60 e0       	ldi	r22, 0x00	; 0
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	ce 01       	movw	r24, r28
    11a4:	01 96       	adiw	r24, 0x01	; 1
    11a6:	0e 94 27 1a 	call	0x344e	; 0x344e <vTaskDelayUntil>
    11aa:	20 ce       	rjmp	.-960    	; 0xdec <_ZN16task_Robot_State3runEv+0x3e>

000011ac <_ZN16task_Robot_StateC1EPKchjP8emstream>:
 *                      (default: configMINIMAL_STACK_SIZE)
 *  @param p_ser_dev Pointer to a serial device (port, radio, SD card, etc.) which can
 *                   be used by this task to communicate (default: NULL)
 */

task_Robot_State::task_Robot_State (const char* a_name, 
    11ac:	0f 93       	push	r16
    11ae:	1f 93       	push	r17
    11b0:	cf 93       	push	r28
    11b2:	df 93       	push	r29
    11b4:	ec 01       	movw	r28, r24
					  unsigned portBASE_TYPE a_priority, 
					  size_t a_stack_size,
					  emstream* p_ser_dev
					 )
	: frt_task (a_name, a_priority, a_stack_size, p_ser_dev)
    11b6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <_ZN8frt_taskC1EPKchjP8emstream>
    11ba:	87 eb       	ldi	r24, 0xB7	; 183
    11bc:	90 e2       	ldi	r25, 0x20	; 32
    11be:	88 83       	st	Y, r24
    11c0:	99 83       	std	Y+1, r25	; 0x01
{
	//This constructor does nothing.
	
}
    11c2:	df 91       	pop	r29
    11c4:	cf 91       	pop	r28
    11c6:	1f 91       	pop	r17
    11c8:	0f 91       	pop	r16
    11ca:	08 95       	ret

000011cc <_Z8CCPWritePVhh>:
    11cc:	0f 93       	push	r16
    11ce:	cf 93       	push	r28
    11d0:	df 93       	push	r29
    11d2:	1f 92       	push	r1
    11d4:	cd b7       	in	r28, 0x3d	; 61
    11d6:	de b7       	in	r29, 0x3e	; 62
    11d8:	2f b7       	in	r18, 0x3f	; 63
    11da:	29 83       	std	Y+1, r18	; 0x01
    11dc:	f8 94       	cli
    11de:	1b be       	out	0x3b, r1	; 59
    11e0:	fc 01       	movw	r30, r24
    11e2:	08 ed       	ldi	r16, 0xD8	; 216
    11e4:	04 bf       	out	0x34, r16	; 52
    11e6:	60 83       	st	Z, r22
    11e8:	89 81       	ldd	r24, Y+1	; 0x01
    11ea:	8f bf       	out	0x3f, r24	; 63
    11ec:	0f 90       	pop	r0
    11ee:	df 91       	pop	r29
    11f0:	cf 91       	pop	r28
    11f2:	0f 91       	pop	r16
    11f4:	08 95       	ret

000011f6 <_Z15config_SYSCLOCKv>:
    11f6:	cf 93       	push	r28
    11f8:	df 93       	push	r29
    11fa:	1f 92       	push	r1
    11fc:	cd b7       	in	r28, 0x3d	; 61
    11fe:	de b7       	in	r29, 0x3e	; 62
    1200:	8f b7       	in	r24, 0x3f	; 63
    1202:	89 83       	std	Y+1, r24	; 0x01
    1204:	f8 94       	cli
    1206:	e0 e5       	ldi	r30, 0x50	; 80
    1208:	f0 e0       	ldi	r31, 0x00	; 0
    120a:	8b ec       	ldi	r24, 0xCB	; 203
    120c:	82 83       	std	Z+2, r24	; 0x02
    120e:	80 81       	ld	r24, Z
    1210:	88 60       	ori	r24, 0x08	; 8
    1212:	80 83       	st	Z, r24
    1214:	81 81       	ldd	r24, Z+1	; 0x01
    1216:	83 ff       	sbrs	r24, 3
    1218:	fd cf       	rjmp	.-6      	; 0x1214 <_Z15config_SYSCLOCKv+0x1e>
    121a:	e0 e5       	ldi	r30, 0x50	; 80
    121c:	f0 e0       	ldi	r31, 0x00	; 0
    121e:	82 ec       	ldi	r24, 0xC2	; 194
    1220:	85 83       	std	Z+5, r24	; 0x05
    1222:	80 81       	ld	r24, Z
    1224:	80 61       	ori	r24, 0x10	; 16
    1226:	80 83       	st	Z, r24
    1228:	81 81       	ldd	r24, Z+1	; 0x01
    122a:	84 ff       	sbrs	r24, 4
    122c:	fd cf       	rjmp	.-6      	; 0x1228 <_Z15config_SYSCLOCKv+0x32>
    122e:	e0 e4       	ldi	r30, 0x40	; 64
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	60 81       	ld	r22, Z
    1234:	68 7f       	andi	r22, 0xF8	; 248
    1236:	64 60       	ori	r22, 0x04	; 4
    1238:	60 83       	st	Z, r22
    123a:	88 ed       	ldi	r24, 0xD8	; 216
    123c:	84 bf       	out	0x34, r24	; 52
    123e:	80 e4       	ldi	r24, 0x40	; 64
    1240:	90 e0       	ldi	r25, 0x00	; 0
    1242:	0e 94 e6 08 	call	0x11cc	; 0x11cc <_Z8CCPWritePVhh>
    1246:	e0 e5       	ldi	r30, 0x50	; 80
    1248:	f0 e0       	ldi	r31, 0x00	; 0
    124a:	80 81       	ld	r24, Z
    124c:	8b 7f       	andi	r24, 0xFB	; 251
    124e:	80 83       	st	Z, r24
    1250:	89 81       	ldd	r24, Y+1	; 0x01
    1252:	8f bf       	out	0x3f, r24	; 63
    1254:	0f 90       	pop	r0
    1256:	df 91       	pop	r29
    1258:	cf 91       	pop	r28
    125a:	08 95       	ret

0000125c <sysclk_enable_module>:
    125c:	cf 93       	push	r28
    125e:	df 93       	push	r29
    1260:	1f 92       	push	r1
    1262:	cd b7       	in	r28, 0x3d	; 61
    1264:	de b7       	in	r29, 0x3e	; 62
    1266:	9f b7       	in	r25, 0x3f	; 63
    1268:	99 83       	std	Y+1, r25	; 0x01
    126a:	f8 94       	cli
    126c:	99 81       	ldd	r25, Y+1	; 0x01
    126e:	e8 2f       	mov	r30, r24
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	e0 59       	subi	r30, 0x90	; 144
    1274:	ff 4f       	sbci	r31, 0xFF	; 255
    1276:	60 95       	com	r22
    1278:	80 81       	ld	r24, Z
    127a:	68 23       	and	r22, r24
    127c:	60 83       	st	Z, r22
    127e:	9f bf       	out	0x3f, r25	; 63
    1280:	0f 90       	pop	r0
    1282:	df 91       	pop	r29
    1284:	cf 91       	pop	r28
    1286:	08 95       	ret

00001288 <__vector_14>:
    1288:	1f 92       	push	r1
    128a:	0f 92       	push	r0
    128c:	0f b6       	in	r0, 0x3f	; 63
    128e:	0f 92       	push	r0
    1290:	11 24       	eor	r1, r1
    1292:	0b b6       	in	r0, 0x3b	; 59
    1294:	0f 92       	push	r0
    1296:	2f 93       	push	r18
    1298:	3f 93       	push	r19
    129a:	4f 93       	push	r20
    129c:	5f 93       	push	r21
    129e:	6f 93       	push	r22
    12a0:	7f 93       	push	r23
    12a2:	8f 93       	push	r24
    12a4:	9f 93       	push	r25
    12a6:	af 93       	push	r26
    12a8:	bf 93       	push	r27
    12aa:	ef 93       	push	r30
    12ac:	ff 93       	push	r31
    12ae:	e0 91 90 21 	lds	r30, 0x2190	; 0x802190 <tc_tcc0_ovf_callback>
    12b2:	f0 91 91 21 	lds	r31, 0x2191	; 0x802191 <tc_tcc0_ovf_callback+0x1>
    12b6:	30 97       	sbiw	r30, 0x00	; 0
    12b8:	09 f0       	breq	.+2      	; 0x12bc <__vector_14+0x34>
    12ba:	19 95       	eicall
    12bc:	ff 91       	pop	r31
    12be:	ef 91       	pop	r30
    12c0:	bf 91       	pop	r27
    12c2:	af 91       	pop	r26
    12c4:	9f 91       	pop	r25
    12c6:	8f 91       	pop	r24
    12c8:	7f 91       	pop	r23
    12ca:	6f 91       	pop	r22
    12cc:	5f 91       	pop	r21
    12ce:	4f 91       	pop	r20
    12d0:	3f 91       	pop	r19
    12d2:	2f 91       	pop	r18
    12d4:	0f 90       	pop	r0
    12d6:	0b be       	out	0x3b, r0	; 59
    12d8:	0f 90       	pop	r0
    12da:	0f be       	out	0x3f, r0	; 63
    12dc:	0f 90       	pop	r0
    12de:	1f 90       	pop	r1
    12e0:	18 95       	reti

000012e2 <__vector_15>:
    12e2:	1f 92       	push	r1
    12e4:	0f 92       	push	r0
    12e6:	0f b6       	in	r0, 0x3f	; 63
    12e8:	0f 92       	push	r0
    12ea:	11 24       	eor	r1, r1
    12ec:	0b b6       	in	r0, 0x3b	; 59
    12ee:	0f 92       	push	r0
    12f0:	2f 93       	push	r18
    12f2:	3f 93       	push	r19
    12f4:	4f 93       	push	r20
    12f6:	5f 93       	push	r21
    12f8:	6f 93       	push	r22
    12fa:	7f 93       	push	r23
    12fc:	8f 93       	push	r24
    12fe:	9f 93       	push	r25
    1300:	af 93       	push	r26
    1302:	bf 93       	push	r27
    1304:	ef 93       	push	r30
    1306:	ff 93       	push	r31
    1308:	e0 91 8e 21 	lds	r30, 0x218E	; 0x80218e <tc_tcc0_err_callback>
    130c:	f0 91 8f 21 	lds	r31, 0x218F	; 0x80218f <tc_tcc0_err_callback+0x1>
    1310:	30 97       	sbiw	r30, 0x00	; 0
    1312:	09 f0       	breq	.+2      	; 0x1316 <__vector_15+0x34>
    1314:	19 95       	eicall
    1316:	ff 91       	pop	r31
    1318:	ef 91       	pop	r30
    131a:	bf 91       	pop	r27
    131c:	af 91       	pop	r26
    131e:	9f 91       	pop	r25
    1320:	8f 91       	pop	r24
    1322:	7f 91       	pop	r23
    1324:	6f 91       	pop	r22
    1326:	5f 91       	pop	r21
    1328:	4f 91       	pop	r20
    132a:	3f 91       	pop	r19
    132c:	2f 91       	pop	r18
    132e:	0f 90       	pop	r0
    1330:	0b be       	out	0x3b, r0	; 59
    1332:	0f 90       	pop	r0
    1334:	0f be       	out	0x3f, r0	; 63
    1336:	0f 90       	pop	r0
    1338:	1f 90       	pop	r1
    133a:	18 95       	reti

0000133c <__vector_16>:
    133c:	1f 92       	push	r1
    133e:	0f 92       	push	r0
    1340:	0f b6       	in	r0, 0x3f	; 63
    1342:	0f 92       	push	r0
    1344:	11 24       	eor	r1, r1
    1346:	0b b6       	in	r0, 0x3b	; 59
    1348:	0f 92       	push	r0
    134a:	2f 93       	push	r18
    134c:	3f 93       	push	r19
    134e:	4f 93       	push	r20
    1350:	5f 93       	push	r21
    1352:	6f 93       	push	r22
    1354:	7f 93       	push	r23
    1356:	8f 93       	push	r24
    1358:	9f 93       	push	r25
    135a:	af 93       	push	r26
    135c:	bf 93       	push	r27
    135e:	ef 93       	push	r30
    1360:	ff 93       	push	r31
    1362:	e0 91 8c 21 	lds	r30, 0x218C	; 0x80218c <tc_tcc0_cca_callback>
    1366:	f0 91 8d 21 	lds	r31, 0x218D	; 0x80218d <tc_tcc0_cca_callback+0x1>
    136a:	30 97       	sbiw	r30, 0x00	; 0
    136c:	09 f0       	breq	.+2      	; 0x1370 <__vector_16+0x34>
    136e:	19 95       	eicall
    1370:	ff 91       	pop	r31
    1372:	ef 91       	pop	r30
    1374:	bf 91       	pop	r27
    1376:	af 91       	pop	r26
    1378:	9f 91       	pop	r25
    137a:	8f 91       	pop	r24
    137c:	7f 91       	pop	r23
    137e:	6f 91       	pop	r22
    1380:	5f 91       	pop	r21
    1382:	4f 91       	pop	r20
    1384:	3f 91       	pop	r19
    1386:	2f 91       	pop	r18
    1388:	0f 90       	pop	r0
    138a:	0b be       	out	0x3b, r0	; 59
    138c:	0f 90       	pop	r0
    138e:	0f be       	out	0x3f, r0	; 63
    1390:	0f 90       	pop	r0
    1392:	1f 90       	pop	r1
    1394:	18 95       	reti

00001396 <__vector_17>:
    1396:	1f 92       	push	r1
    1398:	0f 92       	push	r0
    139a:	0f b6       	in	r0, 0x3f	; 63
    139c:	0f 92       	push	r0
    139e:	11 24       	eor	r1, r1
    13a0:	0b b6       	in	r0, 0x3b	; 59
    13a2:	0f 92       	push	r0
    13a4:	2f 93       	push	r18
    13a6:	3f 93       	push	r19
    13a8:	4f 93       	push	r20
    13aa:	5f 93       	push	r21
    13ac:	6f 93       	push	r22
    13ae:	7f 93       	push	r23
    13b0:	8f 93       	push	r24
    13b2:	9f 93       	push	r25
    13b4:	af 93       	push	r26
    13b6:	bf 93       	push	r27
    13b8:	ef 93       	push	r30
    13ba:	ff 93       	push	r31
    13bc:	e0 91 8a 21 	lds	r30, 0x218A	; 0x80218a <tc_tcc0_ccb_callback>
    13c0:	f0 91 8b 21 	lds	r31, 0x218B	; 0x80218b <tc_tcc0_ccb_callback+0x1>
    13c4:	30 97       	sbiw	r30, 0x00	; 0
    13c6:	09 f0       	breq	.+2      	; 0x13ca <__vector_17+0x34>
    13c8:	19 95       	eicall
    13ca:	ff 91       	pop	r31
    13cc:	ef 91       	pop	r30
    13ce:	bf 91       	pop	r27
    13d0:	af 91       	pop	r26
    13d2:	9f 91       	pop	r25
    13d4:	8f 91       	pop	r24
    13d6:	7f 91       	pop	r23
    13d8:	6f 91       	pop	r22
    13da:	5f 91       	pop	r21
    13dc:	4f 91       	pop	r20
    13de:	3f 91       	pop	r19
    13e0:	2f 91       	pop	r18
    13e2:	0f 90       	pop	r0
    13e4:	0b be       	out	0x3b, r0	; 59
    13e6:	0f 90       	pop	r0
    13e8:	0f be       	out	0x3f, r0	; 63
    13ea:	0f 90       	pop	r0
    13ec:	1f 90       	pop	r1
    13ee:	18 95       	reti

000013f0 <__vector_18>:
    13f0:	1f 92       	push	r1
    13f2:	0f 92       	push	r0
    13f4:	0f b6       	in	r0, 0x3f	; 63
    13f6:	0f 92       	push	r0
    13f8:	11 24       	eor	r1, r1
    13fa:	0b b6       	in	r0, 0x3b	; 59
    13fc:	0f 92       	push	r0
    13fe:	2f 93       	push	r18
    1400:	3f 93       	push	r19
    1402:	4f 93       	push	r20
    1404:	5f 93       	push	r21
    1406:	6f 93       	push	r22
    1408:	7f 93       	push	r23
    140a:	8f 93       	push	r24
    140c:	9f 93       	push	r25
    140e:	af 93       	push	r26
    1410:	bf 93       	push	r27
    1412:	ef 93       	push	r30
    1414:	ff 93       	push	r31
    1416:	e0 91 88 21 	lds	r30, 0x2188	; 0x802188 <tc_tcc0_ccc_callback>
    141a:	f0 91 89 21 	lds	r31, 0x2189	; 0x802189 <tc_tcc0_ccc_callback+0x1>
    141e:	30 97       	sbiw	r30, 0x00	; 0
    1420:	09 f0       	breq	.+2      	; 0x1424 <__vector_18+0x34>
    1422:	19 95       	eicall
    1424:	ff 91       	pop	r31
    1426:	ef 91       	pop	r30
    1428:	bf 91       	pop	r27
    142a:	af 91       	pop	r26
    142c:	9f 91       	pop	r25
    142e:	8f 91       	pop	r24
    1430:	7f 91       	pop	r23
    1432:	6f 91       	pop	r22
    1434:	5f 91       	pop	r21
    1436:	4f 91       	pop	r20
    1438:	3f 91       	pop	r19
    143a:	2f 91       	pop	r18
    143c:	0f 90       	pop	r0
    143e:	0b be       	out	0x3b, r0	; 59
    1440:	0f 90       	pop	r0
    1442:	0f be       	out	0x3f, r0	; 63
    1444:	0f 90       	pop	r0
    1446:	1f 90       	pop	r1
    1448:	18 95       	reti

0000144a <__vector_19>:
    144a:	1f 92       	push	r1
    144c:	0f 92       	push	r0
    144e:	0f b6       	in	r0, 0x3f	; 63
    1450:	0f 92       	push	r0
    1452:	11 24       	eor	r1, r1
    1454:	0b b6       	in	r0, 0x3b	; 59
    1456:	0f 92       	push	r0
    1458:	2f 93       	push	r18
    145a:	3f 93       	push	r19
    145c:	4f 93       	push	r20
    145e:	5f 93       	push	r21
    1460:	6f 93       	push	r22
    1462:	7f 93       	push	r23
    1464:	8f 93       	push	r24
    1466:	9f 93       	push	r25
    1468:	af 93       	push	r26
    146a:	bf 93       	push	r27
    146c:	ef 93       	push	r30
    146e:	ff 93       	push	r31
    1470:	e0 91 86 21 	lds	r30, 0x2186	; 0x802186 <tc_tcc0_ccd_callback>
    1474:	f0 91 87 21 	lds	r31, 0x2187	; 0x802187 <tc_tcc0_ccd_callback+0x1>
    1478:	30 97       	sbiw	r30, 0x00	; 0
    147a:	09 f0       	breq	.+2      	; 0x147e <__vector_19+0x34>
    147c:	19 95       	eicall
    147e:	ff 91       	pop	r31
    1480:	ef 91       	pop	r30
    1482:	bf 91       	pop	r27
    1484:	af 91       	pop	r26
    1486:	9f 91       	pop	r25
    1488:	8f 91       	pop	r24
    148a:	7f 91       	pop	r23
    148c:	6f 91       	pop	r22
    148e:	5f 91       	pop	r21
    1490:	4f 91       	pop	r20
    1492:	3f 91       	pop	r19
    1494:	2f 91       	pop	r18
    1496:	0f 90       	pop	r0
    1498:	0b be       	out	0x3b, r0	; 59
    149a:	0f 90       	pop	r0
    149c:	0f be       	out	0x3f, r0	; 63
    149e:	0f 90       	pop	r0
    14a0:	1f 90       	pop	r1
    14a2:	18 95       	reti

000014a4 <__vector_20>:
    14a4:	1f 92       	push	r1
    14a6:	0f 92       	push	r0
    14a8:	0f b6       	in	r0, 0x3f	; 63
    14aa:	0f 92       	push	r0
    14ac:	11 24       	eor	r1, r1
    14ae:	0b b6       	in	r0, 0x3b	; 59
    14b0:	0f 92       	push	r0
    14b2:	2f 93       	push	r18
    14b4:	3f 93       	push	r19
    14b6:	4f 93       	push	r20
    14b8:	5f 93       	push	r21
    14ba:	6f 93       	push	r22
    14bc:	7f 93       	push	r23
    14be:	8f 93       	push	r24
    14c0:	9f 93       	push	r25
    14c2:	af 93       	push	r26
    14c4:	bf 93       	push	r27
    14c6:	ef 93       	push	r30
    14c8:	ff 93       	push	r31
    14ca:	e0 91 84 21 	lds	r30, 0x2184	; 0x802184 <tc_tcc1_ovf_callback>
    14ce:	f0 91 85 21 	lds	r31, 0x2185	; 0x802185 <tc_tcc1_ovf_callback+0x1>
    14d2:	30 97       	sbiw	r30, 0x00	; 0
    14d4:	09 f0       	breq	.+2      	; 0x14d8 <__vector_20+0x34>
    14d6:	19 95       	eicall
    14d8:	ff 91       	pop	r31
    14da:	ef 91       	pop	r30
    14dc:	bf 91       	pop	r27
    14de:	af 91       	pop	r26
    14e0:	9f 91       	pop	r25
    14e2:	8f 91       	pop	r24
    14e4:	7f 91       	pop	r23
    14e6:	6f 91       	pop	r22
    14e8:	5f 91       	pop	r21
    14ea:	4f 91       	pop	r20
    14ec:	3f 91       	pop	r19
    14ee:	2f 91       	pop	r18
    14f0:	0f 90       	pop	r0
    14f2:	0b be       	out	0x3b, r0	; 59
    14f4:	0f 90       	pop	r0
    14f6:	0f be       	out	0x3f, r0	; 63
    14f8:	0f 90       	pop	r0
    14fa:	1f 90       	pop	r1
    14fc:	18 95       	reti

000014fe <__vector_21>:
    14fe:	1f 92       	push	r1
    1500:	0f 92       	push	r0
    1502:	0f b6       	in	r0, 0x3f	; 63
    1504:	0f 92       	push	r0
    1506:	11 24       	eor	r1, r1
    1508:	0b b6       	in	r0, 0x3b	; 59
    150a:	0f 92       	push	r0
    150c:	2f 93       	push	r18
    150e:	3f 93       	push	r19
    1510:	4f 93       	push	r20
    1512:	5f 93       	push	r21
    1514:	6f 93       	push	r22
    1516:	7f 93       	push	r23
    1518:	8f 93       	push	r24
    151a:	9f 93       	push	r25
    151c:	af 93       	push	r26
    151e:	bf 93       	push	r27
    1520:	ef 93       	push	r30
    1522:	ff 93       	push	r31
    1524:	e0 91 82 21 	lds	r30, 0x2182	; 0x802182 <tc_tcc1_err_callback>
    1528:	f0 91 83 21 	lds	r31, 0x2183	; 0x802183 <tc_tcc1_err_callback+0x1>
    152c:	30 97       	sbiw	r30, 0x00	; 0
    152e:	09 f0       	breq	.+2      	; 0x1532 <__vector_21+0x34>
    1530:	19 95       	eicall
    1532:	ff 91       	pop	r31
    1534:	ef 91       	pop	r30
    1536:	bf 91       	pop	r27
    1538:	af 91       	pop	r26
    153a:	9f 91       	pop	r25
    153c:	8f 91       	pop	r24
    153e:	7f 91       	pop	r23
    1540:	6f 91       	pop	r22
    1542:	5f 91       	pop	r21
    1544:	4f 91       	pop	r20
    1546:	3f 91       	pop	r19
    1548:	2f 91       	pop	r18
    154a:	0f 90       	pop	r0
    154c:	0b be       	out	0x3b, r0	; 59
    154e:	0f 90       	pop	r0
    1550:	0f be       	out	0x3f, r0	; 63
    1552:	0f 90       	pop	r0
    1554:	1f 90       	pop	r1
    1556:	18 95       	reti

00001558 <__vector_22>:
    1558:	1f 92       	push	r1
    155a:	0f 92       	push	r0
    155c:	0f b6       	in	r0, 0x3f	; 63
    155e:	0f 92       	push	r0
    1560:	11 24       	eor	r1, r1
    1562:	0b b6       	in	r0, 0x3b	; 59
    1564:	0f 92       	push	r0
    1566:	2f 93       	push	r18
    1568:	3f 93       	push	r19
    156a:	4f 93       	push	r20
    156c:	5f 93       	push	r21
    156e:	6f 93       	push	r22
    1570:	7f 93       	push	r23
    1572:	8f 93       	push	r24
    1574:	9f 93       	push	r25
    1576:	af 93       	push	r26
    1578:	bf 93       	push	r27
    157a:	ef 93       	push	r30
    157c:	ff 93       	push	r31
    157e:	e0 91 80 21 	lds	r30, 0x2180	; 0x802180 <tc_tcc1_cca_callback>
    1582:	f0 91 81 21 	lds	r31, 0x2181	; 0x802181 <tc_tcc1_cca_callback+0x1>
    1586:	30 97       	sbiw	r30, 0x00	; 0
    1588:	09 f0       	breq	.+2      	; 0x158c <__vector_22+0x34>
    158a:	19 95       	eicall
    158c:	ff 91       	pop	r31
    158e:	ef 91       	pop	r30
    1590:	bf 91       	pop	r27
    1592:	af 91       	pop	r26
    1594:	9f 91       	pop	r25
    1596:	8f 91       	pop	r24
    1598:	7f 91       	pop	r23
    159a:	6f 91       	pop	r22
    159c:	5f 91       	pop	r21
    159e:	4f 91       	pop	r20
    15a0:	3f 91       	pop	r19
    15a2:	2f 91       	pop	r18
    15a4:	0f 90       	pop	r0
    15a6:	0b be       	out	0x3b, r0	; 59
    15a8:	0f 90       	pop	r0
    15aa:	0f be       	out	0x3f, r0	; 63
    15ac:	0f 90       	pop	r0
    15ae:	1f 90       	pop	r1
    15b0:	18 95       	reti

000015b2 <__vector_23>:
    15b2:	1f 92       	push	r1
    15b4:	0f 92       	push	r0
    15b6:	0f b6       	in	r0, 0x3f	; 63
    15b8:	0f 92       	push	r0
    15ba:	11 24       	eor	r1, r1
    15bc:	0b b6       	in	r0, 0x3b	; 59
    15be:	0f 92       	push	r0
    15c0:	2f 93       	push	r18
    15c2:	3f 93       	push	r19
    15c4:	4f 93       	push	r20
    15c6:	5f 93       	push	r21
    15c8:	6f 93       	push	r22
    15ca:	7f 93       	push	r23
    15cc:	8f 93       	push	r24
    15ce:	9f 93       	push	r25
    15d0:	af 93       	push	r26
    15d2:	bf 93       	push	r27
    15d4:	ef 93       	push	r30
    15d6:	ff 93       	push	r31
    15d8:	e0 91 7e 21 	lds	r30, 0x217E	; 0x80217e <tc_tcc1_ccb_callback>
    15dc:	f0 91 7f 21 	lds	r31, 0x217F	; 0x80217f <tc_tcc1_ccb_callback+0x1>
    15e0:	30 97       	sbiw	r30, 0x00	; 0
    15e2:	09 f0       	breq	.+2      	; 0x15e6 <__vector_23+0x34>
    15e4:	19 95       	eicall
    15e6:	ff 91       	pop	r31
    15e8:	ef 91       	pop	r30
    15ea:	bf 91       	pop	r27
    15ec:	af 91       	pop	r26
    15ee:	9f 91       	pop	r25
    15f0:	8f 91       	pop	r24
    15f2:	7f 91       	pop	r23
    15f4:	6f 91       	pop	r22
    15f6:	5f 91       	pop	r21
    15f8:	4f 91       	pop	r20
    15fa:	3f 91       	pop	r19
    15fc:	2f 91       	pop	r18
    15fe:	0f 90       	pop	r0
    1600:	0b be       	out	0x3b, r0	; 59
    1602:	0f 90       	pop	r0
    1604:	0f be       	out	0x3f, r0	; 63
    1606:	0f 90       	pop	r0
    1608:	1f 90       	pop	r1
    160a:	18 95       	reti

0000160c <__vector_77>:
    160c:	1f 92       	push	r1
    160e:	0f 92       	push	r0
    1610:	0f b6       	in	r0, 0x3f	; 63
    1612:	0f 92       	push	r0
    1614:	11 24       	eor	r1, r1
    1616:	0b b6       	in	r0, 0x3b	; 59
    1618:	0f 92       	push	r0
    161a:	2f 93       	push	r18
    161c:	3f 93       	push	r19
    161e:	4f 93       	push	r20
    1620:	5f 93       	push	r21
    1622:	6f 93       	push	r22
    1624:	7f 93       	push	r23
    1626:	8f 93       	push	r24
    1628:	9f 93       	push	r25
    162a:	af 93       	push	r26
    162c:	bf 93       	push	r27
    162e:	ef 93       	push	r30
    1630:	ff 93       	push	r31
    1632:	e0 91 7c 21 	lds	r30, 0x217C	; 0x80217c <tc_tcd0_ovf_callback>
    1636:	f0 91 7d 21 	lds	r31, 0x217D	; 0x80217d <tc_tcd0_ovf_callback+0x1>
    163a:	30 97       	sbiw	r30, 0x00	; 0
    163c:	09 f0       	breq	.+2      	; 0x1640 <__vector_77+0x34>
    163e:	19 95       	eicall
    1640:	ff 91       	pop	r31
    1642:	ef 91       	pop	r30
    1644:	bf 91       	pop	r27
    1646:	af 91       	pop	r26
    1648:	9f 91       	pop	r25
    164a:	8f 91       	pop	r24
    164c:	7f 91       	pop	r23
    164e:	6f 91       	pop	r22
    1650:	5f 91       	pop	r21
    1652:	4f 91       	pop	r20
    1654:	3f 91       	pop	r19
    1656:	2f 91       	pop	r18
    1658:	0f 90       	pop	r0
    165a:	0b be       	out	0x3b, r0	; 59
    165c:	0f 90       	pop	r0
    165e:	0f be       	out	0x3f, r0	; 63
    1660:	0f 90       	pop	r0
    1662:	1f 90       	pop	r1
    1664:	18 95       	reti

00001666 <__vector_78>:
    1666:	1f 92       	push	r1
    1668:	0f 92       	push	r0
    166a:	0f b6       	in	r0, 0x3f	; 63
    166c:	0f 92       	push	r0
    166e:	11 24       	eor	r1, r1
    1670:	0b b6       	in	r0, 0x3b	; 59
    1672:	0f 92       	push	r0
    1674:	2f 93       	push	r18
    1676:	3f 93       	push	r19
    1678:	4f 93       	push	r20
    167a:	5f 93       	push	r21
    167c:	6f 93       	push	r22
    167e:	7f 93       	push	r23
    1680:	8f 93       	push	r24
    1682:	9f 93       	push	r25
    1684:	af 93       	push	r26
    1686:	bf 93       	push	r27
    1688:	ef 93       	push	r30
    168a:	ff 93       	push	r31
    168c:	e0 91 7a 21 	lds	r30, 0x217A	; 0x80217a <tc_tcd0_err_callback>
    1690:	f0 91 7b 21 	lds	r31, 0x217B	; 0x80217b <tc_tcd0_err_callback+0x1>
    1694:	30 97       	sbiw	r30, 0x00	; 0
    1696:	09 f0       	breq	.+2      	; 0x169a <__vector_78+0x34>
    1698:	19 95       	eicall
    169a:	ff 91       	pop	r31
    169c:	ef 91       	pop	r30
    169e:	bf 91       	pop	r27
    16a0:	af 91       	pop	r26
    16a2:	9f 91       	pop	r25
    16a4:	8f 91       	pop	r24
    16a6:	7f 91       	pop	r23
    16a8:	6f 91       	pop	r22
    16aa:	5f 91       	pop	r21
    16ac:	4f 91       	pop	r20
    16ae:	3f 91       	pop	r19
    16b0:	2f 91       	pop	r18
    16b2:	0f 90       	pop	r0
    16b4:	0b be       	out	0x3b, r0	; 59
    16b6:	0f 90       	pop	r0
    16b8:	0f be       	out	0x3f, r0	; 63
    16ba:	0f 90       	pop	r0
    16bc:	1f 90       	pop	r1
    16be:	18 95       	reti

000016c0 <__vector_79>:
    16c0:	1f 92       	push	r1
    16c2:	0f 92       	push	r0
    16c4:	0f b6       	in	r0, 0x3f	; 63
    16c6:	0f 92       	push	r0
    16c8:	11 24       	eor	r1, r1
    16ca:	0b b6       	in	r0, 0x3b	; 59
    16cc:	0f 92       	push	r0
    16ce:	2f 93       	push	r18
    16d0:	3f 93       	push	r19
    16d2:	4f 93       	push	r20
    16d4:	5f 93       	push	r21
    16d6:	6f 93       	push	r22
    16d8:	7f 93       	push	r23
    16da:	8f 93       	push	r24
    16dc:	9f 93       	push	r25
    16de:	af 93       	push	r26
    16e0:	bf 93       	push	r27
    16e2:	ef 93       	push	r30
    16e4:	ff 93       	push	r31
    16e6:	e0 91 78 21 	lds	r30, 0x2178	; 0x802178 <tc_tcd0_cca_callback>
    16ea:	f0 91 79 21 	lds	r31, 0x2179	; 0x802179 <tc_tcd0_cca_callback+0x1>
    16ee:	30 97       	sbiw	r30, 0x00	; 0
    16f0:	09 f0       	breq	.+2      	; 0x16f4 <__vector_79+0x34>
    16f2:	19 95       	eicall
    16f4:	ff 91       	pop	r31
    16f6:	ef 91       	pop	r30
    16f8:	bf 91       	pop	r27
    16fa:	af 91       	pop	r26
    16fc:	9f 91       	pop	r25
    16fe:	8f 91       	pop	r24
    1700:	7f 91       	pop	r23
    1702:	6f 91       	pop	r22
    1704:	5f 91       	pop	r21
    1706:	4f 91       	pop	r20
    1708:	3f 91       	pop	r19
    170a:	2f 91       	pop	r18
    170c:	0f 90       	pop	r0
    170e:	0b be       	out	0x3b, r0	; 59
    1710:	0f 90       	pop	r0
    1712:	0f be       	out	0x3f, r0	; 63
    1714:	0f 90       	pop	r0
    1716:	1f 90       	pop	r1
    1718:	18 95       	reti

0000171a <__vector_80>:
    171a:	1f 92       	push	r1
    171c:	0f 92       	push	r0
    171e:	0f b6       	in	r0, 0x3f	; 63
    1720:	0f 92       	push	r0
    1722:	11 24       	eor	r1, r1
    1724:	0b b6       	in	r0, 0x3b	; 59
    1726:	0f 92       	push	r0
    1728:	2f 93       	push	r18
    172a:	3f 93       	push	r19
    172c:	4f 93       	push	r20
    172e:	5f 93       	push	r21
    1730:	6f 93       	push	r22
    1732:	7f 93       	push	r23
    1734:	8f 93       	push	r24
    1736:	9f 93       	push	r25
    1738:	af 93       	push	r26
    173a:	bf 93       	push	r27
    173c:	ef 93       	push	r30
    173e:	ff 93       	push	r31
    1740:	e0 91 76 21 	lds	r30, 0x2176	; 0x802176 <tc_tcd0_ccb_callback>
    1744:	f0 91 77 21 	lds	r31, 0x2177	; 0x802177 <tc_tcd0_ccb_callback+0x1>
    1748:	30 97       	sbiw	r30, 0x00	; 0
    174a:	09 f0       	breq	.+2      	; 0x174e <__vector_80+0x34>
    174c:	19 95       	eicall
    174e:	ff 91       	pop	r31
    1750:	ef 91       	pop	r30
    1752:	bf 91       	pop	r27
    1754:	af 91       	pop	r26
    1756:	9f 91       	pop	r25
    1758:	8f 91       	pop	r24
    175a:	7f 91       	pop	r23
    175c:	6f 91       	pop	r22
    175e:	5f 91       	pop	r21
    1760:	4f 91       	pop	r20
    1762:	3f 91       	pop	r19
    1764:	2f 91       	pop	r18
    1766:	0f 90       	pop	r0
    1768:	0b be       	out	0x3b, r0	; 59
    176a:	0f 90       	pop	r0
    176c:	0f be       	out	0x3f, r0	; 63
    176e:	0f 90       	pop	r0
    1770:	1f 90       	pop	r1
    1772:	18 95       	reti

00001774 <__vector_81>:
    1774:	1f 92       	push	r1
    1776:	0f 92       	push	r0
    1778:	0f b6       	in	r0, 0x3f	; 63
    177a:	0f 92       	push	r0
    177c:	11 24       	eor	r1, r1
    177e:	0b b6       	in	r0, 0x3b	; 59
    1780:	0f 92       	push	r0
    1782:	2f 93       	push	r18
    1784:	3f 93       	push	r19
    1786:	4f 93       	push	r20
    1788:	5f 93       	push	r21
    178a:	6f 93       	push	r22
    178c:	7f 93       	push	r23
    178e:	8f 93       	push	r24
    1790:	9f 93       	push	r25
    1792:	af 93       	push	r26
    1794:	bf 93       	push	r27
    1796:	ef 93       	push	r30
    1798:	ff 93       	push	r31
    179a:	e0 91 74 21 	lds	r30, 0x2174	; 0x802174 <tc_tcd0_ccc_callback>
    179e:	f0 91 75 21 	lds	r31, 0x2175	; 0x802175 <tc_tcd0_ccc_callback+0x1>
    17a2:	30 97       	sbiw	r30, 0x00	; 0
    17a4:	09 f0       	breq	.+2      	; 0x17a8 <__vector_81+0x34>
    17a6:	19 95       	eicall
    17a8:	ff 91       	pop	r31
    17aa:	ef 91       	pop	r30
    17ac:	bf 91       	pop	r27
    17ae:	af 91       	pop	r26
    17b0:	9f 91       	pop	r25
    17b2:	8f 91       	pop	r24
    17b4:	7f 91       	pop	r23
    17b6:	6f 91       	pop	r22
    17b8:	5f 91       	pop	r21
    17ba:	4f 91       	pop	r20
    17bc:	3f 91       	pop	r19
    17be:	2f 91       	pop	r18
    17c0:	0f 90       	pop	r0
    17c2:	0b be       	out	0x3b, r0	; 59
    17c4:	0f 90       	pop	r0
    17c6:	0f be       	out	0x3f, r0	; 63
    17c8:	0f 90       	pop	r0
    17ca:	1f 90       	pop	r1
    17cc:	18 95       	reti

000017ce <__vector_82>:
    17ce:	1f 92       	push	r1
    17d0:	0f 92       	push	r0
    17d2:	0f b6       	in	r0, 0x3f	; 63
    17d4:	0f 92       	push	r0
    17d6:	11 24       	eor	r1, r1
    17d8:	0b b6       	in	r0, 0x3b	; 59
    17da:	0f 92       	push	r0
    17dc:	2f 93       	push	r18
    17de:	3f 93       	push	r19
    17e0:	4f 93       	push	r20
    17e2:	5f 93       	push	r21
    17e4:	6f 93       	push	r22
    17e6:	7f 93       	push	r23
    17e8:	8f 93       	push	r24
    17ea:	9f 93       	push	r25
    17ec:	af 93       	push	r26
    17ee:	bf 93       	push	r27
    17f0:	ef 93       	push	r30
    17f2:	ff 93       	push	r31
    17f4:	e0 91 72 21 	lds	r30, 0x2172	; 0x802172 <tc_tcd0_ccd_callback>
    17f8:	f0 91 73 21 	lds	r31, 0x2173	; 0x802173 <tc_tcd0_ccd_callback+0x1>
    17fc:	30 97       	sbiw	r30, 0x00	; 0
    17fe:	09 f0       	breq	.+2      	; 0x1802 <__vector_82+0x34>
    1800:	19 95       	eicall
    1802:	ff 91       	pop	r31
    1804:	ef 91       	pop	r30
    1806:	bf 91       	pop	r27
    1808:	af 91       	pop	r26
    180a:	9f 91       	pop	r25
    180c:	8f 91       	pop	r24
    180e:	7f 91       	pop	r23
    1810:	6f 91       	pop	r22
    1812:	5f 91       	pop	r21
    1814:	4f 91       	pop	r20
    1816:	3f 91       	pop	r19
    1818:	2f 91       	pop	r18
    181a:	0f 90       	pop	r0
    181c:	0b be       	out	0x3b, r0	; 59
    181e:	0f 90       	pop	r0
    1820:	0f be       	out	0x3f, r0	; 63
    1822:	0f 90       	pop	r0
    1824:	1f 90       	pop	r1
    1826:	18 95       	reti

00001828 <__vector_83>:
    1828:	1f 92       	push	r1
    182a:	0f 92       	push	r0
    182c:	0f b6       	in	r0, 0x3f	; 63
    182e:	0f 92       	push	r0
    1830:	11 24       	eor	r1, r1
    1832:	0b b6       	in	r0, 0x3b	; 59
    1834:	0f 92       	push	r0
    1836:	2f 93       	push	r18
    1838:	3f 93       	push	r19
    183a:	4f 93       	push	r20
    183c:	5f 93       	push	r21
    183e:	6f 93       	push	r22
    1840:	7f 93       	push	r23
    1842:	8f 93       	push	r24
    1844:	9f 93       	push	r25
    1846:	af 93       	push	r26
    1848:	bf 93       	push	r27
    184a:	ef 93       	push	r30
    184c:	ff 93       	push	r31
    184e:	e0 91 70 21 	lds	r30, 0x2170	; 0x802170 <tc_tcd1_ovf_callback>
    1852:	f0 91 71 21 	lds	r31, 0x2171	; 0x802171 <tc_tcd1_ovf_callback+0x1>
    1856:	30 97       	sbiw	r30, 0x00	; 0
    1858:	09 f0       	breq	.+2      	; 0x185c <__vector_83+0x34>
    185a:	19 95       	eicall
    185c:	ff 91       	pop	r31
    185e:	ef 91       	pop	r30
    1860:	bf 91       	pop	r27
    1862:	af 91       	pop	r26
    1864:	9f 91       	pop	r25
    1866:	8f 91       	pop	r24
    1868:	7f 91       	pop	r23
    186a:	6f 91       	pop	r22
    186c:	5f 91       	pop	r21
    186e:	4f 91       	pop	r20
    1870:	3f 91       	pop	r19
    1872:	2f 91       	pop	r18
    1874:	0f 90       	pop	r0
    1876:	0b be       	out	0x3b, r0	; 59
    1878:	0f 90       	pop	r0
    187a:	0f be       	out	0x3f, r0	; 63
    187c:	0f 90       	pop	r0
    187e:	1f 90       	pop	r1
    1880:	18 95       	reti

00001882 <__vector_84>:
    1882:	1f 92       	push	r1
    1884:	0f 92       	push	r0
    1886:	0f b6       	in	r0, 0x3f	; 63
    1888:	0f 92       	push	r0
    188a:	11 24       	eor	r1, r1
    188c:	0b b6       	in	r0, 0x3b	; 59
    188e:	0f 92       	push	r0
    1890:	2f 93       	push	r18
    1892:	3f 93       	push	r19
    1894:	4f 93       	push	r20
    1896:	5f 93       	push	r21
    1898:	6f 93       	push	r22
    189a:	7f 93       	push	r23
    189c:	8f 93       	push	r24
    189e:	9f 93       	push	r25
    18a0:	af 93       	push	r26
    18a2:	bf 93       	push	r27
    18a4:	ef 93       	push	r30
    18a6:	ff 93       	push	r31
    18a8:	e0 91 6e 21 	lds	r30, 0x216E	; 0x80216e <tc_tcd1_err_callback>
    18ac:	f0 91 6f 21 	lds	r31, 0x216F	; 0x80216f <tc_tcd1_err_callback+0x1>
    18b0:	30 97       	sbiw	r30, 0x00	; 0
    18b2:	09 f0       	breq	.+2      	; 0x18b6 <__vector_84+0x34>
    18b4:	19 95       	eicall
    18b6:	ff 91       	pop	r31
    18b8:	ef 91       	pop	r30
    18ba:	bf 91       	pop	r27
    18bc:	af 91       	pop	r26
    18be:	9f 91       	pop	r25
    18c0:	8f 91       	pop	r24
    18c2:	7f 91       	pop	r23
    18c4:	6f 91       	pop	r22
    18c6:	5f 91       	pop	r21
    18c8:	4f 91       	pop	r20
    18ca:	3f 91       	pop	r19
    18cc:	2f 91       	pop	r18
    18ce:	0f 90       	pop	r0
    18d0:	0b be       	out	0x3b, r0	; 59
    18d2:	0f 90       	pop	r0
    18d4:	0f be       	out	0x3f, r0	; 63
    18d6:	0f 90       	pop	r0
    18d8:	1f 90       	pop	r1
    18da:	18 95       	reti

000018dc <__vector_85>:
    18dc:	1f 92       	push	r1
    18de:	0f 92       	push	r0
    18e0:	0f b6       	in	r0, 0x3f	; 63
    18e2:	0f 92       	push	r0
    18e4:	11 24       	eor	r1, r1
    18e6:	0b b6       	in	r0, 0x3b	; 59
    18e8:	0f 92       	push	r0
    18ea:	2f 93       	push	r18
    18ec:	3f 93       	push	r19
    18ee:	4f 93       	push	r20
    18f0:	5f 93       	push	r21
    18f2:	6f 93       	push	r22
    18f4:	7f 93       	push	r23
    18f6:	8f 93       	push	r24
    18f8:	9f 93       	push	r25
    18fa:	af 93       	push	r26
    18fc:	bf 93       	push	r27
    18fe:	ef 93       	push	r30
    1900:	ff 93       	push	r31
    1902:	e0 91 6c 21 	lds	r30, 0x216C	; 0x80216c <tc_tcd1_cca_callback>
    1906:	f0 91 6d 21 	lds	r31, 0x216D	; 0x80216d <tc_tcd1_cca_callback+0x1>
    190a:	30 97       	sbiw	r30, 0x00	; 0
    190c:	09 f0       	breq	.+2      	; 0x1910 <__vector_85+0x34>
    190e:	19 95       	eicall
    1910:	ff 91       	pop	r31
    1912:	ef 91       	pop	r30
    1914:	bf 91       	pop	r27
    1916:	af 91       	pop	r26
    1918:	9f 91       	pop	r25
    191a:	8f 91       	pop	r24
    191c:	7f 91       	pop	r23
    191e:	6f 91       	pop	r22
    1920:	5f 91       	pop	r21
    1922:	4f 91       	pop	r20
    1924:	3f 91       	pop	r19
    1926:	2f 91       	pop	r18
    1928:	0f 90       	pop	r0
    192a:	0b be       	out	0x3b, r0	; 59
    192c:	0f 90       	pop	r0
    192e:	0f be       	out	0x3f, r0	; 63
    1930:	0f 90       	pop	r0
    1932:	1f 90       	pop	r1
    1934:	18 95       	reti

00001936 <__vector_86>:
    1936:	1f 92       	push	r1
    1938:	0f 92       	push	r0
    193a:	0f b6       	in	r0, 0x3f	; 63
    193c:	0f 92       	push	r0
    193e:	11 24       	eor	r1, r1
    1940:	0b b6       	in	r0, 0x3b	; 59
    1942:	0f 92       	push	r0
    1944:	2f 93       	push	r18
    1946:	3f 93       	push	r19
    1948:	4f 93       	push	r20
    194a:	5f 93       	push	r21
    194c:	6f 93       	push	r22
    194e:	7f 93       	push	r23
    1950:	8f 93       	push	r24
    1952:	9f 93       	push	r25
    1954:	af 93       	push	r26
    1956:	bf 93       	push	r27
    1958:	ef 93       	push	r30
    195a:	ff 93       	push	r31
    195c:	e0 91 6a 21 	lds	r30, 0x216A	; 0x80216a <tc_tcd1_ccb_callback>
    1960:	f0 91 6b 21 	lds	r31, 0x216B	; 0x80216b <tc_tcd1_ccb_callback+0x1>
    1964:	30 97       	sbiw	r30, 0x00	; 0
    1966:	09 f0       	breq	.+2      	; 0x196a <__vector_86+0x34>
    1968:	19 95       	eicall
    196a:	ff 91       	pop	r31
    196c:	ef 91       	pop	r30
    196e:	bf 91       	pop	r27
    1970:	af 91       	pop	r26
    1972:	9f 91       	pop	r25
    1974:	8f 91       	pop	r24
    1976:	7f 91       	pop	r23
    1978:	6f 91       	pop	r22
    197a:	5f 91       	pop	r21
    197c:	4f 91       	pop	r20
    197e:	3f 91       	pop	r19
    1980:	2f 91       	pop	r18
    1982:	0f 90       	pop	r0
    1984:	0b be       	out	0x3b, r0	; 59
    1986:	0f 90       	pop	r0
    1988:	0f be       	out	0x3f, r0	; 63
    198a:	0f 90       	pop	r0
    198c:	1f 90       	pop	r1
    198e:	18 95       	reti

00001990 <__vector_47>:
    1990:	1f 92       	push	r1
    1992:	0f 92       	push	r0
    1994:	0f b6       	in	r0, 0x3f	; 63
    1996:	0f 92       	push	r0
    1998:	11 24       	eor	r1, r1
    199a:	0b b6       	in	r0, 0x3b	; 59
    199c:	0f 92       	push	r0
    199e:	2f 93       	push	r18
    19a0:	3f 93       	push	r19
    19a2:	4f 93       	push	r20
    19a4:	5f 93       	push	r21
    19a6:	6f 93       	push	r22
    19a8:	7f 93       	push	r23
    19aa:	8f 93       	push	r24
    19ac:	9f 93       	push	r25
    19ae:	af 93       	push	r26
    19b0:	bf 93       	push	r27
    19b2:	ef 93       	push	r30
    19b4:	ff 93       	push	r31
    19b6:	e0 91 68 21 	lds	r30, 0x2168	; 0x802168 <tc_tce0_ovf_callback>
    19ba:	f0 91 69 21 	lds	r31, 0x2169	; 0x802169 <tc_tce0_ovf_callback+0x1>
    19be:	30 97       	sbiw	r30, 0x00	; 0
    19c0:	09 f0       	breq	.+2      	; 0x19c4 <__vector_47+0x34>
    19c2:	19 95       	eicall
    19c4:	ff 91       	pop	r31
    19c6:	ef 91       	pop	r30
    19c8:	bf 91       	pop	r27
    19ca:	af 91       	pop	r26
    19cc:	9f 91       	pop	r25
    19ce:	8f 91       	pop	r24
    19d0:	7f 91       	pop	r23
    19d2:	6f 91       	pop	r22
    19d4:	5f 91       	pop	r21
    19d6:	4f 91       	pop	r20
    19d8:	3f 91       	pop	r19
    19da:	2f 91       	pop	r18
    19dc:	0f 90       	pop	r0
    19de:	0b be       	out	0x3b, r0	; 59
    19e0:	0f 90       	pop	r0
    19e2:	0f be       	out	0x3f, r0	; 63
    19e4:	0f 90       	pop	r0
    19e6:	1f 90       	pop	r1
    19e8:	18 95       	reti

000019ea <__vector_48>:
    19ea:	1f 92       	push	r1
    19ec:	0f 92       	push	r0
    19ee:	0f b6       	in	r0, 0x3f	; 63
    19f0:	0f 92       	push	r0
    19f2:	11 24       	eor	r1, r1
    19f4:	0b b6       	in	r0, 0x3b	; 59
    19f6:	0f 92       	push	r0
    19f8:	2f 93       	push	r18
    19fa:	3f 93       	push	r19
    19fc:	4f 93       	push	r20
    19fe:	5f 93       	push	r21
    1a00:	6f 93       	push	r22
    1a02:	7f 93       	push	r23
    1a04:	8f 93       	push	r24
    1a06:	9f 93       	push	r25
    1a08:	af 93       	push	r26
    1a0a:	bf 93       	push	r27
    1a0c:	ef 93       	push	r30
    1a0e:	ff 93       	push	r31
    1a10:	e0 91 66 21 	lds	r30, 0x2166	; 0x802166 <tc_tce0_err_callback>
    1a14:	f0 91 67 21 	lds	r31, 0x2167	; 0x802167 <tc_tce0_err_callback+0x1>
    1a18:	30 97       	sbiw	r30, 0x00	; 0
    1a1a:	09 f0       	breq	.+2      	; 0x1a1e <__vector_48+0x34>
    1a1c:	19 95       	eicall
    1a1e:	ff 91       	pop	r31
    1a20:	ef 91       	pop	r30
    1a22:	bf 91       	pop	r27
    1a24:	af 91       	pop	r26
    1a26:	9f 91       	pop	r25
    1a28:	8f 91       	pop	r24
    1a2a:	7f 91       	pop	r23
    1a2c:	6f 91       	pop	r22
    1a2e:	5f 91       	pop	r21
    1a30:	4f 91       	pop	r20
    1a32:	3f 91       	pop	r19
    1a34:	2f 91       	pop	r18
    1a36:	0f 90       	pop	r0
    1a38:	0b be       	out	0x3b, r0	; 59
    1a3a:	0f 90       	pop	r0
    1a3c:	0f be       	out	0x3f, r0	; 63
    1a3e:	0f 90       	pop	r0
    1a40:	1f 90       	pop	r1
    1a42:	18 95       	reti

00001a44 <__vector_49>:
    1a44:	1f 92       	push	r1
    1a46:	0f 92       	push	r0
    1a48:	0f b6       	in	r0, 0x3f	; 63
    1a4a:	0f 92       	push	r0
    1a4c:	11 24       	eor	r1, r1
    1a4e:	0b b6       	in	r0, 0x3b	; 59
    1a50:	0f 92       	push	r0
    1a52:	2f 93       	push	r18
    1a54:	3f 93       	push	r19
    1a56:	4f 93       	push	r20
    1a58:	5f 93       	push	r21
    1a5a:	6f 93       	push	r22
    1a5c:	7f 93       	push	r23
    1a5e:	8f 93       	push	r24
    1a60:	9f 93       	push	r25
    1a62:	af 93       	push	r26
    1a64:	bf 93       	push	r27
    1a66:	ef 93       	push	r30
    1a68:	ff 93       	push	r31
    1a6a:	e0 91 64 21 	lds	r30, 0x2164	; 0x802164 <tc_tce0_cca_callback>
    1a6e:	f0 91 65 21 	lds	r31, 0x2165	; 0x802165 <tc_tce0_cca_callback+0x1>
    1a72:	30 97       	sbiw	r30, 0x00	; 0
    1a74:	09 f0       	breq	.+2      	; 0x1a78 <__vector_49+0x34>
    1a76:	19 95       	eicall
    1a78:	ff 91       	pop	r31
    1a7a:	ef 91       	pop	r30
    1a7c:	bf 91       	pop	r27
    1a7e:	af 91       	pop	r26
    1a80:	9f 91       	pop	r25
    1a82:	8f 91       	pop	r24
    1a84:	7f 91       	pop	r23
    1a86:	6f 91       	pop	r22
    1a88:	5f 91       	pop	r21
    1a8a:	4f 91       	pop	r20
    1a8c:	3f 91       	pop	r19
    1a8e:	2f 91       	pop	r18
    1a90:	0f 90       	pop	r0
    1a92:	0b be       	out	0x3b, r0	; 59
    1a94:	0f 90       	pop	r0
    1a96:	0f be       	out	0x3f, r0	; 63
    1a98:	0f 90       	pop	r0
    1a9a:	1f 90       	pop	r1
    1a9c:	18 95       	reti

00001a9e <__vector_50>:
    1a9e:	1f 92       	push	r1
    1aa0:	0f 92       	push	r0
    1aa2:	0f b6       	in	r0, 0x3f	; 63
    1aa4:	0f 92       	push	r0
    1aa6:	11 24       	eor	r1, r1
    1aa8:	0b b6       	in	r0, 0x3b	; 59
    1aaa:	0f 92       	push	r0
    1aac:	2f 93       	push	r18
    1aae:	3f 93       	push	r19
    1ab0:	4f 93       	push	r20
    1ab2:	5f 93       	push	r21
    1ab4:	6f 93       	push	r22
    1ab6:	7f 93       	push	r23
    1ab8:	8f 93       	push	r24
    1aba:	9f 93       	push	r25
    1abc:	af 93       	push	r26
    1abe:	bf 93       	push	r27
    1ac0:	ef 93       	push	r30
    1ac2:	ff 93       	push	r31
    1ac4:	e0 91 62 21 	lds	r30, 0x2162	; 0x802162 <tc_tce0_ccb_callback>
    1ac8:	f0 91 63 21 	lds	r31, 0x2163	; 0x802163 <tc_tce0_ccb_callback+0x1>
    1acc:	30 97       	sbiw	r30, 0x00	; 0
    1ace:	09 f0       	breq	.+2      	; 0x1ad2 <__vector_50+0x34>
    1ad0:	19 95       	eicall
    1ad2:	ff 91       	pop	r31
    1ad4:	ef 91       	pop	r30
    1ad6:	bf 91       	pop	r27
    1ad8:	af 91       	pop	r26
    1ada:	9f 91       	pop	r25
    1adc:	8f 91       	pop	r24
    1ade:	7f 91       	pop	r23
    1ae0:	6f 91       	pop	r22
    1ae2:	5f 91       	pop	r21
    1ae4:	4f 91       	pop	r20
    1ae6:	3f 91       	pop	r19
    1ae8:	2f 91       	pop	r18
    1aea:	0f 90       	pop	r0
    1aec:	0b be       	out	0x3b, r0	; 59
    1aee:	0f 90       	pop	r0
    1af0:	0f be       	out	0x3f, r0	; 63
    1af2:	0f 90       	pop	r0
    1af4:	1f 90       	pop	r1
    1af6:	18 95       	reti

00001af8 <__vector_51>:
    1af8:	1f 92       	push	r1
    1afa:	0f 92       	push	r0
    1afc:	0f b6       	in	r0, 0x3f	; 63
    1afe:	0f 92       	push	r0
    1b00:	11 24       	eor	r1, r1
    1b02:	0b b6       	in	r0, 0x3b	; 59
    1b04:	0f 92       	push	r0
    1b06:	2f 93       	push	r18
    1b08:	3f 93       	push	r19
    1b0a:	4f 93       	push	r20
    1b0c:	5f 93       	push	r21
    1b0e:	6f 93       	push	r22
    1b10:	7f 93       	push	r23
    1b12:	8f 93       	push	r24
    1b14:	9f 93       	push	r25
    1b16:	af 93       	push	r26
    1b18:	bf 93       	push	r27
    1b1a:	ef 93       	push	r30
    1b1c:	ff 93       	push	r31
    1b1e:	e0 91 60 21 	lds	r30, 0x2160	; 0x802160 <tc_tce0_ccc_callback>
    1b22:	f0 91 61 21 	lds	r31, 0x2161	; 0x802161 <tc_tce0_ccc_callback+0x1>
    1b26:	30 97       	sbiw	r30, 0x00	; 0
    1b28:	09 f0       	breq	.+2      	; 0x1b2c <__vector_51+0x34>
    1b2a:	19 95       	eicall
    1b2c:	ff 91       	pop	r31
    1b2e:	ef 91       	pop	r30
    1b30:	bf 91       	pop	r27
    1b32:	af 91       	pop	r26
    1b34:	9f 91       	pop	r25
    1b36:	8f 91       	pop	r24
    1b38:	7f 91       	pop	r23
    1b3a:	6f 91       	pop	r22
    1b3c:	5f 91       	pop	r21
    1b3e:	4f 91       	pop	r20
    1b40:	3f 91       	pop	r19
    1b42:	2f 91       	pop	r18
    1b44:	0f 90       	pop	r0
    1b46:	0b be       	out	0x3b, r0	; 59
    1b48:	0f 90       	pop	r0
    1b4a:	0f be       	out	0x3f, r0	; 63
    1b4c:	0f 90       	pop	r0
    1b4e:	1f 90       	pop	r1
    1b50:	18 95       	reti

00001b52 <__vector_52>:
    1b52:	1f 92       	push	r1
    1b54:	0f 92       	push	r0
    1b56:	0f b6       	in	r0, 0x3f	; 63
    1b58:	0f 92       	push	r0
    1b5a:	11 24       	eor	r1, r1
    1b5c:	0b b6       	in	r0, 0x3b	; 59
    1b5e:	0f 92       	push	r0
    1b60:	2f 93       	push	r18
    1b62:	3f 93       	push	r19
    1b64:	4f 93       	push	r20
    1b66:	5f 93       	push	r21
    1b68:	6f 93       	push	r22
    1b6a:	7f 93       	push	r23
    1b6c:	8f 93       	push	r24
    1b6e:	9f 93       	push	r25
    1b70:	af 93       	push	r26
    1b72:	bf 93       	push	r27
    1b74:	ef 93       	push	r30
    1b76:	ff 93       	push	r31
    1b78:	e0 91 5e 21 	lds	r30, 0x215E	; 0x80215e <tc_tce0_ccd_callback>
    1b7c:	f0 91 5f 21 	lds	r31, 0x215F	; 0x80215f <tc_tce0_ccd_callback+0x1>
    1b80:	30 97       	sbiw	r30, 0x00	; 0
    1b82:	09 f0       	breq	.+2      	; 0x1b86 <__vector_52+0x34>
    1b84:	19 95       	eicall
    1b86:	ff 91       	pop	r31
    1b88:	ef 91       	pop	r30
    1b8a:	bf 91       	pop	r27
    1b8c:	af 91       	pop	r26
    1b8e:	9f 91       	pop	r25
    1b90:	8f 91       	pop	r24
    1b92:	7f 91       	pop	r23
    1b94:	6f 91       	pop	r22
    1b96:	5f 91       	pop	r21
    1b98:	4f 91       	pop	r20
    1b9a:	3f 91       	pop	r19
    1b9c:	2f 91       	pop	r18
    1b9e:	0f 90       	pop	r0
    1ba0:	0b be       	out	0x3b, r0	; 59
    1ba2:	0f 90       	pop	r0
    1ba4:	0f be       	out	0x3f, r0	; 63
    1ba6:	0f 90       	pop	r0
    1ba8:	1f 90       	pop	r1
    1baa:	18 95       	reti

00001bac <__vector_53>:
    1bac:	1f 92       	push	r1
    1bae:	0f 92       	push	r0
    1bb0:	0f b6       	in	r0, 0x3f	; 63
    1bb2:	0f 92       	push	r0
    1bb4:	11 24       	eor	r1, r1
    1bb6:	0b b6       	in	r0, 0x3b	; 59
    1bb8:	0f 92       	push	r0
    1bba:	2f 93       	push	r18
    1bbc:	3f 93       	push	r19
    1bbe:	4f 93       	push	r20
    1bc0:	5f 93       	push	r21
    1bc2:	6f 93       	push	r22
    1bc4:	7f 93       	push	r23
    1bc6:	8f 93       	push	r24
    1bc8:	9f 93       	push	r25
    1bca:	af 93       	push	r26
    1bcc:	bf 93       	push	r27
    1bce:	ef 93       	push	r30
    1bd0:	ff 93       	push	r31
    1bd2:	e0 91 5c 21 	lds	r30, 0x215C	; 0x80215c <tc_tce1_ovf_callback>
    1bd6:	f0 91 5d 21 	lds	r31, 0x215D	; 0x80215d <tc_tce1_ovf_callback+0x1>
    1bda:	30 97       	sbiw	r30, 0x00	; 0
    1bdc:	09 f0       	breq	.+2      	; 0x1be0 <__vector_53+0x34>
    1bde:	19 95       	eicall
    1be0:	ff 91       	pop	r31
    1be2:	ef 91       	pop	r30
    1be4:	bf 91       	pop	r27
    1be6:	af 91       	pop	r26
    1be8:	9f 91       	pop	r25
    1bea:	8f 91       	pop	r24
    1bec:	7f 91       	pop	r23
    1bee:	6f 91       	pop	r22
    1bf0:	5f 91       	pop	r21
    1bf2:	4f 91       	pop	r20
    1bf4:	3f 91       	pop	r19
    1bf6:	2f 91       	pop	r18
    1bf8:	0f 90       	pop	r0
    1bfa:	0b be       	out	0x3b, r0	; 59
    1bfc:	0f 90       	pop	r0
    1bfe:	0f be       	out	0x3f, r0	; 63
    1c00:	0f 90       	pop	r0
    1c02:	1f 90       	pop	r1
    1c04:	18 95       	reti

00001c06 <__vector_54>:
    1c06:	1f 92       	push	r1
    1c08:	0f 92       	push	r0
    1c0a:	0f b6       	in	r0, 0x3f	; 63
    1c0c:	0f 92       	push	r0
    1c0e:	11 24       	eor	r1, r1
    1c10:	0b b6       	in	r0, 0x3b	; 59
    1c12:	0f 92       	push	r0
    1c14:	2f 93       	push	r18
    1c16:	3f 93       	push	r19
    1c18:	4f 93       	push	r20
    1c1a:	5f 93       	push	r21
    1c1c:	6f 93       	push	r22
    1c1e:	7f 93       	push	r23
    1c20:	8f 93       	push	r24
    1c22:	9f 93       	push	r25
    1c24:	af 93       	push	r26
    1c26:	bf 93       	push	r27
    1c28:	ef 93       	push	r30
    1c2a:	ff 93       	push	r31
    1c2c:	e0 91 5a 21 	lds	r30, 0x215A	; 0x80215a <tc_tce1_err_callback>
    1c30:	f0 91 5b 21 	lds	r31, 0x215B	; 0x80215b <tc_tce1_err_callback+0x1>
    1c34:	30 97       	sbiw	r30, 0x00	; 0
    1c36:	09 f0       	breq	.+2      	; 0x1c3a <__vector_54+0x34>
    1c38:	19 95       	eicall
    1c3a:	ff 91       	pop	r31
    1c3c:	ef 91       	pop	r30
    1c3e:	bf 91       	pop	r27
    1c40:	af 91       	pop	r26
    1c42:	9f 91       	pop	r25
    1c44:	8f 91       	pop	r24
    1c46:	7f 91       	pop	r23
    1c48:	6f 91       	pop	r22
    1c4a:	5f 91       	pop	r21
    1c4c:	4f 91       	pop	r20
    1c4e:	3f 91       	pop	r19
    1c50:	2f 91       	pop	r18
    1c52:	0f 90       	pop	r0
    1c54:	0b be       	out	0x3b, r0	; 59
    1c56:	0f 90       	pop	r0
    1c58:	0f be       	out	0x3f, r0	; 63
    1c5a:	0f 90       	pop	r0
    1c5c:	1f 90       	pop	r1
    1c5e:	18 95       	reti

00001c60 <__vector_56>:
    1c60:	1f 92       	push	r1
    1c62:	0f 92       	push	r0
    1c64:	0f b6       	in	r0, 0x3f	; 63
    1c66:	0f 92       	push	r0
    1c68:	11 24       	eor	r1, r1
    1c6a:	0b b6       	in	r0, 0x3b	; 59
    1c6c:	0f 92       	push	r0
    1c6e:	2f 93       	push	r18
    1c70:	3f 93       	push	r19
    1c72:	4f 93       	push	r20
    1c74:	5f 93       	push	r21
    1c76:	6f 93       	push	r22
    1c78:	7f 93       	push	r23
    1c7a:	8f 93       	push	r24
    1c7c:	9f 93       	push	r25
    1c7e:	af 93       	push	r26
    1c80:	bf 93       	push	r27
    1c82:	ef 93       	push	r30
    1c84:	ff 93       	push	r31
    1c86:	e0 91 58 21 	lds	r30, 0x2158	; 0x802158 <tc_tce1_ccb_callback>
    1c8a:	f0 91 59 21 	lds	r31, 0x2159	; 0x802159 <tc_tce1_ccb_callback+0x1>
    1c8e:	30 97       	sbiw	r30, 0x00	; 0
    1c90:	09 f0       	breq	.+2      	; 0x1c94 <__vector_56+0x34>
    1c92:	19 95       	eicall
    1c94:	ff 91       	pop	r31
    1c96:	ef 91       	pop	r30
    1c98:	bf 91       	pop	r27
    1c9a:	af 91       	pop	r26
    1c9c:	9f 91       	pop	r25
    1c9e:	8f 91       	pop	r24
    1ca0:	7f 91       	pop	r23
    1ca2:	6f 91       	pop	r22
    1ca4:	5f 91       	pop	r21
    1ca6:	4f 91       	pop	r20
    1ca8:	3f 91       	pop	r19
    1caa:	2f 91       	pop	r18
    1cac:	0f 90       	pop	r0
    1cae:	0b be       	out	0x3b, r0	; 59
    1cb0:	0f 90       	pop	r0
    1cb2:	0f be       	out	0x3f, r0	; 63
    1cb4:	0f 90       	pop	r0
    1cb6:	1f 90       	pop	r1
    1cb8:	18 95       	reti

00001cba <__vector_108>:
    1cba:	1f 92       	push	r1
    1cbc:	0f 92       	push	r0
    1cbe:	0f b6       	in	r0, 0x3f	; 63
    1cc0:	0f 92       	push	r0
    1cc2:	11 24       	eor	r1, r1
    1cc4:	0b b6       	in	r0, 0x3b	; 59
    1cc6:	0f 92       	push	r0
    1cc8:	2f 93       	push	r18
    1cca:	3f 93       	push	r19
    1ccc:	4f 93       	push	r20
    1cce:	5f 93       	push	r21
    1cd0:	6f 93       	push	r22
    1cd2:	7f 93       	push	r23
    1cd4:	8f 93       	push	r24
    1cd6:	9f 93       	push	r25
    1cd8:	af 93       	push	r26
    1cda:	bf 93       	push	r27
    1cdc:	ef 93       	push	r30
    1cde:	ff 93       	push	r31
    1ce0:	e0 91 56 21 	lds	r30, 0x2156	; 0x802156 <tc_tcf0_ovf_callback>
    1ce4:	f0 91 57 21 	lds	r31, 0x2157	; 0x802157 <tc_tcf0_ovf_callback+0x1>
    1ce8:	30 97       	sbiw	r30, 0x00	; 0
    1cea:	09 f0       	breq	.+2      	; 0x1cee <__vector_108+0x34>
    1cec:	19 95       	eicall
    1cee:	ff 91       	pop	r31
    1cf0:	ef 91       	pop	r30
    1cf2:	bf 91       	pop	r27
    1cf4:	af 91       	pop	r26
    1cf6:	9f 91       	pop	r25
    1cf8:	8f 91       	pop	r24
    1cfa:	7f 91       	pop	r23
    1cfc:	6f 91       	pop	r22
    1cfe:	5f 91       	pop	r21
    1d00:	4f 91       	pop	r20
    1d02:	3f 91       	pop	r19
    1d04:	2f 91       	pop	r18
    1d06:	0f 90       	pop	r0
    1d08:	0b be       	out	0x3b, r0	; 59
    1d0a:	0f 90       	pop	r0
    1d0c:	0f be       	out	0x3f, r0	; 63
    1d0e:	0f 90       	pop	r0
    1d10:	1f 90       	pop	r1
    1d12:	18 95       	reti

00001d14 <__vector_109>:
    1d14:	1f 92       	push	r1
    1d16:	0f 92       	push	r0
    1d18:	0f b6       	in	r0, 0x3f	; 63
    1d1a:	0f 92       	push	r0
    1d1c:	11 24       	eor	r1, r1
    1d1e:	0b b6       	in	r0, 0x3b	; 59
    1d20:	0f 92       	push	r0
    1d22:	2f 93       	push	r18
    1d24:	3f 93       	push	r19
    1d26:	4f 93       	push	r20
    1d28:	5f 93       	push	r21
    1d2a:	6f 93       	push	r22
    1d2c:	7f 93       	push	r23
    1d2e:	8f 93       	push	r24
    1d30:	9f 93       	push	r25
    1d32:	af 93       	push	r26
    1d34:	bf 93       	push	r27
    1d36:	ef 93       	push	r30
    1d38:	ff 93       	push	r31
    1d3a:	e0 91 54 21 	lds	r30, 0x2154	; 0x802154 <tc_tcf0_err_callback>
    1d3e:	f0 91 55 21 	lds	r31, 0x2155	; 0x802155 <tc_tcf0_err_callback+0x1>
    1d42:	30 97       	sbiw	r30, 0x00	; 0
    1d44:	09 f0       	breq	.+2      	; 0x1d48 <__vector_109+0x34>
    1d46:	19 95       	eicall
    1d48:	ff 91       	pop	r31
    1d4a:	ef 91       	pop	r30
    1d4c:	bf 91       	pop	r27
    1d4e:	af 91       	pop	r26
    1d50:	9f 91       	pop	r25
    1d52:	8f 91       	pop	r24
    1d54:	7f 91       	pop	r23
    1d56:	6f 91       	pop	r22
    1d58:	5f 91       	pop	r21
    1d5a:	4f 91       	pop	r20
    1d5c:	3f 91       	pop	r19
    1d5e:	2f 91       	pop	r18
    1d60:	0f 90       	pop	r0
    1d62:	0b be       	out	0x3b, r0	; 59
    1d64:	0f 90       	pop	r0
    1d66:	0f be       	out	0x3f, r0	; 63
    1d68:	0f 90       	pop	r0
    1d6a:	1f 90       	pop	r1
    1d6c:	18 95       	reti

00001d6e <__vector_110>:
    1d6e:	1f 92       	push	r1
    1d70:	0f 92       	push	r0
    1d72:	0f b6       	in	r0, 0x3f	; 63
    1d74:	0f 92       	push	r0
    1d76:	11 24       	eor	r1, r1
    1d78:	0b b6       	in	r0, 0x3b	; 59
    1d7a:	0f 92       	push	r0
    1d7c:	2f 93       	push	r18
    1d7e:	3f 93       	push	r19
    1d80:	4f 93       	push	r20
    1d82:	5f 93       	push	r21
    1d84:	6f 93       	push	r22
    1d86:	7f 93       	push	r23
    1d88:	8f 93       	push	r24
    1d8a:	9f 93       	push	r25
    1d8c:	af 93       	push	r26
    1d8e:	bf 93       	push	r27
    1d90:	ef 93       	push	r30
    1d92:	ff 93       	push	r31
    1d94:	e0 91 52 21 	lds	r30, 0x2152	; 0x802152 <tc_tcf0_cca_callback>
    1d98:	f0 91 53 21 	lds	r31, 0x2153	; 0x802153 <tc_tcf0_cca_callback+0x1>
    1d9c:	30 97       	sbiw	r30, 0x00	; 0
    1d9e:	09 f0       	breq	.+2      	; 0x1da2 <__vector_110+0x34>
    1da0:	19 95       	eicall
    1da2:	ff 91       	pop	r31
    1da4:	ef 91       	pop	r30
    1da6:	bf 91       	pop	r27
    1da8:	af 91       	pop	r26
    1daa:	9f 91       	pop	r25
    1dac:	8f 91       	pop	r24
    1dae:	7f 91       	pop	r23
    1db0:	6f 91       	pop	r22
    1db2:	5f 91       	pop	r21
    1db4:	4f 91       	pop	r20
    1db6:	3f 91       	pop	r19
    1db8:	2f 91       	pop	r18
    1dba:	0f 90       	pop	r0
    1dbc:	0b be       	out	0x3b, r0	; 59
    1dbe:	0f 90       	pop	r0
    1dc0:	0f be       	out	0x3f, r0	; 63
    1dc2:	0f 90       	pop	r0
    1dc4:	1f 90       	pop	r1
    1dc6:	18 95       	reti

00001dc8 <__vector_111>:
    1dc8:	1f 92       	push	r1
    1dca:	0f 92       	push	r0
    1dcc:	0f b6       	in	r0, 0x3f	; 63
    1dce:	0f 92       	push	r0
    1dd0:	11 24       	eor	r1, r1
    1dd2:	0b b6       	in	r0, 0x3b	; 59
    1dd4:	0f 92       	push	r0
    1dd6:	2f 93       	push	r18
    1dd8:	3f 93       	push	r19
    1dda:	4f 93       	push	r20
    1ddc:	5f 93       	push	r21
    1dde:	6f 93       	push	r22
    1de0:	7f 93       	push	r23
    1de2:	8f 93       	push	r24
    1de4:	9f 93       	push	r25
    1de6:	af 93       	push	r26
    1de8:	bf 93       	push	r27
    1dea:	ef 93       	push	r30
    1dec:	ff 93       	push	r31
    1dee:	e0 91 50 21 	lds	r30, 0x2150	; 0x802150 <tc_tcf0_ccb_callback>
    1df2:	f0 91 51 21 	lds	r31, 0x2151	; 0x802151 <tc_tcf0_ccb_callback+0x1>
    1df6:	30 97       	sbiw	r30, 0x00	; 0
    1df8:	09 f0       	breq	.+2      	; 0x1dfc <__vector_111+0x34>
    1dfa:	19 95       	eicall
    1dfc:	ff 91       	pop	r31
    1dfe:	ef 91       	pop	r30
    1e00:	bf 91       	pop	r27
    1e02:	af 91       	pop	r26
    1e04:	9f 91       	pop	r25
    1e06:	8f 91       	pop	r24
    1e08:	7f 91       	pop	r23
    1e0a:	6f 91       	pop	r22
    1e0c:	5f 91       	pop	r21
    1e0e:	4f 91       	pop	r20
    1e10:	3f 91       	pop	r19
    1e12:	2f 91       	pop	r18
    1e14:	0f 90       	pop	r0
    1e16:	0b be       	out	0x3b, r0	; 59
    1e18:	0f 90       	pop	r0
    1e1a:	0f be       	out	0x3f, r0	; 63
    1e1c:	0f 90       	pop	r0
    1e1e:	1f 90       	pop	r1
    1e20:	18 95       	reti

00001e22 <__vector_112>:
    1e22:	1f 92       	push	r1
    1e24:	0f 92       	push	r0
    1e26:	0f b6       	in	r0, 0x3f	; 63
    1e28:	0f 92       	push	r0
    1e2a:	11 24       	eor	r1, r1
    1e2c:	0b b6       	in	r0, 0x3b	; 59
    1e2e:	0f 92       	push	r0
    1e30:	2f 93       	push	r18
    1e32:	3f 93       	push	r19
    1e34:	4f 93       	push	r20
    1e36:	5f 93       	push	r21
    1e38:	6f 93       	push	r22
    1e3a:	7f 93       	push	r23
    1e3c:	8f 93       	push	r24
    1e3e:	9f 93       	push	r25
    1e40:	af 93       	push	r26
    1e42:	bf 93       	push	r27
    1e44:	ef 93       	push	r30
    1e46:	ff 93       	push	r31
    1e48:	e0 91 4e 21 	lds	r30, 0x214E	; 0x80214e <tc_tcf0_ccc_callback>
    1e4c:	f0 91 4f 21 	lds	r31, 0x214F	; 0x80214f <tc_tcf0_ccc_callback+0x1>
    1e50:	30 97       	sbiw	r30, 0x00	; 0
    1e52:	09 f0       	breq	.+2      	; 0x1e56 <__vector_112+0x34>
    1e54:	19 95       	eicall
    1e56:	ff 91       	pop	r31
    1e58:	ef 91       	pop	r30
    1e5a:	bf 91       	pop	r27
    1e5c:	af 91       	pop	r26
    1e5e:	9f 91       	pop	r25
    1e60:	8f 91       	pop	r24
    1e62:	7f 91       	pop	r23
    1e64:	6f 91       	pop	r22
    1e66:	5f 91       	pop	r21
    1e68:	4f 91       	pop	r20
    1e6a:	3f 91       	pop	r19
    1e6c:	2f 91       	pop	r18
    1e6e:	0f 90       	pop	r0
    1e70:	0b be       	out	0x3b, r0	; 59
    1e72:	0f 90       	pop	r0
    1e74:	0f be       	out	0x3f, r0	; 63
    1e76:	0f 90       	pop	r0
    1e78:	1f 90       	pop	r1
    1e7a:	18 95       	reti

00001e7c <__vector_113>:
    1e7c:	1f 92       	push	r1
    1e7e:	0f 92       	push	r0
    1e80:	0f b6       	in	r0, 0x3f	; 63
    1e82:	0f 92       	push	r0
    1e84:	11 24       	eor	r1, r1
    1e86:	0b b6       	in	r0, 0x3b	; 59
    1e88:	0f 92       	push	r0
    1e8a:	2f 93       	push	r18
    1e8c:	3f 93       	push	r19
    1e8e:	4f 93       	push	r20
    1e90:	5f 93       	push	r21
    1e92:	6f 93       	push	r22
    1e94:	7f 93       	push	r23
    1e96:	8f 93       	push	r24
    1e98:	9f 93       	push	r25
    1e9a:	af 93       	push	r26
    1e9c:	bf 93       	push	r27
    1e9e:	ef 93       	push	r30
    1ea0:	ff 93       	push	r31
    1ea2:	e0 91 4c 21 	lds	r30, 0x214C	; 0x80214c <tc_tcf0_ccd_callback>
    1ea6:	f0 91 4d 21 	lds	r31, 0x214D	; 0x80214d <tc_tcf0_ccd_callback+0x1>
    1eaa:	30 97       	sbiw	r30, 0x00	; 0
    1eac:	09 f0       	breq	.+2      	; 0x1eb0 <__vector_113+0x34>
    1eae:	19 95       	eicall
    1eb0:	ff 91       	pop	r31
    1eb2:	ef 91       	pop	r30
    1eb4:	bf 91       	pop	r27
    1eb6:	af 91       	pop	r26
    1eb8:	9f 91       	pop	r25
    1eba:	8f 91       	pop	r24
    1ebc:	7f 91       	pop	r23
    1ebe:	6f 91       	pop	r22
    1ec0:	5f 91       	pop	r21
    1ec2:	4f 91       	pop	r20
    1ec4:	3f 91       	pop	r19
    1ec6:	2f 91       	pop	r18
    1ec8:	0f 90       	pop	r0
    1eca:	0b be       	out	0x3b, r0	; 59
    1ecc:	0f 90       	pop	r0
    1ece:	0f be       	out	0x3f, r0	; 63
    1ed0:	0f 90       	pop	r0
    1ed2:	1f 90       	pop	r1
    1ed4:	18 95       	reti

00001ed6 <tc_enable>:
    1ed6:	1f 93       	push	r17
    1ed8:	cf 93       	push	r28
    1eda:	df 93       	push	r29
    1edc:	1f 92       	push	r1
    1ede:	1f 92       	push	r1
    1ee0:	cd b7       	in	r28, 0x3d	; 61
    1ee2:	de b7       	in	r29, 0x3e	; 62
    1ee4:	2f b7       	in	r18, 0x3f	; 63
    1ee6:	2a 83       	std	Y+2, r18	; 0x02
    1ee8:	f8 94       	cli
    1eea:	1a 81       	ldd	r17, Y+2	; 0x02
    1eec:	28 2f       	mov	r18, r24
    1eee:	39 2f       	mov	r19, r25
    1ef0:	21 15       	cp	r18, r1
    1ef2:	88 e0       	ldi	r24, 0x08	; 8
    1ef4:	38 07       	cpc	r19, r24
    1ef6:	49 f4       	brne	.+18     	; 0x1f0a <tc_enable+0x34>
    1ef8:	61 e0       	ldi	r22, 0x01	; 1
    1efa:	83 e0       	ldi	r24, 0x03	; 3
    1efc:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f00:	64 e0       	ldi	r22, 0x04	; 4
    1f02:	83 e0       	ldi	r24, 0x03	; 3
    1f04:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f08:	4f c0       	rjmp	.+158    	; 0x1fa8 <tc_enable+0xd2>
    1f0a:	20 34       	cpi	r18, 0x40	; 64
    1f0c:	88 e0       	ldi	r24, 0x08	; 8
    1f0e:	38 07       	cpc	r19, r24
    1f10:	49 f4       	brne	.+18     	; 0x1f24 <tc_enable+0x4e>
    1f12:	62 e0       	ldi	r22, 0x02	; 2
    1f14:	83 e0       	ldi	r24, 0x03	; 3
    1f16:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f1a:	64 e0       	ldi	r22, 0x04	; 4
    1f1c:	83 e0       	ldi	r24, 0x03	; 3
    1f1e:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f22:	42 c0       	rjmp	.+132    	; 0x1fa8 <tc_enable+0xd2>
    1f24:	21 15       	cp	r18, r1
    1f26:	89 e0       	ldi	r24, 0x09	; 9
    1f28:	38 07       	cpc	r19, r24
    1f2a:	49 f4       	brne	.+18     	; 0x1f3e <tc_enable+0x68>
    1f2c:	61 e0       	ldi	r22, 0x01	; 1
    1f2e:	84 e0       	ldi	r24, 0x04	; 4
    1f30:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f34:	64 e0       	ldi	r22, 0x04	; 4
    1f36:	84 e0       	ldi	r24, 0x04	; 4
    1f38:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f3c:	35 c0       	rjmp	.+106    	; 0x1fa8 <tc_enable+0xd2>
    1f3e:	20 34       	cpi	r18, 0x40	; 64
    1f40:	89 e0       	ldi	r24, 0x09	; 9
    1f42:	38 07       	cpc	r19, r24
    1f44:	49 f4       	brne	.+18     	; 0x1f58 <tc_enable+0x82>
    1f46:	62 e0       	ldi	r22, 0x02	; 2
    1f48:	84 e0       	ldi	r24, 0x04	; 4
    1f4a:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f4e:	64 e0       	ldi	r22, 0x04	; 4
    1f50:	84 e0       	ldi	r24, 0x04	; 4
    1f52:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f56:	28 c0       	rjmp	.+80     	; 0x1fa8 <tc_enable+0xd2>
    1f58:	21 15       	cp	r18, r1
    1f5a:	8a e0       	ldi	r24, 0x0A	; 10
    1f5c:	38 07       	cpc	r19, r24
    1f5e:	49 f4       	brne	.+18     	; 0x1f72 <tc_enable+0x9c>
    1f60:	61 e0       	ldi	r22, 0x01	; 1
    1f62:	85 e0       	ldi	r24, 0x05	; 5
    1f64:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f68:	64 e0       	ldi	r22, 0x04	; 4
    1f6a:	85 e0       	ldi	r24, 0x05	; 5
    1f6c:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f70:	1b c0       	rjmp	.+54     	; 0x1fa8 <tc_enable+0xd2>
    1f72:	20 34       	cpi	r18, 0x40	; 64
    1f74:	8a e0       	ldi	r24, 0x0A	; 10
    1f76:	38 07       	cpc	r19, r24
    1f78:	49 f4       	brne	.+18     	; 0x1f8c <tc_enable+0xb6>
    1f7a:	62 e0       	ldi	r22, 0x02	; 2
    1f7c:	85 e0       	ldi	r24, 0x05	; 5
    1f7e:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f82:	64 e0       	ldi	r22, 0x04	; 4
    1f84:	85 e0       	ldi	r24, 0x05	; 5
    1f86:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f8a:	0e c0       	rjmp	.+28     	; 0x1fa8 <tc_enable+0xd2>
    1f8c:	21 15       	cp	r18, r1
    1f8e:	3b 40       	sbci	r19, 0x0B	; 11
    1f90:	49 f4       	brne	.+18     	; 0x1fa4 <tc_enable+0xce>
    1f92:	61 e0       	ldi	r22, 0x01	; 1
    1f94:	86 e0       	ldi	r24, 0x06	; 6
    1f96:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1f9a:	64 e0       	ldi	r22, 0x04	; 4
    1f9c:	86 e0       	ldi	r24, 0x06	; 6
    1f9e:	0e 94 2e 09 	call	0x125c	; 0x125c <sysclk_enable_module>
    1fa2:	02 c0       	rjmp	.+4      	; 0x1fa8 <tc_enable+0xd2>
    1fa4:	1f bf       	out	0x3f, r17	; 63
    1fa6:	10 c0       	rjmp	.+32     	; 0x1fc8 <tc_enable+0xf2>
    1fa8:	80 91 39 32 	lds	r24, 0x3239	; 0x803239 <sleepmgr_locks+0x1>
    1fac:	8f 3f       	cpi	r24, 0xFF	; 255
    1fae:	09 f4       	brne	.+2      	; 0x1fb2 <tc_enable+0xdc>
    1fb0:	ff cf       	rjmp	.-2      	; 0x1fb0 <tc_enable+0xda>
    1fb2:	8f b7       	in	r24, 0x3f	; 63
    1fb4:	89 83       	std	Y+1, r24	; 0x01
    1fb6:	f8 94       	cli
    1fb8:	99 81       	ldd	r25, Y+1	; 0x01
    1fba:	e8 e3       	ldi	r30, 0x38	; 56
    1fbc:	f2 e3       	ldi	r31, 0x32	; 50
    1fbe:	81 81       	ldd	r24, Z+1	; 0x01
    1fc0:	8f 5f       	subi	r24, 0xFF	; 255
    1fc2:	81 83       	std	Z+1, r24	; 0x01
    1fc4:	9f bf       	out	0x3f, r25	; 63
    1fc6:	1f bf       	out	0x3f, r17	; 63
    1fc8:	0f 90       	pop	r0
    1fca:	0f 90       	pop	r0
    1fcc:	df 91       	pop	r29
    1fce:	cf 91       	pop	r28
    1fd0:	1f 91       	pop	r17
    1fd2:	08 95       	ret

00001fd4 <pwm_set_frequency>:
    1fd4:	cf 92       	push	r12
    1fd6:	df 92       	push	r13
    1fd8:	ef 92       	push	r14
    1fda:	ff 92       	push	r15
    1fdc:	cf 93       	push	r28
    1fde:	df 93       	push	r29
    1fe0:	ec 01       	movw	r28, r24
    1fe2:	6b 01       	movw	r12, r22
    1fe4:	e1 2c       	mov	r14, r1
    1fe6:	f1 2c       	mov	r15, r1
    1fe8:	60 e8       	ldi	r22, 0x80	; 128
    1fea:	74 e8       	ldi	r23, 0x84	; 132
    1fec:	8e e1       	ldi	r24, 0x1E	; 30
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	a7 01       	movw	r20, r14
    1ff2:	96 01       	movw	r18, r12
    1ff4:	0e 94 77 28 	call	0x50ee	; 0x50ee <__udivmodsi4>
    1ff8:	ca 01       	movw	r24, r20
    1ffa:	b9 01       	movw	r22, r18
    1ffc:	2f ef       	ldi	r18, 0xFF	; 255
    1ffe:	3f ef       	ldi	r19, 0xFF	; 255
    2000:	40 e0       	ldi	r20, 0x00	; 0
    2002:	50 e0       	ldi	r21, 0x00	; 0
    2004:	0e 94 77 28 	call	0x50ee	; 0x50ee <__udivmodsi4>
    2008:	21 15       	cp	r18, r1
    200a:	31 05       	cpc	r19, r1
    200c:	29 f4       	brne	.+10     	; 0x2018 <pwm_set_frequency+0x44>
    200e:	81 e0       	ldi	r24, 0x01	; 1
    2010:	8c 83       	std	Y+4, r24	; 0x04
    2012:	21 e0       	ldi	r18, 0x01	; 1
    2014:	30 e0       	ldi	r19, 0x00	; 0
    2016:	2d c0       	rjmp	.+90     	; 0x2072 <pwm_set_frequency+0x9e>
    2018:	22 30       	cpi	r18, 0x02	; 2
    201a:	31 05       	cpc	r19, r1
    201c:	28 f4       	brcc	.+10     	; 0x2028 <pwm_set_frequency+0x54>
    201e:	82 e0       	ldi	r24, 0x02	; 2
    2020:	8c 83       	std	Y+4, r24	; 0x04
    2022:	22 e0       	ldi	r18, 0x02	; 2
    2024:	30 e0       	ldi	r19, 0x00	; 0
    2026:	25 c0       	rjmp	.+74     	; 0x2072 <pwm_set_frequency+0x9e>
    2028:	24 30       	cpi	r18, 0x04	; 4
    202a:	31 05       	cpc	r19, r1
    202c:	28 f4       	brcc	.+10     	; 0x2038 <pwm_set_frequency+0x64>
    202e:	83 e0       	ldi	r24, 0x03	; 3
    2030:	8c 83       	std	Y+4, r24	; 0x04
    2032:	24 e0       	ldi	r18, 0x04	; 4
    2034:	30 e0       	ldi	r19, 0x00	; 0
    2036:	1d c0       	rjmp	.+58     	; 0x2072 <pwm_set_frequency+0x9e>
    2038:	28 30       	cpi	r18, 0x08	; 8
    203a:	31 05       	cpc	r19, r1
    203c:	28 f4       	brcc	.+10     	; 0x2048 <pwm_set_frequency+0x74>
    203e:	84 e0       	ldi	r24, 0x04	; 4
    2040:	8c 83       	std	Y+4, r24	; 0x04
    2042:	28 e0       	ldi	r18, 0x08	; 8
    2044:	30 e0       	ldi	r19, 0x00	; 0
    2046:	15 c0       	rjmp	.+42     	; 0x2072 <pwm_set_frequency+0x9e>
    2048:	20 34       	cpi	r18, 0x40	; 64
    204a:	31 05       	cpc	r19, r1
    204c:	28 f4       	brcc	.+10     	; 0x2058 <pwm_set_frequency+0x84>
    204e:	85 e0       	ldi	r24, 0x05	; 5
    2050:	8c 83       	std	Y+4, r24	; 0x04
    2052:	20 e4       	ldi	r18, 0x40	; 64
    2054:	30 e0       	ldi	r19, 0x00	; 0
    2056:	0d c0       	rjmp	.+26     	; 0x2072 <pwm_set_frequency+0x9e>
    2058:	2f 3f       	cpi	r18, 0xFF	; 255
    205a:	31 05       	cpc	r19, r1
    205c:	09 f0       	breq	.+2      	; 0x2060 <pwm_set_frequency+0x8c>
    205e:	28 f4       	brcc	.+10     	; 0x206a <pwm_set_frequency+0x96>
    2060:	86 e0       	ldi	r24, 0x06	; 6
    2062:	8c 83       	std	Y+4, r24	; 0x04
    2064:	20 e0       	ldi	r18, 0x00	; 0
    2066:	31 e0       	ldi	r19, 0x01	; 1
    2068:	04 c0       	rjmp	.+8      	; 0x2072 <pwm_set_frequency+0x9e>
    206a:	87 e0       	ldi	r24, 0x07	; 7
    206c:	8c 83       	std	Y+4, r24	; 0x04
    206e:	20 e0       	ldi	r18, 0x00	; 0
    2070:	34 e0       	ldi	r19, 0x04	; 4
    2072:	40 e0       	ldi	r20, 0x00	; 0
    2074:	50 e0       	ldi	r21, 0x00	; 0
    2076:	60 e8       	ldi	r22, 0x80	; 128
    2078:	74 e8       	ldi	r23, 0x84	; 132
    207a:	8e e1       	ldi	r24, 0x1E	; 30
    207c:	90 e0       	ldi	r25, 0x00	; 0
    207e:	0e 94 77 28 	call	0x50ee	; 0x50ee <__udivmodsi4>
    2082:	ca 01       	movw	r24, r20
    2084:	b9 01       	movw	r22, r18
    2086:	a7 01       	movw	r20, r14
    2088:	96 01       	movw	r18, r12
    208a:	0e 94 77 28 	call	0x50ee	; 0x50ee <__udivmodsi4>
    208e:	2d 83       	std	Y+5, r18	; 0x05
    2090:	3e 83       	std	Y+6, r19	; 0x06
    2092:	24 36       	cpi	r18, 0x64	; 100
    2094:	31 05       	cpc	r19, r1
    2096:	18 f4       	brcc	.+6      	; 0x209e <pwm_set_frequency+0xca>
    2098:	1c 82       	std	Y+4, r1	; 0x04
    209a:	1d 82       	std	Y+5, r1	; 0x05
    209c:	1e 82       	std	Y+6, r1	; 0x06
    209e:	df 91       	pop	r29
    20a0:	cf 91       	pop	r28
    20a2:	ff 90       	pop	r15
    20a4:	ef 90       	pop	r14
    20a6:	df 90       	pop	r13
    20a8:	cf 90       	pop	r12
    20aa:	08 95       	ret

000020ac <pwm_init>:
    20ac:	0f 93       	push	r16
    20ae:	1f 93       	push	r17
    20b0:	cf 93       	push	r28
    20b2:	df 93       	push	r29
    20b4:	ec 01       	movw	r28, r24
    20b6:	89 01       	movw	r16, r18
    20b8:	86 2f       	mov	r24, r22
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	87 30       	cpi	r24, 0x07	; 7
    20be:	91 05       	cpc	r25, r1
    20c0:	08 f0       	brcs	.+2      	; 0x20c4 <pwm_init+0x18>
    20c2:	8b c0       	rjmp	.+278    	; 0x21da <pwm_init+0x12e>
    20c4:	fc 01       	movw	r30, r24
    20c6:	88 27       	eor	r24, r24
    20c8:	e2 50       	subi	r30, 0x02	; 2
    20ca:	ff 4f       	sbci	r31, 0xFF	; 255
    20cc:	8f 4f       	sbci	r24, 0xFF	; 255
    20ce:	0c 94 99 28 	jmp	0x5132	; 0x5132 <__tablejump2__>
    20d2:	80 e0       	ldi	r24, 0x00	; 0
    20d4:	98 e0       	ldi	r25, 0x08	; 8
    20d6:	88 83       	st	Y, r24
    20d8:	99 83       	std	Y+1, r25	; 0x01
    20da:	e0 e4       	ldi	r30, 0x40	; 64
    20dc:	f6 e0       	ldi	r31, 0x06	; 6
    20de:	30 81       	ld	r19, Z
    20e0:	81 e0       	ldi	r24, 0x01	; 1
    20e2:	90 e0       	ldi	r25, 0x00	; 0
    20e4:	2f ef       	ldi	r18, 0xFF	; 255
    20e6:	24 0f       	add	r18, r20
    20e8:	02 c0       	rjmp	.+4      	; 0x20ee <pwm_init+0x42>
    20ea:	88 0f       	add	r24, r24
    20ec:	99 1f       	adc	r25, r25
    20ee:	2a 95       	dec	r18
    20f0:	e2 f7       	brpl	.-8      	; 0x20ea <pwm_init+0x3e>
    20f2:	83 2b       	or	r24, r19
    20f4:	80 83       	st	Z, r24
    20f6:	71 c0       	rjmp	.+226    	; 0x21da <pwm_init+0x12e>
    20f8:	80 e4       	ldi	r24, 0x40	; 64
    20fa:	98 e0       	ldi	r25, 0x08	; 8
    20fc:	88 83       	st	Y, r24
    20fe:	99 83       	std	Y+1, r25	; 0x01
    2100:	e0 e4       	ldi	r30, 0x40	; 64
    2102:	f6 e0       	ldi	r31, 0x06	; 6
    2104:	30 81       	ld	r19, Z
    2106:	81 e0       	ldi	r24, 0x01	; 1
    2108:	90 e0       	ldi	r25, 0x00	; 0
    210a:	23 e0       	ldi	r18, 0x03	; 3
    210c:	24 0f       	add	r18, r20
    210e:	02 c0       	rjmp	.+4      	; 0x2114 <pwm_init+0x68>
    2110:	88 0f       	add	r24, r24
    2112:	99 1f       	adc	r25, r25
    2114:	2a 95       	dec	r18
    2116:	e2 f7       	brpl	.-8      	; 0x2110 <pwm_init+0x64>
    2118:	83 2b       	or	r24, r19
    211a:	80 83       	st	Z, r24
    211c:	5e c0       	rjmp	.+188    	; 0x21da <pwm_init+0x12e>
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	99 e0       	ldi	r25, 0x09	; 9
    2122:	88 83       	st	Y, r24
    2124:	99 83       	std	Y+1, r25	; 0x01
    2126:	e0 e6       	ldi	r30, 0x60	; 96
    2128:	f6 e0       	ldi	r31, 0x06	; 6
    212a:	30 81       	ld	r19, Z
    212c:	81 e0       	ldi	r24, 0x01	; 1
    212e:	90 e0       	ldi	r25, 0x00	; 0
    2130:	2f ef       	ldi	r18, 0xFF	; 255
    2132:	24 0f       	add	r18, r20
    2134:	02 c0       	rjmp	.+4      	; 0x213a <pwm_init+0x8e>
    2136:	88 0f       	add	r24, r24
    2138:	99 1f       	adc	r25, r25
    213a:	2a 95       	dec	r18
    213c:	e2 f7       	brpl	.-8      	; 0x2136 <pwm_init+0x8a>
    213e:	83 2b       	or	r24, r19
    2140:	80 83       	st	Z, r24
    2142:	4b c0       	rjmp	.+150    	; 0x21da <pwm_init+0x12e>
    2144:	80 e4       	ldi	r24, 0x40	; 64
    2146:	99 e0       	ldi	r25, 0x09	; 9
    2148:	88 83       	st	Y, r24
    214a:	99 83       	std	Y+1, r25	; 0x01
    214c:	e0 e6       	ldi	r30, 0x60	; 96
    214e:	f6 e0       	ldi	r31, 0x06	; 6
    2150:	30 81       	ld	r19, Z
    2152:	81 e0       	ldi	r24, 0x01	; 1
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	23 e0       	ldi	r18, 0x03	; 3
    2158:	24 0f       	add	r18, r20
    215a:	02 c0       	rjmp	.+4      	; 0x2160 <pwm_init+0xb4>
    215c:	88 0f       	add	r24, r24
    215e:	99 1f       	adc	r25, r25
    2160:	2a 95       	dec	r18
    2162:	e2 f7       	brpl	.-8      	; 0x215c <pwm_init+0xb0>
    2164:	83 2b       	or	r24, r19
    2166:	80 83       	st	Z, r24
    2168:	38 c0       	rjmp	.+112    	; 0x21da <pwm_init+0x12e>
    216a:	80 e0       	ldi	r24, 0x00	; 0
    216c:	9a e0       	ldi	r25, 0x0A	; 10
    216e:	88 83       	st	Y, r24
    2170:	99 83       	std	Y+1, r25	; 0x01
    2172:	e0 e8       	ldi	r30, 0x80	; 128
    2174:	f6 e0       	ldi	r31, 0x06	; 6
    2176:	30 81       	ld	r19, Z
    2178:	81 e0       	ldi	r24, 0x01	; 1
    217a:	90 e0       	ldi	r25, 0x00	; 0
    217c:	2f ef       	ldi	r18, 0xFF	; 255
    217e:	24 0f       	add	r18, r20
    2180:	02 c0       	rjmp	.+4      	; 0x2186 <pwm_init+0xda>
    2182:	88 0f       	add	r24, r24
    2184:	99 1f       	adc	r25, r25
    2186:	2a 95       	dec	r18
    2188:	e2 f7       	brpl	.-8      	; 0x2182 <pwm_init+0xd6>
    218a:	83 2b       	or	r24, r19
    218c:	80 83       	st	Z, r24
    218e:	25 c0       	rjmp	.+74     	; 0x21da <pwm_init+0x12e>
    2190:	80 e4       	ldi	r24, 0x40	; 64
    2192:	9a e0       	ldi	r25, 0x0A	; 10
    2194:	88 83       	st	Y, r24
    2196:	99 83       	std	Y+1, r25	; 0x01
    2198:	e0 e8       	ldi	r30, 0x80	; 128
    219a:	f6 e0       	ldi	r31, 0x06	; 6
    219c:	30 81       	ld	r19, Z
    219e:	81 e0       	ldi	r24, 0x01	; 1
    21a0:	90 e0       	ldi	r25, 0x00	; 0
    21a2:	23 e0       	ldi	r18, 0x03	; 3
    21a4:	24 0f       	add	r18, r20
    21a6:	02 c0       	rjmp	.+4      	; 0x21ac <pwm_init+0x100>
    21a8:	88 0f       	add	r24, r24
    21aa:	99 1f       	adc	r25, r25
    21ac:	2a 95       	dec	r18
    21ae:	e2 f7       	brpl	.-8      	; 0x21a8 <pwm_init+0xfc>
    21b0:	83 2b       	or	r24, r19
    21b2:	80 83       	st	Z, r24
    21b4:	12 c0       	rjmp	.+36     	; 0x21da <pwm_init+0x12e>
    21b6:	80 e0       	ldi	r24, 0x00	; 0
    21b8:	9b e0       	ldi	r25, 0x0B	; 11
    21ba:	88 83       	st	Y, r24
    21bc:	99 83       	std	Y+1, r25	; 0x01
    21be:	e0 ea       	ldi	r30, 0xA0	; 160
    21c0:	f6 e0       	ldi	r31, 0x06	; 6
    21c2:	30 81       	ld	r19, Z
    21c4:	81 e0       	ldi	r24, 0x01	; 1
    21c6:	90 e0       	ldi	r25, 0x00	; 0
    21c8:	2f ef       	ldi	r18, 0xFF	; 255
    21ca:	24 0f       	add	r18, r20
    21cc:	02 c0       	rjmp	.+4      	; 0x21d2 <pwm_init+0x126>
    21ce:	88 0f       	add	r24, r24
    21d0:	99 1f       	adc	r25, r25
    21d2:	2a 95       	dec	r18
    21d4:	e2 f7       	brpl	.-8      	; 0x21ce <pwm_init+0x122>
    21d6:	83 2b       	or	r24, r19
    21d8:	80 83       	st	Z, r24
    21da:	4a 83       	std	Y+2, r20	; 0x02
    21dc:	42 30       	cpi	r20, 0x02	; 2
    21de:	61 f0       	breq	.+24     	; 0x21f8 <pwm_init+0x14c>
    21e0:	18 f4       	brcc	.+6      	; 0x21e8 <pwm_init+0x13c>
    21e2:	41 30       	cpi	r20, 0x01	; 1
    21e4:	31 f0       	breq	.+12     	; 0x21f2 <pwm_init+0x146>
    21e6:	10 c0       	rjmp	.+32     	; 0x2208 <pwm_init+0x15c>
    21e8:	43 30       	cpi	r20, 0x03	; 3
    21ea:	49 f0       	breq	.+18     	; 0x21fe <pwm_init+0x152>
    21ec:	44 30       	cpi	r20, 0x04	; 4
    21ee:	51 f0       	breq	.+20     	; 0x2204 <pwm_init+0x158>
    21f0:	0b c0       	rjmp	.+22     	; 0x2208 <pwm_init+0x15c>
    21f2:	80 e1       	ldi	r24, 0x10	; 16
    21f4:	8b 83       	std	Y+3, r24	; 0x03
    21f6:	08 c0       	rjmp	.+16     	; 0x2208 <pwm_init+0x15c>
    21f8:	80 e2       	ldi	r24, 0x20	; 32
    21fa:	8b 83       	std	Y+3, r24	; 0x03
    21fc:	05 c0       	rjmp	.+10     	; 0x2208 <pwm_init+0x15c>
    21fe:	80 e4       	ldi	r24, 0x40	; 64
    2200:	8b 83       	std	Y+3, r24	; 0x03
    2202:	02 c0       	rjmp	.+4      	; 0x2208 <pwm_init+0x15c>
    2204:	80 e8       	ldi	r24, 0x80	; 128
    2206:	8b 83       	std	Y+3, r24	; 0x03
    2208:	88 81       	ld	r24, Y
    220a:	99 81       	ldd	r25, Y+1	; 0x01
    220c:	0e 94 6b 0f 	call	0x1ed6	; 0x1ed6 <tc_enable>
    2210:	e8 81       	ld	r30, Y
    2212:	f9 81       	ldd	r31, Y+1	; 0x01
    2214:	81 81       	ldd	r24, Z+1	; 0x01
    2216:	88 7f       	andi	r24, 0xF8	; 248
    2218:	83 60       	ori	r24, 0x03	; 3
    221a:	81 83       	std	Z+1, r24	; 0x01
    221c:	1d 82       	std	Y+5, r1	; 0x05
    221e:	1e 82       	std	Y+6, r1	; 0x06
    2220:	1c 82       	std	Y+4, r1	; 0x04
    2222:	e8 81       	ld	r30, Y
    2224:	f9 81       	ldd	r31, Y+1	; 0x01
    2226:	80 81       	ld	r24, Z
    2228:	80 7f       	andi	r24, 0xF0	; 240
    222a:	80 83       	st	Z, r24
    222c:	b8 01       	movw	r22, r16
    222e:	ce 01       	movw	r24, r28
    2230:	0e 94 ea 0f 	call	0x1fd4	; 0x1fd4 <pwm_set_frequency>
    2234:	df 91       	pop	r29
    2236:	cf 91       	pop	r28
    2238:	1f 91       	pop	r17
    223a:	0f 91       	pop	r16
    223c:	08 95       	ret

0000223e <pwm_start>:
    223e:	cf 93       	push	r28
    2240:	df 93       	push	r29
    2242:	ec 01       	movw	r28, r24
    2244:	2d 81       	ldd	r18, Y+5	; 0x05
    2246:	3e 81       	ldd	r19, Y+6	; 0x06
    2248:	a6 2f       	mov	r26, r22
    224a:	b0 e0       	ldi	r27, 0x00	; 0
    224c:	0e 94 a1 28 	call	0x5142	; 0x5142 <__umulhisi3>
    2250:	24 e6       	ldi	r18, 0x64	; 100
    2252:	30 e0       	ldi	r19, 0x00	; 0
    2254:	40 e0       	ldi	r20, 0x00	; 0
    2256:	50 e0       	ldi	r21, 0x00	; 0
    2258:	0e 94 77 28 	call	0x50ee	; 0x50ee <__udivmodsi4>
    225c:	8a 81       	ldd	r24, Y+2	; 0x02
    225e:	e8 81       	ld	r30, Y
    2260:	f9 81       	ldd	r31, Y+1	; 0x01
    2262:	e6 fd       	sbrc	r30, 6
    2264:	17 c0       	rjmp	.+46     	; 0x2294 <pwm_start+0x56>
    2266:	82 30       	cpi	r24, 0x02	; 2
    2268:	61 f0       	breq	.+24     	; 0x2282 <pwm_start+0x44>
    226a:	18 f4       	brcc	.+6      	; 0x2272 <pwm_start+0x34>
    226c:	81 30       	cpi	r24, 0x01	; 1
    226e:	31 f0       	breq	.+12     	; 0x227c <pwm_start+0x3e>
    2270:	1b c0       	rjmp	.+54     	; 0x22a8 <pwm_start+0x6a>
    2272:	83 30       	cpi	r24, 0x03	; 3
    2274:	49 f0       	breq	.+18     	; 0x2288 <pwm_start+0x4a>
    2276:	84 30       	cpi	r24, 0x04	; 4
    2278:	51 f0       	breq	.+20     	; 0x228e <pwm_start+0x50>
    227a:	16 c0       	rjmp	.+44     	; 0x22a8 <pwm_start+0x6a>
    227c:	20 af       	std	Z+56, r18	; 0x38
    227e:	31 af       	std	Z+57, r19	; 0x39
    2280:	13 c0       	rjmp	.+38     	; 0x22a8 <pwm_start+0x6a>
    2282:	22 af       	std	Z+58, r18	; 0x3a
    2284:	33 af       	std	Z+59, r19	; 0x3b
    2286:	10 c0       	rjmp	.+32     	; 0x22a8 <pwm_start+0x6a>
    2288:	24 af       	std	Z+60, r18	; 0x3c
    228a:	35 af       	std	Z+61, r19	; 0x3d
    228c:	0d c0       	rjmp	.+26     	; 0x22a8 <pwm_start+0x6a>
    228e:	26 af       	std	Z+62, r18	; 0x3e
    2290:	37 af       	std	Z+63, r19	; 0x3f
    2292:	0a c0       	rjmp	.+20     	; 0x22a8 <pwm_start+0x6a>
    2294:	81 30       	cpi	r24, 0x01	; 1
    2296:	19 f0       	breq	.+6      	; 0x229e <pwm_start+0x60>
    2298:	82 30       	cpi	r24, 0x02	; 2
    229a:	21 f0       	breq	.+8      	; 0x22a4 <pwm_start+0x66>
    229c:	05 c0       	rjmp	.+10     	; 0x22a8 <pwm_start+0x6a>
    229e:	20 af       	std	Z+56, r18	; 0x38
    22a0:	31 af       	std	Z+57, r19	; 0x39
    22a2:	02 c0       	rjmp	.+4      	; 0x22a8 <pwm_start+0x6a>
    22a4:	22 af       	std	Z+58, r18	; 0x3a
    22a6:	33 af       	std	Z+59, r19	; 0x3b
    22a8:	8d 81       	ldd	r24, Y+5	; 0x05
    22aa:	9e 81       	ldd	r25, Y+6	; 0x06
    22ac:	e8 81       	ld	r30, Y
    22ae:	f9 81       	ldd	r31, Y+1	; 0x01
    22b0:	86 a3       	std	Z+38, r24	; 0x26
    22b2:	97 a3       	std	Z+39, r25	; 0x27
    22b4:	8b 81       	ldd	r24, Y+3	; 0x03
    22b6:	e8 81       	ld	r30, Y
    22b8:	f9 81       	ldd	r31, Y+1	; 0x01
    22ba:	e6 fd       	sbrc	r30, 6
    22bc:	04 c0       	rjmp	.+8      	; 0x22c6 <pwm_start+0x88>
    22be:	91 81       	ldd	r25, Z+1	; 0x01
    22c0:	89 2b       	or	r24, r25
    22c2:	81 83       	std	Z+1, r24	; 0x01
    22c4:	04 c0       	rjmp	.+8      	; 0x22ce <pwm_start+0x90>
    22c6:	91 81       	ldd	r25, Z+1	; 0x01
    22c8:	80 73       	andi	r24, 0x30	; 48
    22ca:	89 2b       	or	r24, r25
    22cc:	81 83       	std	Z+1, r24	; 0x01
    22ce:	e8 81       	ld	r30, Y
    22d0:	f9 81       	ldd	r31, Y+1	; 0x01
    22d2:	80 81       	ld	r24, Z
    22d4:	80 7f       	andi	r24, 0xF0	; 240
    22d6:	9c 81       	ldd	r25, Y+4	; 0x04
    22d8:	89 2b       	or	r24, r25
    22da:	80 83       	st	Z, r24
    22dc:	df 91       	pop	r29
    22de:	cf 91       	pop	r28
    22e0:	08 95       	ret

000022e2 <pvPortMalloc>:
    22e2:	0f 93       	push	r16
    22e4:	1f 93       	push	r17
    22e6:	cf 93       	push	r28
    22e8:	df 93       	push	r29
    22ea:	ec 01       	movw	r28, r24
    22ec:	0e 94 88 18 	call	0x3110	; 0x3110 <vTaskSuspendAll>
    22f0:	80 91 92 21 	lds	r24, 0x2192	; 0x802192 <xHeapHasBeenInitialised.4150>
    22f4:	81 11       	cpse	r24, r1
    22f6:	1d c0       	rjmp	.+58     	; 0x2332 <pvPortMalloc+0x50>
    22f8:	a7 e9       	ldi	r26, 0x97	; 151
    22fa:	b1 e2       	ldi	r27, 0x21	; 33
    22fc:	eb e9       	ldi	r30, 0x9B	; 155
    22fe:	f1 e2       	ldi	r31, 0x21	; 33
    2300:	ed 93       	st	X+, r30
    2302:	fc 93       	st	X, r31
    2304:	11 97       	sbiw	r26, 0x01	; 1
    2306:	12 96       	adiw	r26, 0x02	; 2
    2308:	1d 92       	st	X+, r1
    230a:	1c 92       	st	X, r1
    230c:	13 97       	sbiw	r26, 0x03	; 3
    230e:	a3 e9       	ldi	r26, 0x93	; 147
    2310:	b1 e2       	ldi	r27, 0x21	; 33
    2312:	8f ef       	ldi	r24, 0xFF	; 255
    2314:	9f e0       	ldi	r25, 0x0F	; 15
    2316:	12 96       	adiw	r26, 0x02	; 2
    2318:	8d 93       	st	X+, r24
    231a:	9c 93       	st	X, r25
    231c:	13 97       	sbiw	r26, 0x03	; 3
    231e:	1d 92       	st	X+, r1
    2320:	1c 92       	st	X, r1
    2322:	11 97       	sbiw	r26, 0x01	; 1
    2324:	82 83       	std	Z+2, r24	; 0x02
    2326:	93 83       	std	Z+3, r25	; 0x03
    2328:	a0 83       	st	Z, r26
    232a:	b1 83       	std	Z+1, r27	; 0x01
    232c:	81 e0       	ldi	r24, 0x01	; 1
    232e:	80 93 92 21 	sts	0x2192, r24	; 0x802192 <xHeapHasBeenInitialised.4150>
    2332:	20 97       	sbiw	r28, 0x00	; 0
    2334:	09 f4       	brne	.+2      	; 0x2338 <pvPortMalloc+0x56>
    2336:	5f c0       	rjmp	.+190    	; 0x23f6 <pvPortMalloc+0x114>
    2338:	9e 01       	movw	r18, r28
    233a:	2b 5f       	subi	r18, 0xFB	; 251
    233c:	3f 4f       	sbci	r19, 0xFF	; 255
    233e:	24 96       	adiw	r28, 0x04	; 4
    2340:	ce 3f       	cpi	r28, 0xFE	; 254
    2342:	df 40       	sbci	r29, 0x0F	; 15
    2344:	08 f0       	brcs	.+2      	; 0x2348 <pvPortMalloc+0x66>
    2346:	5a c0       	rjmp	.+180    	; 0x23fc <pvPortMalloc+0x11a>
    2348:	e0 91 97 21 	lds	r30, 0x2197	; 0x802197 <xStart>
    234c:	f0 91 98 21 	lds	r31, 0x2198	; 0x802198 <xStart+0x1>
    2350:	a7 e9       	ldi	r26, 0x97	; 151
    2352:	b1 e2       	ldi	r27, 0x21	; 33
    2354:	02 c0       	rjmp	.+4      	; 0x235a <pvPortMalloc+0x78>
    2356:	df 01       	movw	r26, r30
    2358:	fc 01       	movw	r30, r24
    235a:	82 81       	ldd	r24, Z+2	; 0x02
    235c:	93 81       	ldd	r25, Z+3	; 0x03
    235e:	82 17       	cp	r24, r18
    2360:	93 07       	cpc	r25, r19
    2362:	20 f4       	brcc	.+8      	; 0x236c <pvPortMalloc+0x8a>
    2364:	80 81       	ld	r24, Z
    2366:	91 81       	ldd	r25, Z+1	; 0x01
    2368:	00 97       	sbiw	r24, 0x00	; 0
    236a:	a9 f7       	brne	.-22     	; 0x2356 <pvPortMalloc+0x74>
    236c:	c1 e2       	ldi	r28, 0x21	; 33
    236e:	e3 39       	cpi	r30, 0x93	; 147
    2370:	fc 07       	cpc	r31, r28
    2372:	09 f4       	brne	.+2      	; 0x2376 <pvPortMalloc+0x94>
    2374:	46 c0       	rjmp	.+140    	; 0x2402 <pvPortMalloc+0x120>
    2376:	cd 91       	ld	r28, X+
    2378:	dc 91       	ld	r29, X
    237a:	11 97       	sbiw	r26, 0x01	; 1
    237c:	8e 01       	movw	r16, r28
    237e:	0b 5f       	subi	r16, 0xFB	; 251
    2380:	1f 4f       	sbci	r17, 0xFF	; 255
    2382:	80 81       	ld	r24, Z
    2384:	91 81       	ldd	r25, Z+1	; 0x01
    2386:	8d 93       	st	X+, r24
    2388:	9c 93       	st	X, r25
    238a:	82 81       	ldd	r24, Z+2	; 0x02
    238c:	93 81       	ldd	r25, Z+3	; 0x03
    238e:	82 1b       	sub	r24, r18
    2390:	93 0b       	sbc	r25, r19
    2392:	8b 30       	cpi	r24, 0x0B	; 11
    2394:	91 05       	cpc	r25, r1
    2396:	10 f1       	brcs	.+68     	; 0x23dc <pvPortMalloc+0xfa>
    2398:	bf 01       	movw	r22, r30
    239a:	62 0f       	add	r22, r18
    239c:	73 1f       	adc	r23, r19
    239e:	db 01       	movw	r26, r22
    23a0:	12 96       	adiw	r26, 0x02	; 2
    23a2:	8d 93       	st	X+, r24
    23a4:	9c 93       	st	X, r25
    23a6:	13 97       	sbiw	r26, 0x03	; 3
    23a8:	22 83       	std	Z+2, r18	; 0x02
    23aa:	33 83       	std	Z+3, r19	; 0x03
    23ac:	12 96       	adiw	r26, 0x02	; 2
    23ae:	4d 91       	ld	r20, X+
    23b0:	5c 91       	ld	r21, X
    23b2:	13 97       	sbiw	r26, 0x03	; 3
    23b4:	87 e9       	ldi	r24, 0x97	; 151
    23b6:	91 e2       	ldi	r25, 0x21	; 33
    23b8:	01 c0       	rjmp	.+2      	; 0x23bc <pvPortMalloc+0xda>
    23ba:	cd 01       	movw	r24, r26
    23bc:	ec 01       	movw	r28, r24
    23be:	a8 81       	ld	r26, Y
    23c0:	b9 81       	ldd	r27, Y+1	; 0x01
    23c2:	12 96       	adiw	r26, 0x02	; 2
    23c4:	2d 91       	ld	r18, X+
    23c6:	3c 91       	ld	r19, X
    23c8:	13 97       	sbiw	r26, 0x03	; 3
    23ca:	24 17       	cp	r18, r20
    23cc:	35 07       	cpc	r19, r21
    23ce:	a8 f3       	brcs	.-22     	; 0x23ba <pvPortMalloc+0xd8>
    23d0:	eb 01       	movw	r28, r22
    23d2:	a8 83       	st	Y, r26
    23d4:	b9 83       	std	Y+1, r27	; 0x01
    23d6:	dc 01       	movw	r26, r24
    23d8:	6d 93       	st	X+, r22
    23da:	7c 93       	st	X, r23
    23dc:	80 91 04 20 	lds	r24, 0x2004	; 0x802004 <xFreeBytesRemaining>
    23e0:	90 91 05 20 	lds	r25, 0x2005	; 0x802005 <xFreeBytesRemaining+0x1>
    23e4:	22 81       	ldd	r18, Z+2	; 0x02
    23e6:	33 81       	ldd	r19, Z+3	; 0x03
    23e8:	82 1b       	sub	r24, r18
    23ea:	93 0b       	sbc	r25, r19
    23ec:	80 93 04 20 	sts	0x2004, r24	; 0x802004 <xFreeBytesRemaining>
    23f0:	90 93 05 20 	sts	0x2005, r25	; 0x802005 <xFreeBytesRemaining+0x1>
    23f4:	08 c0       	rjmp	.+16     	; 0x2406 <pvPortMalloc+0x124>
    23f6:	00 e0       	ldi	r16, 0x00	; 0
    23f8:	10 e0       	ldi	r17, 0x00	; 0
    23fa:	05 c0       	rjmp	.+10     	; 0x2406 <pvPortMalloc+0x124>
    23fc:	00 e0       	ldi	r16, 0x00	; 0
    23fe:	10 e0       	ldi	r17, 0x00	; 0
    2400:	02 c0       	rjmp	.+4      	; 0x2406 <pvPortMalloc+0x124>
    2402:	00 e0       	ldi	r16, 0x00	; 0
    2404:	10 e0       	ldi	r17, 0x00	; 0
    2406:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    240a:	c8 01       	movw	r24, r16
    240c:	df 91       	pop	r29
    240e:	cf 91       	pop	r28
    2410:	1f 91       	pop	r17
    2412:	0f 91       	pop	r16
    2414:	08 95       	ret

00002416 <vPortFree>:
    2416:	0f 93       	push	r16
    2418:	1f 93       	push	r17
    241a:	cf 93       	push	r28
    241c:	df 93       	push	r29
    241e:	00 97       	sbiw	r24, 0x00	; 0
    2420:	41 f1       	breq	.+80     	; 0x2472 <vPortFree+0x5c>
    2422:	ec 01       	movw	r28, r24
    2424:	8c 01       	movw	r16, r24
    2426:	05 50       	subi	r16, 0x05	; 5
    2428:	11 09       	sbc	r17, r1
    242a:	0e 94 88 18 	call	0x3110	; 0x3110 <vTaskSuspendAll>
    242e:	f8 01       	movw	r30, r16
    2430:	42 81       	ldd	r20, Z+2	; 0x02
    2432:	53 81       	ldd	r21, Z+3	; 0x03
    2434:	a7 e9       	ldi	r26, 0x97	; 151
    2436:	b1 e2       	ldi	r27, 0x21	; 33
    2438:	01 c0       	rjmp	.+2      	; 0x243c <vPortFree+0x26>
    243a:	df 01       	movw	r26, r30
    243c:	ed 91       	ld	r30, X+
    243e:	fc 91       	ld	r31, X
    2440:	11 97       	sbiw	r26, 0x01	; 1
    2442:	22 81       	ldd	r18, Z+2	; 0x02
    2444:	33 81       	ldd	r19, Z+3	; 0x03
    2446:	24 17       	cp	r18, r20
    2448:	35 07       	cpc	r19, r21
    244a:	b8 f3       	brcs	.-18     	; 0x243a <vPortFree+0x24>
    244c:	25 97       	sbiw	r28, 0x05	; 5
    244e:	e8 83       	st	Y, r30
    2450:	f9 83       	std	Y+1, r31	; 0x01
    2452:	0d 93       	st	X+, r16
    2454:	1c 93       	st	X, r17
    2456:	20 91 04 20 	lds	r18, 0x2004	; 0x802004 <xFreeBytesRemaining>
    245a:	30 91 05 20 	lds	r19, 0x2005	; 0x802005 <xFreeBytesRemaining+0x1>
    245e:	8a 81       	ldd	r24, Y+2	; 0x02
    2460:	9b 81       	ldd	r25, Y+3	; 0x03
    2462:	82 0f       	add	r24, r18
    2464:	93 1f       	adc	r25, r19
    2466:	80 93 04 20 	sts	0x2004, r24	; 0x802004 <xFreeBytesRemaining>
    246a:	90 93 05 20 	sts	0x2005, r25	; 0x802005 <xFreeBytesRemaining+0x1>
    246e:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    2472:	df 91       	pop	r29
    2474:	cf 91       	pop	r28
    2476:	1f 91       	pop	r17
    2478:	0f 91       	pop	r16
    247a:	08 95       	ret

0000247c <vListInitialise>:
    247c:	fc 01       	movw	r30, r24
    247e:	03 96       	adiw	r24, 0x03	; 3
    2480:	81 83       	std	Z+1, r24	; 0x01
    2482:	92 83       	std	Z+2, r25	; 0x02
    2484:	4f ef       	ldi	r20, 0xFF	; 255
    2486:	5f ef       	ldi	r21, 0xFF	; 255
    2488:	ba 01       	movw	r22, r20
    248a:	43 83       	std	Z+3, r20	; 0x03
    248c:	54 83       	std	Z+4, r21	; 0x04
    248e:	65 83       	std	Z+5, r22	; 0x05
    2490:	76 83       	std	Z+6, r23	; 0x06
    2492:	87 83       	std	Z+7, r24	; 0x07
    2494:	90 87       	std	Z+8, r25	; 0x08
    2496:	81 87       	std	Z+9, r24	; 0x09
    2498:	92 87       	std	Z+10, r25	; 0x0a
    249a:	10 82       	st	Z, r1
    249c:	08 95       	ret

0000249e <vListInitialiseItem>:
    249e:	fc 01       	movw	r30, r24
    24a0:	12 86       	std	Z+10, r1	; 0x0a
    24a2:	13 86       	std	Z+11, r1	; 0x0b
    24a4:	08 95       	ret

000024a6 <vListInsertEnd>:
    24a6:	cf 93       	push	r28
    24a8:	df 93       	push	r29
    24aa:	fc 01       	movw	r30, r24
    24ac:	db 01       	movw	r26, r22
    24ae:	21 81       	ldd	r18, Z+1	; 0x01
    24b0:	32 81       	ldd	r19, Z+2	; 0x02
    24b2:	e9 01       	movw	r28, r18
    24b4:	8c 81       	ldd	r24, Y+4	; 0x04
    24b6:	9d 81       	ldd	r25, Y+5	; 0x05
    24b8:	14 96       	adiw	r26, 0x04	; 4
    24ba:	8d 93       	st	X+, r24
    24bc:	9c 93       	st	X, r25
    24be:	15 97       	sbiw	r26, 0x05	; 5
    24c0:	81 81       	ldd	r24, Z+1	; 0x01
    24c2:	92 81       	ldd	r25, Z+2	; 0x02
    24c4:	16 96       	adiw	r26, 0x06	; 6
    24c6:	8d 93       	st	X+, r24
    24c8:	9c 93       	st	X, r25
    24ca:	17 97       	sbiw	r26, 0x07	; 7
    24cc:	8c 81       	ldd	r24, Y+4	; 0x04
    24ce:	9d 81       	ldd	r25, Y+5	; 0x05
    24d0:	ec 01       	movw	r28, r24
    24d2:	6e 83       	std	Y+6, r22	; 0x06
    24d4:	7f 83       	std	Y+7, r23	; 0x07
    24d6:	e9 01       	movw	r28, r18
    24d8:	6c 83       	std	Y+4, r22	; 0x04
    24da:	7d 83       	std	Y+5, r23	; 0x05
    24dc:	61 83       	std	Z+1, r22	; 0x01
    24de:	72 83       	std	Z+2, r23	; 0x02
    24e0:	1a 96       	adiw	r26, 0x0a	; 10
    24e2:	ed 93       	st	X+, r30
    24e4:	fc 93       	st	X, r31
    24e6:	1b 97       	sbiw	r26, 0x0b	; 11
    24e8:	80 81       	ld	r24, Z
    24ea:	8f 5f       	subi	r24, 0xFF	; 255
    24ec:	80 83       	st	Z, r24
    24ee:	df 91       	pop	r29
    24f0:	cf 91       	pop	r28
    24f2:	08 95       	ret

000024f4 <vListInsert>:
    24f4:	0f 93       	push	r16
    24f6:	1f 93       	push	r17
    24f8:	cf 93       	push	r28
    24fa:	df 93       	push	r29
    24fc:	eb 01       	movw	r28, r22
    24fe:	08 81       	ld	r16, Y
    2500:	19 81       	ldd	r17, Y+1	; 0x01
    2502:	2a 81       	ldd	r18, Y+2	; 0x02
    2504:	3b 81       	ldd	r19, Y+3	; 0x03
    2506:	0f 3f       	cpi	r16, 0xFF	; 255
    2508:	4f ef       	ldi	r20, 0xFF	; 255
    250a:	14 07       	cpc	r17, r20
    250c:	24 07       	cpc	r18, r20
    250e:	34 07       	cpc	r19, r20
    2510:	31 f4       	brne	.+12     	; 0x251e <vListInsert+0x2a>
    2512:	dc 01       	movw	r26, r24
    2514:	19 96       	adiw	r26, 0x09	; 9
    2516:	ed 91       	ld	r30, X+
    2518:	fc 91       	ld	r31, X
    251a:	1a 97       	sbiw	r26, 0x0a	; 10
    251c:	1f c0       	rjmp	.+62     	; 0x255c <vListInsert+0x68>
    251e:	fc 01       	movw	r30, r24
    2520:	33 96       	adiw	r30, 0x03	; 3
    2522:	dc 01       	movw	r26, r24
    2524:	17 96       	adiw	r26, 0x07	; 7
    2526:	4d 91       	ld	r20, X+
    2528:	5c 91       	ld	r21, X
    252a:	18 97       	sbiw	r26, 0x08	; 8
    252c:	da 01       	movw	r26, r20
    252e:	4d 91       	ld	r20, X+
    2530:	5d 91       	ld	r21, X+
    2532:	6d 91       	ld	r22, X+
    2534:	7c 91       	ld	r23, X
    2536:	04 17       	cp	r16, r20
    2538:	15 07       	cpc	r17, r21
    253a:	26 07       	cpc	r18, r22
    253c:	37 07       	cpc	r19, r23
    253e:	70 f0       	brcs	.+28     	; 0x255c <vListInsert+0x68>
    2540:	04 80       	ldd	r0, Z+4	; 0x04
    2542:	f5 81       	ldd	r31, Z+5	; 0x05
    2544:	e0 2d       	mov	r30, r0
    2546:	a4 81       	ldd	r26, Z+4	; 0x04
    2548:	b5 81       	ldd	r27, Z+5	; 0x05
    254a:	4d 91       	ld	r20, X+
    254c:	5d 91       	ld	r21, X+
    254e:	6d 91       	ld	r22, X+
    2550:	7c 91       	ld	r23, X
    2552:	04 17       	cp	r16, r20
    2554:	15 07       	cpc	r17, r21
    2556:	26 07       	cpc	r18, r22
    2558:	37 07       	cpc	r19, r23
    255a:	90 f7       	brcc	.-28     	; 0x2540 <vListInsert+0x4c>
    255c:	a4 81       	ldd	r26, Z+4	; 0x04
    255e:	b5 81       	ldd	r27, Z+5	; 0x05
    2560:	ac 83       	std	Y+4, r26	; 0x04
    2562:	bd 83       	std	Y+5, r27	; 0x05
    2564:	16 96       	adiw	r26, 0x06	; 6
    2566:	cd 93       	st	X+, r28
    2568:	dc 93       	st	X, r29
    256a:	17 97       	sbiw	r26, 0x07	; 7
    256c:	ee 83       	std	Y+6, r30	; 0x06
    256e:	ff 83       	std	Y+7, r31	; 0x07
    2570:	c4 83       	std	Z+4, r28	; 0x04
    2572:	d5 83       	std	Z+5, r29	; 0x05
    2574:	8a 87       	std	Y+10, r24	; 0x0a
    2576:	9b 87       	std	Y+11, r25	; 0x0b
    2578:	fc 01       	movw	r30, r24
    257a:	20 81       	ld	r18, Z
    257c:	2f 5f       	subi	r18, 0xFF	; 255
    257e:	20 83       	st	Z, r18
    2580:	df 91       	pop	r29
    2582:	cf 91       	pop	r28
    2584:	1f 91       	pop	r17
    2586:	0f 91       	pop	r16
    2588:	08 95       	ret

0000258a <vListRemove>:
    258a:	fc 01       	movw	r30, r24
    258c:	a4 81       	ldd	r26, Z+4	; 0x04
    258e:	b5 81       	ldd	r27, Z+5	; 0x05
    2590:	86 81       	ldd	r24, Z+6	; 0x06
    2592:	97 81       	ldd	r25, Z+7	; 0x07
    2594:	16 96       	adiw	r26, 0x06	; 6
    2596:	8d 93       	st	X+, r24
    2598:	9c 93       	st	X, r25
    259a:	17 97       	sbiw	r26, 0x07	; 7
    259c:	a6 81       	ldd	r26, Z+6	; 0x06
    259e:	b7 81       	ldd	r27, Z+7	; 0x07
    25a0:	84 81       	ldd	r24, Z+4	; 0x04
    25a2:	95 81       	ldd	r25, Z+5	; 0x05
    25a4:	14 96       	adiw	r26, 0x04	; 4
    25a6:	8d 93       	st	X+, r24
    25a8:	9c 93       	st	X, r25
    25aa:	15 97       	sbiw	r26, 0x05	; 5
    25ac:	a2 85       	ldd	r26, Z+10	; 0x0a
    25ae:	b3 85       	ldd	r27, Z+11	; 0x0b
    25b0:	11 96       	adiw	r26, 0x01	; 1
    25b2:	8d 91       	ld	r24, X+
    25b4:	9c 91       	ld	r25, X
    25b6:	12 97       	sbiw	r26, 0x02	; 2
    25b8:	e8 17       	cp	r30, r24
    25ba:	f9 07       	cpc	r31, r25
    25bc:	31 f4       	brne	.+12     	; 0x25ca <vListRemove+0x40>
    25be:	86 81       	ldd	r24, Z+6	; 0x06
    25c0:	97 81       	ldd	r25, Z+7	; 0x07
    25c2:	11 96       	adiw	r26, 0x01	; 1
    25c4:	8d 93       	st	X+, r24
    25c6:	9c 93       	st	X, r25
    25c8:	12 97       	sbiw	r26, 0x02	; 2
    25ca:	12 86       	std	Z+10, r1	; 0x0a
    25cc:	13 86       	std	Z+11, r1	; 0x0b
    25ce:	8c 91       	ld	r24, X
    25d0:	81 50       	subi	r24, 0x01	; 1
    25d2:	8c 93       	st	X, r24
    25d4:	08 95       	ret

000025d6 <pxPortInitialiseStack>:
    25d6:	80 93 3e 32 	sts	0x323E, r24	; 0x80323e <portStackTopForTask>
    25da:	90 93 3f 32 	sts	0x323F, r25	; 0x80323f <portStackTopForTask+0x1>
    25de:	31 e1       	ldi	r19, 0x11	; 17
    25e0:	fc 01       	movw	r30, r24
    25e2:	30 83       	st	Z, r19
    25e4:	31 97       	sbiw	r30, 0x01	; 1
    25e6:	22 e2       	ldi	r18, 0x22	; 34
    25e8:	20 83       	st	Z, r18
    25ea:	31 97       	sbiw	r30, 0x01	; 1
    25ec:	a3 e3       	ldi	r26, 0x33	; 51
    25ee:	a0 83       	st	Z, r26
    25f0:	31 97       	sbiw	r30, 0x01	; 1
    25f2:	60 83       	st	Z, r22
    25f4:	31 97       	sbiw	r30, 0x01	; 1
    25f6:	70 83       	st	Z, r23
    25f8:	31 97       	sbiw	r30, 0x01	; 1
    25fa:	10 82       	st	Z, r1
    25fc:	31 97       	sbiw	r30, 0x01	; 1
    25fe:	10 82       	st	Z, r1
    2600:	31 97       	sbiw	r30, 0x01	; 1
    2602:	60 e8       	ldi	r22, 0x80	; 128
    2604:	60 83       	st	Z, r22
    2606:	31 97       	sbiw	r30, 0x01	; 1
    2608:	10 82       	st	Z, r1
    260a:	31 97       	sbiw	r30, 0x01	; 1
    260c:	10 82       	st	Z, r1
    260e:	31 97       	sbiw	r30, 0x01	; 1
    2610:	10 82       	st	Z, r1
    2612:	31 97       	sbiw	r30, 0x01	; 1
    2614:	62 e0       	ldi	r22, 0x02	; 2
    2616:	60 83       	st	Z, r22
    2618:	31 97       	sbiw	r30, 0x01	; 1
    261a:	63 e0       	ldi	r22, 0x03	; 3
    261c:	60 83       	st	Z, r22
    261e:	31 97       	sbiw	r30, 0x01	; 1
    2620:	64 e0       	ldi	r22, 0x04	; 4
    2622:	60 83       	st	Z, r22
    2624:	31 97       	sbiw	r30, 0x01	; 1
    2626:	65 e0       	ldi	r22, 0x05	; 5
    2628:	60 83       	st	Z, r22
    262a:	31 97       	sbiw	r30, 0x01	; 1
    262c:	66 e0       	ldi	r22, 0x06	; 6
    262e:	60 83       	st	Z, r22
    2630:	31 97       	sbiw	r30, 0x01	; 1
    2632:	67 e0       	ldi	r22, 0x07	; 7
    2634:	60 83       	st	Z, r22
    2636:	31 97       	sbiw	r30, 0x01	; 1
    2638:	68 e0       	ldi	r22, 0x08	; 8
    263a:	60 83       	st	Z, r22
    263c:	31 97       	sbiw	r30, 0x01	; 1
    263e:	69 e0       	ldi	r22, 0x09	; 9
    2640:	60 83       	st	Z, r22
    2642:	31 97       	sbiw	r30, 0x01	; 1
    2644:	60 e1       	ldi	r22, 0x10	; 16
    2646:	60 83       	st	Z, r22
    2648:	31 97       	sbiw	r30, 0x01	; 1
    264a:	30 83       	st	Z, r19
    264c:	31 97       	sbiw	r30, 0x01	; 1
    264e:	32 e1       	ldi	r19, 0x12	; 18
    2650:	30 83       	st	Z, r19
    2652:	31 97       	sbiw	r30, 0x01	; 1
    2654:	33 e1       	ldi	r19, 0x13	; 19
    2656:	30 83       	st	Z, r19
    2658:	31 97       	sbiw	r30, 0x01	; 1
    265a:	34 e1       	ldi	r19, 0x14	; 20
    265c:	30 83       	st	Z, r19
    265e:	31 97       	sbiw	r30, 0x01	; 1
    2660:	35 e1       	ldi	r19, 0x15	; 21
    2662:	30 83       	st	Z, r19
    2664:	31 97       	sbiw	r30, 0x01	; 1
    2666:	36 e1       	ldi	r19, 0x16	; 22
    2668:	30 83       	st	Z, r19
    266a:	31 97       	sbiw	r30, 0x01	; 1
    266c:	37 e1       	ldi	r19, 0x17	; 23
    266e:	30 83       	st	Z, r19
    2670:	31 97       	sbiw	r30, 0x01	; 1
    2672:	38 e1       	ldi	r19, 0x18	; 24
    2674:	30 83       	st	Z, r19
    2676:	31 97       	sbiw	r30, 0x01	; 1
    2678:	39 e1       	ldi	r19, 0x19	; 25
    267a:	30 83       	st	Z, r19
    267c:	31 97       	sbiw	r30, 0x01	; 1
    267e:	30 e2       	ldi	r19, 0x20	; 32
    2680:	30 83       	st	Z, r19
    2682:	31 97       	sbiw	r30, 0x01	; 1
    2684:	31 e2       	ldi	r19, 0x21	; 33
    2686:	30 83       	st	Z, r19
    2688:	31 97       	sbiw	r30, 0x01	; 1
    268a:	20 83       	st	Z, r18
    268c:	31 97       	sbiw	r30, 0x01	; 1
    268e:	23 e2       	ldi	r18, 0x23	; 35
    2690:	20 83       	st	Z, r18
    2692:	31 97       	sbiw	r30, 0x01	; 1
    2694:	40 83       	st	Z, r20
    2696:	31 97       	sbiw	r30, 0x01	; 1
    2698:	50 83       	st	Z, r21
    269a:	31 97       	sbiw	r30, 0x01	; 1
    269c:	26 e2       	ldi	r18, 0x26	; 38
    269e:	20 83       	st	Z, r18
    26a0:	31 97       	sbiw	r30, 0x01	; 1
    26a2:	27 e2       	ldi	r18, 0x27	; 39
    26a4:	20 83       	st	Z, r18
    26a6:	31 97       	sbiw	r30, 0x01	; 1
    26a8:	28 e2       	ldi	r18, 0x28	; 40
    26aa:	20 83       	st	Z, r18
    26ac:	31 97       	sbiw	r30, 0x01	; 1
    26ae:	29 e2       	ldi	r18, 0x29	; 41
    26b0:	20 83       	st	Z, r18
    26b2:	31 97       	sbiw	r30, 0x01	; 1
    26b4:	20 e3       	ldi	r18, 0x30	; 48
    26b6:	20 83       	st	Z, r18
    26b8:	31 97       	sbiw	r30, 0x01	; 1
    26ba:	21 e3       	ldi	r18, 0x31	; 49
    26bc:	20 83       	st	Z, r18
    26be:	89 97       	sbiw	r24, 0x29	; 41
    26c0:	08 95       	ret

000026c2 <xPortStartScheduler>:
    26c2:	8c e7       	ldi	r24, 0x7C	; 124
    26c4:	80 93 69 0a 	sts	0x0A69, r24	; 0x800a69 <__TEXT_REGION_LENGTH__+0x700a69>
    26c8:	8f ef       	ldi	r24, 0xFF	; 255
    26ca:	80 93 68 0a 	sts	0x0A68, r24	; 0x800a68 <__TEXT_REGION_LENGTH__+0x700a68>
    26ce:	81 e0       	ldi	r24, 0x01	; 1
    26d0:	80 93 40 0a 	sts	0x0A40, r24	; 0x800a40 <__TEXT_REGION_LENGTH__+0x700a40>
    26d4:	90 e1       	ldi	r25, 0x10	; 16
    26d6:	90 93 41 0a 	sts	0x0A41, r25	; 0x800a41 <__TEXT_REGION_LENGTH__+0x700a41>
    26da:	80 93 47 0a 	sts	0x0A47, r24	; 0x800a47 <__TEXT_REGION_LENGTH__+0x700a47>
    26de:	a0 91 fa 31 	lds	r26, 0x31FA	; 0x8031fa <pxCurrentTCB>
    26e2:	b0 91 fb 31 	lds	r27, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    26e6:	cd 91       	ld	r28, X+
    26e8:	cd bf       	out	0x3d, r28	; 61
    26ea:	dd 91       	ld	r29, X+
    26ec:	de bf       	out	0x3e, r29	; 62
    26ee:	ff 91       	pop	r31
    26f0:	ef 91       	pop	r30
    26f2:	df 91       	pop	r29
    26f4:	cf 91       	pop	r28
    26f6:	bf 91       	pop	r27
    26f8:	af 91       	pop	r26
    26fa:	9f 91       	pop	r25
    26fc:	8f 91       	pop	r24
    26fe:	7f 91       	pop	r23
    2700:	6f 91       	pop	r22
    2702:	5f 91       	pop	r21
    2704:	4f 91       	pop	r20
    2706:	3f 91       	pop	r19
    2708:	2f 91       	pop	r18
    270a:	1f 91       	pop	r17
    270c:	0f 91       	pop	r16
    270e:	ff 90       	pop	r15
    2710:	ef 90       	pop	r14
    2712:	df 90       	pop	r13
    2714:	cf 90       	pop	r12
    2716:	bf 90       	pop	r11
    2718:	af 90       	pop	r10
    271a:	9f 90       	pop	r9
    271c:	8f 90       	pop	r8
    271e:	7f 90       	pop	r7
    2720:	6f 90       	pop	r6
    2722:	5f 90       	pop	r5
    2724:	4f 90       	pop	r4
    2726:	3f 90       	pop	r3
    2728:	2f 90       	pop	r2
    272a:	1f 90       	pop	r1
    272c:	0f 90       	pop	r0
    272e:	0c be       	out	0x3c, r0	; 60
    2730:	0f 90       	pop	r0
    2732:	0b be       	out	0x3b, r0	; 59
    2734:	0f 90       	pop	r0
    2736:	0f be       	out	0x3f, r0	; 63
    2738:	0f 90       	pop	r0
    273a:	08 95       	ret
    273c:	08 95       	ret

0000273e <vPortYield>:
    273e:	0f 92       	push	r0
    2740:	0f b6       	in	r0, 0x3f	; 63
    2742:	f8 94       	cli
    2744:	0f 92       	push	r0
    2746:	0b b6       	in	r0, 0x3b	; 59
    2748:	0f 92       	push	r0
    274a:	0c b6       	in	r0, 0x3c	; 60
    274c:	0f 92       	push	r0
    274e:	1f 92       	push	r1
    2750:	11 24       	eor	r1, r1
    2752:	2f 92       	push	r2
    2754:	3f 92       	push	r3
    2756:	4f 92       	push	r4
    2758:	5f 92       	push	r5
    275a:	6f 92       	push	r6
    275c:	7f 92       	push	r7
    275e:	8f 92       	push	r8
    2760:	9f 92       	push	r9
    2762:	af 92       	push	r10
    2764:	bf 92       	push	r11
    2766:	cf 92       	push	r12
    2768:	df 92       	push	r13
    276a:	ef 92       	push	r14
    276c:	ff 92       	push	r15
    276e:	0f 93       	push	r16
    2770:	1f 93       	push	r17
    2772:	2f 93       	push	r18
    2774:	3f 93       	push	r19
    2776:	4f 93       	push	r20
    2778:	5f 93       	push	r21
    277a:	6f 93       	push	r22
    277c:	7f 93       	push	r23
    277e:	8f 93       	push	r24
    2780:	9f 93       	push	r25
    2782:	af 93       	push	r26
    2784:	bf 93       	push	r27
    2786:	cf 93       	push	r28
    2788:	df 93       	push	r29
    278a:	ef 93       	push	r30
    278c:	ff 93       	push	r31
    278e:	a0 91 fa 31 	lds	r26, 0x31FA	; 0x8031fa <pxCurrentTCB>
    2792:	b0 91 fb 31 	lds	r27, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    2796:	0d b6       	in	r0, 0x3d	; 61
    2798:	0d 92       	st	X+, r0
    279a:	0e b6       	in	r0, 0x3e	; 62
    279c:	0d 92       	st	X+, r0
    279e:	0e 94 c2 1a 	call	0x3584	; 0x3584 <vTaskSwitchContext>
    27a2:	a0 91 fa 31 	lds	r26, 0x31FA	; 0x8031fa <pxCurrentTCB>
    27a6:	b0 91 fb 31 	lds	r27, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    27aa:	cd 91       	ld	r28, X+
    27ac:	cd bf       	out	0x3d, r28	; 61
    27ae:	dd 91       	ld	r29, X+
    27b0:	de bf       	out	0x3e, r29	; 62
    27b2:	ff 91       	pop	r31
    27b4:	ef 91       	pop	r30
    27b6:	df 91       	pop	r29
    27b8:	cf 91       	pop	r28
    27ba:	bf 91       	pop	r27
    27bc:	af 91       	pop	r26
    27be:	9f 91       	pop	r25
    27c0:	8f 91       	pop	r24
    27c2:	7f 91       	pop	r23
    27c4:	6f 91       	pop	r22
    27c6:	5f 91       	pop	r21
    27c8:	4f 91       	pop	r20
    27ca:	3f 91       	pop	r19
    27cc:	2f 91       	pop	r18
    27ce:	1f 91       	pop	r17
    27d0:	0f 91       	pop	r16
    27d2:	ff 90       	pop	r15
    27d4:	ef 90       	pop	r14
    27d6:	df 90       	pop	r13
    27d8:	cf 90       	pop	r12
    27da:	bf 90       	pop	r11
    27dc:	af 90       	pop	r10
    27de:	9f 90       	pop	r9
    27e0:	8f 90       	pop	r8
    27e2:	7f 90       	pop	r7
    27e4:	6f 90       	pop	r6
    27e6:	5f 90       	pop	r5
    27e8:	4f 90       	pop	r4
    27ea:	3f 90       	pop	r3
    27ec:	2f 90       	pop	r2
    27ee:	1f 90       	pop	r1
    27f0:	0f 90       	pop	r0
    27f2:	0c be       	out	0x3c, r0	; 60
    27f4:	0f 90       	pop	r0
    27f6:	0b be       	out	0x3b, r0	; 59
    27f8:	0f 90       	pop	r0
    27fa:	0f be       	out	0x3f, r0	; 63
    27fc:	0f 90       	pop	r0
    27fe:	08 95       	ret

00002800 <vPortYieldFromTick>:
    2800:	0f 92       	push	r0
    2802:	0f b6       	in	r0, 0x3f	; 63
    2804:	f8 94       	cli
    2806:	0f 92       	push	r0
    2808:	0b b6       	in	r0, 0x3b	; 59
    280a:	0f 92       	push	r0
    280c:	0c b6       	in	r0, 0x3c	; 60
    280e:	0f 92       	push	r0
    2810:	1f 92       	push	r1
    2812:	11 24       	eor	r1, r1
    2814:	2f 92       	push	r2
    2816:	3f 92       	push	r3
    2818:	4f 92       	push	r4
    281a:	5f 92       	push	r5
    281c:	6f 92       	push	r6
    281e:	7f 92       	push	r7
    2820:	8f 92       	push	r8
    2822:	9f 92       	push	r9
    2824:	af 92       	push	r10
    2826:	bf 92       	push	r11
    2828:	cf 92       	push	r12
    282a:	df 92       	push	r13
    282c:	ef 92       	push	r14
    282e:	ff 92       	push	r15
    2830:	0f 93       	push	r16
    2832:	1f 93       	push	r17
    2834:	2f 93       	push	r18
    2836:	3f 93       	push	r19
    2838:	4f 93       	push	r20
    283a:	5f 93       	push	r21
    283c:	6f 93       	push	r22
    283e:	7f 93       	push	r23
    2840:	8f 93       	push	r24
    2842:	9f 93       	push	r25
    2844:	af 93       	push	r26
    2846:	bf 93       	push	r27
    2848:	cf 93       	push	r28
    284a:	df 93       	push	r29
    284c:	ef 93       	push	r30
    284e:	ff 93       	push	r31
    2850:	a0 91 fa 31 	lds	r26, 0x31FA	; 0x8031fa <pxCurrentTCB>
    2854:	b0 91 fb 31 	lds	r27, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    2858:	0d b6       	in	r0, 0x3d	; 61
    285a:	0d 92       	st	X+, r0
    285c:	0e b6       	in	r0, 0x3e	; 62
    285e:	0d 92       	st	X+, r0
    2860:	0e 94 a4 18 	call	0x3148	; 0x3148 <vTaskIncrementTick>
    2864:	0e 94 c2 1a 	call	0x3584	; 0x3584 <vTaskSwitchContext>
    2868:	a0 91 fa 31 	lds	r26, 0x31FA	; 0x8031fa <pxCurrentTCB>
    286c:	b0 91 fb 31 	lds	r27, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    2870:	cd 91       	ld	r28, X+
    2872:	cd bf       	out	0x3d, r28	; 61
    2874:	dd 91       	ld	r29, X+
    2876:	de bf       	out	0x3e, r29	; 62
    2878:	ff 91       	pop	r31
    287a:	ef 91       	pop	r30
    287c:	df 91       	pop	r29
    287e:	cf 91       	pop	r28
    2880:	bf 91       	pop	r27
    2882:	af 91       	pop	r26
    2884:	9f 91       	pop	r25
    2886:	8f 91       	pop	r24
    2888:	7f 91       	pop	r23
    288a:	6f 91       	pop	r22
    288c:	5f 91       	pop	r21
    288e:	4f 91       	pop	r20
    2890:	3f 91       	pop	r19
    2892:	2f 91       	pop	r18
    2894:	1f 91       	pop	r17
    2896:	0f 91       	pop	r16
    2898:	ff 90       	pop	r15
    289a:	ef 90       	pop	r14
    289c:	df 90       	pop	r13
    289e:	cf 90       	pop	r12
    28a0:	bf 90       	pop	r11
    28a2:	af 90       	pop	r10
    28a4:	9f 90       	pop	r9
    28a6:	8f 90       	pop	r8
    28a8:	7f 90       	pop	r7
    28aa:	6f 90       	pop	r6
    28ac:	5f 90       	pop	r5
    28ae:	4f 90       	pop	r4
    28b0:	3f 90       	pop	r3
    28b2:	2f 90       	pop	r2
    28b4:	1f 90       	pop	r1
    28b6:	0f 90       	pop	r0
    28b8:	0c be       	out	0x3c, r0	; 60
    28ba:	0f 90       	pop	r0
    28bc:	0b be       	out	0x3b, r0	; 59
    28be:	0f 90       	pop	r0
    28c0:	0f be       	out	0x3f, r0	; 63
    28c2:	0f 90       	pop	r0
    28c4:	08 95       	ret

000028c6 <__vector_55>:
    28c6:	e0 e0       	ldi	r30, 0x00	; 0
    28c8:	f9 e0       	ldi	r31, 0x09	; 9
    28ca:	80 a5       	ldd	r24, Z+40	; 0x28
    28cc:	91 a5       	ldd	r25, Z+41	; 0x29
    28ce:	81 50       	subi	r24, 0x01	; 1
    28d0:	93 48       	sbci	r25, 0x83	; 131
    28d2:	80 a7       	std	Z+40, r24	; 0x28
    28d4:	91 a7       	std	Z+41, r25	; 0x29
    28d6:	0e 94 00 14 	call	0x2800	; 0x2800 <vPortYieldFromTick>
    28da:	18 95       	reti

000028dc <prvCopyDataToQueue>:
    28dc:	cf 93       	push	r28
    28de:	df 93       	push	r29
    28e0:	ec 01       	movw	r28, r24
    28e2:	88 a1       	ldd	r24, Y+32	; 0x20
    28e4:	81 11       	cpse	r24, r1
    28e6:	0b c0       	rjmp	.+22     	; 0x28fe <prvCopyDataToQueue+0x22>
    28e8:	88 81       	ld	r24, Y
    28ea:	99 81       	ldd	r25, Y+1	; 0x01
    28ec:	89 2b       	or	r24, r25
    28ee:	e1 f5       	brne	.+120    	; 0x2968 <prvCopyDataToQueue+0x8c>
    28f0:	8a 81       	ldd	r24, Y+2	; 0x02
    28f2:	9b 81       	ldd	r25, Y+3	; 0x03
    28f4:	0e 94 7d 1c 	call	0x38fa	; 0x38fa <vTaskPriorityDisinherit>
    28f8:	1a 82       	std	Y+2, r1	; 0x02
    28fa:	1b 82       	std	Y+3, r1	; 0x03
    28fc:	35 c0       	rjmp	.+106    	; 0x2968 <prvCopyDataToQueue+0x8c>
    28fe:	41 11       	cpse	r20, r1
    2900:	17 c0       	rjmp	.+46     	; 0x2930 <prvCopyDataToQueue+0x54>
    2902:	48 2f       	mov	r20, r24
    2904:	50 e0       	ldi	r21, 0x00	; 0
    2906:	8c 81       	ldd	r24, Y+4	; 0x04
    2908:	9d 81       	ldd	r25, Y+5	; 0x05
    290a:	0e 94 c4 28 	call	0x5188	; 0x5188 <memcpy>
    290e:	28 a1       	ldd	r18, Y+32	; 0x20
    2910:	8c 81       	ldd	r24, Y+4	; 0x04
    2912:	9d 81       	ldd	r25, Y+5	; 0x05
    2914:	82 0f       	add	r24, r18
    2916:	91 1d       	adc	r25, r1
    2918:	8c 83       	std	Y+4, r24	; 0x04
    291a:	9d 83       	std	Y+5, r25	; 0x05
    291c:	2a 81       	ldd	r18, Y+2	; 0x02
    291e:	3b 81       	ldd	r19, Y+3	; 0x03
    2920:	82 17       	cp	r24, r18
    2922:	93 07       	cpc	r25, r19
    2924:	08 f1       	brcs	.+66     	; 0x2968 <prvCopyDataToQueue+0x8c>
    2926:	88 81       	ld	r24, Y
    2928:	99 81       	ldd	r25, Y+1	; 0x01
    292a:	8c 83       	std	Y+4, r24	; 0x04
    292c:	9d 83       	std	Y+5, r25	; 0x05
    292e:	1c c0       	rjmp	.+56     	; 0x2968 <prvCopyDataToQueue+0x8c>
    2930:	48 2f       	mov	r20, r24
    2932:	50 e0       	ldi	r21, 0x00	; 0
    2934:	8e 81       	ldd	r24, Y+6	; 0x06
    2936:	9f 81       	ldd	r25, Y+7	; 0x07
    2938:	0e 94 c4 28 	call	0x5188	; 0x5188 <memcpy>
    293c:	88 a1       	ldd	r24, Y+32	; 0x20
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	91 95       	neg	r25
    2942:	81 95       	neg	r24
    2944:	91 09       	sbc	r25, r1
    2946:	2e 81       	ldd	r18, Y+6	; 0x06
    2948:	3f 81       	ldd	r19, Y+7	; 0x07
    294a:	28 0f       	add	r18, r24
    294c:	39 1f       	adc	r19, r25
    294e:	2e 83       	std	Y+6, r18	; 0x06
    2950:	3f 83       	std	Y+7, r19	; 0x07
    2952:	48 81       	ld	r20, Y
    2954:	59 81       	ldd	r21, Y+1	; 0x01
    2956:	24 17       	cp	r18, r20
    2958:	35 07       	cpc	r19, r21
    295a:	30 f4       	brcc	.+12     	; 0x2968 <prvCopyDataToQueue+0x8c>
    295c:	2a 81       	ldd	r18, Y+2	; 0x02
    295e:	3b 81       	ldd	r19, Y+3	; 0x03
    2960:	82 0f       	add	r24, r18
    2962:	93 1f       	adc	r25, r19
    2964:	8e 83       	std	Y+6, r24	; 0x06
    2966:	9f 83       	std	Y+7, r25	; 0x07
    2968:	8e 8d       	ldd	r24, Y+30	; 0x1e
    296a:	8f 5f       	subi	r24, 0xFF	; 255
    296c:	8e 8f       	std	Y+30, r24	; 0x1e
    296e:	df 91       	pop	r29
    2970:	cf 91       	pop	r28
    2972:	08 95       	ret

00002974 <prvCopyDataFromQueue>:
    2974:	fc 01       	movw	r30, r24
    2976:	80 81       	ld	r24, Z
    2978:	91 81       	ldd	r25, Z+1	; 0x01
    297a:	00 97       	sbiw	r24, 0x00	; 0
    297c:	a1 f0       	breq	.+40     	; 0x29a6 <prvCopyDataFromQueue+0x32>
    297e:	40 a1       	ldd	r20, Z+32	; 0x20
    2980:	50 e0       	ldi	r21, 0x00	; 0
    2982:	26 81       	ldd	r18, Z+6	; 0x06
    2984:	37 81       	ldd	r19, Z+7	; 0x07
    2986:	24 0f       	add	r18, r20
    2988:	35 1f       	adc	r19, r21
    298a:	26 83       	std	Z+6, r18	; 0x06
    298c:	37 83       	std	Z+7, r19	; 0x07
    298e:	a2 81       	ldd	r26, Z+2	; 0x02
    2990:	b3 81       	ldd	r27, Z+3	; 0x03
    2992:	2a 17       	cp	r18, r26
    2994:	3b 07       	cpc	r19, r27
    2996:	10 f0       	brcs	.+4      	; 0x299c <prvCopyDataFromQueue+0x28>
    2998:	86 83       	std	Z+6, r24	; 0x06
    299a:	97 83       	std	Z+7, r25	; 0x07
    299c:	cb 01       	movw	r24, r22
    299e:	66 81       	ldd	r22, Z+6	; 0x06
    29a0:	77 81       	ldd	r23, Z+7	; 0x07
    29a2:	0e 94 c4 28 	call	0x5188	; 0x5188 <memcpy>
    29a6:	08 95       	ret

000029a8 <prvUnlockQueue>:
    29a8:	0f 93       	push	r16
    29aa:	1f 93       	push	r17
    29ac:	cf 93       	push	r28
    29ae:	df 93       	push	r29
    29b0:	ec 01       	movw	r28, r24
    29b2:	0f b6       	in	r0, 0x3f	; 63
    29b4:	f8 94       	cli
    29b6:	0f 92       	push	r0
    29b8:	8a a1       	ldd	r24, Y+34	; 0x22
    29ba:	18 16       	cp	r1, r24
    29bc:	b4 f4       	brge	.+44     	; 0x29ea <prvUnlockQueue+0x42>
    29be:	8b 89       	ldd	r24, Y+19	; 0x13
    29c0:	81 11       	cpse	r24, r1
    29c2:	05 c0       	rjmp	.+10     	; 0x29ce <prvUnlockQueue+0x26>
    29c4:	12 c0       	rjmp	.+36     	; 0x29ea <prvUnlockQueue+0x42>
    29c6:	8b 89       	ldd	r24, Y+19	; 0x13
    29c8:	81 11       	cpse	r24, r1
    29ca:	04 c0       	rjmp	.+8      	; 0x29d4 <prvUnlockQueue+0x2c>
    29cc:	0e c0       	rjmp	.+28     	; 0x29ea <prvUnlockQueue+0x42>
    29ce:	8e 01       	movw	r16, r28
    29d0:	0d 5e       	subi	r16, 0xED	; 237
    29d2:	1f 4f       	sbci	r17, 0xFF	; 255
    29d4:	c8 01       	movw	r24, r16
    29d6:	0e 94 49 1b 	call	0x3692	; 0x3692 <xTaskRemoveFromEventList>
    29da:	81 11       	cpse	r24, r1
    29dc:	0e 94 06 1c 	call	0x380c	; 0x380c <vTaskMissedYield>
    29e0:	8a a1       	ldd	r24, Y+34	; 0x22
    29e2:	81 50       	subi	r24, 0x01	; 1
    29e4:	8a a3       	std	Y+34, r24	; 0x22
    29e6:	18 16       	cp	r1, r24
    29e8:	74 f3       	brlt	.-36     	; 0x29c6 <prvUnlockQueue+0x1e>
    29ea:	8f ef       	ldi	r24, 0xFF	; 255
    29ec:	8a a3       	std	Y+34, r24	; 0x22
    29ee:	0f 90       	pop	r0
    29f0:	0f be       	out	0x3f, r0	; 63
    29f2:	0f b6       	in	r0, 0x3f	; 63
    29f4:	f8 94       	cli
    29f6:	0f 92       	push	r0
    29f8:	89 a1       	ldd	r24, Y+33	; 0x21
    29fa:	18 16       	cp	r1, r24
    29fc:	b4 f4       	brge	.+44     	; 0x2a2a <prvUnlockQueue+0x82>
    29fe:	88 85       	ldd	r24, Y+8	; 0x08
    2a00:	81 11       	cpse	r24, r1
    2a02:	05 c0       	rjmp	.+10     	; 0x2a0e <prvUnlockQueue+0x66>
    2a04:	12 c0       	rjmp	.+36     	; 0x2a2a <prvUnlockQueue+0x82>
    2a06:	88 85       	ldd	r24, Y+8	; 0x08
    2a08:	81 11       	cpse	r24, r1
    2a0a:	04 c0       	rjmp	.+8      	; 0x2a14 <prvUnlockQueue+0x6c>
    2a0c:	0e c0       	rjmp	.+28     	; 0x2a2a <prvUnlockQueue+0x82>
    2a0e:	8e 01       	movw	r16, r28
    2a10:	08 5f       	subi	r16, 0xF8	; 248
    2a12:	1f 4f       	sbci	r17, 0xFF	; 255
    2a14:	c8 01       	movw	r24, r16
    2a16:	0e 94 49 1b 	call	0x3692	; 0x3692 <xTaskRemoveFromEventList>
    2a1a:	81 11       	cpse	r24, r1
    2a1c:	0e 94 06 1c 	call	0x380c	; 0x380c <vTaskMissedYield>
    2a20:	89 a1       	ldd	r24, Y+33	; 0x21
    2a22:	81 50       	subi	r24, 0x01	; 1
    2a24:	89 a3       	std	Y+33, r24	; 0x21
    2a26:	18 16       	cp	r1, r24
    2a28:	74 f3       	brlt	.-36     	; 0x2a06 <prvUnlockQueue+0x5e>
    2a2a:	8f ef       	ldi	r24, 0xFF	; 255
    2a2c:	89 a3       	std	Y+33, r24	; 0x21
    2a2e:	0f 90       	pop	r0
    2a30:	0f be       	out	0x3f, r0	; 63
    2a32:	df 91       	pop	r29
    2a34:	cf 91       	pop	r28
    2a36:	1f 91       	pop	r17
    2a38:	0f 91       	pop	r16
    2a3a:	08 95       	ret

00002a3c <xQueueGenericReset>:
    2a3c:	1f 93       	push	r17
    2a3e:	cf 93       	push	r28
    2a40:	df 93       	push	r29
    2a42:	61 30       	cpi	r22, 0x01	; 1
    2a44:	59 f0       	breq	.+22     	; 0x2a5c <xQueueGenericReset+0x20>
    2a46:	fc 01       	movw	r30, r24
    2a48:	23 89       	ldd	r18, Z+19	; 0x13
    2a4a:	30 85       	ldd	r19, Z+8	; 0x08
    2a4c:	31 11       	cpse	r19, r1
    2a4e:	2c c0       	rjmp	.+88     	; 0x2aa8 <xQueueGenericReset+0x6c>
    2a50:	11 e0       	ldi	r17, 0x01	; 1
    2a52:	21 11       	cpse	r18, r1
    2a54:	10 e0       	ldi	r17, 0x00	; 0
    2a56:	21 11       	cpse	r18, r1
    2a58:	28 c0       	rjmp	.+80     	; 0x2aaa <xQueueGenericReset+0x6e>
    2a5a:	01 c0       	rjmp	.+2      	; 0x2a5e <xQueueGenericReset+0x22>
    2a5c:	11 e0       	ldi	r17, 0x01	; 1
    2a5e:	ec 01       	movw	r28, r24
    2a60:	48 81       	ld	r20, Y
    2a62:	59 81       	ldd	r21, Y+1	; 0x01
    2a64:	28 a1       	ldd	r18, Y+32	; 0x20
    2a66:	30 e0       	ldi	r19, 0x00	; 0
    2a68:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2a6a:	62 9f       	mul	r22, r18
    2a6c:	c0 01       	movw	r24, r0
    2a6e:	63 9f       	mul	r22, r19
    2a70:	90 0d       	add	r25, r0
    2a72:	11 24       	eor	r1, r1
    2a74:	ba 01       	movw	r22, r20
    2a76:	68 0f       	add	r22, r24
    2a78:	79 1f       	adc	r23, r25
    2a7a:	6a 83       	std	Y+2, r22	; 0x02
    2a7c:	7b 83       	std	Y+3, r23	; 0x03
    2a7e:	1e 8e       	std	Y+30, r1	; 0x1e
    2a80:	4c 83       	std	Y+4, r20	; 0x04
    2a82:	5d 83       	std	Y+5, r21	; 0x05
    2a84:	82 1b       	sub	r24, r18
    2a86:	93 0b       	sbc	r25, r19
    2a88:	84 0f       	add	r24, r20
    2a8a:	95 1f       	adc	r25, r21
    2a8c:	8e 83       	std	Y+6, r24	; 0x06
    2a8e:	9f 83       	std	Y+7, r25	; 0x07
    2a90:	8f ef       	ldi	r24, 0xFF	; 255
    2a92:	89 a3       	std	Y+33, r24	; 0x21
    2a94:	8a a3       	std	Y+34, r24	; 0x22
    2a96:	ce 01       	movw	r24, r28
    2a98:	08 96       	adiw	r24, 0x08	; 8
    2a9a:	0e 94 3e 12 	call	0x247c	; 0x247c <vListInitialise>
    2a9e:	ce 01       	movw	r24, r28
    2aa0:	43 96       	adiw	r24, 0x13	; 19
    2aa2:	0e 94 3e 12 	call	0x247c	; 0x247c <vListInitialise>
    2aa6:	01 c0       	rjmp	.+2      	; 0x2aaa <xQueueGenericReset+0x6e>
    2aa8:	10 e0       	ldi	r17, 0x00	; 0
    2aaa:	81 2f       	mov	r24, r17
    2aac:	df 91       	pop	r29
    2aae:	cf 91       	pop	r28
    2ab0:	1f 91       	pop	r17
    2ab2:	08 95       	ret

00002ab4 <xQueueGenericCreate>:
    2ab4:	0f 93       	push	r16
    2ab6:	1f 93       	push	r17
    2ab8:	cf 93       	push	r28
    2aba:	df 93       	push	r29
    2abc:	88 23       	and	r24, r24
    2abe:	01 f1       	breq	.+64     	; 0x2b00 <xQueueGenericCreate+0x4c>
    2ac0:	06 2f       	mov	r16, r22
    2ac2:	18 2f       	mov	r17, r24
    2ac4:	83 e2       	ldi	r24, 0x23	; 35
    2ac6:	90 e0       	ldi	r25, 0x00	; 0
    2ac8:	0e 94 71 11 	call	0x22e2	; 0x22e2 <pvPortMalloc>
    2acc:	ec 01       	movw	r28, r24
    2ace:	89 2b       	or	r24, r25
    2ad0:	c9 f0       	breq	.+50     	; 0x2b04 <xQueueGenericCreate+0x50>
    2ad2:	10 9f       	mul	r17, r16
    2ad4:	c0 01       	movw	r24, r0
    2ad6:	11 24       	eor	r1, r1
    2ad8:	01 96       	adiw	r24, 0x01	; 1
    2ada:	0e 94 71 11 	call	0x22e2	; 0x22e2 <pvPortMalloc>
    2ade:	88 83       	st	Y, r24
    2ae0:	99 83       	std	Y+1, r25	; 0x01
    2ae2:	89 2b       	or	r24, r25
    2ae4:	39 f0       	breq	.+14     	; 0x2af4 <xQueueGenericCreate+0x40>
    2ae6:	1f 8f       	std	Y+31, r17	; 0x1f
    2ae8:	08 a3       	std	Y+32, r16	; 0x20
    2aea:	61 e0       	ldi	r22, 0x01	; 1
    2aec:	ce 01       	movw	r24, r28
    2aee:	0e 94 1e 15 	call	0x2a3c	; 0x2a3c <xQueueGenericReset>
    2af2:	08 c0       	rjmp	.+16     	; 0x2b04 <xQueueGenericCreate+0x50>
    2af4:	ce 01       	movw	r24, r28
    2af6:	0e 94 0b 12 	call	0x2416	; 0x2416 <vPortFree>
    2afa:	c0 e0       	ldi	r28, 0x00	; 0
    2afc:	d0 e0       	ldi	r29, 0x00	; 0
    2afe:	02 c0       	rjmp	.+4      	; 0x2b04 <xQueueGenericCreate+0x50>
    2b00:	c0 e0       	ldi	r28, 0x00	; 0
    2b02:	d0 e0       	ldi	r29, 0x00	; 0
    2b04:	ce 01       	movw	r24, r28
    2b06:	df 91       	pop	r29
    2b08:	cf 91       	pop	r28
    2b0a:	1f 91       	pop	r17
    2b0c:	0f 91       	pop	r16
    2b0e:	08 95       	ret

00002b10 <xQueueGenericSend>:
    2b10:	af 92       	push	r10
    2b12:	bf 92       	push	r11
    2b14:	cf 92       	push	r12
    2b16:	df 92       	push	r13
    2b18:	ef 92       	push	r14
    2b1a:	ff 92       	push	r15
    2b1c:	0f 93       	push	r16
    2b1e:	1f 93       	push	r17
    2b20:	cf 93       	push	r28
    2b22:	df 93       	push	r29
    2b24:	cd b7       	in	r28, 0x3d	; 61
    2b26:	de b7       	in	r29, 0x3e	; 62
    2b28:	29 97       	sbiw	r28, 0x09	; 9
    2b2a:	cd bf       	out	0x3d, r28	; 61
    2b2c:	de bf       	out	0x3e, r29	; 62
    2b2e:	7c 01       	movw	r14, r24
    2b30:	5b 01       	movw	r10, r22
    2b32:	2e 83       	std	Y+6, r18	; 0x06
    2b34:	3f 83       	std	Y+7, r19	; 0x07
    2b36:	48 87       	std	Y+8, r20	; 0x08
    2b38:	59 87       	std	Y+9, r21	; 0x09
    2b3a:	10 e0       	ldi	r17, 0x00	; 0
    2b3c:	6c 01       	movw	r12, r24
    2b3e:	88 e0       	ldi	r24, 0x08	; 8
    2b40:	c8 0e       	add	r12, r24
    2b42:	d1 1c       	adc	r13, r1
    2b44:	0f b6       	in	r0, 0x3f	; 63
    2b46:	f8 94       	cli
    2b48:	0f 92       	push	r0
    2b4a:	f7 01       	movw	r30, r14
    2b4c:	96 8d       	ldd	r25, Z+30	; 0x1e
    2b4e:	87 8d       	ldd	r24, Z+31	; 0x1f
    2b50:	98 17       	cp	r25, r24
    2b52:	a8 f4       	brcc	.+42     	; 0x2b7e <xQueueGenericSend+0x6e>
    2b54:	40 2f       	mov	r20, r16
    2b56:	b5 01       	movw	r22, r10
    2b58:	c7 01       	movw	r24, r14
    2b5a:	0e 94 6e 14 	call	0x28dc	; 0x28dc <prvCopyDataToQueue>
    2b5e:	f7 01       	movw	r30, r14
    2b60:	83 89       	ldd	r24, Z+19	; 0x13
    2b62:	88 23       	and	r24, r24
    2b64:	41 f0       	breq	.+16     	; 0x2b76 <xQueueGenericSend+0x66>
    2b66:	c7 01       	movw	r24, r14
    2b68:	43 96       	adiw	r24, 0x13	; 19
    2b6a:	0e 94 49 1b 	call	0x3692	; 0x3692 <xTaskRemoveFromEventList>
    2b6e:	81 30       	cpi	r24, 0x01	; 1
    2b70:	11 f4       	brne	.+4      	; 0x2b76 <xQueueGenericSend+0x66>
    2b72:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    2b76:	0f 90       	pop	r0
    2b78:	0f be       	out	0x3f, r0	; 63
    2b7a:	81 e0       	ldi	r24, 0x01	; 1
    2b7c:	56 c0       	rjmp	.+172    	; 0x2c2a <xQueueGenericSend+0x11a>
    2b7e:	8e 81       	ldd	r24, Y+6	; 0x06
    2b80:	9f 81       	ldd	r25, Y+7	; 0x07
    2b82:	a8 85       	ldd	r26, Y+8	; 0x08
    2b84:	b9 85       	ldd	r27, Y+9	; 0x09
    2b86:	89 2b       	or	r24, r25
    2b88:	8a 2b       	or	r24, r26
    2b8a:	8b 2b       	or	r24, r27
    2b8c:	21 f4       	brne	.+8      	; 0x2b96 <xQueueGenericSend+0x86>
    2b8e:	0f 90       	pop	r0
    2b90:	0f be       	out	0x3f, r0	; 63
    2b92:	80 e0       	ldi	r24, 0x00	; 0
    2b94:	4a c0       	rjmp	.+148    	; 0x2c2a <xQueueGenericSend+0x11a>
    2b96:	11 11       	cpse	r17, r1
    2b98:	05 c0       	rjmp	.+10     	; 0x2ba4 <xQueueGenericSend+0x94>
    2b9a:	ce 01       	movw	r24, r28
    2b9c:	01 96       	adiw	r24, 0x01	; 1
    2b9e:	0e 94 88 1b 	call	0x3710	; 0x3710 <vTaskSetTimeOutState>
    2ba2:	11 e0       	ldi	r17, 0x01	; 1
    2ba4:	0f 90       	pop	r0
    2ba6:	0f be       	out	0x3f, r0	; 63
    2ba8:	0e 94 88 18 	call	0x3110	; 0x3110 <vTaskSuspendAll>
    2bac:	0f b6       	in	r0, 0x3f	; 63
    2bae:	f8 94       	cli
    2bb0:	0f 92       	push	r0
    2bb2:	f7 01       	movw	r30, r14
    2bb4:	81 a1       	ldd	r24, Z+33	; 0x21
    2bb6:	8f 3f       	cpi	r24, 0xFF	; 255
    2bb8:	09 f4       	brne	.+2      	; 0x2bbc <xQueueGenericSend+0xac>
    2bba:	11 a2       	std	Z+33, r1	; 0x21
    2bbc:	f7 01       	movw	r30, r14
    2bbe:	82 a1       	ldd	r24, Z+34	; 0x22
    2bc0:	8f 3f       	cpi	r24, 0xFF	; 255
    2bc2:	09 f4       	brne	.+2      	; 0x2bc6 <xQueueGenericSend+0xb6>
    2bc4:	12 a2       	std	Z+34, r1	; 0x22
    2bc6:	0f 90       	pop	r0
    2bc8:	0f be       	out	0x3f, r0	; 63
    2bca:	be 01       	movw	r22, r28
    2bcc:	6a 5f       	subi	r22, 0xFA	; 250
    2bce:	7f 4f       	sbci	r23, 0xFF	; 255
    2bd0:	ce 01       	movw	r24, r28
    2bd2:	01 96       	adiw	r24, 0x01	; 1
    2bd4:	0e 94 99 1b 	call	0x3732	; 0x3732 <xTaskCheckForTimeOut>
    2bd8:	81 11       	cpse	r24, r1
    2bda:	21 c0       	rjmp	.+66     	; 0x2c1e <xQueueGenericSend+0x10e>
    2bdc:	0f b6       	in	r0, 0x3f	; 63
    2bde:	f8 94       	cli
    2be0:	0f 92       	push	r0
    2be2:	f7 01       	movw	r30, r14
    2be4:	96 8d       	ldd	r25, Z+30	; 0x1e
    2be6:	0f 90       	pop	r0
    2be8:	0f be       	out	0x3f, r0	; 63
    2bea:	87 8d       	ldd	r24, Z+31	; 0x1f
    2bec:	98 13       	cpse	r25, r24
    2bee:	11 c0       	rjmp	.+34     	; 0x2c12 <xQueueGenericSend+0x102>
    2bf0:	4e 81       	ldd	r20, Y+6	; 0x06
    2bf2:	5f 81       	ldd	r21, Y+7	; 0x07
    2bf4:	68 85       	ldd	r22, Y+8	; 0x08
    2bf6:	79 85       	ldd	r23, Y+9	; 0x09
    2bf8:	c6 01       	movw	r24, r12
    2bfa:	0e 94 1f 1b 	call	0x363e	; 0x363e <vTaskPlaceOnEventList>
    2bfe:	c7 01       	movw	r24, r14
    2c00:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <prvUnlockQueue>
    2c04:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    2c08:	81 11       	cpse	r24, r1
    2c0a:	9c cf       	rjmp	.-200    	; 0x2b44 <xQueueGenericSend+0x34>
    2c0c:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    2c10:	99 cf       	rjmp	.-206    	; 0x2b44 <xQueueGenericSend+0x34>
    2c12:	c7 01       	movw	r24, r14
    2c14:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <prvUnlockQueue>
    2c18:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    2c1c:	93 cf       	rjmp	.-218    	; 0x2b44 <xQueueGenericSend+0x34>
    2c1e:	c7 01       	movw	r24, r14
    2c20:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <prvUnlockQueue>
    2c24:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    2c28:	80 e0       	ldi	r24, 0x00	; 0
    2c2a:	29 96       	adiw	r28, 0x09	; 9
    2c2c:	cd bf       	out	0x3d, r28	; 61
    2c2e:	de bf       	out	0x3e, r29	; 62
    2c30:	df 91       	pop	r29
    2c32:	cf 91       	pop	r28
    2c34:	1f 91       	pop	r17
    2c36:	0f 91       	pop	r16
    2c38:	ff 90       	pop	r15
    2c3a:	ef 90       	pop	r14
    2c3c:	df 90       	pop	r13
    2c3e:	cf 90       	pop	r12
    2c40:	bf 90       	pop	r11
    2c42:	af 90       	pop	r10
    2c44:	08 95       	ret

00002c46 <xQueueGenericReceive>:
    2c46:	af 92       	push	r10
    2c48:	bf 92       	push	r11
    2c4a:	cf 92       	push	r12
    2c4c:	df 92       	push	r13
    2c4e:	ef 92       	push	r14
    2c50:	ff 92       	push	r15
    2c52:	0f 93       	push	r16
    2c54:	1f 93       	push	r17
    2c56:	cf 93       	push	r28
    2c58:	df 93       	push	r29
    2c5a:	cd b7       	in	r28, 0x3d	; 61
    2c5c:	de b7       	in	r29, 0x3e	; 62
    2c5e:	29 97       	sbiw	r28, 0x09	; 9
    2c60:	cd bf       	out	0x3d, r28	; 61
    2c62:	de bf       	out	0x3e, r29	; 62
    2c64:	7c 01       	movw	r14, r24
    2c66:	5b 01       	movw	r10, r22
    2c68:	2e 83       	std	Y+6, r18	; 0x06
    2c6a:	3f 83       	std	Y+7, r19	; 0x07
    2c6c:	48 87       	std	Y+8, r20	; 0x08
    2c6e:	59 87       	std	Y+9, r21	; 0x09
    2c70:	10 e0       	ldi	r17, 0x00	; 0
    2c72:	6c 01       	movw	r12, r24
    2c74:	83 e1       	ldi	r24, 0x13	; 19
    2c76:	c8 0e       	add	r12, r24
    2c78:	d1 1c       	adc	r13, r1
    2c7a:	0f b6       	in	r0, 0x3f	; 63
    2c7c:	f8 94       	cli
    2c7e:	0f 92       	push	r0
    2c80:	f7 01       	movw	r30, r14
    2c82:	86 8d       	ldd	r24, Z+30	; 0x1e
    2c84:	88 23       	and	r24, r24
    2c86:	99 f1       	breq	.+102    	; 0x2cee <xQueueGenericReceive+0xa8>
    2c88:	c6 80       	ldd	r12, Z+6	; 0x06
    2c8a:	d7 80       	ldd	r13, Z+7	; 0x07
    2c8c:	b5 01       	movw	r22, r10
    2c8e:	c7 01       	movw	r24, r14
    2c90:	0e 94 ba 14 	call	0x2974	; 0x2974 <prvCopyDataFromQueue>
    2c94:	01 11       	cpse	r16, r1
    2c96:	1a c0       	rjmp	.+52     	; 0x2ccc <xQueueGenericReceive+0x86>
    2c98:	f7 01       	movw	r30, r14
    2c9a:	86 8d       	ldd	r24, Z+30	; 0x1e
    2c9c:	81 50       	subi	r24, 0x01	; 1
    2c9e:	86 8f       	std	Z+30, r24	; 0x1e
    2ca0:	80 81       	ld	r24, Z
    2ca2:	91 81       	ldd	r25, Z+1	; 0x01
    2ca4:	89 2b       	or	r24, r25
    2ca6:	29 f4       	brne	.+10     	; 0x2cb2 <xQueueGenericReceive+0x6c>
    2ca8:	0e 94 23 1c 	call	0x3846	; 0x3846 <xTaskGetCurrentTaskHandle>
    2cac:	f7 01       	movw	r30, r14
    2cae:	82 83       	std	Z+2, r24	; 0x02
    2cb0:	93 83       	std	Z+3, r25	; 0x03
    2cb2:	f7 01       	movw	r30, r14
    2cb4:	80 85       	ldd	r24, Z+8	; 0x08
    2cb6:	88 23       	and	r24, r24
    2cb8:	b1 f0       	breq	.+44     	; 0x2ce6 <xQueueGenericReceive+0xa0>
    2cba:	c7 01       	movw	r24, r14
    2cbc:	08 96       	adiw	r24, 0x08	; 8
    2cbe:	0e 94 49 1b 	call	0x3692	; 0x3692 <xTaskRemoveFromEventList>
    2cc2:	81 30       	cpi	r24, 0x01	; 1
    2cc4:	81 f4       	brne	.+32     	; 0x2ce6 <xQueueGenericReceive+0xa0>
    2cc6:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    2cca:	0d c0       	rjmp	.+26     	; 0x2ce6 <xQueueGenericReceive+0xa0>
    2ccc:	f7 01       	movw	r30, r14
    2cce:	c6 82       	std	Z+6, r12	; 0x06
    2cd0:	d7 82       	std	Z+7, r13	; 0x07
    2cd2:	83 89       	ldd	r24, Z+19	; 0x13
    2cd4:	88 23       	and	r24, r24
    2cd6:	39 f0       	breq	.+14     	; 0x2ce6 <xQueueGenericReceive+0xa0>
    2cd8:	c7 01       	movw	r24, r14
    2cda:	43 96       	adiw	r24, 0x13	; 19
    2cdc:	0e 94 49 1b 	call	0x3692	; 0x3692 <xTaskRemoveFromEventList>
    2ce0:	81 11       	cpse	r24, r1
    2ce2:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    2ce6:	0f 90       	pop	r0
    2ce8:	0f be       	out	0x3f, r0	; 63
    2cea:	81 e0       	ldi	r24, 0x01	; 1
    2cec:	62 c0       	rjmp	.+196    	; 0x2db2 <xQueueGenericReceive+0x16c>
    2cee:	8e 81       	ldd	r24, Y+6	; 0x06
    2cf0:	9f 81       	ldd	r25, Y+7	; 0x07
    2cf2:	a8 85       	ldd	r26, Y+8	; 0x08
    2cf4:	b9 85       	ldd	r27, Y+9	; 0x09
    2cf6:	89 2b       	or	r24, r25
    2cf8:	8a 2b       	or	r24, r26
    2cfa:	8b 2b       	or	r24, r27
    2cfc:	21 f4       	brne	.+8      	; 0x2d06 <xQueueGenericReceive+0xc0>
    2cfe:	0f 90       	pop	r0
    2d00:	0f be       	out	0x3f, r0	; 63
    2d02:	80 e0       	ldi	r24, 0x00	; 0
    2d04:	56 c0       	rjmp	.+172    	; 0x2db2 <xQueueGenericReceive+0x16c>
    2d06:	11 11       	cpse	r17, r1
    2d08:	05 c0       	rjmp	.+10     	; 0x2d14 <xQueueGenericReceive+0xce>
    2d0a:	ce 01       	movw	r24, r28
    2d0c:	01 96       	adiw	r24, 0x01	; 1
    2d0e:	0e 94 88 1b 	call	0x3710	; 0x3710 <vTaskSetTimeOutState>
    2d12:	11 e0       	ldi	r17, 0x01	; 1
    2d14:	0f 90       	pop	r0
    2d16:	0f be       	out	0x3f, r0	; 63
    2d18:	0e 94 88 18 	call	0x3110	; 0x3110 <vTaskSuspendAll>
    2d1c:	0f b6       	in	r0, 0x3f	; 63
    2d1e:	f8 94       	cli
    2d20:	0f 92       	push	r0
    2d22:	f7 01       	movw	r30, r14
    2d24:	81 a1       	ldd	r24, Z+33	; 0x21
    2d26:	8f 3f       	cpi	r24, 0xFF	; 255
    2d28:	09 f4       	brne	.+2      	; 0x2d2c <xQueueGenericReceive+0xe6>
    2d2a:	11 a2       	std	Z+33, r1	; 0x21
    2d2c:	f7 01       	movw	r30, r14
    2d2e:	82 a1       	ldd	r24, Z+34	; 0x22
    2d30:	8f 3f       	cpi	r24, 0xFF	; 255
    2d32:	09 f4       	brne	.+2      	; 0x2d36 <xQueueGenericReceive+0xf0>
    2d34:	12 a2       	std	Z+34, r1	; 0x22
    2d36:	0f 90       	pop	r0
    2d38:	0f be       	out	0x3f, r0	; 63
    2d3a:	be 01       	movw	r22, r28
    2d3c:	6a 5f       	subi	r22, 0xFA	; 250
    2d3e:	7f 4f       	sbci	r23, 0xFF	; 255
    2d40:	ce 01       	movw	r24, r28
    2d42:	01 96       	adiw	r24, 0x01	; 1
    2d44:	0e 94 99 1b 	call	0x3732	; 0x3732 <xTaskCheckForTimeOut>
    2d48:	81 11       	cpse	r24, r1
    2d4a:	2d c0       	rjmp	.+90     	; 0x2da6 <xQueueGenericReceive+0x160>
    2d4c:	0f b6       	in	r0, 0x3f	; 63
    2d4e:	f8 94       	cli
    2d50:	0f 92       	push	r0
    2d52:	f7 01       	movw	r30, r14
    2d54:	86 8d       	ldd	r24, Z+30	; 0x1e
    2d56:	0f 90       	pop	r0
    2d58:	0f be       	out	0x3f, r0	; 63
    2d5a:	81 11       	cpse	r24, r1
    2d5c:	1e c0       	rjmp	.+60     	; 0x2d9a <xQueueGenericReceive+0x154>
    2d5e:	80 81       	ld	r24, Z
    2d60:	91 81       	ldd	r25, Z+1	; 0x01
    2d62:	89 2b       	or	r24, r25
    2d64:	49 f4       	brne	.+18     	; 0x2d78 <xQueueGenericReceive+0x132>
    2d66:	0f b6       	in	r0, 0x3f	; 63
    2d68:	f8 94       	cli
    2d6a:	0f 92       	push	r0
    2d6c:	82 81       	ldd	r24, Z+2	; 0x02
    2d6e:	93 81       	ldd	r25, Z+3	; 0x03
    2d70:	0e 94 28 1c 	call	0x3850	; 0x3850 <vTaskPriorityInherit>
    2d74:	0f 90       	pop	r0
    2d76:	0f be       	out	0x3f, r0	; 63
    2d78:	4e 81       	ldd	r20, Y+6	; 0x06
    2d7a:	5f 81       	ldd	r21, Y+7	; 0x07
    2d7c:	68 85       	ldd	r22, Y+8	; 0x08
    2d7e:	79 85       	ldd	r23, Y+9	; 0x09
    2d80:	c6 01       	movw	r24, r12
    2d82:	0e 94 1f 1b 	call	0x363e	; 0x363e <vTaskPlaceOnEventList>
    2d86:	c7 01       	movw	r24, r14
    2d88:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <prvUnlockQueue>
    2d8c:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    2d90:	81 11       	cpse	r24, r1
    2d92:	73 cf       	rjmp	.-282    	; 0x2c7a <xQueueGenericReceive+0x34>
    2d94:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    2d98:	70 cf       	rjmp	.-288    	; 0x2c7a <xQueueGenericReceive+0x34>
    2d9a:	c7 01       	movw	r24, r14
    2d9c:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <prvUnlockQueue>
    2da0:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    2da4:	6a cf       	rjmp	.-300    	; 0x2c7a <xQueueGenericReceive+0x34>
    2da6:	c7 01       	movw	r24, r14
    2da8:	0e 94 d4 14 	call	0x29a8	; 0x29a8 <prvUnlockQueue>
    2dac:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    2db0:	80 e0       	ldi	r24, 0x00	; 0
    2db2:	29 96       	adiw	r28, 0x09	; 9
    2db4:	cd bf       	out	0x3d, r28	; 61
    2db6:	de bf       	out	0x3e, r29	; 62
    2db8:	df 91       	pop	r29
    2dba:	cf 91       	pop	r28
    2dbc:	1f 91       	pop	r17
    2dbe:	0f 91       	pop	r16
    2dc0:	ff 90       	pop	r15
    2dc2:	ef 90       	pop	r14
    2dc4:	df 90       	pop	r13
    2dc6:	cf 90       	pop	r12
    2dc8:	bf 90       	pop	r11
    2dca:	af 90       	pop	r10
    2dcc:	08 95       	ret

00002dce <uxQueueMessagesWaiting>:
    2dce:	0f b6       	in	r0, 0x3f	; 63
    2dd0:	f8 94       	cli
    2dd2:	0f 92       	push	r0
    2dd4:	fc 01       	movw	r30, r24
    2dd6:	86 8d       	ldd	r24, Z+30	; 0x1e
    2dd8:	0f 90       	pop	r0
    2dda:	0f be       	out	0x3f, r0	; 63
    2ddc:	08 95       	ret

00002dde <prvIdleTask>:
    2dde:	ce ec       	ldi	r28, 0xCE	; 206
    2de0:	d1 e3       	ldi	r29, 0x31	; 49
    2de2:	88 81       	ld	r24, Y
    2de4:	82 30       	cpi	r24, 0x02	; 2
    2de6:	e8 f3       	brcs	.-6      	; 0x2de2 <prvIdleTask+0x4>
    2de8:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    2dec:	fa cf       	rjmp	.-12     	; 0x2de2 <prvIdleTask+0x4>

00002dee <prvAddCurrentTaskToDelayedList>:
    2dee:	cf 92       	push	r12
    2df0:	df 92       	push	r13
    2df2:	ef 92       	push	r14
    2df4:	ff 92       	push	r15
    2df6:	6b 01       	movw	r12, r22
    2df8:	7c 01       	movw	r14, r24
    2dfa:	e0 91 fa 31 	lds	r30, 0x31FA	; 0x8031fa <pxCurrentTCB>
    2dfe:	f0 91 fb 31 	lds	r31, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    2e02:	62 83       	std	Z+2, r22	; 0x02
    2e04:	73 83       	std	Z+3, r23	; 0x03
    2e06:	84 83       	std	Z+4, r24	; 0x04
    2e08:	95 83       	std	Z+5, r25	; 0x05
    2e0a:	80 91 a2 31 	lds	r24, 0x31A2	; 0x8031a2 <xTickCount>
    2e0e:	90 91 a3 31 	lds	r25, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    2e12:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    2e16:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    2e1a:	c8 16       	cp	r12, r24
    2e1c:	d9 06       	cpc	r13, r25
    2e1e:	ea 06       	cpc	r14, r26
    2e20:	fb 06       	cpc	r15, r27
    2e22:	68 f4       	brcc	.+26     	; 0x2e3e <prvAddCurrentTaskToDelayedList+0x50>
    2e24:	60 91 fa 31 	lds	r22, 0x31FA	; 0x8031fa <pxCurrentTCB>
    2e28:	70 91 fb 31 	lds	r23, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    2e2c:	80 91 b4 31 	lds	r24, 0x31B4	; 0x8031b4 <pxOverflowDelayedTaskList>
    2e30:	90 91 b5 31 	lds	r25, 0x31B5	; 0x8031b5 <pxOverflowDelayedTaskList+0x1>
    2e34:	6e 5f       	subi	r22, 0xFE	; 254
    2e36:	7f 4f       	sbci	r23, 0xFF	; 255
    2e38:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <vListInsert>
    2e3c:	21 c0       	rjmp	.+66     	; 0x2e80 <prvAddCurrentTaskToDelayedList+0x92>
    2e3e:	60 91 fa 31 	lds	r22, 0x31FA	; 0x8031fa <pxCurrentTCB>
    2e42:	70 91 fb 31 	lds	r23, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    2e46:	80 91 b6 31 	lds	r24, 0x31B6	; 0x8031b6 <pxDelayedTaskList>
    2e4a:	90 91 b7 31 	lds	r25, 0x31B7	; 0x8031b7 <pxDelayedTaskList+0x1>
    2e4e:	6e 5f       	subi	r22, 0xFE	; 254
    2e50:	7f 4f       	sbci	r23, 0xFF	; 255
    2e52:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <vListInsert>
    2e56:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <xNextTaskUnblockTime>
    2e5a:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <xNextTaskUnblockTime+0x1>
    2e5e:	a0 91 08 20 	lds	r26, 0x2008	; 0x802008 <xNextTaskUnblockTime+0x2>
    2e62:	b0 91 09 20 	lds	r27, 0x2009	; 0x802009 <xNextTaskUnblockTime+0x3>
    2e66:	c8 16       	cp	r12, r24
    2e68:	d9 06       	cpc	r13, r25
    2e6a:	ea 06       	cpc	r14, r26
    2e6c:	fb 06       	cpc	r15, r27
    2e6e:	40 f4       	brcc	.+16     	; 0x2e80 <prvAddCurrentTaskToDelayedList+0x92>
    2e70:	c0 92 06 20 	sts	0x2006, r12	; 0x802006 <xNextTaskUnblockTime>
    2e74:	d0 92 07 20 	sts	0x2007, r13	; 0x802007 <xNextTaskUnblockTime+0x1>
    2e78:	e0 92 08 20 	sts	0x2008, r14	; 0x802008 <xNextTaskUnblockTime+0x2>
    2e7c:	f0 92 09 20 	sts	0x2009, r15	; 0x802009 <xNextTaskUnblockTime+0x3>
    2e80:	ff 90       	pop	r15
    2e82:	ef 90       	pop	r14
    2e84:	df 90       	pop	r13
    2e86:	cf 90       	pop	r12
    2e88:	08 95       	ret

00002e8a <xTaskGenericCreate>:
    2e8a:	4f 92       	push	r4
    2e8c:	5f 92       	push	r5
    2e8e:	6f 92       	push	r6
    2e90:	7f 92       	push	r7
    2e92:	8f 92       	push	r8
    2e94:	9f 92       	push	r9
    2e96:	af 92       	push	r10
    2e98:	bf 92       	push	r11
    2e9a:	cf 92       	push	r12
    2e9c:	df 92       	push	r13
    2e9e:	ef 92       	push	r14
    2ea0:	ff 92       	push	r15
    2ea2:	0f 93       	push	r16
    2ea4:	1f 93       	push	r17
    2ea6:	cf 93       	push	r28
    2ea8:	df 93       	push	r29
    2eaa:	5c 01       	movw	r10, r24
    2eac:	4b 01       	movw	r8, r22
    2eae:	3a 01       	movw	r6, r20
    2eb0:	29 01       	movw	r4, r18
    2eb2:	88 e2       	ldi	r24, 0x28	; 40
    2eb4:	90 e0       	ldi	r25, 0x00	; 0
    2eb6:	0e 94 71 11 	call	0x22e2	; 0x22e2 <pvPortMalloc>
    2eba:	ec 01       	movw	r28, r24
    2ebc:	89 2b       	or	r24, r25
    2ebe:	09 f4       	brne	.+2      	; 0x2ec2 <xTaskGenericCreate+0x38>
    2ec0:	d4 c0       	rjmp	.+424    	; 0x306a <xTaskGenericCreate+0x1e0>
    2ec2:	c1 14       	cp	r12, r1
    2ec4:	d1 04       	cpc	r13, r1
    2ec6:	09 f0       	breq	.+2      	; 0x2eca <xTaskGenericCreate+0x40>
    2ec8:	cc c0       	rjmp	.+408    	; 0x3062 <xTaskGenericCreate+0x1d8>
    2eca:	c3 01       	movw	r24, r6
    2ecc:	0e 94 71 11 	call	0x22e2	; 0x22e2 <pvPortMalloc>
    2ed0:	8b 8f       	std	Y+27, r24	; 0x1b
    2ed2:	9c 8f       	std	Y+28, r25	; 0x1c
    2ed4:	00 97       	sbiw	r24, 0x00	; 0
    2ed6:	21 f4       	brne	.+8      	; 0x2ee0 <xTaskGenericCreate+0x56>
    2ed8:	ce 01       	movw	r24, r28
    2eda:	0e 94 0b 12 	call	0x2416	; 0x2416 <vPortFree>
    2ede:	c5 c0       	rjmp	.+394    	; 0x306a <xTaskGenericCreate+0x1e0>
    2ee0:	a3 01       	movw	r20, r6
    2ee2:	61 e1       	ldi	r22, 0x11	; 17
    2ee4:	70 e0       	ldi	r23, 0x00	; 0
    2ee6:	0e 94 cd 28 	call	0x519a	; 0x519a <memset>
    2eea:	93 01       	movw	r18, r6
    2eec:	21 50       	subi	r18, 0x01	; 1
    2eee:	31 09       	sbc	r19, r1
    2ef0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ef2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ef4:	3c 01       	movw	r6, r24
    2ef6:	62 0e       	add	r6, r18
    2ef8:	73 1e       	adc	r7, r19
    2efa:	4a e0       	ldi	r20, 0x0A	; 10
    2efc:	50 e0       	ldi	r21, 0x00	; 0
    2efe:	b4 01       	movw	r22, r8
    2f00:	ce 01       	movw	r24, r28
    2f02:	4d 96       	adiw	r24, 0x1d	; 29
    2f04:	0e 94 d4 28 	call	0x51a8	; 0x51a8 <strncpy>
    2f08:	1e a2       	std	Y+38, r1	; 0x26
    2f0a:	10 2f       	mov	r17, r16
    2f0c:	04 30       	cpi	r16, 0x04	; 4
    2f0e:	08 f0       	brcs	.+2      	; 0x2f12 <xTaskGenericCreate+0x88>
    2f10:	13 e0       	ldi	r17, 0x03	; 3
    2f12:	1a 8f       	std	Y+26, r17	; 0x1a
    2f14:	1f a3       	std	Y+39, r17	; 0x27
    2f16:	6e 01       	movw	r12, r28
    2f18:	22 e0       	ldi	r18, 0x02	; 2
    2f1a:	c2 0e       	add	r12, r18
    2f1c:	d1 1c       	adc	r13, r1
    2f1e:	c6 01       	movw	r24, r12
    2f20:	0e 94 4f 12 	call	0x249e	; 0x249e <vListInitialiseItem>
    2f24:	ce 01       	movw	r24, r28
    2f26:	0e 96       	adiw	r24, 0x0e	; 14
    2f28:	0e 94 4f 12 	call	0x249e	; 0x249e <vListInitialiseItem>
    2f2c:	ca 87       	std	Y+10, r28	; 0x0a
    2f2e:	db 87       	std	Y+11, r29	; 0x0b
    2f30:	84 e0       	ldi	r24, 0x04	; 4
    2f32:	90 e0       	ldi	r25, 0x00	; 0
    2f34:	a0 e0       	ldi	r26, 0x00	; 0
    2f36:	b0 e0       	ldi	r27, 0x00	; 0
    2f38:	81 1b       	sub	r24, r17
    2f3a:	91 09       	sbc	r25, r1
    2f3c:	a1 09       	sbc	r26, r1
    2f3e:	b1 09       	sbc	r27, r1
    2f40:	8e 87       	std	Y+14, r24	; 0x0e
    2f42:	9f 87       	std	Y+15, r25	; 0x0f
    2f44:	a8 8b       	std	Y+16, r26	; 0x10
    2f46:	b9 8b       	std	Y+17, r27	; 0x11
    2f48:	ce 8b       	std	Y+22, r28	; 0x16
    2f4a:	df 8b       	std	Y+23, r29	; 0x17
    2f4c:	a2 01       	movw	r20, r4
    2f4e:	b5 01       	movw	r22, r10
    2f50:	c3 01       	movw	r24, r6
    2f52:	0e 94 eb 12 	call	0x25d6	; 0x25d6 <pxPortInitialiseStack>
    2f56:	88 83       	st	Y, r24
    2f58:	99 83       	std	Y+1, r25	; 0x01
    2f5a:	e1 14       	cp	r14, r1
    2f5c:	f1 04       	cpc	r15, r1
    2f5e:	19 f0       	breq	.+6      	; 0x2f66 <xTaskGenericCreate+0xdc>
    2f60:	f7 01       	movw	r30, r14
    2f62:	c0 83       	st	Z, r28
    2f64:	d1 83       	std	Z+1, r29	; 0x01
    2f66:	0f b6       	in	r0, 0x3f	; 63
    2f68:	f8 94       	cli
    2f6a:	0f 92       	push	r0
    2f6c:	80 91 a6 31 	lds	r24, 0x31A6	; 0x8031a6 <uxCurrentNumberOfTasks>
    2f70:	8f 5f       	subi	r24, 0xFF	; 255
    2f72:	80 93 a6 31 	sts	0x31A6, r24	; 0x8031a6 <uxCurrentNumberOfTasks>
    2f76:	80 91 fa 31 	lds	r24, 0x31FA	; 0x8031fa <pxCurrentTCB>
    2f7a:	90 91 fb 31 	lds	r25, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    2f7e:	89 2b       	or	r24, r25
    2f80:	89 f5       	brne	.+98     	; 0x2fe4 <xTaskGenericCreate+0x15a>
    2f82:	c0 93 fa 31 	sts	0x31FA, r28	; 0x8031fa <pxCurrentTCB>
    2f86:	d0 93 fb 31 	sts	0x31FB, r29	; 0x8031fb <pxCurrentTCB+0x1>
    2f8a:	80 91 a6 31 	lds	r24, 0x31A6	; 0x8031a6 <uxCurrentNumberOfTasks>
    2f8e:	81 30       	cpi	r24, 0x01	; 1
    2f90:	c1 f5       	brne	.+112    	; 0x3002 <xTaskGenericCreate+0x178>
    2f92:	8e ec       	ldi	r24, 0xCE	; 206
    2f94:	91 e3       	ldi	r25, 0x31	; 49
    2f96:	0e 94 3e 12 	call	0x247c	; 0x247c <vListInitialise>
    2f9a:	89 ed       	ldi	r24, 0xD9	; 217
    2f9c:	91 e3       	ldi	r25, 0x31	; 49
    2f9e:	0e 94 3e 12 	call	0x247c	; 0x247c <vListInitialise>
    2fa2:	84 ee       	ldi	r24, 0xE4	; 228
    2fa4:	91 e3       	ldi	r25, 0x31	; 49
    2fa6:	0e 94 3e 12 	call	0x247c	; 0x247c <vListInitialise>
    2faa:	8f ee       	ldi	r24, 0xEF	; 239
    2fac:	91 e3       	ldi	r25, 0x31	; 49
    2fae:	0e 94 3e 12 	call	0x247c	; 0x247c <vListInitialise>
    2fb2:	83 ec       	ldi	r24, 0xC3	; 195
    2fb4:	91 e3       	ldi	r25, 0x31	; 49
    2fb6:	0e 94 3e 12 	call	0x247c	; 0x247c <vListInitialise>
    2fba:	88 eb       	ldi	r24, 0xB8	; 184
    2fbc:	91 e3       	ldi	r25, 0x31	; 49
    2fbe:	0e 94 3e 12 	call	0x247c	; 0x247c <vListInitialise>
    2fc2:	89 ea       	ldi	r24, 0xA9	; 169
    2fc4:	91 e3       	ldi	r25, 0x31	; 49
    2fc6:	0e 94 3e 12 	call	0x247c	; 0x247c <vListInitialise>
    2fca:	83 ec       	ldi	r24, 0xC3	; 195
    2fcc:	91 e3       	ldi	r25, 0x31	; 49
    2fce:	80 93 b6 31 	sts	0x31B6, r24	; 0x8031b6 <pxDelayedTaskList>
    2fd2:	90 93 b7 31 	sts	0x31B7, r25	; 0x8031b7 <pxDelayedTaskList+0x1>
    2fd6:	88 eb       	ldi	r24, 0xB8	; 184
    2fd8:	91 e3       	ldi	r25, 0x31	; 49
    2fda:	80 93 b4 31 	sts	0x31B4, r24	; 0x8031b4 <pxOverflowDelayedTaskList>
    2fde:	90 93 b5 31 	sts	0x31B5, r25	; 0x8031b5 <pxOverflowDelayedTaskList+0x1>
    2fe2:	0f c0       	rjmp	.+30     	; 0x3002 <xTaskGenericCreate+0x178>
    2fe4:	80 91 9f 31 	lds	r24, 0x319F	; 0x80319f <xSchedulerRunning>
    2fe8:	81 11       	cpse	r24, r1
    2fea:	0b c0       	rjmp	.+22     	; 0x3002 <xTaskGenericCreate+0x178>
    2fec:	e0 91 fa 31 	lds	r30, 0x31FA	; 0x8031fa <pxCurrentTCB>
    2ff0:	f0 91 fb 31 	lds	r31, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    2ff4:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ff6:	08 17       	cp	r16, r24
    2ff8:	20 f0       	brcs	.+8      	; 0x3002 <xTaskGenericCreate+0x178>
    2ffa:	c0 93 fa 31 	sts	0x31FA, r28	; 0x8031fa <pxCurrentTCB>
    2ffe:	d0 93 fb 31 	sts	0x31FB, r29	; 0x8031fb <pxCurrentTCB+0x1>
    3002:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3004:	90 91 a1 31 	lds	r25, 0x31A1	; 0x8031a1 <uxTopUsedPriority>
    3008:	98 17       	cp	r25, r24
    300a:	10 f4       	brcc	.+4      	; 0x3010 <xTaskGenericCreate+0x186>
    300c:	80 93 a1 31 	sts	0x31A1, r24	; 0x8031a1 <uxTopUsedPriority>
    3010:	90 91 9a 31 	lds	r25, 0x319A	; 0x80319a <uxTaskNumber>
    3014:	9f 5f       	subi	r25, 0xFF	; 255
    3016:	90 93 9a 31 	sts	0x319A, r25	; 0x80319a <uxTaskNumber>
    301a:	90 91 a0 31 	lds	r25, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    301e:	98 17       	cp	r25, r24
    3020:	10 f4       	brcc	.+4      	; 0x3026 <xTaskGenericCreate+0x19c>
    3022:	80 93 a0 31 	sts	0x31A0, r24	; 0x8031a0 <uxTopReadyPriority>
    3026:	fb e0       	ldi	r31, 0x0B	; 11
    3028:	8f 9f       	mul	r24, r31
    302a:	c0 01       	movw	r24, r0
    302c:	11 24       	eor	r1, r1
    302e:	b6 01       	movw	r22, r12
    3030:	82 53       	subi	r24, 0x32	; 50
    3032:	9e 4c       	sbci	r25, 0xCE	; 206
    3034:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vListInsertEnd>
    3038:	0f 90       	pop	r0
    303a:	0f be       	out	0x3f, r0	; 63
    303c:	80 91 9f 31 	lds	r24, 0x319F	; 0x80319f <xSchedulerRunning>
    3040:	88 23       	and	r24, r24
    3042:	59 f0       	breq	.+22     	; 0x305a <xTaskGenericCreate+0x1d0>
    3044:	e0 91 fa 31 	lds	r30, 0x31FA	; 0x8031fa <pxCurrentTCB>
    3048:	f0 91 fb 31 	lds	r31, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    304c:	82 8d       	ldd	r24, Z+26	; 0x1a
    304e:	80 17       	cp	r24, r16
    3050:	30 f4       	brcc	.+12     	; 0x305e <xTaskGenericCreate+0x1d4>
    3052:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    3056:	81 e0       	ldi	r24, 0x01	; 1
    3058:	09 c0       	rjmp	.+18     	; 0x306c <xTaskGenericCreate+0x1e2>
    305a:	81 e0       	ldi	r24, 0x01	; 1
    305c:	07 c0       	rjmp	.+14     	; 0x306c <xTaskGenericCreate+0x1e2>
    305e:	81 e0       	ldi	r24, 0x01	; 1
    3060:	05 c0       	rjmp	.+10     	; 0x306c <xTaskGenericCreate+0x1e2>
    3062:	cb 8e       	std	Y+27, r12	; 0x1b
    3064:	dc 8e       	std	Y+28, r13	; 0x1c
    3066:	c6 01       	movw	r24, r12
    3068:	3b cf       	rjmp	.-394    	; 0x2ee0 <xTaskGenericCreate+0x56>
    306a:	8f ef       	ldi	r24, 0xFF	; 255
    306c:	df 91       	pop	r29
    306e:	cf 91       	pop	r28
    3070:	1f 91       	pop	r17
    3072:	0f 91       	pop	r16
    3074:	ff 90       	pop	r15
    3076:	ef 90       	pop	r14
    3078:	df 90       	pop	r13
    307a:	cf 90       	pop	r12
    307c:	bf 90       	pop	r11
    307e:	af 90       	pop	r10
    3080:	9f 90       	pop	r9
    3082:	8f 90       	pop	r8
    3084:	7f 90       	pop	r7
    3086:	6f 90       	pop	r6
    3088:	5f 90       	pop	r5
    308a:	4f 90       	pop	r4
    308c:	08 95       	ret

0000308e <uxTaskPriorityGet>:
    308e:	0f b6       	in	r0, 0x3f	; 63
    3090:	f8 94       	cli
    3092:	0f 92       	push	r0
    3094:	00 97       	sbiw	r24, 0x00	; 0
    3096:	21 f4       	brne	.+8      	; 0x30a0 <uxTaskPriorityGet+0x12>
    3098:	80 91 fa 31 	lds	r24, 0x31FA	; 0x8031fa <pxCurrentTCB>
    309c:	90 91 fb 31 	lds	r25, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    30a0:	0f 90       	pop	r0
    30a2:	0f be       	out	0x3f, r0	; 63
    30a4:	fc 01       	movw	r30, r24
    30a6:	82 8d       	ldd	r24, Z+26	; 0x1a
    30a8:	08 95       	ret

000030aa <vTaskStartScheduler>:
    30aa:	af 92       	push	r10
    30ac:	bf 92       	push	r11
    30ae:	cf 92       	push	r12
    30b0:	df 92       	push	r13
    30b2:	ef 92       	push	r14
    30b4:	ff 92       	push	r15
    30b6:	0f 93       	push	r16
    30b8:	a1 2c       	mov	r10, r1
    30ba:	b1 2c       	mov	r11, r1
    30bc:	c1 2c       	mov	r12, r1
    30be:	d1 2c       	mov	r13, r1
    30c0:	0f 2e       	mov	r0, r31
    30c2:	f7 ea       	ldi	r31, 0xA7	; 167
    30c4:	ef 2e       	mov	r14, r31
    30c6:	f1 e3       	ldi	r31, 0x31	; 49
    30c8:	ff 2e       	mov	r15, r31
    30ca:	f0 2d       	mov	r31, r0
    30cc:	00 e0       	ldi	r16, 0x00	; 0
    30ce:	20 e0       	ldi	r18, 0x00	; 0
    30d0:	30 e0       	ldi	r19, 0x00	; 0
    30d2:	44 e6       	ldi	r20, 0x64	; 100
    30d4:	50 e0       	ldi	r21, 0x00	; 0
    30d6:	6b eb       	ldi	r22, 0xBB	; 187
    30d8:	70 e2       	ldi	r23, 0x20	; 32
    30da:	8f ee       	ldi	r24, 0xEF	; 239
    30dc:	96 e1       	ldi	r25, 0x16	; 22
    30de:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <xTaskGenericCreate>
    30e2:	81 30       	cpi	r24, 0x01	; 1
    30e4:	69 f4       	brne	.+26     	; 0x3100 <vTaskStartScheduler+0x56>
    30e6:	f8 94       	cli
    30e8:	80 93 9f 31 	sts	0x319F, r24	; 0x80319f <xSchedulerRunning>
    30ec:	10 92 a2 31 	sts	0x31A2, r1	; 0x8031a2 <xTickCount>
    30f0:	10 92 a3 31 	sts	0x31A3, r1	; 0x8031a3 <xTickCount+0x1>
    30f4:	10 92 a4 31 	sts	0x31A4, r1	; 0x8031a4 <xTickCount+0x2>
    30f8:	10 92 a5 31 	sts	0x31A5, r1	; 0x8031a5 <xTickCount+0x3>
    30fc:	0e 94 61 13 	call	0x26c2	; 0x26c2 <xPortStartScheduler>
    3100:	0f 91       	pop	r16
    3102:	ff 90       	pop	r15
    3104:	ef 90       	pop	r14
    3106:	df 90       	pop	r13
    3108:	cf 90       	pop	r12
    310a:	bf 90       	pop	r11
    310c:	af 90       	pop	r10
    310e:	08 95       	ret

00003110 <vTaskSuspendAll>:
    3110:	80 91 9e 31 	lds	r24, 0x319E	; 0x80319e <uxSchedulerSuspended>
    3114:	8f 5f       	subi	r24, 0xFF	; 255
    3116:	80 93 9e 31 	sts	0x319E, r24	; 0x80319e <uxSchedulerSuspended>
    311a:	08 95       	ret

0000311c <xTaskGetTickCount>:
    311c:	0f b6       	in	r0, 0x3f	; 63
    311e:	f8 94       	cli
    3120:	0f 92       	push	r0
    3122:	60 91 a2 31 	lds	r22, 0x31A2	; 0x8031a2 <xTickCount>
    3126:	70 91 a3 31 	lds	r23, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    312a:	80 91 a4 31 	lds	r24, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    312e:	90 91 a5 31 	lds	r25, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    3132:	0f 90       	pop	r0
    3134:	0f be       	out	0x3f, r0	; 63
    3136:	08 95       	ret

00003138 <pcTaskGetTaskName>:
    3138:	00 97       	sbiw	r24, 0x00	; 0
    313a:	21 f4       	brne	.+8      	; 0x3144 <pcTaskGetTaskName+0xc>
    313c:	80 91 fa 31 	lds	r24, 0x31FA	; 0x8031fa <pxCurrentTCB>
    3140:	90 91 fb 31 	lds	r25, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    3144:	4d 96       	adiw	r24, 0x1d	; 29
    3146:	08 95       	ret

00003148 <vTaskIncrementTick>:
    3148:	ff 92       	push	r15
    314a:	0f 93       	push	r16
    314c:	1f 93       	push	r17
    314e:	cf 93       	push	r28
    3150:	df 93       	push	r29
    3152:	80 91 9e 31 	lds	r24, 0x319E	; 0x80319e <uxSchedulerSuspended>
    3156:	81 11       	cpse	r24, r1
    3158:	ed c0       	rjmp	.+474    	; 0x3334 <vTaskIncrementTick+0x1ec>
    315a:	80 91 a2 31 	lds	r24, 0x31A2	; 0x8031a2 <xTickCount>
    315e:	90 91 a3 31 	lds	r25, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    3162:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    3166:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    316a:	01 96       	adiw	r24, 0x01	; 1
    316c:	a1 1d       	adc	r26, r1
    316e:	b1 1d       	adc	r27, r1
    3170:	80 93 a2 31 	sts	0x31A2, r24	; 0x8031a2 <xTickCount>
    3174:	90 93 a3 31 	sts	0x31A3, r25	; 0x8031a3 <xTickCount+0x1>
    3178:	a0 93 a4 31 	sts	0x31A4, r26	; 0x8031a4 <xTickCount+0x2>
    317c:	b0 93 a5 31 	sts	0x31A5, r27	; 0x8031a5 <xTickCount+0x3>
    3180:	80 91 a2 31 	lds	r24, 0x31A2	; 0x8031a2 <xTickCount>
    3184:	90 91 a3 31 	lds	r25, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    3188:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    318c:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    3190:	89 2b       	or	r24, r25
    3192:	8a 2b       	or	r24, r26
    3194:	8b 2b       	or	r24, r27
    3196:	f1 f5       	brne	.+124    	; 0x3214 <vTaskIncrementTick+0xcc>
    3198:	80 91 b6 31 	lds	r24, 0x31B6	; 0x8031b6 <pxDelayedTaskList>
    319c:	90 91 b7 31 	lds	r25, 0x31B7	; 0x8031b7 <pxDelayedTaskList+0x1>
    31a0:	20 91 b4 31 	lds	r18, 0x31B4	; 0x8031b4 <pxOverflowDelayedTaskList>
    31a4:	30 91 b5 31 	lds	r19, 0x31B5	; 0x8031b5 <pxOverflowDelayedTaskList+0x1>
    31a8:	20 93 b6 31 	sts	0x31B6, r18	; 0x8031b6 <pxDelayedTaskList>
    31ac:	30 93 b7 31 	sts	0x31B7, r19	; 0x8031b7 <pxDelayedTaskList+0x1>
    31b0:	80 93 b4 31 	sts	0x31B4, r24	; 0x8031b4 <pxOverflowDelayedTaskList>
    31b4:	90 93 b5 31 	sts	0x31B5, r25	; 0x8031b5 <pxOverflowDelayedTaskList+0x1>
    31b8:	80 91 9b 31 	lds	r24, 0x319B	; 0x80319b <xNumOfOverflows>
    31bc:	8f 5f       	subi	r24, 0xFF	; 255
    31be:	80 93 9b 31 	sts	0x319B, r24	; 0x80319b <xNumOfOverflows>
    31c2:	e0 91 b6 31 	lds	r30, 0x31B6	; 0x8031b6 <pxDelayedTaskList>
    31c6:	f0 91 b7 31 	lds	r31, 0x31B7	; 0x8031b7 <pxDelayedTaskList+0x1>
    31ca:	80 81       	ld	r24, Z
    31cc:	81 11       	cpse	r24, r1
    31ce:	0c c0       	rjmp	.+24     	; 0x31e8 <vTaskIncrementTick+0xa0>
    31d0:	8f ef       	ldi	r24, 0xFF	; 255
    31d2:	9f ef       	ldi	r25, 0xFF	; 255
    31d4:	dc 01       	movw	r26, r24
    31d6:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <xNextTaskUnblockTime>
    31da:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <xNextTaskUnblockTime+0x1>
    31de:	a0 93 08 20 	sts	0x2008, r26	; 0x802008 <xNextTaskUnblockTime+0x2>
    31e2:	b0 93 09 20 	sts	0x2009, r27	; 0x802009 <xNextTaskUnblockTime+0x3>
    31e6:	16 c0       	rjmp	.+44     	; 0x3214 <vTaskIncrementTick+0xcc>
    31e8:	e0 91 b6 31 	lds	r30, 0x31B6	; 0x8031b6 <pxDelayedTaskList>
    31ec:	f0 91 b7 31 	lds	r31, 0x31B7	; 0x8031b7 <pxDelayedTaskList+0x1>
    31f0:	07 80       	ldd	r0, Z+7	; 0x07
    31f2:	f0 85       	ldd	r31, Z+8	; 0x08
    31f4:	e0 2d       	mov	r30, r0
    31f6:	00 84       	ldd	r0, Z+8	; 0x08
    31f8:	f1 85       	ldd	r31, Z+9	; 0x09
    31fa:	e0 2d       	mov	r30, r0
    31fc:	82 81       	ldd	r24, Z+2	; 0x02
    31fe:	93 81       	ldd	r25, Z+3	; 0x03
    3200:	a4 81       	ldd	r26, Z+4	; 0x04
    3202:	b5 81       	ldd	r27, Z+5	; 0x05
    3204:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <xNextTaskUnblockTime>
    3208:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <xNextTaskUnblockTime+0x1>
    320c:	a0 93 08 20 	sts	0x2008, r26	; 0x802008 <xNextTaskUnblockTime+0x2>
    3210:	b0 93 09 20 	sts	0x2009, r27	; 0x802009 <xNextTaskUnblockTime+0x3>
    3214:	40 91 a2 31 	lds	r20, 0x31A2	; 0x8031a2 <xTickCount>
    3218:	50 91 a3 31 	lds	r21, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    321c:	60 91 a4 31 	lds	r22, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    3220:	70 91 a5 31 	lds	r23, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    3224:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <xNextTaskUnblockTime>
    3228:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <xNextTaskUnblockTime+0x1>
    322c:	a0 91 08 20 	lds	r26, 0x2008	; 0x802008 <xNextTaskUnblockTime+0x2>
    3230:	b0 91 09 20 	lds	r27, 0x2009	; 0x802009 <xNextTaskUnblockTime+0x3>
    3234:	48 17       	cp	r20, r24
    3236:	59 07       	cpc	r21, r25
    3238:	6a 07       	cpc	r22, r26
    323a:	7b 07       	cpc	r23, r27
    323c:	08 f4       	brcc	.+2      	; 0x3240 <vTaskIncrementTick+0xf8>
    323e:	7f c0       	rjmp	.+254    	; 0x333e <vTaskIncrementTick+0x1f6>
    3240:	e0 91 b6 31 	lds	r30, 0x31B6	; 0x8031b6 <pxDelayedTaskList>
    3244:	f0 91 b7 31 	lds	r31, 0x31B7	; 0x8031b7 <pxDelayedTaskList+0x1>
    3248:	80 81       	ld	r24, Z
    324a:	88 23       	and	r24, r24
    324c:	f9 f0       	breq	.+62     	; 0x328c <vTaskIncrementTick+0x144>
    324e:	e0 91 b6 31 	lds	r30, 0x31B6	; 0x8031b6 <pxDelayedTaskList>
    3252:	f0 91 b7 31 	lds	r31, 0x31B7	; 0x8031b7 <pxDelayedTaskList+0x1>
    3256:	07 80       	ldd	r0, Z+7	; 0x07
    3258:	f0 85       	ldd	r31, Z+8	; 0x08
    325a:	e0 2d       	mov	r30, r0
    325c:	c0 85       	ldd	r28, Z+8	; 0x08
    325e:	d1 85       	ldd	r29, Z+9	; 0x09
    3260:	8a 81       	ldd	r24, Y+2	; 0x02
    3262:	9b 81       	ldd	r25, Y+3	; 0x03
    3264:	ac 81       	ldd	r26, Y+4	; 0x04
    3266:	bd 81       	ldd	r27, Y+5	; 0x05
    3268:	40 91 a2 31 	lds	r20, 0x31A2	; 0x8031a2 <xTickCount>
    326c:	50 91 a3 31 	lds	r21, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    3270:	60 91 a4 31 	lds	r22, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    3274:	70 91 a5 31 	lds	r23, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    3278:	48 17       	cp	r20, r24
    327a:	59 07       	cpc	r21, r25
    327c:	6a 07       	cpc	r22, r26
    327e:	7b 07       	cpc	r23, r27
    3280:	58 f1       	brcs	.+86     	; 0x32d8 <vTaskIncrementTick+0x190>
    3282:	0f 2e       	mov	r0, r31
    3284:	fb e0       	ldi	r31, 0x0B	; 11
    3286:	ff 2e       	mov	r15, r31
    3288:	f0 2d       	mov	r31, r0
    328a:	2f c0       	rjmp	.+94     	; 0x32ea <vTaskIncrementTick+0x1a2>
    328c:	8f ef       	ldi	r24, 0xFF	; 255
    328e:	9f ef       	ldi	r25, 0xFF	; 255
    3290:	dc 01       	movw	r26, r24
    3292:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <xNextTaskUnblockTime>
    3296:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <xNextTaskUnblockTime+0x1>
    329a:	a0 93 08 20 	sts	0x2008, r26	; 0x802008 <xNextTaskUnblockTime+0x2>
    329e:	b0 93 09 20 	sts	0x2009, r27	; 0x802009 <xNextTaskUnblockTime+0x3>
    32a2:	4d c0       	rjmp	.+154    	; 0x333e <vTaskIncrementTick+0x1f6>
    32a4:	e0 91 b6 31 	lds	r30, 0x31B6	; 0x8031b6 <pxDelayedTaskList>
    32a8:	f0 91 b7 31 	lds	r31, 0x31B7	; 0x8031b7 <pxDelayedTaskList+0x1>
    32ac:	07 80       	ldd	r0, Z+7	; 0x07
    32ae:	f0 85       	ldd	r31, Z+8	; 0x08
    32b0:	e0 2d       	mov	r30, r0
    32b2:	c0 85       	ldd	r28, Z+8	; 0x08
    32b4:	d1 85       	ldd	r29, Z+9	; 0x09
    32b6:	8a 81       	ldd	r24, Y+2	; 0x02
    32b8:	9b 81       	ldd	r25, Y+3	; 0x03
    32ba:	ac 81       	ldd	r26, Y+4	; 0x04
    32bc:	bd 81       	ldd	r27, Y+5	; 0x05
    32be:	40 91 a2 31 	lds	r20, 0x31A2	; 0x8031a2 <xTickCount>
    32c2:	50 91 a3 31 	lds	r21, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    32c6:	60 91 a4 31 	lds	r22, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    32ca:	70 91 a5 31 	lds	r23, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    32ce:	48 17       	cp	r20, r24
    32d0:	59 07       	cpc	r21, r25
    32d2:	6a 07       	cpc	r22, r26
    32d4:	7b 07       	cpc	r23, r27
    32d6:	48 f4       	brcc	.+18     	; 0x32ea <vTaskIncrementTick+0x1a2>
    32d8:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <xNextTaskUnblockTime>
    32dc:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <xNextTaskUnblockTime+0x1>
    32e0:	a0 93 08 20 	sts	0x2008, r26	; 0x802008 <xNextTaskUnblockTime+0x2>
    32e4:	b0 93 09 20 	sts	0x2009, r27	; 0x802009 <xNextTaskUnblockTime+0x3>
    32e8:	2a c0       	rjmp	.+84     	; 0x333e <vTaskIncrementTick+0x1f6>
    32ea:	8e 01       	movw	r16, r28
    32ec:	0e 5f       	subi	r16, 0xFE	; 254
    32ee:	1f 4f       	sbci	r17, 0xFF	; 255
    32f0:	c8 01       	movw	r24, r16
    32f2:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    32f6:	88 8d       	ldd	r24, Y+24	; 0x18
    32f8:	99 8d       	ldd	r25, Y+25	; 0x19
    32fa:	89 2b       	or	r24, r25
    32fc:	21 f0       	breq	.+8      	; 0x3306 <vTaskIncrementTick+0x1be>
    32fe:	ce 01       	movw	r24, r28
    3300:	0e 96       	adiw	r24, 0x0e	; 14
    3302:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    3306:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3308:	90 91 a0 31 	lds	r25, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    330c:	98 17       	cp	r25, r24
    330e:	10 f4       	brcc	.+4      	; 0x3314 <vTaskIncrementTick+0x1cc>
    3310:	80 93 a0 31 	sts	0x31A0, r24	; 0x8031a0 <uxTopReadyPriority>
    3314:	f8 9e       	mul	r15, r24
    3316:	c0 01       	movw	r24, r0
    3318:	11 24       	eor	r1, r1
    331a:	b8 01       	movw	r22, r16
    331c:	82 53       	subi	r24, 0x32	; 50
    331e:	9e 4c       	sbci	r25, 0xCE	; 206
    3320:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vListInsertEnd>
    3324:	e0 91 b6 31 	lds	r30, 0x31B6	; 0x8031b6 <pxDelayedTaskList>
    3328:	f0 91 b7 31 	lds	r31, 0x31B7	; 0x8031b7 <pxDelayedTaskList+0x1>
    332c:	80 81       	ld	r24, Z
    332e:	81 11       	cpse	r24, r1
    3330:	b9 cf       	rjmp	.-142    	; 0x32a4 <vTaskIncrementTick+0x15c>
    3332:	ac cf       	rjmp	.-168    	; 0x328c <vTaskIncrementTick+0x144>
    3334:	80 91 9d 31 	lds	r24, 0x319D	; 0x80319d <uxMissedTicks>
    3338:	8f 5f       	subi	r24, 0xFF	; 255
    333a:	80 93 9d 31 	sts	0x319D, r24	; 0x80319d <uxMissedTicks>
    333e:	df 91       	pop	r29
    3340:	cf 91       	pop	r28
    3342:	1f 91       	pop	r17
    3344:	0f 91       	pop	r16
    3346:	ff 90       	pop	r15
    3348:	08 95       	ret

0000334a <xTaskResumeAll>:
    334a:	cf 92       	push	r12
    334c:	df 92       	push	r13
    334e:	ef 92       	push	r14
    3350:	ff 92       	push	r15
    3352:	0f 93       	push	r16
    3354:	1f 93       	push	r17
    3356:	cf 93       	push	r28
    3358:	df 93       	push	r29
    335a:	0f b6       	in	r0, 0x3f	; 63
    335c:	f8 94       	cli
    335e:	0f 92       	push	r0
    3360:	80 91 9e 31 	lds	r24, 0x319E	; 0x80319e <uxSchedulerSuspended>
    3364:	81 50       	subi	r24, 0x01	; 1
    3366:	80 93 9e 31 	sts	0x319E, r24	; 0x80319e <uxSchedulerSuspended>
    336a:	80 91 9e 31 	lds	r24, 0x319E	; 0x80319e <uxSchedulerSuspended>
    336e:	81 11       	cpse	r24, r1
    3370:	60 c0       	rjmp	.+192    	; 0x3432 <xTaskResumeAll+0xe8>
    3372:	80 91 a6 31 	lds	r24, 0x31A6	; 0x8031a6 <uxCurrentNumberOfTasks>
    3376:	81 11       	cpse	r24, r1
    3378:	2c c0       	rjmp	.+88     	; 0x33d2 <xTaskResumeAll+0x88>
    337a:	5e c0       	rjmp	.+188    	; 0x3438 <xTaskResumeAll+0xee>
    337c:	d7 01       	movw	r26, r14
    337e:	17 96       	adiw	r26, 0x07	; 7
    3380:	ed 91       	ld	r30, X+
    3382:	fc 91       	ld	r31, X
    3384:	18 97       	sbiw	r26, 0x08	; 8
    3386:	c0 85       	ldd	r28, Z+8	; 0x08
    3388:	d1 85       	ldd	r29, Z+9	; 0x09
    338a:	ce 01       	movw	r24, r28
    338c:	0e 96       	adiw	r24, 0x0e	; 14
    338e:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    3392:	8e 01       	movw	r16, r28
    3394:	0e 5f       	subi	r16, 0xFE	; 254
    3396:	1f 4f       	sbci	r17, 0xFF	; 255
    3398:	c8 01       	movw	r24, r16
    339a:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    339e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    33a0:	90 91 a0 31 	lds	r25, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    33a4:	98 17       	cp	r25, r24
    33a6:	10 f4       	brcc	.+4      	; 0x33ac <xTaskResumeAll+0x62>
    33a8:	80 93 a0 31 	sts	0x31A0, r24	; 0x8031a0 <uxTopReadyPriority>
    33ac:	d8 9e       	mul	r13, r24
    33ae:	c0 01       	movw	r24, r0
    33b0:	11 24       	eor	r1, r1
    33b2:	b8 01       	movw	r22, r16
    33b4:	82 53       	subi	r24, 0x32	; 50
    33b6:	9e 4c       	sbci	r25, 0xCE	; 206
    33b8:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vListInsertEnd>
    33bc:	e0 91 fa 31 	lds	r30, 0x31FA	; 0x8031fa <pxCurrentTCB>
    33c0:	f0 91 fb 31 	lds	r31, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    33c4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    33c6:	82 8d       	ldd	r24, Z+26	; 0x1a
    33c8:	98 17       	cp	r25, r24
    33ca:	70 f0       	brcs	.+28     	; 0x33e8 <xTaskResumeAll+0x9e>
    33cc:	cc 24       	eor	r12, r12
    33ce:	c3 94       	inc	r12
    33d0:	0b c0       	rjmp	.+22     	; 0x33e8 <xTaskResumeAll+0x9e>
    33d2:	c1 2c       	mov	r12, r1
    33d4:	0f 2e       	mov	r0, r31
    33d6:	f9 ea       	ldi	r31, 0xA9	; 169
    33d8:	ef 2e       	mov	r14, r31
    33da:	f1 e3       	ldi	r31, 0x31	; 49
    33dc:	ff 2e       	mov	r15, r31
    33de:	f0 2d       	mov	r31, r0
    33e0:	0f 2e       	mov	r0, r31
    33e2:	fb e0       	ldi	r31, 0x0B	; 11
    33e4:	df 2e       	mov	r13, r31
    33e6:	f0 2d       	mov	r31, r0
    33e8:	f7 01       	movw	r30, r14
    33ea:	80 81       	ld	r24, Z
    33ec:	81 11       	cpse	r24, r1
    33ee:	c6 cf       	rjmp	.-116    	; 0x337c <xTaskResumeAll+0x32>
    33f0:	80 91 9d 31 	lds	r24, 0x319D	; 0x80319d <uxMissedTicks>
    33f4:	88 23       	and	r24, r24
    33f6:	81 f0       	breq	.+32     	; 0x3418 <xTaskResumeAll+0xce>
    33f8:	80 91 9d 31 	lds	r24, 0x319D	; 0x80319d <uxMissedTicks>
    33fc:	88 23       	and	r24, r24
    33fe:	99 f0       	breq	.+38     	; 0x3426 <xTaskResumeAll+0xdc>
    3400:	0e 94 a4 18 	call	0x3148	; 0x3148 <vTaskIncrementTick>
    3404:	80 91 9d 31 	lds	r24, 0x319D	; 0x80319d <uxMissedTicks>
    3408:	81 50       	subi	r24, 0x01	; 1
    340a:	80 93 9d 31 	sts	0x319D, r24	; 0x80319d <uxMissedTicks>
    340e:	80 91 9d 31 	lds	r24, 0x319D	; 0x80319d <uxMissedTicks>
    3412:	81 11       	cpse	r24, r1
    3414:	f5 cf       	rjmp	.-22     	; 0x3400 <xTaskResumeAll+0xb6>
    3416:	07 c0       	rjmp	.+14     	; 0x3426 <xTaskResumeAll+0xdc>
    3418:	f1 e0       	ldi	r31, 0x01	; 1
    341a:	cf 16       	cp	r12, r31
    341c:	21 f0       	breq	.+8      	; 0x3426 <xTaskResumeAll+0xdc>
    341e:	80 91 9c 31 	lds	r24, 0x319C	; 0x80319c <xMissedYield>
    3422:	81 30       	cpi	r24, 0x01	; 1
    3424:	41 f4       	brne	.+16     	; 0x3436 <xTaskResumeAll+0xec>
    3426:	10 92 9c 31 	sts	0x319C, r1	; 0x80319c <xMissedYield>
    342a:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    342e:	81 e0       	ldi	r24, 0x01	; 1
    3430:	03 c0       	rjmp	.+6      	; 0x3438 <xTaskResumeAll+0xee>
    3432:	80 e0       	ldi	r24, 0x00	; 0
    3434:	01 c0       	rjmp	.+2      	; 0x3438 <xTaskResumeAll+0xee>
    3436:	80 e0       	ldi	r24, 0x00	; 0
    3438:	0f 90       	pop	r0
    343a:	0f be       	out	0x3f, r0	; 63
    343c:	df 91       	pop	r29
    343e:	cf 91       	pop	r28
    3440:	1f 91       	pop	r17
    3442:	0f 91       	pop	r16
    3444:	ff 90       	pop	r15
    3446:	ef 90       	pop	r14
    3448:	df 90       	pop	r13
    344a:	cf 90       	pop	r12
    344c:	08 95       	ret

0000344e <vTaskDelayUntil>:
    344e:	cf 92       	push	r12
    3450:	df 92       	push	r13
    3452:	ef 92       	push	r14
    3454:	ff 92       	push	r15
    3456:	cf 93       	push	r28
    3458:	df 93       	push	r29
    345a:	ec 01       	movw	r28, r24
    345c:	6a 01       	movw	r12, r20
    345e:	7b 01       	movw	r14, r22
    3460:	0e 94 88 18 	call	0x3110	; 0x3110 <vTaskSuspendAll>
    3464:	88 81       	ld	r24, Y
    3466:	99 81       	ldd	r25, Y+1	; 0x01
    3468:	aa 81       	ldd	r26, Y+2	; 0x02
    346a:	bb 81       	ldd	r27, Y+3	; 0x03
    346c:	c8 0e       	add	r12, r24
    346e:	d9 1e       	adc	r13, r25
    3470:	ea 1e       	adc	r14, r26
    3472:	fb 1e       	adc	r15, r27
    3474:	40 91 a2 31 	lds	r20, 0x31A2	; 0x8031a2 <xTickCount>
    3478:	50 91 a3 31 	lds	r21, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    347c:	60 91 a4 31 	lds	r22, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    3480:	70 91 a5 31 	lds	r23, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    3484:	48 17       	cp	r20, r24
    3486:	59 07       	cpc	r21, r25
    3488:	6a 07       	cpc	r22, r26
    348a:	7b 07       	cpc	r23, r27
    348c:	b8 f4       	brcc	.+46     	; 0x34bc <vTaskDelayUntil+0x6e>
    348e:	c8 16       	cp	r12, r24
    3490:	d9 06       	cpc	r13, r25
    3492:	ea 06       	cpc	r14, r26
    3494:	fb 06       	cpc	r15, r27
    3496:	e0 f5       	brcc	.+120    	; 0x3510 <vTaskDelayUntil+0xc2>
    3498:	80 91 a2 31 	lds	r24, 0x31A2	; 0x8031a2 <xTickCount>
    349c:	90 91 a3 31 	lds	r25, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    34a0:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    34a4:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    34a8:	c8 82       	st	Y, r12
    34aa:	d9 82       	std	Y+1, r13	; 0x01
    34ac:	ea 82       	std	Y+2, r14	; 0x02
    34ae:	fb 82       	std	Y+3, r15	; 0x03
    34b0:	8c 15       	cp	r24, r12
    34b2:	9d 05       	cpc	r25, r13
    34b4:	ae 05       	cpc	r26, r14
    34b6:	bf 05       	cpc	r27, r15
    34b8:	f8 f4       	brcc	.+62     	; 0x34f8 <vTaskDelayUntil+0xaa>
    34ba:	13 c0       	rjmp	.+38     	; 0x34e2 <vTaskDelayUntil+0x94>
    34bc:	c8 16       	cp	r12, r24
    34be:	d9 06       	cpc	r13, r25
    34c0:	ea 06       	cpc	r14, r26
    34c2:	fb 06       	cpc	r15, r27
    34c4:	00 f1       	brcs	.+64     	; 0x3506 <vTaskDelayUntil+0xb8>
    34c6:	80 91 a2 31 	lds	r24, 0x31A2	; 0x8031a2 <xTickCount>
    34ca:	90 91 a3 31 	lds	r25, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    34ce:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    34d2:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    34d6:	8c 15       	cp	r24, r12
    34d8:	9d 05       	cpc	r25, r13
    34da:	ae 05       	cpc	r26, r14
    34dc:	bf 05       	cpc	r27, r15
    34de:	98 f0       	brcs	.+38     	; 0x3506 <vTaskDelayUntil+0xb8>
    34e0:	17 c0       	rjmp	.+46     	; 0x3510 <vTaskDelayUntil+0xc2>
    34e2:	80 91 fa 31 	lds	r24, 0x31FA	; 0x8031fa <pxCurrentTCB>
    34e6:	90 91 fb 31 	lds	r25, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    34ea:	02 96       	adiw	r24, 0x02	; 2
    34ec:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    34f0:	c7 01       	movw	r24, r14
    34f2:	b6 01       	movw	r22, r12
    34f4:	0e 94 f7 16 	call	0x2dee	; 0x2dee <prvAddCurrentTaskToDelayedList>
    34f8:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    34fc:	81 11       	cpse	r24, r1
    34fe:	0d c0       	rjmp	.+26     	; 0x351a <vTaskDelayUntil+0xcc>
    3500:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    3504:	0a c0       	rjmp	.+20     	; 0x351a <vTaskDelayUntil+0xcc>
    3506:	c8 82       	st	Y, r12
    3508:	d9 82       	std	Y+1, r13	; 0x01
    350a:	ea 82       	std	Y+2, r14	; 0x02
    350c:	fb 82       	std	Y+3, r15	; 0x03
    350e:	e9 cf       	rjmp	.-46     	; 0x34e2 <vTaskDelayUntil+0x94>
    3510:	c8 82       	st	Y, r12
    3512:	d9 82       	std	Y+1, r13	; 0x01
    3514:	ea 82       	std	Y+2, r14	; 0x02
    3516:	fb 82       	std	Y+3, r15	; 0x03
    3518:	ef cf       	rjmp	.-34     	; 0x34f8 <vTaskDelayUntil+0xaa>
    351a:	df 91       	pop	r29
    351c:	cf 91       	pop	r28
    351e:	ff 90       	pop	r15
    3520:	ef 90       	pop	r14
    3522:	df 90       	pop	r13
    3524:	cf 90       	pop	r12
    3526:	08 95       	ret

00003528 <vTaskDelay>:
    3528:	cf 92       	push	r12
    352a:	df 92       	push	r13
    352c:	ef 92       	push	r14
    352e:	ff 92       	push	r15
    3530:	6b 01       	movw	r12, r22
    3532:	7c 01       	movw	r14, r24
    3534:	67 2b       	or	r22, r23
    3536:	68 2b       	or	r22, r24
    3538:	69 2b       	or	r22, r25
    353a:	e9 f0       	breq	.+58     	; 0x3576 <vTaskDelay+0x4e>
    353c:	0e 94 88 18 	call	0x3110	; 0x3110 <vTaskSuspendAll>
    3540:	80 91 a2 31 	lds	r24, 0x31A2	; 0x8031a2 <xTickCount>
    3544:	90 91 a3 31 	lds	r25, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    3548:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    354c:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    3550:	c8 0e       	add	r12, r24
    3552:	d9 1e       	adc	r13, r25
    3554:	ea 1e       	adc	r14, r26
    3556:	fb 1e       	adc	r15, r27
    3558:	80 91 fa 31 	lds	r24, 0x31FA	; 0x8031fa <pxCurrentTCB>
    355c:	90 91 fb 31 	lds	r25, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    3560:	02 96       	adiw	r24, 0x02	; 2
    3562:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    3566:	c7 01       	movw	r24, r14
    3568:	b6 01       	movw	r22, r12
    356a:	0e 94 f7 16 	call	0x2dee	; 0x2dee <prvAddCurrentTaskToDelayedList>
    356e:	0e 94 a5 19 	call	0x334a	; 0x334a <xTaskResumeAll>
    3572:	81 11       	cpse	r24, r1
    3574:	02 c0       	rjmp	.+4      	; 0x357a <vTaskDelay+0x52>
    3576:	0e 94 9f 13 	call	0x273e	; 0x273e <vPortYield>
    357a:	ff 90       	pop	r15
    357c:	ef 90       	pop	r14
    357e:	df 90       	pop	r13
    3580:	cf 90       	pop	r12
    3582:	08 95       	ret

00003584 <vTaskSwitchContext>:
    3584:	80 91 9e 31 	lds	r24, 0x319E	; 0x80319e <uxSchedulerSuspended>
    3588:	81 11       	cpse	r24, r1
    358a:	0c c0       	rjmp	.+24     	; 0x35a4 <vTaskSwitchContext+0x20>
    358c:	e0 91 a0 31 	lds	r30, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    3590:	4b e0       	ldi	r20, 0x0B	; 11
    3592:	e4 9f       	mul	r30, r20
    3594:	f0 01       	movw	r30, r0
    3596:	11 24       	eor	r1, r1
    3598:	e2 53       	subi	r30, 0x32	; 50
    359a:	fe 4c       	sbci	r31, 0xCE	; 206
    359c:	80 81       	ld	r24, Z
    359e:	88 23       	and	r24, r24
    35a0:	29 f0       	breq	.+10     	; 0x35ac <vTaskSwitchContext+0x28>
    35a2:	14 c0       	rjmp	.+40     	; 0x35cc <vTaskSwitchContext+0x48>
    35a4:	81 e0       	ldi	r24, 0x01	; 1
    35a6:	80 93 9c 31 	sts	0x319C, r24	; 0x80319c <xMissedYield>
    35aa:	08 95       	ret
    35ac:	9b e0       	ldi	r25, 0x0B	; 11
    35ae:	80 91 a0 31 	lds	r24, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    35b2:	81 50       	subi	r24, 0x01	; 1
    35b4:	80 93 a0 31 	sts	0x31A0, r24	; 0x8031a0 <uxTopReadyPriority>
    35b8:	e0 91 a0 31 	lds	r30, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    35bc:	9e 9f       	mul	r25, r30
    35be:	f0 01       	movw	r30, r0
    35c0:	11 24       	eor	r1, r1
    35c2:	e2 53       	subi	r30, 0x32	; 50
    35c4:	fe 4c       	sbci	r31, 0xCE	; 206
    35c6:	80 81       	ld	r24, Z
    35c8:	88 23       	and	r24, r24
    35ca:	89 f3       	breq	.-30     	; 0x35ae <vTaskSwitchContext+0x2a>
    35cc:	80 91 a0 31 	lds	r24, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    35d0:	28 2f       	mov	r18, r24
    35d2:	30 e0       	ldi	r19, 0x00	; 0
    35d4:	4b e0       	ldi	r20, 0x0B	; 11
    35d6:	84 9f       	mul	r24, r20
    35d8:	c0 01       	movw	r24, r0
    35da:	11 24       	eor	r1, r1
    35dc:	dc 01       	movw	r26, r24
    35de:	a2 53       	subi	r26, 0x32	; 50
    35e0:	be 4c       	sbci	r27, 0xCE	; 206
    35e2:	11 96       	adiw	r26, 0x01	; 1
    35e4:	ed 91       	ld	r30, X+
    35e6:	fc 91       	ld	r31, X
    35e8:	12 97       	sbiw	r26, 0x02	; 2
    35ea:	04 80       	ldd	r0, Z+4	; 0x04
    35ec:	f5 81       	ldd	r31, Z+5	; 0x05
    35ee:	e0 2d       	mov	r30, r0
    35f0:	11 96       	adiw	r26, 0x01	; 1
    35f2:	ed 93       	st	X+, r30
    35f4:	fc 93       	st	X, r31
    35f6:	12 97       	sbiw	r26, 0x02	; 2
    35f8:	8f 52       	subi	r24, 0x2F	; 47
    35fa:	9e 4c       	sbci	r25, 0xCE	; 206
    35fc:	e8 17       	cp	r30, r24
    35fe:	f9 07       	cpc	r31, r25
    3600:	61 f4       	brne	.+24     	; 0x361a <vTaskSwitchContext+0x96>
    3602:	84 81       	ldd	r24, Z+4	; 0x04
    3604:	95 81       	ldd	r25, Z+5	; 0x05
    3606:	4b e0       	ldi	r20, 0x0B	; 11
    3608:	42 9f       	mul	r20, r18
    360a:	f0 01       	movw	r30, r0
    360c:	43 9f       	mul	r20, r19
    360e:	f0 0d       	add	r31, r0
    3610:	11 24       	eor	r1, r1
    3612:	e2 53       	subi	r30, 0x32	; 50
    3614:	fe 4c       	sbci	r31, 0xCE	; 206
    3616:	81 83       	std	Z+1, r24	; 0x01
    3618:	92 83       	std	Z+2, r25	; 0x02
    361a:	8b e0       	ldi	r24, 0x0B	; 11
    361c:	82 9f       	mul	r24, r18
    361e:	f0 01       	movw	r30, r0
    3620:	83 9f       	mul	r24, r19
    3622:	f0 0d       	add	r31, r0
    3624:	11 24       	eor	r1, r1
    3626:	e2 53       	subi	r30, 0x32	; 50
    3628:	fe 4c       	sbci	r31, 0xCE	; 206
    362a:	01 80       	ldd	r0, Z+1	; 0x01
    362c:	f2 81       	ldd	r31, Z+2	; 0x02
    362e:	e0 2d       	mov	r30, r0
    3630:	80 85       	ldd	r24, Z+8	; 0x08
    3632:	91 85       	ldd	r25, Z+9	; 0x09
    3634:	80 93 fa 31 	sts	0x31FA, r24	; 0x8031fa <pxCurrentTCB>
    3638:	90 93 fb 31 	sts	0x31FB, r25	; 0x8031fb <pxCurrentTCB+0x1>
    363c:	08 95       	ret

0000363e <vTaskPlaceOnEventList>:
    363e:	cf 92       	push	r12
    3640:	df 92       	push	r13
    3642:	ef 92       	push	r14
    3644:	ff 92       	push	r15
    3646:	6a 01       	movw	r12, r20
    3648:	7b 01       	movw	r14, r22
    364a:	60 91 fa 31 	lds	r22, 0x31FA	; 0x8031fa <pxCurrentTCB>
    364e:	70 91 fb 31 	lds	r23, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    3652:	62 5f       	subi	r22, 0xF2	; 242
    3654:	7f 4f       	sbci	r23, 0xFF	; 255
    3656:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <vListInsert>
    365a:	80 91 fa 31 	lds	r24, 0x31FA	; 0x8031fa <pxCurrentTCB>
    365e:	90 91 fb 31 	lds	r25, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    3662:	02 96       	adiw	r24, 0x02	; 2
    3664:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    3668:	80 91 a2 31 	lds	r24, 0x31A2	; 0x8031a2 <xTickCount>
    366c:	90 91 a3 31 	lds	r25, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    3670:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    3674:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    3678:	bc 01       	movw	r22, r24
    367a:	cd 01       	movw	r24, r26
    367c:	6c 0d       	add	r22, r12
    367e:	7d 1d       	adc	r23, r13
    3680:	8e 1d       	adc	r24, r14
    3682:	9f 1d       	adc	r25, r15
    3684:	0e 94 f7 16 	call	0x2dee	; 0x2dee <prvAddCurrentTaskToDelayedList>
    3688:	ff 90       	pop	r15
    368a:	ef 90       	pop	r14
    368c:	df 90       	pop	r13
    368e:	cf 90       	pop	r12
    3690:	08 95       	ret

00003692 <xTaskRemoveFromEventList>:
    3692:	0f 93       	push	r16
    3694:	1f 93       	push	r17
    3696:	cf 93       	push	r28
    3698:	df 93       	push	r29
    369a:	dc 01       	movw	r26, r24
    369c:	17 96       	adiw	r26, 0x07	; 7
    369e:	ed 91       	ld	r30, X+
    36a0:	fc 91       	ld	r31, X
    36a2:	18 97       	sbiw	r26, 0x08	; 8
    36a4:	c0 85       	ldd	r28, Z+8	; 0x08
    36a6:	d1 85       	ldd	r29, Z+9	; 0x09
    36a8:	8e 01       	movw	r16, r28
    36aa:	02 5f       	subi	r16, 0xF2	; 242
    36ac:	1f 4f       	sbci	r17, 0xFF	; 255
    36ae:	c8 01       	movw	r24, r16
    36b0:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    36b4:	80 91 9e 31 	lds	r24, 0x319E	; 0x80319e <uxSchedulerSuspended>
    36b8:	81 11       	cpse	r24, r1
    36ba:	16 c0       	rjmp	.+44     	; 0x36e8 <xTaskRemoveFromEventList+0x56>
    36bc:	0c 50       	subi	r16, 0x0C	; 12
    36be:	11 09       	sbc	r17, r1
    36c0:	c8 01       	movw	r24, r16
    36c2:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    36c6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    36c8:	90 91 a0 31 	lds	r25, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    36cc:	98 17       	cp	r25, r24
    36ce:	10 f4       	brcc	.+4      	; 0x36d4 <xTaskRemoveFromEventList+0x42>
    36d0:	80 93 a0 31 	sts	0x31A0, r24	; 0x8031a0 <uxTopReadyPriority>
    36d4:	bb e0       	ldi	r27, 0x0B	; 11
    36d6:	8b 9f       	mul	r24, r27
    36d8:	c0 01       	movw	r24, r0
    36da:	11 24       	eor	r1, r1
    36dc:	b8 01       	movw	r22, r16
    36de:	82 53       	subi	r24, 0x32	; 50
    36e0:	9e 4c       	sbci	r25, 0xCE	; 206
    36e2:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vListInsertEnd>
    36e6:	05 c0       	rjmp	.+10     	; 0x36f2 <xTaskRemoveFromEventList+0x60>
    36e8:	b8 01       	movw	r22, r16
    36ea:	89 ea       	ldi	r24, 0xA9	; 169
    36ec:	91 e3       	ldi	r25, 0x31	; 49
    36ee:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vListInsertEnd>
    36f2:	e0 91 fa 31 	lds	r30, 0x31FA	; 0x8031fa <pxCurrentTCB>
    36f6:	f0 91 fb 31 	lds	r31, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    36fa:	81 e0       	ldi	r24, 0x01	; 1
    36fc:	2a 8d       	ldd	r18, Y+26	; 0x1a
    36fe:	92 8d       	ldd	r25, Z+26	; 0x1a
    3700:	29 17       	cp	r18, r25
    3702:	08 f4       	brcc	.+2      	; 0x3706 <xTaskRemoveFromEventList+0x74>
    3704:	80 e0       	ldi	r24, 0x00	; 0
    3706:	df 91       	pop	r29
    3708:	cf 91       	pop	r28
    370a:	1f 91       	pop	r17
    370c:	0f 91       	pop	r16
    370e:	08 95       	ret

00003710 <vTaskSetTimeOutState>:
    3710:	20 91 9b 31 	lds	r18, 0x319B	; 0x80319b <xNumOfOverflows>
    3714:	fc 01       	movw	r30, r24
    3716:	20 83       	st	Z, r18
    3718:	40 91 a2 31 	lds	r20, 0x31A2	; 0x8031a2 <xTickCount>
    371c:	50 91 a3 31 	lds	r21, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    3720:	60 91 a4 31 	lds	r22, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    3724:	70 91 a5 31 	lds	r23, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    3728:	41 83       	std	Z+1, r20	; 0x01
    372a:	52 83       	std	Z+2, r21	; 0x02
    372c:	63 83       	std	Z+3, r22	; 0x03
    372e:	74 83       	std	Z+4, r23	; 0x04
    3730:	08 95       	ret

00003732 <xTaskCheckForTimeOut>:
    3732:	8f 92       	push	r8
    3734:	9f 92       	push	r9
    3736:	af 92       	push	r10
    3738:	bf 92       	push	r11
    373a:	cf 92       	push	r12
    373c:	df 92       	push	r13
    373e:	ef 92       	push	r14
    3740:	ff 92       	push	r15
    3742:	0f 93       	push	r16
    3744:	1f 93       	push	r17
    3746:	cf 93       	push	r28
    3748:	df 93       	push	r29
    374a:	fc 01       	movw	r30, r24
    374c:	0f b6       	in	r0, 0x3f	; 63
    374e:	f8 94       	cli
    3750:	0f 92       	push	r0
    3752:	80 91 9b 31 	lds	r24, 0x319B	; 0x80319b <xNumOfOverflows>
    3756:	90 81       	ld	r25, Z
    3758:	98 17       	cp	r25, r24
    375a:	89 f0       	breq	.+34     	; 0x377e <xTaskCheckForTimeOut+0x4c>
    375c:	80 91 a2 31 	lds	r24, 0x31A2	; 0x8031a2 <xTickCount>
    3760:	90 91 a3 31 	lds	r25, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    3764:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    3768:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    376c:	01 81       	ldd	r16, Z+1	; 0x01
    376e:	12 81       	ldd	r17, Z+2	; 0x02
    3770:	23 81       	ldd	r18, Z+3	; 0x03
    3772:	34 81       	ldd	r19, Z+4	; 0x04
    3774:	80 17       	cp	r24, r16
    3776:	91 07       	cpc	r25, r17
    3778:	a2 07       	cpc	r26, r18
    377a:	b3 07       	cpc	r27, r19
    377c:	a8 f5       	brcc	.+106    	; 0x37e8 <xTaskCheckForTimeOut+0xb6>
    377e:	80 91 a2 31 	lds	r24, 0x31A2	; 0x8031a2 <xTickCount>
    3782:	90 91 a3 31 	lds	r25, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    3786:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    378a:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    378e:	c1 80       	ldd	r12, Z+1	; 0x01
    3790:	d2 80       	ldd	r13, Z+2	; 0x02
    3792:	e3 80       	ldd	r14, Z+3	; 0x03
    3794:	f4 80       	ldd	r15, Z+4	; 0x04
    3796:	eb 01       	movw	r28, r22
    3798:	08 81       	ld	r16, Y
    379a:	19 81       	ldd	r17, Y+1	; 0x01
    379c:	2a 81       	ldd	r18, Y+2	; 0x02
    379e:	3b 81       	ldd	r19, Y+3	; 0x03
    37a0:	8c 19       	sub	r24, r12
    37a2:	9d 09       	sbc	r25, r13
    37a4:	ae 09       	sbc	r26, r14
    37a6:	bf 09       	sbc	r27, r15
    37a8:	80 17       	cp	r24, r16
    37aa:	91 07       	cpc	r25, r17
    37ac:	a2 07       	cpc	r26, r18
    37ae:	b3 07       	cpc	r27, r19
    37b0:	e8 f4       	brcc	.+58     	; 0x37ec <xTaskCheckForTimeOut+0xba>
    37b2:	cf 01       	movw	r24, r30
    37b4:	80 90 a2 31 	lds	r8, 0x31A2	; 0x8031a2 <xTickCount>
    37b8:	90 90 a3 31 	lds	r9, 0x31A3	; 0x8031a3 <xTickCount+0x1>
    37bc:	a0 90 a4 31 	lds	r10, 0x31A4	; 0x8031a4 <xTickCount+0x2>
    37c0:	b0 90 a5 31 	lds	r11, 0x31A5	; 0x8031a5 <xTickCount+0x3>
    37c4:	b5 01       	movw	r22, r10
    37c6:	a4 01       	movw	r20, r8
    37c8:	4c 19       	sub	r20, r12
    37ca:	5d 09       	sbc	r21, r13
    37cc:	6e 09       	sbc	r22, r14
    37ce:	7f 09       	sbc	r23, r15
    37d0:	04 1b       	sub	r16, r20
    37d2:	15 0b       	sbc	r17, r21
    37d4:	26 0b       	sbc	r18, r22
    37d6:	37 0b       	sbc	r19, r23
    37d8:	08 83       	st	Y, r16
    37da:	19 83       	std	Y+1, r17	; 0x01
    37dc:	2a 83       	std	Y+2, r18	; 0x02
    37de:	3b 83       	std	Y+3, r19	; 0x03
    37e0:	0e 94 88 1b 	call	0x3710	; 0x3710 <vTaskSetTimeOutState>
    37e4:	80 e0       	ldi	r24, 0x00	; 0
    37e6:	03 c0       	rjmp	.+6      	; 0x37ee <xTaskCheckForTimeOut+0xbc>
    37e8:	81 e0       	ldi	r24, 0x01	; 1
    37ea:	01 c0       	rjmp	.+2      	; 0x37ee <xTaskCheckForTimeOut+0xbc>
    37ec:	81 e0       	ldi	r24, 0x01	; 1
    37ee:	0f 90       	pop	r0
    37f0:	0f be       	out	0x3f, r0	; 63
    37f2:	df 91       	pop	r29
    37f4:	cf 91       	pop	r28
    37f6:	1f 91       	pop	r17
    37f8:	0f 91       	pop	r16
    37fa:	ff 90       	pop	r15
    37fc:	ef 90       	pop	r14
    37fe:	df 90       	pop	r13
    3800:	cf 90       	pop	r12
    3802:	bf 90       	pop	r11
    3804:	af 90       	pop	r10
    3806:	9f 90       	pop	r9
    3808:	8f 90       	pop	r8
    380a:	08 95       	ret

0000380c <vTaskMissedYield>:
    380c:	81 e0       	ldi	r24, 0x01	; 1
    380e:	80 93 9c 31 	sts	0x319C, r24	; 0x80319c <xMissedYield>
    3812:	08 95       	ret

00003814 <uxTaskGetStackHighWaterMark>:
    3814:	00 97       	sbiw	r24, 0x00	; 0
    3816:	21 f4       	brne	.+8      	; 0x3820 <uxTaskGetStackHighWaterMark+0xc>
    3818:	80 91 fa 31 	lds	r24, 0x31FA	; 0x8031fa <pxCurrentTCB>
    381c:	90 91 fb 31 	lds	r25, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    3820:	dc 01       	movw	r26, r24
    3822:	5b 96       	adiw	r26, 0x1b	; 27
    3824:	ed 91       	ld	r30, X+
    3826:	fc 91       	ld	r31, X
    3828:	5c 97       	sbiw	r26, 0x1c	; 28
    382a:	80 81       	ld	r24, Z
    382c:	81 31       	cpi	r24, 0x11	; 17
    382e:	41 f4       	brne	.+16     	; 0x3840 <uxTaskGetStackHighWaterMark+0x2c>
    3830:	31 96       	adiw	r30, 0x01	; 1
    3832:	80 e0       	ldi	r24, 0x00	; 0
    3834:	90 e0       	ldi	r25, 0x00	; 0
    3836:	01 96       	adiw	r24, 0x01	; 1
    3838:	21 91       	ld	r18, Z+
    383a:	21 31       	cpi	r18, 0x11	; 17
    383c:	e1 f3       	breq	.-8      	; 0x3836 <uxTaskGetStackHighWaterMark+0x22>
    383e:	08 95       	ret
    3840:	80 e0       	ldi	r24, 0x00	; 0
    3842:	90 e0       	ldi	r25, 0x00	; 0
    3844:	08 95       	ret

00003846 <xTaskGetCurrentTaskHandle>:
    3846:	80 91 fa 31 	lds	r24, 0x31FA	; 0x8031fa <pxCurrentTCB>
    384a:	90 91 fb 31 	lds	r25, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    384e:	08 95       	ret

00003850 <vTaskPriorityInherit>:
    3850:	0f 93       	push	r16
    3852:	1f 93       	push	r17
    3854:	cf 93       	push	r28
    3856:	df 93       	push	r29
    3858:	fc 01       	movw	r30, r24
    385a:	22 8d       	ldd	r18, Z+26	; 0x1a
    385c:	a0 91 fa 31 	lds	r26, 0x31FA	; 0x8031fa <pxCurrentTCB>
    3860:	b0 91 fb 31 	lds	r27, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    3864:	5a 96       	adiw	r26, 0x1a	; 26
    3866:	8c 91       	ld	r24, X
    3868:	28 17       	cp	r18, r24
    386a:	08 f0       	brcs	.+2      	; 0x386e <vTaskPriorityInherit+0x1e>
    386c:	41 c0       	rjmp	.+130    	; 0x38f0 <vTaskPriorityInherit+0xa0>
    386e:	a0 91 fa 31 	lds	r26, 0x31FA	; 0x8031fa <pxCurrentTCB>
    3872:	b0 91 fb 31 	lds	r27, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    3876:	5a 96       	adiw	r26, 0x1a	; 26
    3878:	3c 91       	ld	r19, X
    387a:	84 e0       	ldi	r24, 0x04	; 4
    387c:	90 e0       	ldi	r25, 0x00	; 0
    387e:	a0 e0       	ldi	r26, 0x00	; 0
    3880:	b0 e0       	ldi	r27, 0x00	; 0
    3882:	83 1b       	sub	r24, r19
    3884:	91 09       	sbc	r25, r1
    3886:	a1 09       	sbc	r26, r1
    3888:	b1 09       	sbc	r27, r1
    388a:	86 87       	std	Z+14, r24	; 0x0e
    388c:	97 87       	std	Z+15, r25	; 0x0f
    388e:	a0 8b       	std	Z+16, r26	; 0x10
    3890:	b1 8b       	std	Z+17, r27	; 0x11
    3892:	8b e0       	ldi	r24, 0x0B	; 11
    3894:	28 9f       	mul	r18, r24
    3896:	90 01       	movw	r18, r0
    3898:	11 24       	eor	r1, r1
    389a:	22 53       	subi	r18, 0x32	; 50
    389c:	3e 4c       	sbci	r19, 0xCE	; 206
    389e:	84 85       	ldd	r24, Z+12	; 0x0c
    38a0:	95 85       	ldd	r25, Z+13	; 0x0d
    38a2:	82 17       	cp	r24, r18
    38a4:	93 07       	cpc	r25, r19
    38a6:	e9 f4       	brne	.+58     	; 0x38e2 <vTaskPriorityInherit+0x92>
    38a8:	8f 01       	movw	r16, r30
    38aa:	ef 01       	movw	r28, r30
    38ac:	22 96       	adiw	r28, 0x02	; 2
    38ae:	ce 01       	movw	r24, r28
    38b0:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    38b4:	e0 91 fa 31 	lds	r30, 0x31FA	; 0x8031fa <pxCurrentTCB>
    38b8:	f0 91 fb 31 	lds	r31, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    38bc:	82 8d       	ldd	r24, Z+26	; 0x1a
    38be:	f8 01       	movw	r30, r16
    38c0:	82 8f       	std	Z+26, r24	; 0x1a
    38c2:	90 91 a0 31 	lds	r25, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    38c6:	98 17       	cp	r25, r24
    38c8:	10 f4       	brcc	.+4      	; 0x38ce <vTaskPriorityInherit+0x7e>
    38ca:	80 93 a0 31 	sts	0x31A0, r24	; 0x8031a0 <uxTopReadyPriority>
    38ce:	fb e0       	ldi	r31, 0x0B	; 11
    38d0:	8f 9f       	mul	r24, r31
    38d2:	c0 01       	movw	r24, r0
    38d4:	11 24       	eor	r1, r1
    38d6:	be 01       	movw	r22, r28
    38d8:	82 53       	subi	r24, 0x32	; 50
    38da:	9e 4c       	sbci	r25, 0xCE	; 206
    38dc:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vListInsertEnd>
    38e0:	07 c0       	rjmp	.+14     	; 0x38f0 <vTaskPriorityInherit+0xa0>
    38e2:	a0 91 fa 31 	lds	r26, 0x31FA	; 0x8031fa <pxCurrentTCB>
    38e6:	b0 91 fb 31 	lds	r27, 0x31FB	; 0x8031fb <pxCurrentTCB+0x1>
    38ea:	5a 96       	adiw	r26, 0x1a	; 26
    38ec:	8c 91       	ld	r24, X
    38ee:	82 8f       	std	Z+26, r24	; 0x1a
    38f0:	df 91       	pop	r29
    38f2:	cf 91       	pop	r28
    38f4:	1f 91       	pop	r17
    38f6:	0f 91       	pop	r16
    38f8:	08 95       	ret

000038fa <vTaskPriorityDisinherit>:
    38fa:	0f 93       	push	r16
    38fc:	1f 93       	push	r17
    38fe:	cf 93       	push	r28
    3900:	df 93       	push	r29
    3902:	00 97       	sbiw	r24, 0x00	; 0
    3904:	49 f1       	breq	.+82     	; 0x3958 <vTaskPriorityDisinherit+0x5e>
    3906:	fc 01       	movw	r30, r24
    3908:	32 8d       	ldd	r19, Z+26	; 0x1a
    390a:	27 a1       	ldd	r18, Z+39	; 0x27
    390c:	32 17       	cp	r19, r18
    390e:	21 f1       	breq	.+72     	; 0x3958 <vTaskPriorityDisinherit+0x5e>
    3910:	ec 01       	movw	r28, r24
    3912:	8c 01       	movw	r16, r24
    3914:	0e 5f       	subi	r16, 0xFE	; 254
    3916:	1f 4f       	sbci	r17, 0xFF	; 255
    3918:	c8 01       	movw	r24, r16
    391a:	0e 94 c5 12 	call	0x258a	; 0x258a <vListRemove>
    391e:	8f a1       	ldd	r24, Y+39	; 0x27
    3920:	8a 8f       	std	Y+26, r24	; 0x1a
    3922:	44 e0       	ldi	r20, 0x04	; 4
    3924:	50 e0       	ldi	r21, 0x00	; 0
    3926:	60 e0       	ldi	r22, 0x00	; 0
    3928:	70 e0       	ldi	r23, 0x00	; 0
    392a:	48 1b       	sub	r20, r24
    392c:	51 09       	sbc	r21, r1
    392e:	61 09       	sbc	r22, r1
    3930:	71 09       	sbc	r23, r1
    3932:	4e 87       	std	Y+14, r20	; 0x0e
    3934:	5f 87       	std	Y+15, r21	; 0x0f
    3936:	68 8b       	std	Y+16, r22	; 0x10
    3938:	79 8b       	std	Y+17, r23	; 0x11
    393a:	90 91 a0 31 	lds	r25, 0x31A0	; 0x8031a0 <uxTopReadyPriority>
    393e:	98 17       	cp	r25, r24
    3940:	10 f4       	brcc	.+4      	; 0x3946 <vTaskPriorityDisinherit+0x4c>
    3942:	80 93 a0 31 	sts	0x31A0, r24	; 0x8031a0 <uxTopReadyPriority>
    3946:	fb e0       	ldi	r31, 0x0B	; 11
    3948:	8f 9f       	mul	r24, r31
    394a:	c0 01       	movw	r24, r0
    394c:	11 24       	eor	r1, r1
    394e:	b8 01       	movw	r22, r16
    3950:	82 53       	subi	r24, 0x32	; 50
    3952:	9e 4c       	sbci	r25, 0xCE	; 206
    3954:	0e 94 53 12 	call	0x24a6	; 0x24a6 <vListInsertEnd>
    3958:	df 91       	pop	r29
    395a:	cf 91       	pop	r28
    395c:	1f 91       	pop	r17
    395e:	0f 91       	pop	r16
    3960:	08 95       	ret

00003962 <_ZN8frt_task22_call_users_run_methodEPS_>:
    3962:	ec 01       	movw	r28, r24
    3964:	e8 81       	ld	r30, Y
    3966:	f9 81       	ldd	r31, Y+1	; 0x01
    3968:	01 90       	ld	r0, Z+
    396a:	f0 81       	ld	r31, Z
    396c:	e0 2d       	mov	r30, r0
    396e:	19 95       	eicall
    3970:	1a 82       	std	Y+2, r1	; 0x02
    3972:	1b 82       	std	Y+3, r1	; 0x03
    3974:	6f ef       	ldi	r22, 0xFF	; 255
    3976:	7f ef       	ldi	r23, 0xFF	; 255
    3978:	cb 01       	movw	r24, r22
    397a:	0e 94 94 1a 	call	0x3528	; 0x3528 <vTaskDelay>
    397e:	fa cf       	rjmp	.-12     	; 0x3974 <_ZN8frt_task22_call_users_run_methodEPS_+0x12>

00003980 <_ZN8frt_task13transition_toEh>:
    3980:	fc 01       	movw	r30, r24
    3982:	64 87       	std	Z+12, r22	; 0x0c
    3984:	65 87       	std	Z+13, r22	; 0x0d
    3986:	08 95       	ret

00003988 <_ZN8frt_taskC1EPKchjP8emstream>:
    3988:	4f 92       	push	r4
    398a:	5f 92       	push	r5
    398c:	6f 92       	push	r6
    398e:	7f 92       	push	r7
    3990:	8f 92       	push	r8
    3992:	9f 92       	push	r9
    3994:	af 92       	push	r10
    3996:	bf 92       	push	r11
    3998:	cf 92       	push	r12
    399a:	df 92       	push	r13
    399c:	ef 92       	push	r14
    399e:	ff 92       	push	r15
    39a0:	0f 93       	push	r16
    39a2:	1f 93       	push	r17
    39a4:	cf 93       	push	r28
    39a6:	df 93       	push	r29
    39a8:	cd b7       	in	r28, 0x3d	; 61
    39aa:	de b7       	in	r29, 0x3e	; 62
    39ac:	2a 97       	sbiw	r28, 0x0a	; 10
    39ae:	cd bf       	out	0x3d, r28	; 61
    39b0:	de bf       	out	0x3e, r29	; 62
    39b2:	4c 01       	movw	r8, r24
    39b4:	29 01       	movw	r4, r18
    39b6:	38 01       	movw	r6, r16
    39b8:	84 ec       	ldi	r24, 0xC4	; 196
    39ba:	90 e2       	ldi	r25, 0x20	; 32
    39bc:	f4 01       	movw	r30, r8
    39be:	80 83       	st	Z, r24
    39c0:	91 83       	std	Z+1, r25	; 0x01
    39c2:	fb 01       	movw	r30, r22
    39c4:	80 81       	ld	r24, Z
    39c6:	88 23       	and	r24, r24
    39c8:	69 f0       	breq	.+26     	; 0x39e4 <_ZN8frt_taskC1EPKchjP8emstream+0x5c>
    39ca:	de 01       	movw	r26, r28
    39cc:	11 96       	adiw	r26, 0x01	; 1
    39ce:	31 96       	adiw	r30, 0x01	; 1
    39d0:	90 e0       	ldi	r25, 0x00	; 0
    39d2:	02 c0       	rjmp	.+4      	; 0x39d8 <_ZN8frt_taskC1EPKchjP8emstream+0x50>
    39d4:	99 30       	cpi	r25, 0x09	; 9
    39d6:	39 f0       	breq	.+14     	; 0x39e6 <_ZN8frt_taskC1EPKchjP8emstream+0x5e>
    39d8:	9f 5f       	subi	r25, 0xFF	; 255
    39da:	8d 93       	st	X+, r24
    39dc:	81 91       	ld	r24, Z+
    39de:	81 11       	cpse	r24, r1
    39e0:	f9 cf       	rjmp	.-14     	; 0x39d4 <_ZN8frt_taskC1EPKchjP8emstream+0x4c>
    39e2:	01 c0       	rjmp	.+2      	; 0x39e6 <_ZN8frt_taskC1EPKchjP8emstream+0x5e>
    39e4:	90 e0       	ldi	r25, 0x00	; 0
    39e6:	e1 e0       	ldi	r30, 0x01	; 1
    39e8:	f0 e0       	ldi	r31, 0x00	; 0
    39ea:	ec 0f       	add	r30, r28
    39ec:	fd 1f       	adc	r31, r29
    39ee:	e9 0f       	add	r30, r25
    39f0:	f1 1d       	adc	r31, r1
    39f2:	10 82       	st	Z, r1
    39f4:	74 01       	movw	r14, r8
    39f6:	f2 e0       	ldi	r31, 0x02	; 2
    39f8:	ef 0e       	add	r14, r31
    39fa:	f1 1c       	adc	r15, r1
    39fc:	a1 2c       	mov	r10, r1
    39fe:	b1 2c       	mov	r11, r1
    3a00:	c1 2c       	mov	r12, r1
    3a02:	d1 2c       	mov	r13, r1
    3a04:	04 2f       	mov	r16, r20
    3a06:	94 01       	movw	r18, r8
    3a08:	a2 01       	movw	r20, r4
    3a0a:	be 01       	movw	r22, r28
    3a0c:	6f 5f       	subi	r22, 0xFF	; 255
    3a0e:	7f 4f       	sbci	r23, 0xFF	; 255
    3a10:	8f ed       	ldi	r24, 0xDF	; 223
    3a12:	91 e0       	ldi	r25, 0x01	; 1
    3a14:	0e 94 45 17 	call	0x2e8a	; 0x2e8a <xTaskGenericCreate>
    3a18:	f4 01       	movw	r30, r8
    3a1a:	66 82       	std	Z+6, r6	; 0x06
    3a1c:	77 82       	std	Z+7, r7	; 0x07
    3a1e:	40 86       	std	Z+8, r4	; 0x08
    3a20:	51 86       	std	Z+9, r5	; 0x09
    3a22:	20 91 fc 31 	lds	r18, 0x31FC	; 0x8031fc <last_created_task_pointer>
    3a26:	30 91 fd 31 	lds	r19, 0x31FD	; 0x8031fd <last_created_task_pointer+0x1>
    3a2a:	24 83       	std	Z+4, r18	; 0x04
    3a2c:	35 83       	std	Z+5, r19	; 0x05
    3a2e:	80 92 fc 31 	sts	0x31FC, r8	; 0x8031fc <last_created_task_pointer>
    3a32:	90 92 fd 31 	sts	0x31FD, r9	; 0x8031fd <last_created_task_pointer+0x1>
    3a36:	14 86       	std	Z+12, r1	; 0x0c
    3a38:	15 86       	std	Z+13, r1	; 0x0d
    3a3a:	40 90 3e 32 	lds	r4, 0x323E	; 0x80323e <portStackTopForTask>
    3a3e:	50 90 3f 32 	lds	r5, 0x323F	; 0x80323f <portStackTopForTask+0x1>
    3a42:	ff ef       	ldi	r31, 0xFF	; 255
    3a44:	4f 1a       	sub	r4, r31
    3a46:	5f 0a       	sbc	r5, r31
    3a48:	40 92 3e 32 	sts	0x323E, r4	; 0x80323e <portStackTopForTask>
    3a4c:	50 92 3f 32 	sts	0x323F, r5	; 0x80323f <portStackTopForTask+0x1>
    3a50:	f4 01       	movw	r30, r8
    3a52:	42 86       	std	Z+10, r4	; 0x0a
    3a54:	53 86       	std	Z+11, r5	; 0x0b
    3a56:	16 86       	std	Z+14, r1	; 0x0e
    3a58:	17 86       	std	Z+15, r1	; 0x0f
    3a5a:	10 8a       	std	Z+16, r1	; 0x10
    3a5c:	11 8a       	std	Z+17, r1	; 0x11
    3a5e:	61 14       	cp	r6, r1
    3a60:	71 04       	cpc	r7, r1
    3a62:	09 f4       	brne	.+2      	; 0x3a66 <_ZN8frt_taskC1EPKchjP8emstream+0xde>
    3a64:	44 c0       	rjmp	.+136    	; 0x3aee <_ZN8frt_taskC1EPKchjP8emstream+0x166>
    3a66:	81 30       	cpi	r24, 0x01	; 1
    3a68:	79 f5       	brne	.+94     	; 0x3ac8 <_ZN8frt_taskC1EPKchjP8emstream+0x140>
    3a6a:	6a e0       	ldi	r22, 0x0A	; 10
    3a6c:	c3 01       	movw	r24, r6
    3a6e:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3a72:	7c 01       	movw	r14, r24
    3a74:	65 e4       	ldi	r22, 0x45	; 69
    3a76:	73 e0       	ldi	r23, 0x03	; 3
    3a78:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3a7c:	be 01       	movw	r22, r28
    3a7e:	6f 5f       	subi	r22, 0xFF	; 255
    3a80:	7f 4f       	sbci	r23, 0xFF	; 255
    3a82:	c7 01       	movw	r24, r14
    3a84:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3a88:	6a e0       	ldi	r22, 0x0A	; 10
    3a8a:	c7 01       	movw	r24, r14
    3a8c:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3a90:	7c 01       	movw	r14, r24
    3a92:	6c e3       	ldi	r22, 0x3C	; 60
    3a94:	73 e0       	ldi	r23, 0x03	; 3
    3a96:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3a9a:	6a e0       	ldi	r22, 0x0A	; 10
    3a9c:	c7 01       	movw	r24, r14
    3a9e:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3aa2:	7c 01       	movw	r14, r24
    3aa4:	6e e2       	ldi	r22, 0x2E	; 46
    3aa6:	73 e0       	ldi	r23, 0x03	; 3
    3aa8:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3aac:	63 e0       	ldi	r22, 0x03	; 3
    3aae:	c7 01       	movw	r24, r14
    3ab0:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3ab4:	b2 01       	movw	r22, r4
    3ab6:	0e 94 1e 20 	call	0x403c	; 0x403c <_ZN8emstreamlsEj>
    3aba:	62 e0       	ldi	r22, 0x02	; 2
    3abc:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3ac0:	66 e0       	ldi	r22, 0x06	; 6
    3ac2:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3ac6:	13 c0       	rjmp	.+38     	; 0x3aee <_ZN8frt_taskC1EPKchjP8emstream+0x166>
    3ac8:	6a e0       	ldi	r22, 0x0A	; 10
    3aca:	c3 01       	movw	r24, r6
    3acc:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3ad0:	4c 01       	movw	r8, r24
    3ad2:	69 e1       	ldi	r22, 0x19	; 25
    3ad4:	73 e0       	ldi	r23, 0x03	; 3
    3ad6:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3ada:	be 01       	movw	r22, r28
    3adc:	6f 5f       	subi	r22, 0xFF	; 255
    3ade:	7f 4f       	sbci	r23, 0xFF	; 255
    3ae0:	c4 01       	movw	r24, r8
    3ae2:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3ae6:	66 e0       	ldi	r22, 0x06	; 6
    3ae8:	c4 01       	movw	r24, r8
    3aea:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3aee:	2a 96       	adiw	r28, 0x0a	; 10
    3af0:	cd bf       	out	0x3d, r28	; 61
    3af2:	de bf       	out	0x3e, r29	; 62
    3af4:	df 91       	pop	r29
    3af6:	cf 91       	pop	r28
    3af8:	1f 91       	pop	r17
    3afa:	0f 91       	pop	r16
    3afc:	ff 90       	pop	r15
    3afe:	ef 90       	pop	r14
    3b00:	df 90       	pop	r13
    3b02:	cf 90       	pop	r12
    3b04:	bf 90       	pop	r11
    3b06:	af 90       	pop	r10
    3b08:	9f 90       	pop	r9
    3b0a:	8f 90       	pop	r8
    3b0c:	7f 90       	pop	r7
    3b0e:	6f 90       	pop	r6
    3b10:	5f 90       	pop	r5
    3b12:	4f 90       	pop	r4
    3b14:	08 95       	ret

00003b16 <_ZN8frt_task12print_statusER8emstream>:
    3b16:	8f 92       	push	r8
    3b18:	9f 92       	push	r9
    3b1a:	af 92       	push	r10
    3b1c:	bf 92       	push	r11
    3b1e:	cf 92       	push	r12
    3b20:	df 92       	push	r13
    3b22:	ef 92       	push	r14
    3b24:	ff 92       	push	r15
    3b26:	0f 93       	push	r16
    3b28:	1f 93       	push	r17
    3b2a:	cf 93       	push	r28
    3b2c:	df 93       	push	r29
    3b2e:	ec 01       	movw	r28, r24
    3b30:	8b 01       	movw	r16, r22
    3b32:	8a 81       	ldd	r24, Y+2	; 0x02
    3b34:	9b 81       	ldd	r25, Y+3	; 0x03
    3b36:	0e 94 9c 18 	call	0x3138	; 0x3138 <pcTaskGetTaskName>
    3b3a:	bc 01       	movw	r22, r24
    3b3c:	c8 01       	movw	r24, r16
    3b3e:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3b42:	d8 01       	movw	r26, r16
    3b44:	ed 91       	ld	r30, X+
    3b46:	fc 91       	ld	r31, X
    3b48:	02 80       	ldd	r0, Z+2	; 0x02
    3b4a:	f3 81       	ldd	r31, Z+3	; 0x03
    3b4c:	e0 2d       	mov	r30, r0
    3b4e:	69 e0       	ldi	r22, 0x09	; 9
    3b50:	c8 01       	movw	r24, r16
    3b52:	19 95       	eicall
    3b54:	8a 81       	ldd	r24, Y+2	; 0x02
    3b56:	9b 81       	ldd	r25, Y+3	; 0x03
    3b58:	0e 94 9c 18 	call	0x3138	; 0x3138 <pcTaskGetTaskName>
    3b5c:	fc 01       	movw	r30, r24
    3b5e:	01 90       	ld	r0, Z+
    3b60:	00 20       	and	r0, r0
    3b62:	e9 f7       	brne	.-6      	; 0x3b5e <_ZN8frt_task12print_statusER8emstream+0x48>
    3b64:	31 97       	sbiw	r30, 0x01	; 1
    3b66:	e8 1b       	sub	r30, r24
    3b68:	f9 0b       	sbc	r31, r25
    3b6a:	38 97       	sbiw	r30, 0x08	; 8
    3b6c:	48 f4       	brcc	.+18     	; 0x3b80 <_ZN8frt_task12print_statusER8emstream+0x6a>
    3b6e:	d8 01       	movw	r26, r16
    3b70:	ed 91       	ld	r30, X+
    3b72:	fc 91       	ld	r31, X
    3b74:	02 80       	ldd	r0, Z+2	; 0x02
    3b76:	f3 81       	ldd	r31, Z+3	; 0x03
    3b78:	e0 2d       	mov	r30, r0
    3b7a:	69 e0       	ldi	r22, 0x09	; 9
    3b7c:	c8 01       	movw	r24, r16
    3b7e:	19 95       	eicall
    3b80:	ce 84       	ldd	r12, Y+14	; 0x0e
    3b82:	df 84       	ldd	r13, Y+15	; 0x0f
    3b84:	e8 88       	ldd	r14, Y+16	; 0x10
    3b86:	f9 88       	ldd	r15, Y+17	; 0x11
    3b88:	a8 84       	ldd	r10, Y+8	; 0x08
    3b8a:	b9 84       	ldd	r11, Y+9	; 0x09
    3b8c:	8a 81       	ldd	r24, Y+2	; 0x02
    3b8e:	9b 81       	ldd	r25, Y+3	; 0x03
    3b90:	0e 94 0a 1c 	call	0x3814	; 0x3814 <uxTaskGetStackHighWaterMark>
    3b94:	98 2e       	mov	r9, r24
    3b96:	8c 84       	ldd	r8, Y+12	; 0x0c
    3b98:	8a 81       	ldd	r24, Y+2	; 0x02
    3b9a:	9b 81       	ldd	r25, Y+3	; 0x03
    3b9c:	0e 94 47 18 	call	0x308e	; 0x308e <uxTaskPriorityGet>
    3ba0:	68 2f       	mov	r22, r24
    3ba2:	c8 01       	movw	r24, r16
    3ba4:	0e 94 94 20 	call	0x4128	; 0x4128 <_ZN8emstreamlsEh>
    3ba8:	6a e0       	ldi	r22, 0x0A	; 10
    3baa:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3bae:	ec 01       	movw	r28, r24
    3bb0:	6b eb       	ldi	r22, 0xBB	; 187
    3bb2:	73 e0       	ldi	r23, 0x03	; 3
    3bb4:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3bb8:	68 2d       	mov	r22, r8
    3bba:	ce 01       	movw	r24, r28
    3bbc:	0e 94 94 20 	call	0x4128	; 0x4128 <_ZN8emstreamlsEh>
    3bc0:	6a e0       	ldi	r22, 0x0A	; 10
    3bc2:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3bc6:	ec 01       	movw	r28, r24
    3bc8:	69 eb       	ldi	r22, 0xB9	; 185
    3bca:	73 e0       	ldi	r23, 0x03	; 3
    3bcc:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3bd0:	69 2d       	mov	r22, r9
    3bd2:	ce 01       	movw	r24, r28
    3bd4:	0e 94 94 20 	call	0x4128	; 0x4128 <_ZN8emstreamlsEh>
    3bd8:	6a e0       	ldi	r22, 0x0A	; 10
    3bda:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3bde:	ec 01       	movw	r28, r24
    3be0:	67 eb       	ldi	r22, 0xB7	; 183
    3be2:	73 e0       	ldi	r23, 0x03	; 3
    3be4:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3be8:	b5 01       	movw	r22, r10
    3bea:	ce 01       	movw	r24, r28
    3bec:	0e 94 1e 20 	call	0x403c	; 0x403c <_ZN8emstreamlsEj>
    3bf0:	6a e0       	ldi	r22, 0x0A	; 10
    3bf2:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3bf6:	ec 01       	movw	r28, r24
    3bf8:	65 eb       	ldi	r22, 0xB5	; 181
    3bfa:	73 e0       	ldi	r23, 0x03	; 3
    3bfc:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3c00:	6a e0       	ldi	r22, 0x0A	; 10
    3c02:	ce 01       	movw	r24, r28
    3c04:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    3c08:	ec 01       	movw	r28, r24
    3c0a:	63 eb       	ldi	r22, 0xB3	; 179
    3c0c:	73 e0       	ldi	r23, 0x03	; 3
    3c0e:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    3c12:	b7 01       	movw	r22, r14
    3c14:	a6 01       	movw	r20, r12
    3c16:	ce 01       	movw	r24, r28
    3c18:	0e 94 52 20 	call	0x40a4	; 0x40a4 <_ZN8emstreamlsEm>
    3c1c:	df 91       	pop	r29
    3c1e:	cf 91       	pop	r28
    3c20:	1f 91       	pop	r17
    3c22:	0f 91       	pop	r16
    3c24:	ff 90       	pop	r15
    3c26:	ef 90       	pop	r14
    3c28:	df 90       	pop	r13
    3c2a:	cf 90       	pop	r12
    3c2c:	bf 90       	pop	r11
    3c2e:	af 90       	pop	r10
    3c30:	9f 90       	pop	r9
    3c32:	8f 90       	pop	r8
    3c34:	08 95       	ret

00003c36 <_ZN14frt_text_queue7getcharEv>:
    3c36:	0f 93       	push	r16
    3c38:	cf 93       	push	r28
    3c3a:	df 93       	push	r29
    3c3c:	1f 92       	push	r1
    3c3e:	cd b7       	in	r28, 0x3d	; 61
    3c40:	de b7       	in	r29, 0x3e	; 62
    3c42:	00 e0       	ldi	r16, 0x00	; 0
    3c44:	2f ef       	ldi	r18, 0xFF	; 255
    3c46:	3f ef       	ldi	r19, 0xFF	; 255
    3c48:	a9 01       	movw	r20, r18
    3c4a:	be 01       	movw	r22, r28
    3c4c:	6f 5f       	subi	r22, 0xFF	; 255
    3c4e:	7f 4f       	sbci	r23, 0xFF	; 255
    3c50:	fc 01       	movw	r30, r24
    3c52:	80 85       	ldd	r24, Z+8	; 0x08
    3c54:	91 85       	ldd	r25, Z+9	; 0x09
    3c56:	0e 94 23 16 	call	0x2c46	; 0x2c46 <xQueueGenericReceive>
    3c5a:	81 30       	cpi	r24, 0x01	; 1
    3c5c:	19 f4       	brne	.+6      	; 0x3c64 <_ZN14frt_text_queue7getcharEv+0x2e>
    3c5e:	89 81       	ldd	r24, Y+1	; 0x01
    3c60:	90 e0       	ldi	r25, 0x00	; 0
    3c62:	02 c0       	rjmp	.+4      	; 0x3c68 <_ZN14frt_text_queue7getcharEv+0x32>
    3c64:	8f ef       	ldi	r24, 0xFF	; 255
    3c66:	9f ef       	ldi	r25, 0xFF	; 255
    3c68:	0f 90       	pop	r0
    3c6a:	df 91       	pop	r29
    3c6c:	cf 91       	pop	r28
    3c6e:	0f 91       	pop	r16
    3c70:	08 95       	ret

00003c72 <_ZN14frt_text_queue14check_for_charEv>:
    3c72:	fc 01       	movw	r30, r24
    3c74:	80 85       	ldd	r24, Z+8	; 0x08
    3c76:	91 85       	ldd	r25, Z+9	; 0x09
    3c78:	0e 94 e7 16 	call	0x2dce	; 0x2dce <uxQueueMessagesWaiting>
    3c7c:	91 e0       	ldi	r25, 0x01	; 1
    3c7e:	81 11       	cpse	r24, r1
    3c80:	01 c0       	rjmp	.+2      	; 0x3c84 <_ZN14frt_text_queue14check_for_charEv+0x12>
    3c82:	90 e0       	ldi	r25, 0x00	; 0
    3c84:	89 2f       	mov	r24, r25
    3c86:	08 95       	ret

00003c88 <_ZN14frt_text_queue7putcharEc>:
    3c88:	0f 93       	push	r16
    3c8a:	cf 93       	push	r28
    3c8c:	df 93       	push	r29
    3c8e:	1f 92       	push	r1
    3c90:	cd b7       	in	r28, 0x3d	; 61
    3c92:	de b7       	in	r29, 0x3e	; 62
    3c94:	69 83       	std	Y+1, r22	; 0x01
    3c96:	fc 01       	movw	r30, r24
    3c98:	22 85       	ldd	r18, Z+10	; 0x0a
    3c9a:	33 85       	ldd	r19, Z+11	; 0x0b
    3c9c:	44 85       	ldd	r20, Z+12	; 0x0c
    3c9e:	55 85       	ldd	r21, Z+13	; 0x0d
    3ca0:	00 e0       	ldi	r16, 0x00	; 0
    3ca2:	be 01       	movw	r22, r28
    3ca4:	6f 5f       	subi	r22, 0xFF	; 255
    3ca6:	7f 4f       	sbci	r23, 0xFF	; 255
    3ca8:	80 85       	ldd	r24, Z+8	; 0x08
    3caa:	91 85       	ldd	r25, Z+9	; 0x09
    3cac:	0e 94 88 15 	call	0x2b10	; 0x2b10 <xQueueGenericSend>
    3cb0:	91 e0       	ldi	r25, 0x01	; 1
    3cb2:	81 11       	cpse	r24, r1
    3cb4:	01 c0       	rjmp	.+2      	; 0x3cb8 <_ZN14frt_text_queue7putcharEc+0x30>
    3cb6:	90 e0       	ldi	r25, 0x00	; 0
    3cb8:	89 2f       	mov	r24, r25
    3cba:	0f 90       	pop	r0
    3cbc:	df 91       	pop	r29
    3cbe:	cf 91       	pop	r28
    3cc0:	0f 91       	pop	r16
    3cc2:	08 95       	ret

00003cc4 <_ZN14frt_text_queueC1EjP8emstreamm>:
    3cc4:	8f 92       	push	r8
    3cc6:	9f 92       	push	r9
    3cc8:	bf 92       	push	r11
    3cca:	cf 92       	push	r12
    3ccc:	df 92       	push	r13
    3cce:	ef 92       	push	r14
    3cd0:	ff 92       	push	r15
    3cd2:	0f 93       	push	r16
    3cd4:	1f 93       	push	r17
    3cd6:	cf 93       	push	r28
    3cd8:	df 93       	push	r29
    3cda:	ec 01       	movw	r28, r24
    3cdc:	b6 2e       	mov	r11, r22
    3cde:	4a 01       	movw	r8, r20
    3ce0:	68 01       	movw	r12, r16
    3ce2:	79 01       	movw	r14, r18
    3ce4:	0e 94 51 1f 	call	0x3ea2	; 0x3ea2 <_ZN8emstreamC1Ev>
    3ce8:	8c ec       	ldi	r24, 0xCC	; 204
    3cea:	90 e2       	ldi	r25, 0x20	; 32
    3cec:	88 83       	st	Y, r24
    3cee:	99 83       	std	Y+1, r25	; 0x01
    3cf0:	8e 86       	std	Y+14, r8	; 0x0e
    3cf2:	9f 86       	std	Y+15, r9	; 0x0f
    3cf4:	40 e0       	ldi	r20, 0x00	; 0
    3cf6:	61 e0       	ldi	r22, 0x01	; 1
    3cf8:	8b 2d       	mov	r24, r11
    3cfa:	0e 94 5a 15 	call	0x2ab4	; 0x2ab4 <xQueueGenericCreate>
    3cfe:	88 87       	std	Y+8, r24	; 0x08
    3d00:	99 87       	std	Y+9, r25	; 0x09
    3d02:	ca 86       	std	Y+10, r12	; 0x0a
    3d04:	db 86       	std	Y+11, r13	; 0x0b
    3d06:	ec 86       	std	Y+12, r14	; 0x0c
    3d08:	fd 86       	std	Y+13, r15	; 0x0d
    3d0a:	df 91       	pop	r29
    3d0c:	cf 91       	pop	r28
    3d0e:	1f 91       	pop	r17
    3d10:	0f 91       	pop	r16
    3d12:	ff 90       	pop	r15
    3d14:	ef 90       	pop	r14
    3d16:	df 90       	pop	r13
    3d18:	cf 90       	pop	r12
    3d1a:	bf 90       	pop	r11
    3d1c:	9f 90       	pop	r9
    3d1e:	8f 90       	pop	r8
    3d20:	08 95       	ret

00003d22 <_Znwj>:
    3d22:	0e 94 71 11 	call	0x22e2	; 0x22e2 <pvPortMalloc>
    3d26:	08 95       	ret

00003d28 <_Znaj>:
    3d28:	0e 94 71 11 	call	0x22e2	; 0x22e2 <pvPortMalloc>
    3d2c:	08 95       	ret

00003d2e <__cxa_pure_virtual>:
    3d2e:	08 95       	ret

00003d30 <_ZN7base232C1EjP12USART_struct>:
    3d30:	cf 93       	push	r28
    3d32:	df 93       	push	r29
    3d34:	fc 01       	movw	r30, r24
    3d36:	da 01       	movw	r26, r20
    3d38:	40 3a       	cpi	r20, 0xA0	; 160
    3d3a:	68 e0       	ldi	r22, 0x08	; 8
    3d3c:	56 07       	cpc	r21, r22
    3d3e:	49 f4       	brne	.+18     	; 0x3d52 <_ZN7base232C1EjP12USART_struct+0x22>
    3d40:	80 e4       	ldi	r24, 0x40	; 64
    3d42:	96 e0       	ldi	r25, 0x06	; 6
    3d44:	82 83       	std	Z+2, r24	; 0x02
    3d46:	93 83       	std	Z+3, r25	; 0x03
    3d48:	82 e0       	ldi	r24, 0x02	; 2
    3d4a:	84 83       	std	Z+4, r24	; 0x04
    3d4c:	83 e0       	ldi	r24, 0x03	; 3
    3d4e:	85 83       	std	Z+5, r24	; 0x05
    3d50:	4c c0       	rjmp	.+152    	; 0x3dea <_ZN7base232C1EjP12USART_struct+0xba>
    3d52:	40 3b       	cpi	r20, 0xB0	; 176
    3d54:	78 e0       	ldi	r23, 0x08	; 8
    3d56:	57 07       	cpc	r21, r23
    3d58:	49 f4       	brne	.+18     	; 0x3d6c <_ZN7base232C1EjP12USART_struct+0x3c>
    3d5a:	80 e4       	ldi	r24, 0x40	; 64
    3d5c:	96 e0       	ldi	r25, 0x06	; 6
    3d5e:	82 83       	std	Z+2, r24	; 0x02
    3d60:	93 83       	std	Z+3, r25	; 0x03
    3d62:	86 e0       	ldi	r24, 0x06	; 6
    3d64:	84 83       	std	Z+4, r24	; 0x04
    3d66:	87 e0       	ldi	r24, 0x07	; 7
    3d68:	85 83       	std	Z+5, r24	; 0x05
    3d6a:	3f c0       	rjmp	.+126    	; 0x3dea <_ZN7base232C1EjP12USART_struct+0xba>
    3d6c:	40 3a       	cpi	r20, 0xA0	; 160
    3d6e:	89 e0       	ldi	r24, 0x09	; 9
    3d70:	58 07       	cpc	r21, r24
    3d72:	49 f4       	brne	.+18     	; 0x3d86 <_ZN7base232C1EjP12USART_struct+0x56>
    3d74:	80 e6       	ldi	r24, 0x60	; 96
    3d76:	96 e0       	ldi	r25, 0x06	; 6
    3d78:	82 83       	std	Z+2, r24	; 0x02
    3d7a:	93 83       	std	Z+3, r25	; 0x03
    3d7c:	82 e0       	ldi	r24, 0x02	; 2
    3d7e:	84 83       	std	Z+4, r24	; 0x04
    3d80:	83 e0       	ldi	r24, 0x03	; 3
    3d82:	85 83       	std	Z+5, r24	; 0x05
    3d84:	32 c0       	rjmp	.+100    	; 0x3dea <_ZN7base232C1EjP12USART_struct+0xba>
    3d86:	40 3b       	cpi	r20, 0xB0	; 176
    3d88:	69 e0       	ldi	r22, 0x09	; 9
    3d8a:	56 07       	cpc	r21, r22
    3d8c:	49 f4       	brne	.+18     	; 0x3da0 <_ZN7base232C1EjP12USART_struct+0x70>
    3d8e:	80 e6       	ldi	r24, 0x60	; 96
    3d90:	96 e0       	ldi	r25, 0x06	; 6
    3d92:	82 83       	std	Z+2, r24	; 0x02
    3d94:	93 83       	std	Z+3, r25	; 0x03
    3d96:	86 e0       	ldi	r24, 0x06	; 6
    3d98:	84 83       	std	Z+4, r24	; 0x04
    3d9a:	87 e0       	ldi	r24, 0x07	; 7
    3d9c:	85 83       	std	Z+5, r24	; 0x05
    3d9e:	25 c0       	rjmp	.+74     	; 0x3dea <_ZN7base232C1EjP12USART_struct+0xba>
    3da0:	40 3a       	cpi	r20, 0xA0	; 160
    3da2:	7a e0       	ldi	r23, 0x0A	; 10
    3da4:	57 07       	cpc	r21, r23
    3da6:	49 f4       	brne	.+18     	; 0x3dba <_ZN7base232C1EjP12USART_struct+0x8a>
    3da8:	80 e8       	ldi	r24, 0x80	; 128
    3daa:	96 e0       	ldi	r25, 0x06	; 6
    3dac:	82 83       	std	Z+2, r24	; 0x02
    3dae:	93 83       	std	Z+3, r25	; 0x03
    3db0:	82 e0       	ldi	r24, 0x02	; 2
    3db2:	84 83       	std	Z+4, r24	; 0x04
    3db4:	83 e0       	ldi	r24, 0x03	; 3
    3db6:	85 83       	std	Z+5, r24	; 0x05
    3db8:	18 c0       	rjmp	.+48     	; 0x3dea <_ZN7base232C1EjP12USART_struct+0xba>
    3dba:	40 3b       	cpi	r20, 0xB0	; 176
    3dbc:	8a e0       	ldi	r24, 0x0A	; 10
    3dbe:	58 07       	cpc	r21, r24
    3dc0:	49 f4       	brne	.+18     	; 0x3dd4 <_ZN7base232C1EjP12USART_struct+0xa4>
    3dc2:	80 e8       	ldi	r24, 0x80	; 128
    3dc4:	96 e0       	ldi	r25, 0x06	; 6
    3dc6:	82 83       	std	Z+2, r24	; 0x02
    3dc8:	93 83       	std	Z+3, r25	; 0x03
    3dca:	86 e0       	ldi	r24, 0x06	; 6
    3dcc:	84 83       	std	Z+4, r24	; 0x04
    3dce:	87 e0       	ldi	r24, 0x07	; 7
    3dd0:	85 83       	std	Z+5, r24	; 0x05
    3dd2:	0b c0       	rjmp	.+22     	; 0x3dea <_ZN7base232C1EjP12USART_struct+0xba>
    3dd4:	40 3a       	cpi	r20, 0xA0	; 160
    3dd6:	5b 40       	sbci	r21, 0x0B	; 11
    3dd8:	41 f4       	brne	.+16     	; 0x3dea <_ZN7base232C1EjP12USART_struct+0xba>
    3dda:	80 ea       	ldi	r24, 0xA0	; 160
    3ddc:	96 e0       	ldi	r25, 0x06	; 6
    3dde:	82 83       	std	Z+2, r24	; 0x02
    3de0:	93 83       	std	Z+3, r25	; 0x03
    3de2:	82 e0       	ldi	r24, 0x02	; 2
    3de4:	84 83       	std	Z+4, r24	; 0x04
    3de6:	83 e0       	ldi	r24, 0x03	; 3
    3de8:	85 83       	std	Z+5, r24	; 0x05
    3dea:	a6 83       	std	Z+6, r26	; 0x06
    3dec:	b7 83       	std	Z+7, r27	; 0x07
    3dee:	cd 01       	movw	r24, r26
    3df0:	01 96       	adiw	r24, 0x01	; 1
    3df2:	80 87       	std	Z+8, r24	; 0x08
    3df4:	91 87       	std	Z+9, r25	; 0x09
    3df6:	03 96       	adiw	r24, 0x03	; 3
    3df8:	82 87       	std	Z+10, r24	; 0x0a
    3dfa:	93 87       	std	Z+11, r25	; 0x0b
    3dfc:	25 81       	ldd	r18, Z+5	; 0x05
    3dfe:	c2 81       	ldd	r28, Z+2	; 0x02
    3e00:	d3 81       	ldd	r29, Z+3	; 0x03
    3e02:	4c 81       	ldd	r20, Y+4	; 0x04
    3e04:	81 e0       	ldi	r24, 0x01	; 1
    3e06:	90 e0       	ldi	r25, 0x00	; 0
    3e08:	bc 01       	movw	r22, r24
    3e0a:	02 c0       	rjmp	.+4      	; 0x3e10 <_ZN7base232C1EjP12USART_struct+0xe0>
    3e0c:	66 0f       	add	r22, r22
    3e0e:	77 1f       	adc	r23, r23
    3e10:	2a 95       	dec	r18
    3e12:	e2 f7       	brpl	.-8      	; 0x3e0c <_ZN7base232C1EjP12USART_struct+0xdc>
    3e14:	9b 01       	movw	r18, r22
    3e16:	24 2b       	or	r18, r20
    3e18:	2c 83       	std	Y+4, r18	; 0x04
    3e1a:	25 81       	ldd	r18, Z+5	; 0x05
    3e1c:	c2 81       	ldd	r28, Z+2	; 0x02
    3e1e:	d3 81       	ldd	r29, Z+3	; 0x03
    3e20:	48 81       	ld	r20, Y
    3e22:	bc 01       	movw	r22, r24
    3e24:	02 c0       	rjmp	.+4      	; 0x3e2a <_ZN7base232C1EjP12USART_struct+0xfa>
    3e26:	66 0f       	add	r22, r22
    3e28:	77 1f       	adc	r23, r23
    3e2a:	2a 95       	dec	r18
    3e2c:	e2 f7       	brpl	.-8      	; 0x3e26 <_ZN7base232C1EjP12USART_struct+0xf6>
    3e2e:	9b 01       	movw	r18, r22
    3e30:	24 2b       	or	r18, r20
    3e32:	28 83       	st	Y, r18
    3e34:	34 81       	ldd	r19, Z+4	; 0x04
    3e36:	c2 81       	ldd	r28, Z+2	; 0x02
    3e38:	d3 81       	ldd	r29, Z+3	; 0x03
    3e3a:	28 81       	ld	r18, Y
    3e3c:	02 c0       	rjmp	.+4      	; 0x3e42 <_ZN7base232C1EjP12USART_struct+0x112>
    3e3e:	88 0f       	add	r24, r24
    3e40:	99 1f       	adc	r25, r25
    3e42:	3a 95       	dec	r19
    3e44:	e2 f7       	brpl	.-8      	; 0x3e3e <_ZN7base232C1EjP12USART_struct+0x10e>
    3e46:	80 95       	com	r24
    3e48:	90 95       	com	r25
    3e4a:	82 23       	and	r24, r18
    3e4c:	88 83       	st	Y, r24
    3e4e:	80 e1       	ldi	r24, 0x10	; 16
    3e50:	13 96       	adiw	r26, 0x03	; 3
    3e52:	8c 93       	st	X, r24
    3e54:	13 97       	sbiw	r26, 0x03	; 3
    3e56:	83 e0       	ldi	r24, 0x03	; 3
    3e58:	15 96       	adiw	r26, 0x05	; 5
    3e5a:	8c 93       	st	X, r24
    3e5c:	15 97       	sbiw	r26, 0x05	; 5
    3e5e:	80 ef       	ldi	r24, 0xF0	; 240
    3e60:	17 96       	adiw	r26, 0x07	; 7
    3e62:	8c 93       	st	X, r24
    3e64:	17 97       	sbiw	r26, 0x07	; 7
    3e66:	81 e2       	ldi	r24, 0x21	; 33
    3e68:	16 96       	adiw	r26, 0x06	; 6
    3e6a:	8c 93       	st	X, r24
    3e6c:	16 97       	sbiw	r26, 0x06	; 6
    3e6e:	88 e1       	ldi	r24, 0x18	; 24
    3e70:	14 96       	adiw	r26, 0x04	; 4
    3e72:	8c 93       	st	X, r24
    3e74:	80 e8       	ldi	r24, 0x80	; 128
    3e76:	85 87       	std	Z+13, r24	; 0x0d
    3e78:	80 e4       	ldi	r24, 0x40	; 64
    3e7a:	86 87       	std	Z+14, r24	; 0x0e
    3e7c:	80 e2       	ldi	r24, 0x20	; 32
    3e7e:	84 87       	std	Z+12, r24	; 0x0c
    3e80:	06 80       	ldd	r0, Z+6	; 0x06
    3e82:	f7 81       	ldd	r31, Z+7	; 0x07
    3e84:	e0 2d       	mov	r30, r0
    3e86:	80 81       	ld	r24, Z
    3e88:	80 81       	ld	r24, Z
    3e8a:	df 91       	pop	r29
    3e8c:	cf 91       	pop	r28
    3e8e:	08 95       	ret

00003e90 <_ZN8emstream13ready_to_sendEv>:
    3e90:	81 e0       	ldi	r24, 0x01	; 1
    3e92:	08 95       	ret

00003e94 <_ZN8emstream7getcharEv>:
    3e94:	80 e0       	ldi	r24, 0x00	; 0
    3e96:	90 e0       	ldi	r25, 0x00	; 0
    3e98:	08 95       	ret

00003e9a <_ZN8emstream14check_for_charEv>:
    3e9a:	80 e0       	ldi	r24, 0x00	; 0
    3e9c:	08 95       	ret

00003e9e <_ZN8emstream12transmit_nowEv>:
    3e9e:	08 95       	ret

00003ea0 <_ZN8emstream12clear_screenEv>:
    3ea0:	08 95       	ret

00003ea2 <_ZN8emstreamC1Ev>:
    3ea2:	fc 01       	movw	r30, r24
    3ea4:	8c ed       	ldi	r24, 0xDC	; 220
    3ea6:	90 e2       	ldi	r25, 0x20	; 32
    3ea8:	80 83       	st	Z, r24
    3eaa:	91 83       	std	Z+1, r25	; 0x01
    3eac:	8a e0       	ldi	r24, 0x0A	; 10
    3eae:	82 83       	std	Z+2, r24	; 0x02
    3eb0:	13 82       	std	Z+3, r1	; 0x03
    3eb2:	83 e0       	ldi	r24, 0x03	; 3
    3eb4:	85 83       	std	Z+5, r24	; 0x05
    3eb6:	14 82       	std	Z+4, r1	; 0x04
    3eb8:	16 82       	std	Z+6, r1	; 0x06
    3eba:	17 82       	std	Z+7, r1	; 0x07
    3ebc:	08 95       	ret

00003ebe <_ZN8emstream4putsEPKc>:
    3ebe:	0f 93       	push	r16
    3ec0:	1f 93       	push	r17
    3ec2:	cf 93       	push	r28
    3ec4:	df 93       	push	r29
    3ec6:	8c 01       	movw	r16, r24
    3ec8:	fb 01       	movw	r30, r22
    3eca:	dc 01       	movw	r26, r24
    3ecc:	14 96       	adiw	r26, 0x04	; 4
    3ece:	8c 91       	ld	r24, X
    3ed0:	81 11       	cpse	r24, r1
    3ed2:	04 c0       	rjmp	.+8      	; 0x3edc <_ZN8emstream4putsEPKc+0x1e>
    3ed4:	60 81       	ld	r22, Z
    3ed6:	61 11       	cpse	r22, r1
    3ed8:	17 c0       	rjmp	.+46     	; 0x3f08 <_ZN8emstream4putsEPKc+0x4a>
    3eda:	23 c0       	rjmp	.+70     	; 0x3f22 <_ZN8emstream4putsEPKc+0x64>
    3edc:	d8 01       	movw	r26, r16
    3ede:	14 96       	adiw	r26, 0x04	; 4
    3ee0:	1c 92       	st	X, r1
    3ee2:	eb 01       	movw	r28, r22
    3ee4:	21 96       	adiw	r28, 0x01	; 1
    3ee6:	64 91       	lpm	r22, Z
    3ee8:	66 23       	and	r22, r22
    3eea:	d9 f0       	breq	.+54     	; 0x3f22 <_ZN8emstream4putsEPKc+0x64>
    3eec:	d8 01       	movw	r26, r16
    3eee:	ed 91       	ld	r30, X+
    3ef0:	fc 91       	ld	r31, X
    3ef2:	02 80       	ldd	r0, Z+2	; 0x02
    3ef4:	f3 81       	ldd	r31, Z+3	; 0x03
    3ef6:	e0 2d       	mov	r30, r0
    3ef8:	c8 01       	movw	r24, r16
    3efa:	19 95       	eicall
    3efc:	fe 01       	movw	r30, r28
    3efe:	64 91       	lpm	r22, Z
    3f00:	21 96       	adiw	r28, 0x01	; 1
    3f02:	61 11       	cpse	r22, r1
    3f04:	f3 cf       	rjmp	.-26     	; 0x3eec <_ZN8emstream4putsEPKc+0x2e>
    3f06:	0d c0       	rjmp	.+26     	; 0x3f22 <_ZN8emstream4putsEPKc+0x64>
    3f08:	ef 01       	movw	r28, r30
    3f0a:	21 96       	adiw	r28, 0x01	; 1
    3f0c:	d8 01       	movw	r26, r16
    3f0e:	ed 91       	ld	r30, X+
    3f10:	fc 91       	ld	r31, X
    3f12:	02 80       	ldd	r0, Z+2	; 0x02
    3f14:	f3 81       	ldd	r31, Z+3	; 0x03
    3f16:	e0 2d       	mov	r30, r0
    3f18:	c8 01       	movw	r24, r16
    3f1a:	19 95       	eicall
    3f1c:	69 91       	ld	r22, Y+
    3f1e:	61 11       	cpse	r22, r1
    3f20:	f5 cf       	rjmp	.-22     	; 0x3f0c <_ZN8emstream4putsEPKc+0x4e>
    3f22:	df 91       	pop	r29
    3f24:	cf 91       	pop	r28
    3f26:	1f 91       	pop	r17
    3f28:	0f 91       	pop	r16
    3f2a:	08 95       	ret

00003f2c <_ZN8emstreamlsE15ser_manipulator>:
    3f2c:	cf 93       	push	r28
    3f2e:	df 93       	push	r29
    3f30:	ec 01       	movw	r28, r24
    3f32:	86 2f       	mov	r24, r22
    3f34:	90 e0       	ldi	r25, 0x00	; 0
    3f36:	8b 30       	cpi	r24, 0x0B	; 11
    3f38:	91 05       	cpc	r25, r1
    3f3a:	d8 f5       	brcc	.+118    	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f3c:	fc 01       	movw	r30, r24
    3f3e:	88 27       	eor	r24, r24
    3f40:	eb 5f       	subi	r30, 0xFB	; 251
    3f42:	fe 4f       	sbci	r31, 0xFE	; 254
    3f44:	8f 4f       	sbci	r24, 0xFF	; 255
    3f46:	0c 94 99 28 	jmp	0x5132	; 0x5132 <__tablejump2__>
    3f4a:	82 e0       	ldi	r24, 0x02	; 2
    3f4c:	8a 83       	std	Y+2, r24	; 0x02
    3f4e:	31 c0       	rjmp	.+98     	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f50:	88 e0       	ldi	r24, 0x08	; 8
    3f52:	8a 83       	std	Y+2, r24	; 0x02
    3f54:	2e c0       	rjmp	.+92     	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f56:	8a e0       	ldi	r24, 0x0A	; 10
    3f58:	8a 83       	std	Y+2, r24	; 0x02
    3f5a:	2b c0       	rjmp	.+86     	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f5c:	80 e1       	ldi	r24, 0x10	; 16
    3f5e:	8a 83       	std	Y+2, r24	; 0x02
    3f60:	28 c0       	rjmp	.+80     	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f62:	81 e0       	ldi	r24, 0x01	; 1
    3f64:	8b 83       	std	Y+3, r24	; 0x03
    3f66:	25 c0       	rjmp	.+74     	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f68:	1b 82       	std	Y+3, r1	; 0x03
    3f6a:	23 c0       	rjmp	.+70     	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f6c:	e8 81       	ld	r30, Y
    3f6e:	f9 81       	ldd	r31, Y+1	; 0x01
    3f70:	02 80       	ldd	r0, Z+2	; 0x02
    3f72:	f3 81       	ldd	r31, Z+3	; 0x03
    3f74:	e0 2d       	mov	r30, r0
    3f76:	6d e0       	ldi	r22, 0x0D	; 13
    3f78:	ce 01       	movw	r24, r28
    3f7a:	19 95       	eicall
    3f7c:	e8 81       	ld	r30, Y
    3f7e:	f9 81       	ldd	r31, Y+1	; 0x01
    3f80:	02 80       	ldd	r0, Z+2	; 0x02
    3f82:	f3 81       	ldd	r31, Z+3	; 0x03
    3f84:	e0 2d       	mov	r30, r0
    3f86:	6a e0       	ldi	r22, 0x0A	; 10
    3f88:	ce 01       	movw	r24, r28
    3f8a:	19 95       	eicall
    3f8c:	12 c0       	rjmp	.+36     	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f8e:	e8 81       	ld	r30, Y
    3f90:	f9 81       	ldd	r31, Y+1	; 0x01
    3f92:	02 84       	ldd	r0, Z+10	; 0x0a
    3f94:	f3 85       	ldd	r31, Z+11	; 0x0b
    3f96:	e0 2d       	mov	r30, r0
    3f98:	ce 01       	movw	r24, r28
    3f9a:	19 95       	eicall
    3f9c:	0a c0       	rjmp	.+20     	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f9e:	e8 81       	ld	r30, Y
    3fa0:	f9 81       	ldd	r31, Y+1	; 0x01
    3fa2:	00 84       	ldd	r0, Z+8	; 0x08
    3fa4:	f1 85       	ldd	r31, Z+9	; 0x09
    3fa6:	e0 2d       	mov	r30, r0
    3fa8:	ce 01       	movw	r24, r28
    3faa:	19 95       	eicall
    3fac:	02 c0       	rjmp	.+4      	; 0x3fb2 <_ZN8emstreamlsE15ser_manipulator+0x86>
    3fae:	81 e0       	ldi	r24, 0x01	; 1
    3fb0:	8c 83       	std	Y+4, r24	; 0x04
    3fb2:	ce 01       	movw	r24, r28
    3fb4:	df 91       	pop	r29
    3fb6:	cf 91       	pop	r28
    3fb8:	08 95       	ret

00003fba <_ZN8emstreamlsEb>:
    3fba:	cf 93       	push	r28
    3fbc:	df 93       	push	r29
    3fbe:	ec 01       	movw	r28, r24
    3fc0:	66 23       	and	r22, r22
    3fc2:	41 f0       	breq	.+16     	; 0x3fd4 <_ZN8emstreamlsEb+0x1a>
    3fc4:	e8 81       	ld	r30, Y
    3fc6:	f9 81       	ldd	r31, Y+1	; 0x01
    3fc8:	02 80       	ldd	r0, Z+2	; 0x02
    3fca:	f3 81       	ldd	r31, Z+3	; 0x03
    3fcc:	e0 2d       	mov	r30, r0
    3fce:	64 e5       	ldi	r22, 0x54	; 84
    3fd0:	19 95       	eicall
    3fd2:	07 c0       	rjmp	.+14     	; 0x3fe2 <_ZN8emstreamlsEb+0x28>
    3fd4:	e8 81       	ld	r30, Y
    3fd6:	f9 81       	ldd	r31, Y+1	; 0x01
    3fd8:	02 80       	ldd	r0, Z+2	; 0x02
    3fda:	f3 81       	ldd	r31, Z+3	; 0x03
    3fdc:	e0 2d       	mov	r30, r0
    3fde:	66 e4       	ldi	r22, 0x46	; 70
    3fe0:	19 95       	eicall
    3fe2:	ce 01       	movw	r24, r28
    3fe4:	df 91       	pop	r29
    3fe6:	cf 91       	pop	r28
    3fe8:	08 95       	ret

00003fea <_ZN8emstreamlsEi>:
    3fea:	0f 93       	push	r16
    3fec:	1f 93       	push	r17
    3fee:	cf 93       	push	r28
    3ff0:	df 93       	push	r29
    3ff2:	cd b7       	in	r28, 0x3d	; 61
    3ff4:	de b7       	in	r29, 0x3e	; 62
    3ff6:	61 97       	sbiw	r28, 0x11	; 17
    3ff8:	cd bf       	out	0x3d, r28	; 61
    3ffa:	de bf       	out	0x3e, r29	; 62
    3ffc:	8c 01       	movw	r16, r24
    3ffe:	9b 01       	movw	r18, r22
    4000:	fc 01       	movw	r30, r24
    4002:	92 81       	ldd	r25, Z+2	; 0x02
    4004:	9a 30       	cpi	r25, 0x0A	; 10
    4006:	21 f0       	breq	.+8      	; 0x4010 <__stack+0x11>
    4008:	c8 01       	movw	r24, r16
    400a:	0e 94 1e 20 	call	0x403c	; 0x403c <_ZN8emstreamlsEj>
    400e:	0d c0       	rjmp	.+26     	; 0x402a <__stack+0x2b>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    4010:	4a e0       	ldi	r20, 0x0A	; 10
    4012:	be 01       	movw	r22, r28
    4014:	6f 5f       	subi	r22, 0xFF	; 255
    4016:	7f 4f       	sbci	r23, 0xFF	; 255
    4018:	c9 01       	movw	r24, r18
    401a:	0e 94 e3 28 	call	0x51c6	; 0x51c6 <__itoa_ncheck>
    401e:	be 01       	movw	r22, r28
    4020:	6f 5f       	subi	r22, 0xFF	; 255
    4022:	7f 4f       	sbci	r23, 0xFF	; 255
    4024:	c8 01       	movw	r24, r16
    4026:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    402a:	c8 01       	movw	r24, r16
    402c:	61 96       	adiw	r28, 0x11	; 17
    402e:	cd bf       	out	0x3d, r28	; 61
    4030:	de bf       	out	0x3e, r29	; 62
    4032:	df 91       	pop	r29
    4034:	cf 91       	pop	r28
    4036:	1f 91       	pop	r17
    4038:	0f 91       	pop	r16
    403a:	08 95       	ret

0000403c <_ZN8emstreamlsEj>:
    403c:	ff 92       	push	r15
    403e:	0f 93       	push	r16
    4040:	1f 93       	push	r17
    4042:	cf 93       	push	r28
    4044:	df 93       	push	r29
    4046:	cd b7       	in	r28, 0x3d	; 61
    4048:	de b7       	in	r29, 0x3e	; 62
    404a:	61 97       	sbiw	r28, 0x11	; 17
    404c:	cd bf       	out	0x3d, r28	; 61
    404e:	de bf       	out	0x3e, r29	; 62
    4050:	8c 01       	movw	r16, r24
    4052:	f6 2e       	mov	r15, r22
    4054:	97 2f       	mov	r25, r23
    4056:	f8 01       	movw	r30, r16
    4058:	42 81       	ldd	r20, Z+2	; 0x02
    405a:	40 31       	cpi	r20, 0x10	; 16
    405c:	21 f0       	breq	.+8      	; 0x4066 <_ZN8emstreamlsEj+0x2a>
    405e:	48 30       	cpi	r20, 0x08	; 8
    4060:	11 f0       	breq	.+4      	; 0x4066 <_ZN8emstreamlsEj+0x2a>
    4062:	42 30       	cpi	r20, 0x02	; 2
    4064:	41 f4       	brne	.+16     	; 0x4076 <_ZN8emstreamlsEj+0x3a>
    4066:	69 2f       	mov	r22, r25
    4068:	c8 01       	movw	r24, r16
    406a:	0e 94 94 20 	call	0x4128	; 0x4128 <_ZN8emstreamlsEh>
    406e:	6f 2d       	mov	r22, r15
    4070:	0e 94 94 20 	call	0x4128	; 0x4128 <_ZN8emstreamlsEh>
    4074:	0d c0       	rjmp	.+26     	; 0x4090 <_ZN8emstreamlsEj+0x54>
extern __inline__ __ATTR_GNU_INLINE__
char *utoa (unsigned int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__utoa (unsigned int, char *, int);
	return __utoa (__val, __s, __radix);
    4076:	50 e0       	ldi	r21, 0x00	; 0
    4078:	be 01       	movw	r22, r28
    407a:	6f 5f       	subi	r22, 0xFF	; 255
    407c:	7f 4f       	sbci	r23, 0xFF	; 255
    407e:	8f 2d       	mov	r24, r15
    4080:	0e 94 1b 29 	call	0x5236	; 0x5236 <utoa>
    4084:	be 01       	movw	r22, r28
    4086:	6f 5f       	subi	r22, 0xFF	; 255
    4088:	7f 4f       	sbci	r23, 0xFF	; 255
    408a:	c8 01       	movw	r24, r16
    408c:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    4090:	c8 01       	movw	r24, r16
    4092:	61 96       	adiw	r28, 0x11	; 17
    4094:	cd bf       	out	0x3d, r28	; 61
    4096:	de bf       	out	0x3e, r29	; 62
    4098:	df 91       	pop	r29
    409a:	cf 91       	pop	r28
    409c:	1f 91       	pop	r17
    409e:	0f 91       	pop	r16
    40a0:	ff 90       	pop	r15
    40a2:	08 95       	ret

000040a4 <_ZN8emstreamlsEm>:
    40a4:	df 92       	push	r13
    40a6:	ef 92       	push	r14
    40a8:	ff 92       	push	r15
    40aa:	0f 93       	push	r16
    40ac:	1f 93       	push	r17
    40ae:	cf 93       	push	r28
    40b0:	df 93       	push	r29
    40b2:	cd b7       	in	r28, 0x3d	; 61
    40b4:	de b7       	in	r29, 0x3e	; 62
    40b6:	a1 97       	sbiw	r28, 0x21	; 33
    40b8:	cd bf       	out	0x3d, r28	; 61
    40ba:	de bf       	out	0x3e, r29	; 62
    40bc:	8c 01       	movw	r16, r24
    40be:	d4 2e       	mov	r13, r20
    40c0:	e5 2e       	mov	r14, r21
    40c2:	f6 2e       	mov	r15, r22
    40c4:	97 2f       	mov	r25, r23
    40c6:	f8 01       	movw	r30, r16
    40c8:	22 81       	ldd	r18, Z+2	; 0x02
    40ca:	20 31       	cpi	r18, 0x10	; 16
    40cc:	21 f0       	breq	.+8      	; 0x40d6 <_ZN8emstreamlsEm+0x32>
    40ce:	28 30       	cpi	r18, 0x08	; 8
    40d0:	11 f0       	breq	.+4      	; 0x40d6 <_ZN8emstreamlsEm+0x32>
    40d2:	22 30       	cpi	r18, 0x02	; 2
    40d4:	71 f4       	brne	.+28     	; 0x40f2 <_ZN8emstreamlsEm+0x4e>
    40d6:	69 2f       	mov	r22, r25
    40d8:	c8 01       	movw	r24, r16
    40da:	0e 94 94 20 	call	0x4128	; 0x4128 <_ZN8emstreamlsEh>
    40de:	6f 2d       	mov	r22, r15
    40e0:	0e 94 94 20 	call	0x4128	; 0x4128 <_ZN8emstreamlsEh>
    40e4:	6e 2d       	mov	r22, r14
    40e6:	0e 94 94 20 	call	0x4128	; 0x4128 <_ZN8emstreamlsEh>
    40ea:	6d 2d       	mov	r22, r13
    40ec:	0e 94 94 20 	call	0x4128	; 0x4128 <_ZN8emstreamlsEh>
    40f0:	0f c0       	rjmp	.+30     	; 0x4110 <_ZN8emstreamlsEm+0x6c>
extern __inline__ __ATTR_GNU_INLINE__
char *ultoa (unsigned long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__ultoa (unsigned long, char *, int);
	return __ultoa (__val, __s, __radix);
    40f2:	30 e0       	ldi	r19, 0x00	; 0
    40f4:	ae 01       	movw	r20, r28
    40f6:	4f 5f       	subi	r20, 0xFF	; 255
    40f8:	5f 4f       	sbci	r21, 0xFF	; 255
    40fa:	6d 2d       	mov	r22, r13
    40fc:	7e 2d       	mov	r23, r14
    40fe:	8f 2d       	mov	r24, r15
    4100:	0e 94 ee 28 	call	0x51dc	; 0x51dc <ultoa>
    4104:	be 01       	movw	r22, r28
    4106:	6f 5f       	subi	r22, 0xFF	; 255
    4108:	7f 4f       	sbci	r23, 0xFF	; 255
    410a:	c8 01       	movw	r24, r16
    410c:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    4110:	c8 01       	movw	r24, r16
    4112:	a1 96       	adiw	r28, 0x21	; 33
    4114:	cd bf       	out	0x3d, r28	; 61
    4116:	de bf       	out	0x3e, r29	; 62
    4118:	df 91       	pop	r29
    411a:	cf 91       	pop	r28
    411c:	1f 91       	pop	r17
    411e:	0f 91       	pop	r16
    4120:	ff 90       	pop	r15
    4122:	ef 90       	pop	r14
    4124:	df 90       	pop	r13
    4126:	08 95       	ret

00004128 <_ZN8emstreamlsEh>:
    4128:	cf 92       	push	r12
    412a:	df 92       	push	r13
    412c:	ef 92       	push	r14
    412e:	ff 92       	push	r15
    4130:	0f 93       	push	r16
    4132:	1f 93       	push	r17
    4134:	cf 93       	push	r28
    4136:	df 93       	push	r29
    4138:	cd b7       	in	r28, 0x3d	; 61
    413a:	de b7       	in	r29, 0x3e	; 62
    413c:	29 97       	sbiw	r28, 0x09	; 9
    413e:	cd bf       	out	0x3d, r28	; 61
    4140:	de bf       	out	0x3e, r29	; 62
    4142:	8c 01       	movw	r16, r24
    4144:	e6 2e       	mov	r14, r22
    4146:	dc 01       	movw	r26, r24
    4148:	13 96       	adiw	r26, 0x03	; 3
    414a:	8c 91       	ld	r24, X
    414c:	13 97       	sbiw	r26, 0x03	; 3
    414e:	88 23       	and	r24, r24
    4150:	41 f0       	breq	.+16     	; 0x4162 <_ZN8emstreamlsEh+0x3a>
    4152:	ed 91       	ld	r30, X+
    4154:	fc 91       	ld	r31, X
    4156:	02 80       	ldd	r0, Z+2	; 0x02
    4158:	f3 81       	ldd	r31, Z+3	; 0x03
    415a:	e0 2d       	mov	r30, r0
    415c:	c8 01       	movw	r24, r16
    415e:	19 95       	eicall
    4160:	56 c0       	rjmp	.+172    	; 0x420e <_ZN8emstreamlsEh+0xe6>
    4162:	f8 01       	movw	r30, r16
    4164:	42 81       	ldd	r20, Z+2	; 0x02
    4166:	42 30       	cpi	r20, 0x02	; 2
    4168:	19 f5       	brne	.+70     	; 0x41b0 <_ZN8emstreamlsEh+0x88>
    416a:	68 94       	set
    416c:	cc 24       	eor	r12, r12
    416e:	c3 f8       	bld	r12, 3
    4170:	d1 2c       	mov	r13, r1
    4172:	68 94       	set
    4174:	ff 24       	eor	r15, r15
    4176:	f7 f8       	bld	r15, 7
    4178:	8e 2d       	mov	r24, r14
    417a:	8f 21       	and	r24, r15
    417c:	51 f0       	breq	.+20     	; 0x4192 <_ZN8emstreamlsEh+0x6a>
    417e:	d8 01       	movw	r26, r16
    4180:	ed 91       	ld	r30, X+
    4182:	fc 91       	ld	r31, X
    4184:	02 80       	ldd	r0, Z+2	; 0x02
    4186:	f3 81       	ldd	r31, Z+3	; 0x03
    4188:	e0 2d       	mov	r30, r0
    418a:	61 e3       	ldi	r22, 0x31	; 49
    418c:	c8 01       	movw	r24, r16
    418e:	19 95       	eicall
    4190:	09 c0       	rjmp	.+18     	; 0x41a4 <_ZN8emstreamlsEh+0x7c>
    4192:	d8 01       	movw	r26, r16
    4194:	ed 91       	ld	r30, X+
    4196:	fc 91       	ld	r31, X
    4198:	02 80       	ldd	r0, Z+2	; 0x02
    419a:	f3 81       	ldd	r31, Z+3	; 0x03
    419c:	e0 2d       	mov	r30, r0
    419e:	60 e3       	ldi	r22, 0x30	; 48
    41a0:	c8 01       	movw	r24, r16
    41a2:	19 95       	eicall
    41a4:	f6 94       	lsr	r15
    41a6:	b1 e0       	ldi	r27, 0x01	; 1
    41a8:	cb 1a       	sub	r12, r27
    41aa:	d1 08       	sbc	r13, r1
    41ac:	29 f7       	brne	.-54     	; 0x4178 <_ZN8emstreamlsEh+0x50>
    41ae:	2f c0       	rjmp	.+94     	; 0x420e <_ZN8emstreamlsEh+0xe6>
    41b0:	40 31       	cpi	r20, 0x10	; 16
    41b2:	f9 f4       	brne	.+62     	; 0x41f2 <_ZN8emstreamlsEh+0xca>
    41b4:	62 95       	swap	r22
    41b6:	6f 70       	andi	r22, 0x0F	; 15
    41b8:	01 90       	ld	r0, Z+
    41ba:	f0 81       	ld	r31, Z
    41bc:	e0 2d       	mov	r30, r0
    41be:	02 80       	ldd	r0, Z+2	; 0x02
    41c0:	f3 81       	ldd	r31, Z+3	; 0x03
    41c2:	e0 2d       	mov	r30, r0
    41c4:	6a 30       	cpi	r22, 0x0A	; 10
    41c6:	10 f0       	brcs	.+4      	; 0x41cc <_ZN8emstreamlsEh+0xa4>
    41c8:	69 5c       	subi	r22, 0xC9	; 201
    41ca:	01 c0       	rjmp	.+2      	; 0x41ce <_ZN8emstreamlsEh+0xa6>
    41cc:	60 5d       	subi	r22, 0xD0	; 208
    41ce:	c8 01       	movw	r24, r16
    41d0:	19 95       	eicall
    41d2:	6e 2d       	mov	r22, r14
    41d4:	6f 70       	andi	r22, 0x0F	; 15
    41d6:	d8 01       	movw	r26, r16
    41d8:	ed 91       	ld	r30, X+
    41da:	fc 91       	ld	r31, X
    41dc:	02 80       	ldd	r0, Z+2	; 0x02
    41de:	f3 81       	ldd	r31, Z+3	; 0x03
    41e0:	e0 2d       	mov	r30, r0
    41e2:	6a 30       	cpi	r22, 0x0A	; 10
    41e4:	10 f0       	brcs	.+4      	; 0x41ea <_ZN8emstreamlsEh+0xc2>
    41e6:	69 5c       	subi	r22, 0xC9	; 201
    41e8:	01 c0       	rjmp	.+2      	; 0x41ec <_ZN8emstreamlsEh+0xc4>
    41ea:	60 5d       	subi	r22, 0xD0	; 208
    41ec:	c8 01       	movw	r24, r16
    41ee:	19 95       	eicall
    41f0:	0e c0       	rjmp	.+28     	; 0x420e <_ZN8emstreamlsEh+0xe6>
extern __inline__ __ATTR_GNU_INLINE__
char *utoa (unsigned int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__utoa (unsigned int, char *, int);
	return __utoa (__val, __s, __radix);
    41f2:	50 e0       	ldi	r21, 0x00	; 0
    41f4:	be 01       	movw	r22, r28
    41f6:	6f 5f       	subi	r22, 0xFF	; 255
    41f8:	7f 4f       	sbci	r23, 0xFF	; 255
    41fa:	8e 2d       	mov	r24, r14
    41fc:	90 e0       	ldi	r25, 0x00	; 0
    41fe:	0e 94 1b 29 	call	0x5236	; 0x5236 <utoa>
    4202:	be 01       	movw	r22, r28
    4204:	6f 5f       	subi	r22, 0xFF	; 255
    4206:	7f 4f       	sbci	r23, 0xFF	; 255
    4208:	c8 01       	movw	r24, r16
    420a:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    420e:	c8 01       	movw	r24, r16
    4210:	29 96       	adiw	r28, 0x09	; 9
    4212:	cd bf       	out	0x3d, r28	; 61
    4214:	de bf       	out	0x3e, r29	; 62
    4216:	df 91       	pop	r29
    4218:	cf 91       	pop	r28
    421a:	1f 91       	pop	r17
    421c:	0f 91       	pop	r16
    421e:	ff 90       	pop	r15
    4220:	ef 90       	pop	r14
    4222:	df 90       	pop	r13
    4224:	cf 90       	pop	r12
    4226:	08 95       	ret

00004228 <_ZN5rs2327putcharEc>:
    4228:	dc 01       	movw	r26, r24
    422a:	50 96       	adiw	r26, 0x10	; 16
    422c:	ed 91       	ld	r30, X+
    422e:	fc 91       	ld	r31, X
    4230:	51 97       	sbiw	r26, 0x11	; 17
    4232:	80 81       	ld	r24, Z
    4234:	54 96       	adiw	r26, 0x14	; 20
    4236:	4c 91       	ld	r20, X
    4238:	54 97       	sbiw	r26, 0x14	; 20
    423a:	84 23       	and	r24, r20
    423c:	29 f0       	breq	.+10     	; 0x4248 <_ZN5rs2327putcharEc+0x20>
    423e:	09 c0       	rjmp	.+18     	; 0x4252 <_ZN5rs2327putcharEc+0x2a>
    4240:	21 50       	subi	r18, 0x01	; 1
    4242:	31 09       	sbc	r19, r1
    4244:	19 f4       	brne	.+6      	; 0x424c <_ZN5rs2327putcharEc+0x24>
    4246:	12 c0       	rjmp	.+36     	; 0x426c <_ZN5rs2327putcharEc+0x44>
    4248:	21 e2       	ldi	r18, 0x21	; 33
    424a:	3e e4       	ldi	r19, 0x4E	; 78
    424c:	90 81       	ld	r25, Z
    424e:	94 23       	and	r25, r20
    4250:	b9 f3       	breq	.-18     	; 0x4240 <_ZN5rs2327putcharEc+0x18>
    4252:	90 81       	ld	r25, Z
    4254:	56 96       	adiw	r26, 0x16	; 22
    4256:	8c 91       	ld	r24, X
    4258:	56 97       	sbiw	r26, 0x16	; 22
    425a:	89 2b       	or	r24, r25
    425c:	80 83       	st	Z, r24
    425e:	1e 96       	adiw	r26, 0x0e	; 14
    4260:	ed 91       	ld	r30, X+
    4262:	fc 91       	ld	r31, X
    4264:	1f 97       	sbiw	r26, 0x0f	; 15
    4266:	60 83       	st	Z, r22
    4268:	81 e0       	ldi	r24, 0x01	; 1
    426a:	08 95       	ret
    426c:	80 e0       	ldi	r24, 0x00	; 0
    426e:	08 95       	ret

00004270 <_ZN5rs2327getcharEv>:
    4270:	cf 93       	push	r28
    4272:	df 93       	push	r29
    4274:	fc 01       	movw	r30, r24
    4276:	c1 8d       	ldd	r28, Z+25	; 0x19
    4278:	d2 8d       	ldd	r29, Z+26	; 0x1a
    427a:	28 81       	ld	r18, Y
    427c:	39 81       	ldd	r19, Y+1	; 0x01
    427e:	a3 8d       	ldd	r26, Z+27	; 0x1b
    4280:	b4 8d       	ldd	r27, Z+28	; 0x1c
    4282:	4d 91       	ld	r20, X+
    4284:	5c 91       	ld	r21, X
    4286:	24 17       	cp	r18, r20
    4288:	35 07       	cpc	r19, r21
    428a:	e9 f3       	breq	.-6      	; 0x4286 <_ZN5rs2327getcharEv+0x16>
    428c:	a7 89       	ldd	r26, Z+23	; 0x17
    428e:	b0 8d       	ldd	r27, Z+24	; 0x18
    4290:	0d 90       	ld	r0, X+
    4292:	bc 91       	ld	r27, X
    4294:	a0 2d       	mov	r26, r0
    4296:	a2 0f       	add	r26, r18
    4298:	b3 1f       	adc	r27, r19
    429a:	8c 91       	ld	r24, X
    429c:	2f 5f       	subi	r18, 0xFF	; 255
    429e:	3f 4f       	sbci	r19, 0xFF	; 255
    42a0:	28 83       	st	Y, r18
    42a2:	39 83       	std	Y+1, r19	; 0x01
    42a4:	24 36       	cpi	r18, 0x64	; 100
    42a6:	31 05       	cpc	r19, r1
    42a8:	28 f0       	brcs	.+10     	; 0x42b4 <_ZN5rs2327getcharEv+0x44>
    42aa:	01 8c       	ldd	r0, Z+25	; 0x19
    42ac:	f2 8d       	ldd	r31, Z+26	; 0x1a
    42ae:	e0 2d       	mov	r30, r0
    42b0:	10 82       	st	Z, r1
    42b2:	11 82       	std	Z+1, r1	; 0x01
    42b4:	90 e0       	ldi	r25, 0x00	; 0
    42b6:	df 91       	pop	r29
    42b8:	cf 91       	pop	r28
    42ba:	08 95       	ret

000042bc <_ZN5rs23214check_for_charEv>:
    42bc:	cf 93       	push	r28
    42be:	df 93       	push	r29
    42c0:	ec 01       	movw	r28, r24
    42c2:	a9 8d       	ldd	r26, Y+25	; 0x19
    42c4:	ba 8d       	ldd	r27, Y+26	; 0x1a
    42c6:	eb 8d       	ldd	r30, Y+27	; 0x1b
    42c8:	fc 8d       	ldd	r31, Y+28	; 0x1c
    42ca:	81 e0       	ldi	r24, 0x01	; 1
    42cc:	4d 91       	ld	r20, X+
    42ce:	5c 91       	ld	r21, X
    42d0:	20 81       	ld	r18, Z
    42d2:	31 81       	ldd	r19, Z+1	; 0x01
    42d4:	42 17       	cp	r20, r18
    42d6:	53 07       	cpc	r21, r19
    42d8:	09 f4       	brne	.+2      	; 0x42dc <_ZN5rs23214check_for_charEv+0x20>
    42da:	80 e0       	ldi	r24, 0x00	; 0
    42dc:	df 91       	pop	r29
    42de:	cf 91       	pop	r28
    42e0:	08 95       	ret

000042e2 <_ZN5rs23212clear_screenEv>:
    42e2:	dc 01       	movw	r26, r24
    42e4:	ed 91       	ld	r30, X+
    42e6:	fc 91       	ld	r31, X
    42e8:	02 80       	ldd	r0, Z+2	; 0x02
    42ea:	f3 81       	ldd	r31, Z+3	; 0x03
    42ec:	e0 2d       	mov	r30, r0
    42ee:	6c e0       	ldi	r22, 0x0C	; 12
    42f0:	19 95       	eicall
    42f2:	08 95       	ret

000042f4 <_ZN5rs232C1EjP12USART_struct>:
    42f4:	ef 92       	push	r14
    42f6:	ff 92       	push	r15
    42f8:	0f 93       	push	r16
    42fa:	1f 93       	push	r17
    42fc:	cf 93       	push	r28
    42fe:	df 93       	push	r29
    4300:	ec 01       	movw	r28, r24
    4302:	7b 01       	movw	r14, r22
    4304:	8a 01       	movw	r16, r20
    4306:	0e 94 51 1f 	call	0x3ea2	; 0x3ea2 <_ZN8emstreamC1Ev>
    430a:	a8 01       	movw	r20, r16
    430c:	b7 01       	movw	r22, r14
    430e:	ce 01       	movw	r24, r28
    4310:	08 96       	adiw	r24, 0x08	; 8
    4312:	0e 94 98 1e 	call	0x3d30	; 0x3d30 <_ZN7base232C1EjP12USART_struct>
    4316:	8c ee       	ldi	r24, 0xEC	; 236
    4318:	90 e2       	ldi	r25, 0x20	; 32
    431a:	88 83       	st	Y, r24
    431c:	99 83       	std	Y+1, r25	; 0x01
    431e:	00 3a       	cpi	r16, 0xA0	; 160
    4320:	88 e0       	ldi	r24, 0x08	; 8
    4322:	18 07       	cpc	r17, r24
    4324:	69 f4       	brne	.+26     	; 0x4340 <_ZN5rs232C1EjP12USART_struct+0x4c>
    4326:	86 e2       	ldi	r24, 0x26	; 38
    4328:	92 e3       	ldi	r25, 0x32	; 50
    432a:	8f 8b       	std	Y+23, r24	; 0x17
    432c:	98 8f       	std	Y+24, r25	; 0x18
    432e:	88 e1       	ldi	r24, 0x18	; 24
    4330:	92 e3       	ldi	r25, 0x32	; 50
    4332:	89 8f       	std	Y+25, r24	; 0x19
    4334:	9a 8f       	std	Y+26, r25	; 0x1a
    4336:	8a e0       	ldi	r24, 0x0A	; 10
    4338:	92 e3       	ldi	r25, 0x32	; 50
    433a:	8b 8f       	std	Y+27, r24	; 0x1b
    433c:	9c 8f       	std	Y+28, r25	; 0x1c
    433e:	64 c0       	rjmp	.+200    	; 0x4408 <_ZN5rs232C1EjP12USART_struct+0x114>
    4340:	00 3b       	cpi	r16, 0xB0	; 176
    4342:	e8 e0       	ldi	r30, 0x08	; 8
    4344:	1e 07       	cpc	r17, r30
    4346:	69 f4       	brne	.+26     	; 0x4362 <_ZN5rs232C1EjP12USART_struct+0x6e>
    4348:	84 e2       	ldi	r24, 0x24	; 36
    434a:	92 e3       	ldi	r25, 0x32	; 50
    434c:	8f 8b       	std	Y+23, r24	; 0x17
    434e:	98 8f       	std	Y+24, r25	; 0x18
    4350:	86 e1       	ldi	r24, 0x16	; 22
    4352:	92 e3       	ldi	r25, 0x32	; 50
    4354:	89 8f       	std	Y+25, r24	; 0x19
    4356:	9a 8f       	std	Y+26, r25	; 0x1a
    4358:	88 e0       	ldi	r24, 0x08	; 8
    435a:	92 e3       	ldi	r25, 0x32	; 50
    435c:	8b 8f       	std	Y+27, r24	; 0x1b
    435e:	9c 8f       	std	Y+28, r25	; 0x1c
    4360:	53 c0       	rjmp	.+166    	; 0x4408 <_ZN5rs232C1EjP12USART_struct+0x114>
    4362:	00 3a       	cpi	r16, 0xA0	; 160
    4364:	f9 e0       	ldi	r31, 0x09	; 9
    4366:	1f 07       	cpc	r17, r31
    4368:	69 f4       	brne	.+26     	; 0x4384 <_ZN5rs232C1EjP12USART_struct+0x90>
    436a:	82 e2       	ldi	r24, 0x22	; 34
    436c:	92 e3       	ldi	r25, 0x32	; 50
    436e:	8f 8b       	std	Y+23, r24	; 0x17
    4370:	98 8f       	std	Y+24, r25	; 0x18
    4372:	84 e1       	ldi	r24, 0x14	; 20
    4374:	92 e3       	ldi	r25, 0x32	; 50
    4376:	89 8f       	std	Y+25, r24	; 0x19
    4378:	9a 8f       	std	Y+26, r25	; 0x1a
    437a:	86 e0       	ldi	r24, 0x06	; 6
    437c:	92 e3       	ldi	r25, 0x32	; 50
    437e:	8b 8f       	std	Y+27, r24	; 0x1b
    4380:	9c 8f       	std	Y+28, r25	; 0x1c
    4382:	42 c0       	rjmp	.+132    	; 0x4408 <_ZN5rs232C1EjP12USART_struct+0x114>
    4384:	00 3b       	cpi	r16, 0xB0	; 176
    4386:	89 e0       	ldi	r24, 0x09	; 9
    4388:	18 07       	cpc	r17, r24
    438a:	69 f4       	brne	.+26     	; 0x43a6 <_ZN5rs232C1EjP12USART_struct+0xb2>
    438c:	80 e2       	ldi	r24, 0x20	; 32
    438e:	92 e3       	ldi	r25, 0x32	; 50
    4390:	8f 8b       	std	Y+23, r24	; 0x17
    4392:	98 8f       	std	Y+24, r25	; 0x18
    4394:	82 e1       	ldi	r24, 0x12	; 18
    4396:	92 e3       	ldi	r25, 0x32	; 50
    4398:	89 8f       	std	Y+25, r24	; 0x19
    439a:	9a 8f       	std	Y+26, r25	; 0x1a
    439c:	84 e0       	ldi	r24, 0x04	; 4
    439e:	92 e3       	ldi	r25, 0x32	; 50
    43a0:	8b 8f       	std	Y+27, r24	; 0x1b
    43a2:	9c 8f       	std	Y+28, r25	; 0x1c
    43a4:	31 c0       	rjmp	.+98     	; 0x4408 <_ZN5rs232C1EjP12USART_struct+0x114>
    43a6:	00 3a       	cpi	r16, 0xA0	; 160
    43a8:	ea e0       	ldi	r30, 0x0A	; 10
    43aa:	1e 07       	cpc	r17, r30
    43ac:	69 f4       	brne	.+26     	; 0x43c8 <_ZN5rs232C1EjP12USART_struct+0xd4>
    43ae:	8e e1       	ldi	r24, 0x1E	; 30
    43b0:	92 e3       	ldi	r25, 0x32	; 50
    43b2:	8f 8b       	std	Y+23, r24	; 0x17
    43b4:	98 8f       	std	Y+24, r25	; 0x18
    43b6:	80 e1       	ldi	r24, 0x10	; 16
    43b8:	92 e3       	ldi	r25, 0x32	; 50
    43ba:	89 8f       	std	Y+25, r24	; 0x19
    43bc:	9a 8f       	std	Y+26, r25	; 0x1a
    43be:	82 e0       	ldi	r24, 0x02	; 2
    43c0:	92 e3       	ldi	r25, 0x32	; 50
    43c2:	8b 8f       	std	Y+27, r24	; 0x1b
    43c4:	9c 8f       	std	Y+28, r25	; 0x1c
    43c6:	20 c0       	rjmp	.+64     	; 0x4408 <_ZN5rs232C1EjP12USART_struct+0x114>
    43c8:	00 3b       	cpi	r16, 0xB0	; 176
    43ca:	fa e0       	ldi	r31, 0x0A	; 10
    43cc:	1f 07       	cpc	r17, r31
    43ce:	69 f4       	brne	.+26     	; 0x43ea <_ZN5rs232C1EjP12USART_struct+0xf6>
    43d0:	8c e1       	ldi	r24, 0x1C	; 28
    43d2:	92 e3       	ldi	r25, 0x32	; 50
    43d4:	8f 8b       	std	Y+23, r24	; 0x17
    43d6:	98 8f       	std	Y+24, r25	; 0x18
    43d8:	8e e0       	ldi	r24, 0x0E	; 14
    43da:	92 e3       	ldi	r25, 0x32	; 50
    43dc:	89 8f       	std	Y+25, r24	; 0x19
    43de:	9a 8f       	std	Y+26, r25	; 0x1a
    43e0:	80 e0       	ldi	r24, 0x00	; 0
    43e2:	92 e3       	ldi	r25, 0x32	; 50
    43e4:	8b 8f       	std	Y+27, r24	; 0x1b
    43e6:	9c 8f       	std	Y+28, r25	; 0x1c
    43e8:	0f c0       	rjmp	.+30     	; 0x4408 <_ZN5rs232C1EjP12USART_struct+0x114>
    43ea:	00 3a       	cpi	r16, 0xA0	; 160
    43ec:	1b 40       	sbci	r17, 0x0B	; 11
    43ee:	61 f4       	brne	.+24     	; 0x4408 <_ZN5rs232C1EjP12USART_struct+0x114>
    43f0:	8a e1       	ldi	r24, 0x1A	; 26
    43f2:	92 e3       	ldi	r25, 0x32	; 50
    43f4:	8f 8b       	std	Y+23, r24	; 0x17
    43f6:	98 8f       	std	Y+24, r25	; 0x18
    43f8:	8c e0       	ldi	r24, 0x0C	; 12
    43fa:	92 e3       	ldi	r25, 0x32	; 50
    43fc:	89 8f       	std	Y+25, r24	; 0x19
    43fe:	9a 8f       	std	Y+26, r25	; 0x1a
    4400:	8e ef       	ldi	r24, 0xFE	; 254
    4402:	91 e3       	ldi	r25, 0x31	; 49
    4404:	8b 8f       	std	Y+27, r24	; 0x1b
    4406:	9c 8f       	std	Y+28, r25	; 0x1c
    4408:	0f 89       	ldd	r16, Y+23	; 0x17
    440a:	18 8d       	ldd	r17, Y+24	; 0x18
    440c:	84 e6       	ldi	r24, 0x64	; 100
    440e:	90 e0       	ldi	r25, 0x00	; 0
    4410:	0e 94 94 1e 	call	0x3d28	; 0x3d28 <_Znaj>
    4414:	f8 01       	movw	r30, r16
    4416:	80 83       	st	Z, r24
    4418:	91 83       	std	Z+1, r25	; 0x01
    441a:	e9 8d       	ldd	r30, Y+25	; 0x19
    441c:	fa 8d       	ldd	r31, Y+26	; 0x1a
    441e:	10 82       	st	Z, r1
    4420:	11 82       	std	Z+1, r1	; 0x01
    4422:	eb 8d       	ldd	r30, Y+27	; 0x1b
    4424:	fc 8d       	ldd	r31, Y+28	; 0x1c
    4426:	10 82       	st	Z, r1
    4428:	11 82       	std	Z+1, r1	; 0x01
    442a:	df 91       	pop	r29
    442c:	cf 91       	pop	r28
    442e:	1f 91       	pop	r17
    4430:	0f 91       	pop	r16
    4432:	ff 90       	pop	r15
    4434:	ef 90       	pop	r14
    4436:	08 95       	ret

00004438 <__vector_25>:
    4438:	1f 92       	push	r1
    443a:	0f 92       	push	r0
    443c:	0f b6       	in	r0, 0x3f	; 63
    443e:	0f 92       	push	r0
    4440:	11 24       	eor	r1, r1
    4442:	0b b6       	in	r0, 0x3b	; 59
    4444:	0f 92       	push	r0
    4446:	2f 93       	push	r18
    4448:	3f 93       	push	r19
    444a:	8f 93       	push	r24
    444c:	9f 93       	push	r25
    444e:	ef 93       	push	r30
    4450:	ff 93       	push	r31
    4452:	20 91 a0 08 	lds	r18, 0x08A0	; 0x8008a0 <__TEXT_REGION_LENGTH__+0x7008a0>
    4456:	e0 91 26 32 	lds	r30, 0x3226	; 0x803226 <rcvC0_buffer>
    445a:	f0 91 27 32 	lds	r31, 0x3227	; 0x803227 <rcvC0_buffer+0x1>
    445e:	80 91 0a 32 	lds	r24, 0x320A	; 0x80320a <rcvC0_write_index>
    4462:	90 91 0b 32 	lds	r25, 0x320B	; 0x80320b <rcvC0_write_index+0x1>
    4466:	e8 0f       	add	r30, r24
    4468:	f9 1f       	adc	r31, r25
    446a:	20 83       	st	Z, r18
    446c:	80 91 0a 32 	lds	r24, 0x320A	; 0x80320a <rcvC0_write_index>
    4470:	90 91 0b 32 	lds	r25, 0x320B	; 0x80320b <rcvC0_write_index+0x1>
    4474:	01 96       	adiw	r24, 0x01	; 1
    4476:	84 36       	cpi	r24, 0x64	; 100
    4478:	91 05       	cpc	r25, r1
    447a:	60 f4       	brcc	.+24     	; 0x4494 <__vector_25+0x5c>
    447c:	80 93 0a 32 	sts	0x320A, r24	; 0x80320a <rcvC0_write_index>
    4480:	90 93 0b 32 	sts	0x320B, r25	; 0x80320b <rcvC0_write_index+0x1>
    4484:	20 91 18 32 	lds	r18, 0x3218	; 0x803218 <rcvC0_read_index>
    4488:	30 91 19 32 	lds	r19, 0x3219	; 0x803219 <rcvC0_read_index+0x1>
    448c:	82 17       	cp	r24, r18
    448e:	93 07       	cpc	r25, r19
    4490:	f1 f4       	brne	.+60     	; 0x44ce <__vector_25+0x96>
    4492:	0c c0       	rjmp	.+24     	; 0x44ac <__vector_25+0x74>
    4494:	10 92 0a 32 	sts	0x320A, r1	; 0x80320a <rcvC0_write_index>
    4498:	10 92 0b 32 	sts	0x320B, r1	; 0x80320b <rcvC0_write_index+0x1>
    449c:	80 91 18 32 	lds	r24, 0x3218	; 0x803218 <rcvC0_read_index>
    44a0:	90 91 19 32 	lds	r25, 0x3219	; 0x803219 <rcvC0_read_index+0x1>
    44a4:	18 16       	cp	r1, r24
    44a6:	19 06       	cpc	r1, r25
    44a8:	91 f4       	brne	.+36     	; 0x44ce <__vector_25+0x96>
    44aa:	0e c0       	rjmp	.+28     	; 0x44c8 <__vector_25+0x90>
    44ac:	01 96       	adiw	r24, 0x01	; 1
    44ae:	84 36       	cpi	r24, 0x64	; 100
    44b0:	91 05       	cpc	r25, r1
    44b2:	28 f4       	brcc	.+10     	; 0x44be <__vector_25+0x86>
    44b4:	80 93 18 32 	sts	0x3218, r24	; 0x803218 <rcvC0_read_index>
    44b8:	90 93 19 32 	sts	0x3219, r25	; 0x803219 <rcvC0_read_index+0x1>
    44bc:	08 c0       	rjmp	.+16     	; 0x44ce <__vector_25+0x96>
    44be:	10 92 18 32 	sts	0x3218, r1	; 0x803218 <rcvC0_read_index>
    44c2:	10 92 19 32 	sts	0x3219, r1	; 0x803219 <rcvC0_read_index+0x1>
    44c6:	03 c0       	rjmp	.+6      	; 0x44ce <__vector_25+0x96>
    44c8:	81 e0       	ldi	r24, 0x01	; 1
    44ca:	90 e0       	ldi	r25, 0x00	; 0
    44cc:	f3 cf       	rjmp	.-26     	; 0x44b4 <__vector_25+0x7c>
    44ce:	ff 91       	pop	r31
    44d0:	ef 91       	pop	r30
    44d2:	9f 91       	pop	r25
    44d4:	8f 91       	pop	r24
    44d6:	3f 91       	pop	r19
    44d8:	2f 91       	pop	r18
    44da:	0f 90       	pop	r0
    44dc:	0b be       	out	0x3b, r0	; 59
    44de:	0f 90       	pop	r0
    44e0:	0f be       	out	0x3f, r0	; 63
    44e2:	0f 90       	pop	r0
    44e4:	1f 90       	pop	r1
    44e6:	18 95       	reti

000044e8 <__vector_28>:
    44e8:	1f 92       	push	r1
    44ea:	0f 92       	push	r0
    44ec:	0f b6       	in	r0, 0x3f	; 63
    44ee:	0f 92       	push	r0
    44f0:	11 24       	eor	r1, r1
    44f2:	0b b6       	in	r0, 0x3b	; 59
    44f4:	0f 92       	push	r0
    44f6:	2f 93       	push	r18
    44f8:	3f 93       	push	r19
    44fa:	8f 93       	push	r24
    44fc:	9f 93       	push	r25
    44fe:	ef 93       	push	r30
    4500:	ff 93       	push	r31
    4502:	20 91 b0 08 	lds	r18, 0x08B0	; 0x8008b0 <__TEXT_REGION_LENGTH__+0x7008b0>
    4506:	e0 91 24 32 	lds	r30, 0x3224	; 0x803224 <rcvC1_buffer>
    450a:	f0 91 25 32 	lds	r31, 0x3225	; 0x803225 <rcvC1_buffer+0x1>
    450e:	80 91 08 32 	lds	r24, 0x3208	; 0x803208 <rcvC1_write_index>
    4512:	90 91 09 32 	lds	r25, 0x3209	; 0x803209 <rcvC1_write_index+0x1>
    4516:	e8 0f       	add	r30, r24
    4518:	f9 1f       	adc	r31, r25
    451a:	20 83       	st	Z, r18
    451c:	80 91 08 32 	lds	r24, 0x3208	; 0x803208 <rcvC1_write_index>
    4520:	90 91 09 32 	lds	r25, 0x3209	; 0x803209 <rcvC1_write_index+0x1>
    4524:	01 96       	adiw	r24, 0x01	; 1
    4526:	84 36       	cpi	r24, 0x64	; 100
    4528:	91 05       	cpc	r25, r1
    452a:	60 f4       	brcc	.+24     	; 0x4544 <__vector_28+0x5c>
    452c:	80 93 08 32 	sts	0x3208, r24	; 0x803208 <rcvC1_write_index>
    4530:	90 93 09 32 	sts	0x3209, r25	; 0x803209 <rcvC1_write_index+0x1>
    4534:	20 91 16 32 	lds	r18, 0x3216	; 0x803216 <rcvC1_read_index>
    4538:	30 91 17 32 	lds	r19, 0x3217	; 0x803217 <rcvC1_read_index+0x1>
    453c:	82 17       	cp	r24, r18
    453e:	93 07       	cpc	r25, r19
    4540:	f1 f4       	brne	.+60     	; 0x457e <__vector_28+0x96>
    4542:	0c c0       	rjmp	.+24     	; 0x455c <__vector_28+0x74>
    4544:	10 92 08 32 	sts	0x3208, r1	; 0x803208 <rcvC1_write_index>
    4548:	10 92 09 32 	sts	0x3209, r1	; 0x803209 <rcvC1_write_index+0x1>
    454c:	80 91 16 32 	lds	r24, 0x3216	; 0x803216 <rcvC1_read_index>
    4550:	90 91 17 32 	lds	r25, 0x3217	; 0x803217 <rcvC1_read_index+0x1>
    4554:	18 16       	cp	r1, r24
    4556:	19 06       	cpc	r1, r25
    4558:	91 f4       	brne	.+36     	; 0x457e <__vector_28+0x96>
    455a:	0e c0       	rjmp	.+28     	; 0x4578 <__vector_28+0x90>
    455c:	01 96       	adiw	r24, 0x01	; 1
    455e:	84 36       	cpi	r24, 0x64	; 100
    4560:	91 05       	cpc	r25, r1
    4562:	28 f4       	brcc	.+10     	; 0x456e <__vector_28+0x86>
    4564:	80 93 16 32 	sts	0x3216, r24	; 0x803216 <rcvC1_read_index>
    4568:	90 93 17 32 	sts	0x3217, r25	; 0x803217 <rcvC1_read_index+0x1>
    456c:	08 c0       	rjmp	.+16     	; 0x457e <__vector_28+0x96>
    456e:	10 92 16 32 	sts	0x3216, r1	; 0x803216 <rcvC1_read_index>
    4572:	10 92 17 32 	sts	0x3217, r1	; 0x803217 <rcvC1_read_index+0x1>
    4576:	03 c0       	rjmp	.+6      	; 0x457e <__vector_28+0x96>
    4578:	81 e0       	ldi	r24, 0x01	; 1
    457a:	90 e0       	ldi	r25, 0x00	; 0
    457c:	f3 cf       	rjmp	.-26     	; 0x4564 <__vector_28+0x7c>
    457e:	ff 91       	pop	r31
    4580:	ef 91       	pop	r30
    4582:	9f 91       	pop	r25
    4584:	8f 91       	pop	r24
    4586:	3f 91       	pop	r19
    4588:	2f 91       	pop	r18
    458a:	0f 90       	pop	r0
    458c:	0b be       	out	0x3b, r0	; 59
    458e:	0f 90       	pop	r0
    4590:	0f be       	out	0x3f, r0	; 63
    4592:	0f 90       	pop	r0
    4594:	1f 90       	pop	r1
    4596:	18 95       	reti

00004598 <__vector_88>:
    4598:	1f 92       	push	r1
    459a:	0f 92       	push	r0
    459c:	0f b6       	in	r0, 0x3f	; 63
    459e:	0f 92       	push	r0
    45a0:	11 24       	eor	r1, r1
    45a2:	0b b6       	in	r0, 0x3b	; 59
    45a4:	0f 92       	push	r0
    45a6:	2f 93       	push	r18
    45a8:	3f 93       	push	r19
    45aa:	8f 93       	push	r24
    45ac:	9f 93       	push	r25
    45ae:	ef 93       	push	r30
    45b0:	ff 93       	push	r31
    45b2:	20 91 a0 09 	lds	r18, 0x09A0	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
    45b6:	e0 91 22 32 	lds	r30, 0x3222	; 0x803222 <rcvD0_buffer>
    45ba:	f0 91 23 32 	lds	r31, 0x3223	; 0x803223 <rcvD0_buffer+0x1>
    45be:	80 91 06 32 	lds	r24, 0x3206	; 0x803206 <rcvD0_write_index>
    45c2:	90 91 07 32 	lds	r25, 0x3207	; 0x803207 <rcvD0_write_index+0x1>
    45c6:	e8 0f       	add	r30, r24
    45c8:	f9 1f       	adc	r31, r25
    45ca:	20 83       	st	Z, r18
    45cc:	80 91 06 32 	lds	r24, 0x3206	; 0x803206 <rcvD0_write_index>
    45d0:	90 91 07 32 	lds	r25, 0x3207	; 0x803207 <rcvD0_write_index+0x1>
    45d4:	01 96       	adiw	r24, 0x01	; 1
    45d6:	84 36       	cpi	r24, 0x64	; 100
    45d8:	91 05       	cpc	r25, r1
    45da:	60 f4       	brcc	.+24     	; 0x45f4 <__vector_88+0x5c>
    45dc:	80 93 06 32 	sts	0x3206, r24	; 0x803206 <rcvD0_write_index>
    45e0:	90 93 07 32 	sts	0x3207, r25	; 0x803207 <rcvD0_write_index+0x1>
    45e4:	20 91 14 32 	lds	r18, 0x3214	; 0x803214 <rcvD0_read_index>
    45e8:	30 91 15 32 	lds	r19, 0x3215	; 0x803215 <rcvD0_read_index+0x1>
    45ec:	82 17       	cp	r24, r18
    45ee:	93 07       	cpc	r25, r19
    45f0:	f1 f4       	brne	.+60     	; 0x462e <__vector_88+0x96>
    45f2:	0c c0       	rjmp	.+24     	; 0x460c <__vector_88+0x74>
    45f4:	10 92 06 32 	sts	0x3206, r1	; 0x803206 <rcvD0_write_index>
    45f8:	10 92 07 32 	sts	0x3207, r1	; 0x803207 <rcvD0_write_index+0x1>
    45fc:	80 91 14 32 	lds	r24, 0x3214	; 0x803214 <rcvD0_read_index>
    4600:	90 91 15 32 	lds	r25, 0x3215	; 0x803215 <rcvD0_read_index+0x1>
    4604:	18 16       	cp	r1, r24
    4606:	19 06       	cpc	r1, r25
    4608:	91 f4       	brne	.+36     	; 0x462e <__vector_88+0x96>
    460a:	0e c0       	rjmp	.+28     	; 0x4628 <__vector_88+0x90>
    460c:	01 96       	adiw	r24, 0x01	; 1
    460e:	84 36       	cpi	r24, 0x64	; 100
    4610:	91 05       	cpc	r25, r1
    4612:	28 f4       	brcc	.+10     	; 0x461e <__vector_88+0x86>
    4614:	80 93 14 32 	sts	0x3214, r24	; 0x803214 <rcvD0_read_index>
    4618:	90 93 15 32 	sts	0x3215, r25	; 0x803215 <rcvD0_read_index+0x1>
    461c:	08 c0       	rjmp	.+16     	; 0x462e <__vector_88+0x96>
    461e:	10 92 14 32 	sts	0x3214, r1	; 0x803214 <rcvD0_read_index>
    4622:	10 92 15 32 	sts	0x3215, r1	; 0x803215 <rcvD0_read_index+0x1>
    4626:	03 c0       	rjmp	.+6      	; 0x462e <__vector_88+0x96>
    4628:	81 e0       	ldi	r24, 0x01	; 1
    462a:	90 e0       	ldi	r25, 0x00	; 0
    462c:	f3 cf       	rjmp	.-26     	; 0x4614 <__vector_88+0x7c>
    462e:	ff 91       	pop	r31
    4630:	ef 91       	pop	r30
    4632:	9f 91       	pop	r25
    4634:	8f 91       	pop	r24
    4636:	3f 91       	pop	r19
    4638:	2f 91       	pop	r18
    463a:	0f 90       	pop	r0
    463c:	0b be       	out	0x3b, r0	; 59
    463e:	0f 90       	pop	r0
    4640:	0f be       	out	0x3f, r0	; 63
    4642:	0f 90       	pop	r0
    4644:	1f 90       	pop	r1
    4646:	18 95       	reti

00004648 <__vector_91>:
    4648:	1f 92       	push	r1
    464a:	0f 92       	push	r0
    464c:	0f b6       	in	r0, 0x3f	; 63
    464e:	0f 92       	push	r0
    4650:	11 24       	eor	r1, r1
    4652:	0b b6       	in	r0, 0x3b	; 59
    4654:	0f 92       	push	r0
    4656:	2f 93       	push	r18
    4658:	3f 93       	push	r19
    465a:	8f 93       	push	r24
    465c:	9f 93       	push	r25
    465e:	ef 93       	push	r30
    4660:	ff 93       	push	r31
    4662:	20 91 b0 09 	lds	r18, 0x09B0	; 0x8009b0 <__TEXT_REGION_LENGTH__+0x7009b0>
    4666:	e0 91 20 32 	lds	r30, 0x3220	; 0x803220 <rcvD1_buffer>
    466a:	f0 91 21 32 	lds	r31, 0x3221	; 0x803221 <rcvD1_buffer+0x1>
    466e:	80 91 04 32 	lds	r24, 0x3204	; 0x803204 <rcvD1_write_index>
    4672:	90 91 05 32 	lds	r25, 0x3205	; 0x803205 <rcvD1_write_index+0x1>
    4676:	e8 0f       	add	r30, r24
    4678:	f9 1f       	adc	r31, r25
    467a:	20 83       	st	Z, r18
    467c:	80 91 04 32 	lds	r24, 0x3204	; 0x803204 <rcvD1_write_index>
    4680:	90 91 05 32 	lds	r25, 0x3205	; 0x803205 <rcvD1_write_index+0x1>
    4684:	01 96       	adiw	r24, 0x01	; 1
    4686:	84 36       	cpi	r24, 0x64	; 100
    4688:	91 05       	cpc	r25, r1
    468a:	60 f4       	brcc	.+24     	; 0x46a4 <__vector_91+0x5c>
    468c:	80 93 04 32 	sts	0x3204, r24	; 0x803204 <rcvD1_write_index>
    4690:	90 93 05 32 	sts	0x3205, r25	; 0x803205 <rcvD1_write_index+0x1>
    4694:	20 91 12 32 	lds	r18, 0x3212	; 0x803212 <rcvD1_read_index>
    4698:	30 91 13 32 	lds	r19, 0x3213	; 0x803213 <rcvD1_read_index+0x1>
    469c:	82 17       	cp	r24, r18
    469e:	93 07       	cpc	r25, r19
    46a0:	f1 f4       	brne	.+60     	; 0x46de <__vector_91+0x96>
    46a2:	0c c0       	rjmp	.+24     	; 0x46bc <__vector_91+0x74>
    46a4:	10 92 04 32 	sts	0x3204, r1	; 0x803204 <rcvD1_write_index>
    46a8:	10 92 05 32 	sts	0x3205, r1	; 0x803205 <rcvD1_write_index+0x1>
    46ac:	80 91 12 32 	lds	r24, 0x3212	; 0x803212 <rcvD1_read_index>
    46b0:	90 91 13 32 	lds	r25, 0x3213	; 0x803213 <rcvD1_read_index+0x1>
    46b4:	18 16       	cp	r1, r24
    46b6:	19 06       	cpc	r1, r25
    46b8:	91 f4       	brne	.+36     	; 0x46de <__vector_91+0x96>
    46ba:	0e c0       	rjmp	.+28     	; 0x46d8 <__vector_91+0x90>
    46bc:	01 96       	adiw	r24, 0x01	; 1
    46be:	84 36       	cpi	r24, 0x64	; 100
    46c0:	91 05       	cpc	r25, r1
    46c2:	28 f4       	brcc	.+10     	; 0x46ce <__vector_91+0x86>
    46c4:	80 93 12 32 	sts	0x3212, r24	; 0x803212 <rcvD1_read_index>
    46c8:	90 93 13 32 	sts	0x3213, r25	; 0x803213 <rcvD1_read_index+0x1>
    46cc:	08 c0       	rjmp	.+16     	; 0x46de <__vector_91+0x96>
    46ce:	10 92 12 32 	sts	0x3212, r1	; 0x803212 <rcvD1_read_index>
    46d2:	10 92 13 32 	sts	0x3213, r1	; 0x803213 <rcvD1_read_index+0x1>
    46d6:	03 c0       	rjmp	.+6      	; 0x46de <__vector_91+0x96>
    46d8:	81 e0       	ldi	r24, 0x01	; 1
    46da:	90 e0       	ldi	r25, 0x00	; 0
    46dc:	f3 cf       	rjmp	.-26     	; 0x46c4 <__vector_91+0x7c>
    46de:	ff 91       	pop	r31
    46e0:	ef 91       	pop	r30
    46e2:	9f 91       	pop	r25
    46e4:	8f 91       	pop	r24
    46e6:	3f 91       	pop	r19
    46e8:	2f 91       	pop	r18
    46ea:	0f 90       	pop	r0
    46ec:	0b be       	out	0x3b, r0	; 59
    46ee:	0f 90       	pop	r0
    46f0:	0f be       	out	0x3f, r0	; 63
    46f2:	0f 90       	pop	r0
    46f4:	1f 90       	pop	r1
    46f6:	18 95       	reti

000046f8 <__vector_58>:
    46f8:	1f 92       	push	r1
    46fa:	0f 92       	push	r0
    46fc:	0f b6       	in	r0, 0x3f	; 63
    46fe:	0f 92       	push	r0
    4700:	11 24       	eor	r1, r1
    4702:	0b b6       	in	r0, 0x3b	; 59
    4704:	0f 92       	push	r0
    4706:	2f 93       	push	r18
    4708:	3f 93       	push	r19
    470a:	8f 93       	push	r24
    470c:	9f 93       	push	r25
    470e:	ef 93       	push	r30
    4710:	ff 93       	push	r31
    4712:	20 91 a0 0a 	lds	r18, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x700aa0>
    4716:	e0 91 1e 32 	lds	r30, 0x321E	; 0x80321e <rcvE0_buffer>
    471a:	f0 91 1f 32 	lds	r31, 0x321F	; 0x80321f <rcvE0_buffer+0x1>
    471e:	80 91 02 32 	lds	r24, 0x3202	; 0x803202 <rcvE0_write_index>
    4722:	90 91 03 32 	lds	r25, 0x3203	; 0x803203 <rcvE0_write_index+0x1>
    4726:	e8 0f       	add	r30, r24
    4728:	f9 1f       	adc	r31, r25
    472a:	20 83       	st	Z, r18
    472c:	80 91 02 32 	lds	r24, 0x3202	; 0x803202 <rcvE0_write_index>
    4730:	90 91 03 32 	lds	r25, 0x3203	; 0x803203 <rcvE0_write_index+0x1>
    4734:	01 96       	adiw	r24, 0x01	; 1
    4736:	84 36       	cpi	r24, 0x64	; 100
    4738:	91 05       	cpc	r25, r1
    473a:	60 f4       	brcc	.+24     	; 0x4754 <__vector_58+0x5c>
    473c:	80 93 02 32 	sts	0x3202, r24	; 0x803202 <rcvE0_write_index>
    4740:	90 93 03 32 	sts	0x3203, r25	; 0x803203 <rcvE0_write_index+0x1>
    4744:	20 91 10 32 	lds	r18, 0x3210	; 0x803210 <rcvE0_read_index>
    4748:	30 91 11 32 	lds	r19, 0x3211	; 0x803211 <rcvE0_read_index+0x1>
    474c:	82 17       	cp	r24, r18
    474e:	93 07       	cpc	r25, r19
    4750:	f1 f4       	brne	.+60     	; 0x478e <__vector_58+0x96>
    4752:	0c c0       	rjmp	.+24     	; 0x476c <__vector_58+0x74>
    4754:	10 92 02 32 	sts	0x3202, r1	; 0x803202 <rcvE0_write_index>
    4758:	10 92 03 32 	sts	0x3203, r1	; 0x803203 <rcvE0_write_index+0x1>
    475c:	80 91 10 32 	lds	r24, 0x3210	; 0x803210 <rcvE0_read_index>
    4760:	90 91 11 32 	lds	r25, 0x3211	; 0x803211 <rcvE0_read_index+0x1>
    4764:	18 16       	cp	r1, r24
    4766:	19 06       	cpc	r1, r25
    4768:	91 f4       	brne	.+36     	; 0x478e <__vector_58+0x96>
    476a:	0e c0       	rjmp	.+28     	; 0x4788 <__vector_58+0x90>
    476c:	01 96       	adiw	r24, 0x01	; 1
    476e:	84 36       	cpi	r24, 0x64	; 100
    4770:	91 05       	cpc	r25, r1
    4772:	28 f4       	brcc	.+10     	; 0x477e <__vector_58+0x86>
    4774:	80 93 10 32 	sts	0x3210, r24	; 0x803210 <rcvE0_read_index>
    4778:	90 93 11 32 	sts	0x3211, r25	; 0x803211 <rcvE0_read_index+0x1>
    477c:	08 c0       	rjmp	.+16     	; 0x478e <__vector_58+0x96>
    477e:	10 92 10 32 	sts	0x3210, r1	; 0x803210 <rcvE0_read_index>
    4782:	10 92 11 32 	sts	0x3211, r1	; 0x803211 <rcvE0_read_index+0x1>
    4786:	03 c0       	rjmp	.+6      	; 0x478e <__vector_58+0x96>
    4788:	81 e0       	ldi	r24, 0x01	; 1
    478a:	90 e0       	ldi	r25, 0x00	; 0
    478c:	f3 cf       	rjmp	.-26     	; 0x4774 <__vector_58+0x7c>
    478e:	ff 91       	pop	r31
    4790:	ef 91       	pop	r30
    4792:	9f 91       	pop	r25
    4794:	8f 91       	pop	r24
    4796:	3f 91       	pop	r19
    4798:	2f 91       	pop	r18
    479a:	0f 90       	pop	r0
    479c:	0b be       	out	0x3b, r0	; 59
    479e:	0f 90       	pop	r0
    47a0:	0f be       	out	0x3f, r0	; 63
    47a2:	0f 90       	pop	r0
    47a4:	1f 90       	pop	r1
    47a6:	18 95       	reti

000047a8 <__vector_61>:
    47a8:	1f 92       	push	r1
    47aa:	0f 92       	push	r0
    47ac:	0f b6       	in	r0, 0x3f	; 63
    47ae:	0f 92       	push	r0
    47b0:	11 24       	eor	r1, r1
    47b2:	0b b6       	in	r0, 0x3b	; 59
    47b4:	0f 92       	push	r0
    47b6:	2f 93       	push	r18
    47b8:	3f 93       	push	r19
    47ba:	8f 93       	push	r24
    47bc:	9f 93       	push	r25
    47be:	ef 93       	push	r30
    47c0:	ff 93       	push	r31
    47c2:	20 91 b0 0a 	lds	r18, 0x0AB0	; 0x800ab0 <__TEXT_REGION_LENGTH__+0x700ab0>
    47c6:	e0 91 1c 32 	lds	r30, 0x321C	; 0x80321c <rcvE1_buffer>
    47ca:	f0 91 1d 32 	lds	r31, 0x321D	; 0x80321d <rcvE1_buffer+0x1>
    47ce:	80 91 00 32 	lds	r24, 0x3200	; 0x803200 <rcvE1_write_index>
    47d2:	90 91 01 32 	lds	r25, 0x3201	; 0x803201 <rcvE1_write_index+0x1>
    47d6:	e8 0f       	add	r30, r24
    47d8:	f9 1f       	adc	r31, r25
    47da:	20 83       	st	Z, r18
    47dc:	80 91 00 32 	lds	r24, 0x3200	; 0x803200 <rcvE1_write_index>
    47e0:	90 91 01 32 	lds	r25, 0x3201	; 0x803201 <rcvE1_write_index+0x1>
    47e4:	01 96       	adiw	r24, 0x01	; 1
    47e6:	84 36       	cpi	r24, 0x64	; 100
    47e8:	91 05       	cpc	r25, r1
    47ea:	60 f4       	brcc	.+24     	; 0x4804 <__vector_61+0x5c>
    47ec:	80 93 00 32 	sts	0x3200, r24	; 0x803200 <rcvE1_write_index>
    47f0:	90 93 01 32 	sts	0x3201, r25	; 0x803201 <rcvE1_write_index+0x1>
    47f4:	20 91 0e 32 	lds	r18, 0x320E	; 0x80320e <rcvE1_read_index>
    47f8:	30 91 0f 32 	lds	r19, 0x320F	; 0x80320f <rcvE1_read_index+0x1>
    47fc:	82 17       	cp	r24, r18
    47fe:	93 07       	cpc	r25, r19
    4800:	f1 f4       	brne	.+60     	; 0x483e <__vector_61+0x96>
    4802:	0c c0       	rjmp	.+24     	; 0x481c <__vector_61+0x74>
    4804:	10 92 00 32 	sts	0x3200, r1	; 0x803200 <rcvE1_write_index>
    4808:	10 92 01 32 	sts	0x3201, r1	; 0x803201 <rcvE1_write_index+0x1>
    480c:	80 91 0e 32 	lds	r24, 0x320E	; 0x80320e <rcvE1_read_index>
    4810:	90 91 0f 32 	lds	r25, 0x320F	; 0x80320f <rcvE1_read_index+0x1>
    4814:	18 16       	cp	r1, r24
    4816:	19 06       	cpc	r1, r25
    4818:	91 f4       	brne	.+36     	; 0x483e <__vector_61+0x96>
    481a:	0e c0       	rjmp	.+28     	; 0x4838 <__vector_61+0x90>
    481c:	01 96       	adiw	r24, 0x01	; 1
    481e:	84 36       	cpi	r24, 0x64	; 100
    4820:	91 05       	cpc	r25, r1
    4822:	28 f4       	brcc	.+10     	; 0x482e <__vector_61+0x86>
    4824:	80 93 0e 32 	sts	0x320E, r24	; 0x80320e <rcvE1_read_index>
    4828:	90 93 0f 32 	sts	0x320F, r25	; 0x80320f <rcvE1_read_index+0x1>
    482c:	08 c0       	rjmp	.+16     	; 0x483e <__vector_61+0x96>
    482e:	10 92 0e 32 	sts	0x320E, r1	; 0x80320e <rcvE1_read_index>
    4832:	10 92 0f 32 	sts	0x320F, r1	; 0x80320f <rcvE1_read_index+0x1>
    4836:	03 c0       	rjmp	.+6      	; 0x483e <__vector_61+0x96>
    4838:	81 e0       	ldi	r24, 0x01	; 1
    483a:	90 e0       	ldi	r25, 0x00	; 0
    483c:	f3 cf       	rjmp	.-26     	; 0x4824 <__vector_61+0x7c>
    483e:	ff 91       	pop	r31
    4840:	ef 91       	pop	r30
    4842:	9f 91       	pop	r25
    4844:	8f 91       	pop	r24
    4846:	3f 91       	pop	r19
    4848:	2f 91       	pop	r18
    484a:	0f 90       	pop	r0
    484c:	0b be       	out	0x3b, r0	; 59
    484e:	0f 90       	pop	r0
    4850:	0f be       	out	0x3f, r0	; 63
    4852:	0f 90       	pop	r0
    4854:	1f 90       	pop	r1
    4856:	18 95       	reti

00004858 <__vector_119>:
    4858:	1f 92       	push	r1
    485a:	0f 92       	push	r0
    485c:	0f b6       	in	r0, 0x3f	; 63
    485e:	0f 92       	push	r0
    4860:	11 24       	eor	r1, r1
    4862:	0b b6       	in	r0, 0x3b	; 59
    4864:	0f 92       	push	r0
    4866:	2f 93       	push	r18
    4868:	3f 93       	push	r19
    486a:	8f 93       	push	r24
    486c:	9f 93       	push	r25
    486e:	ef 93       	push	r30
    4870:	ff 93       	push	r31
    4872:	20 91 a0 0b 	lds	r18, 0x0BA0	; 0x800ba0 <__TEXT_REGION_LENGTH__+0x700ba0>
    4876:	e0 91 1a 32 	lds	r30, 0x321A	; 0x80321a <rcvF0_buffer>
    487a:	f0 91 1b 32 	lds	r31, 0x321B	; 0x80321b <rcvF0_buffer+0x1>
    487e:	80 91 fe 31 	lds	r24, 0x31FE	; 0x8031fe <rcvF0_write_index>
    4882:	90 91 ff 31 	lds	r25, 0x31FF	; 0x8031ff <rcvF0_write_index+0x1>
    4886:	e8 0f       	add	r30, r24
    4888:	f9 1f       	adc	r31, r25
    488a:	20 83       	st	Z, r18
    488c:	80 91 fe 31 	lds	r24, 0x31FE	; 0x8031fe <rcvF0_write_index>
    4890:	90 91 ff 31 	lds	r25, 0x31FF	; 0x8031ff <rcvF0_write_index+0x1>
    4894:	01 96       	adiw	r24, 0x01	; 1
    4896:	84 36       	cpi	r24, 0x64	; 100
    4898:	91 05       	cpc	r25, r1
    489a:	60 f4       	brcc	.+24     	; 0x48b4 <__vector_119+0x5c>
    489c:	80 93 fe 31 	sts	0x31FE, r24	; 0x8031fe <rcvF0_write_index>
    48a0:	90 93 ff 31 	sts	0x31FF, r25	; 0x8031ff <rcvF0_write_index+0x1>
    48a4:	20 91 0c 32 	lds	r18, 0x320C	; 0x80320c <rcvF0_read_index>
    48a8:	30 91 0d 32 	lds	r19, 0x320D	; 0x80320d <rcvF0_read_index+0x1>
    48ac:	82 17       	cp	r24, r18
    48ae:	93 07       	cpc	r25, r19
    48b0:	f1 f4       	brne	.+60     	; 0x48ee <__vector_119+0x96>
    48b2:	0c c0       	rjmp	.+24     	; 0x48cc <__vector_119+0x74>
    48b4:	10 92 fe 31 	sts	0x31FE, r1	; 0x8031fe <rcvF0_write_index>
    48b8:	10 92 ff 31 	sts	0x31FF, r1	; 0x8031ff <rcvF0_write_index+0x1>
    48bc:	80 91 0c 32 	lds	r24, 0x320C	; 0x80320c <rcvF0_read_index>
    48c0:	90 91 0d 32 	lds	r25, 0x320D	; 0x80320d <rcvF0_read_index+0x1>
    48c4:	18 16       	cp	r1, r24
    48c6:	19 06       	cpc	r1, r25
    48c8:	91 f4       	brne	.+36     	; 0x48ee <__vector_119+0x96>
    48ca:	0e c0       	rjmp	.+28     	; 0x48e8 <__vector_119+0x90>
    48cc:	01 96       	adiw	r24, 0x01	; 1
    48ce:	84 36       	cpi	r24, 0x64	; 100
    48d0:	91 05       	cpc	r25, r1
    48d2:	28 f4       	brcc	.+10     	; 0x48de <__vector_119+0x86>
    48d4:	80 93 0c 32 	sts	0x320C, r24	; 0x80320c <rcvF0_read_index>
    48d8:	90 93 0d 32 	sts	0x320D, r25	; 0x80320d <rcvF0_read_index+0x1>
    48dc:	08 c0       	rjmp	.+16     	; 0x48ee <__vector_119+0x96>
    48de:	10 92 0c 32 	sts	0x320C, r1	; 0x80320c <rcvF0_read_index>
    48e2:	10 92 0d 32 	sts	0x320D, r1	; 0x80320d <rcvF0_read_index+0x1>
    48e6:	03 c0       	rjmp	.+6      	; 0x48ee <__vector_119+0x96>
    48e8:	81 e0       	ldi	r24, 0x01	; 1
    48ea:	90 e0       	ldi	r25, 0x00	; 0
    48ec:	f3 cf       	rjmp	.-26     	; 0x48d4 <__vector_119+0x7c>
    48ee:	ff 91       	pop	r31
    48f0:	ef 91       	pop	r30
    48f2:	9f 91       	pop	r25
    48f4:	8f 91       	pop	r24
    48f6:	3f 91       	pop	r19
    48f8:	2f 91       	pop	r18
    48fa:	0f 90       	pop	r0
    48fc:	0b be       	out	0x3b, r0	; 59
    48fe:	0f 90       	pop	r0
    4900:	0f be       	out	0x3f, r0	; 63
    4902:	0f 90       	pop	r0
    4904:	1f 90       	pop	r1
    4906:	18 95       	reti

00004908 <main>:
 *  reset.
 *  @return This is a real-time microcontroller program which doesn't return. Ever.
 */

int main (void)
{
    4908:	0f 93       	push	r16
    490a:	1f 93       	push	r17
    490c:	cf 93       	push	r28
    490e:	df 93       	push	r29
    4910:	cd b7       	in	r28, 0x3d	; 61
    4912:	de b7       	in	r29, 0x3e	; 62
    4914:	6d 97       	sbiw	r28, 0x1d	; 29
    4916:	cd bf       	out	0x3d, r28	; 61
    4918:	de bf       	out	0x3e, r29	; 62
	cli();
    491a:	f8 94       	cli
	// Configure the system clock to use internal oscillator at 32 MHz
	config_SYSCLOCK();
    491c:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <_Z15config_SYSCLOCKv>
	
	//check clock output
	PORTD.OUTCLR = PIN7_bm;
    4920:	e0 e6       	ldi	r30, 0x60	; 96
    4922:	f6 e0       	ldi	r31, 0x06	; 6
    4924:	80 e8       	ldi	r24, 0x80	; 128
    4926:	86 83       	std	Z+6, r24	; 0x06
	PORTD.DIRSET = PIN7_bm;						//configure PD7 for output
    4928:	81 83       	std	Z+1, r24	; 0x01
	PORTCFG.CLKEVOUT = PORTCFG_CLKOUT_PD7_gc; //configure clock to output on PD7
    492a:	82 e0       	ldi	r24, 0x02	; 2
    492c:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
	
	// Disable the watchdog timer unless it's needed later. This is important because
	// sometimes the watchdog timer may have been left on...and it tends to stay on	 
	wdt_disable ();
    4930:	9d ef       	ldi	r25, 0xFD	; 253
    4932:	88 ed       	ldi	r24, 0xD8	; 216
    4934:	08 b6       	in	r0, 0x38	; 56
    4936:	18 be       	out	0x38, r1	; 56
    4938:	84 bf       	out	0x34, r24	; 52
    493a:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    493e:	08 be       	out	0x38, r0	; 56

	// Configure a serial port which can be used by a task to print debugging infor-
	// mation, or to allow user interaction, or for whatever use is appropriate.  The
	// serial port will be used by the user interface task after setup is complete and
	// the task scheduler has been started by the function vTaskStartScheduler()
	rs232 ser_dev(0,&USARTD0); // Create a serial device on USART E0
    4940:	40 ea       	ldi	r20, 0xA0	; 160
    4942:	59 e0       	ldi	r21, 0x09	; 9
    4944:	60 e0       	ldi	r22, 0x00	; 0
    4946:	70 e0       	ldi	r23, 0x00	; 0
    4948:	ce 01       	movw	r24, r28
    494a:	01 96       	adiw	r24, 0x01	; 1
    494c:	0e 94 7a 21 	call	0x42f4	; 0x42f4 <_ZN5rs232C1EjP12USART_struct>
	ser_dev << clrscr << "FreeRTOS Xmega Testing Program" << endl << endl;
    4950:	67 e0       	ldi	r22, 0x07	; 7
    4952:	ce 01       	movw	r24, r28
    4954:	01 96       	adiw	r24, 0x01	; 1
    4956:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    495a:	8c 01       	movw	r16, r24
    495c:	68 ef       	ldi	r22, 0xF8	; 248
    495e:	70 e2       	ldi	r23, 0x20	; 32
    4960:	0e 94 5f 1f 	call	0x3ebe	; 0x3ebe <_ZN8emstream4putsEPKc>
    4964:	66 e0       	ldi	r22, 0x06	; 6
    4966:	c8 01       	movw	r24, r16
    4968:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
    496c:	66 e0       	ldi	r22, 0x06	; 6
    496e:	0e 94 96 1f 	call	0x3f2c	; 0x3f2c <_ZN8emstreamlsE15ser_manipulator>
	/*// The LED blinking task is also low priority and is used to test the timing accuracy
	// of the task transitions.
	new task_LED ("LED BLINKER", task_priority (1), 260, &ser_dev);*/

	// Motor Task. Stack size needs to be at least 260 to work.
	new task_motor ("MOTOR TASK", task_priority (1), 1000, &ser_dev);
    4972:	82 e1       	ldi	r24, 0x12	; 18
    4974:	90 e0       	ldi	r25, 0x00	; 0
    4976:	0e 94 91 1e 	call	0x3d22	; 0x3d22 <_Znwj>
    497a:	8e 01       	movw	r16, r28
    497c:	0f 5f       	subi	r16, 0xFF	; 255
    497e:	1f 4f       	sbci	r17, 0xFF	; 255
    4980:	28 ee       	ldi	r18, 0xE8	; 232
    4982:	33 e0       	ldi	r19, 0x03	; 3
    4984:	41 e0       	ldi	r20, 0x01	; 1
    4986:	67 e1       	ldi	r22, 0x17	; 23
    4988:	71 e2       	ldi	r23, 0x21	; 33
    498a:	0e 94 c7 06 	call	0xd8e	; 0xd8e <_ZN10task_motorC1EPKchjP8emstream>

	// Robot State task
	new task_Robot_State ("RobotState", task_priority(3),1000, &ser_dev);
    498e:	89 e3       	ldi	r24, 0x39	; 57
    4990:	90 e0       	ldi	r25, 0x00	; 0
    4992:	0e 94 91 1e 	call	0x3d22	; 0x3d22 <_Znwj>
    4996:	28 ee       	ldi	r18, 0xE8	; 232
    4998:	33 e0       	ldi	r19, 0x03	; 3
    499a:	43 e0       	ldi	r20, 0x03	; 3
    499c:	62 e2       	ldi	r22, 0x22	; 34
    499e:	71 e2       	ldi	r23, 0x21	; 33
    49a0:	0e 94 d6 08 	call	0x11ac	; 0x11ac <_ZN16task_Robot_StateC1EPKchjP8emstream>
	
	//new task_diag("Diagnostic",task_priority(1),200, &ser_dev);
	// Enable high - low level interrupts and enable global interrupts
	PMIC_CTRL = (1 << PMIC_HILVLEN_bp | 1 << PMIC_MEDLVLEN_bp | 1 << PMIC_LOLVLEN_bp);
    49a4:	87 e0       	ldi	r24, 0x07	; 7
    49a6:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
	sei();
    49aa:	78 94       	sei
	
	// Here's where the RTOS scheduler is started up. It should never exit as long as
	// power is on and the microcontroller isn't rebooted
	vTaskStartScheduler ();
    49ac:	0e 94 55 18 	call	0x30aa	; 0x30aa <vTaskStartScheduler>
    49b0:	80 e0       	ldi	r24, 0x00	; 0
    49b2:	90 e0       	ldi	r25, 0x00	; 0
    49b4:	6d 96       	adiw	r28, 0x1d	; 29
    49b6:	cd bf       	out	0x3d, r28	; 61
    49b8:	de bf       	out	0x3e, r29	; 62
    49ba:	df 91       	pop	r29
    49bc:	cf 91       	pop	r28
    49be:	1f 91       	pop	r17
    49c0:	0f 91       	pop	r16
    49c2:	08 95       	ret

000049c4 <_GLOBAL__sub_I_print_ser_queue>:
    49c4:	0f 93       	push	r16
    49c6:	1f 93       	push	r17
#include "task_LED.h"                       // Header for user interface task
#include "task_motor.h"                     // Header for motor task
#include "task_Robot_State.h"               // Header for motor task
#include "task_diag.h"						// Header for diagnostic task

frt_text_queue print_ser_queue (32, NULL, 10);
    49c8:	0a e0       	ldi	r16, 0x0A	; 10
    49ca:	10 e0       	ldi	r17, 0x00	; 0
    49cc:	20 e0       	ldi	r18, 0x00	; 0
    49ce:	30 e0       	ldi	r19, 0x00	; 0
    49d0:	40 e0       	ldi	r20, 0x00	; 0
    49d2:	50 e0       	ldi	r21, 0x00	; 0
    49d4:	60 e2       	ldi	r22, 0x20	; 32
    49d6:	70 e0       	ldi	r23, 0x00	; 0
    49d8:	88 e2       	ldi	r24, 0x28	; 40
    49da:	92 e3       	ldi	r25, 0x32	; 50
    49dc:	0e 94 62 1e 	call	0x3cc4	; 0x3cc4 <_ZN14frt_text_queueC1EjP8emstreamm>
	sei();
	
	// Here's where the RTOS scheduler is started up. It should never exit as long as
	// power is on and the microcontroller isn't rebooted
	vTaskStartScheduler ();
    49e0:	1f 91       	pop	r17
    49e2:	0f 91       	pop	r16
    49e4:	08 95       	ret

000049e6 <__subsf3>:
    49e6:	50 58       	subi	r21, 0x80	; 128

000049e8 <__addsf3>:
    49e8:	bb 27       	eor	r27, r27
    49ea:	aa 27       	eor	r26, r26
    49ec:	0e 94 0b 25 	call	0x4a16	; 0x4a16 <__addsf3x>
    49f0:	0c 94 25 27 	jmp	0x4e4a	; 0x4e4a <__fp_round>
    49f4:	0e 94 ec 26 	call	0x4dd8	; 0x4dd8 <__fp_pscA>
    49f8:	38 f0       	brcs	.+14     	; 0x4a08 <__addsf3+0x20>
    49fa:	0e 94 f3 26 	call	0x4de6	; 0x4de6 <__fp_pscB>
    49fe:	20 f0       	brcs	.+8      	; 0x4a08 <__addsf3+0x20>
    4a00:	39 f4       	brne	.+14     	; 0x4a10 <__addsf3+0x28>
    4a02:	9f 3f       	cpi	r25, 0xFF	; 255
    4a04:	19 f4       	brne	.+6      	; 0x4a0c <__addsf3+0x24>
    4a06:	26 f4       	brtc	.+8      	; 0x4a10 <__addsf3+0x28>
    4a08:	0c 94 c2 26 	jmp	0x4d84	; 0x4d84 <__fp_nan>
    4a0c:	0e f4       	brtc	.+2      	; 0x4a10 <__addsf3+0x28>
    4a0e:	e0 95       	com	r30
    4a10:	e7 fb       	bst	r30, 7
    4a12:	0c 94 bc 26 	jmp	0x4d78	; 0x4d78 <__fp_inf>

00004a16 <__addsf3x>:
    4a16:	e9 2f       	mov	r30, r25
    4a18:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <__fp_split3>
    4a1c:	58 f3       	brcs	.-42     	; 0x49f4 <__addsf3+0xc>
    4a1e:	ba 17       	cp	r27, r26
    4a20:	62 07       	cpc	r22, r18
    4a22:	73 07       	cpc	r23, r19
    4a24:	84 07       	cpc	r24, r20
    4a26:	95 07       	cpc	r25, r21
    4a28:	20 f0       	brcs	.+8      	; 0x4a32 <__addsf3x+0x1c>
    4a2a:	79 f4       	brne	.+30     	; 0x4a4a <__addsf3x+0x34>
    4a2c:	a6 f5       	brtc	.+104    	; 0x4a96 <__addsf3x+0x80>
    4a2e:	0c 94 6c 27 	jmp	0x4ed8	; 0x4ed8 <__fp_zero>
    4a32:	0e f4       	brtc	.+2      	; 0x4a36 <__addsf3x+0x20>
    4a34:	e0 95       	com	r30
    4a36:	0b 2e       	mov	r0, r27
    4a38:	ba 2f       	mov	r27, r26
    4a3a:	a0 2d       	mov	r26, r0
    4a3c:	0b 01       	movw	r0, r22
    4a3e:	b9 01       	movw	r22, r18
    4a40:	90 01       	movw	r18, r0
    4a42:	0c 01       	movw	r0, r24
    4a44:	ca 01       	movw	r24, r20
    4a46:	a0 01       	movw	r20, r0
    4a48:	11 24       	eor	r1, r1
    4a4a:	ff 27       	eor	r31, r31
    4a4c:	59 1b       	sub	r21, r25
    4a4e:	99 f0       	breq	.+38     	; 0x4a76 <__addsf3x+0x60>
    4a50:	59 3f       	cpi	r21, 0xF9	; 249
    4a52:	50 f4       	brcc	.+20     	; 0x4a68 <__addsf3x+0x52>
    4a54:	50 3e       	cpi	r21, 0xE0	; 224
    4a56:	68 f1       	brcs	.+90     	; 0x4ab2 <__addsf3x+0x9c>
    4a58:	1a 16       	cp	r1, r26
    4a5a:	f0 40       	sbci	r31, 0x00	; 0
    4a5c:	a2 2f       	mov	r26, r18
    4a5e:	23 2f       	mov	r18, r19
    4a60:	34 2f       	mov	r19, r20
    4a62:	44 27       	eor	r20, r20
    4a64:	58 5f       	subi	r21, 0xF8	; 248
    4a66:	f3 cf       	rjmp	.-26     	; 0x4a4e <__addsf3x+0x38>
    4a68:	46 95       	lsr	r20
    4a6a:	37 95       	ror	r19
    4a6c:	27 95       	ror	r18
    4a6e:	a7 95       	ror	r26
    4a70:	f0 40       	sbci	r31, 0x00	; 0
    4a72:	53 95       	inc	r21
    4a74:	c9 f7       	brne	.-14     	; 0x4a68 <__addsf3x+0x52>
    4a76:	7e f4       	brtc	.+30     	; 0x4a96 <__addsf3x+0x80>
    4a78:	1f 16       	cp	r1, r31
    4a7a:	ba 0b       	sbc	r27, r26
    4a7c:	62 0b       	sbc	r22, r18
    4a7e:	73 0b       	sbc	r23, r19
    4a80:	84 0b       	sbc	r24, r20
    4a82:	ba f0       	brmi	.+46     	; 0x4ab2 <__addsf3x+0x9c>
    4a84:	91 50       	subi	r25, 0x01	; 1
    4a86:	a1 f0       	breq	.+40     	; 0x4ab0 <__addsf3x+0x9a>
    4a88:	ff 0f       	add	r31, r31
    4a8a:	bb 1f       	adc	r27, r27
    4a8c:	66 1f       	adc	r22, r22
    4a8e:	77 1f       	adc	r23, r23
    4a90:	88 1f       	adc	r24, r24
    4a92:	c2 f7       	brpl	.-16     	; 0x4a84 <__addsf3x+0x6e>
    4a94:	0e c0       	rjmp	.+28     	; 0x4ab2 <__addsf3x+0x9c>
    4a96:	ba 0f       	add	r27, r26
    4a98:	62 1f       	adc	r22, r18
    4a9a:	73 1f       	adc	r23, r19
    4a9c:	84 1f       	adc	r24, r20
    4a9e:	48 f4       	brcc	.+18     	; 0x4ab2 <__addsf3x+0x9c>
    4aa0:	87 95       	ror	r24
    4aa2:	77 95       	ror	r23
    4aa4:	67 95       	ror	r22
    4aa6:	b7 95       	ror	r27
    4aa8:	f7 95       	ror	r31
    4aaa:	9e 3f       	cpi	r25, 0xFE	; 254
    4aac:	08 f0       	brcs	.+2      	; 0x4ab0 <__addsf3x+0x9a>
    4aae:	b0 cf       	rjmp	.-160    	; 0x4a10 <__addsf3+0x28>
    4ab0:	93 95       	inc	r25
    4ab2:	88 0f       	add	r24, r24
    4ab4:	08 f0       	brcs	.+2      	; 0x4ab8 <__addsf3x+0xa2>
    4ab6:	99 27       	eor	r25, r25
    4ab8:	ee 0f       	add	r30, r30
    4aba:	97 95       	ror	r25
    4abc:	87 95       	ror	r24
    4abe:	08 95       	ret
    4ac0:	0e 94 ec 26 	call	0x4dd8	; 0x4dd8 <__fp_pscA>
    4ac4:	60 f0       	brcs	.+24     	; 0x4ade <__addsf3x+0xc8>
    4ac6:	80 e8       	ldi	r24, 0x80	; 128
    4ac8:	91 e0       	ldi	r25, 0x01	; 1
    4aca:	09 f4       	brne	.+2      	; 0x4ace <__addsf3x+0xb8>
    4acc:	9e ef       	ldi	r25, 0xFE	; 254
    4ace:	0e 94 f3 26 	call	0x4de6	; 0x4de6 <__fp_pscB>
    4ad2:	28 f0       	brcs	.+10     	; 0x4ade <__addsf3x+0xc8>
    4ad4:	40 e8       	ldi	r20, 0x80	; 128
    4ad6:	51 e0       	ldi	r21, 0x01	; 1
    4ad8:	71 f4       	brne	.+28     	; 0x4af6 <atan2+0x10>
    4ada:	5e ef       	ldi	r21, 0xFE	; 254
    4adc:	0c c0       	rjmp	.+24     	; 0x4af6 <atan2+0x10>
    4ade:	0c 94 c2 26 	jmp	0x4d84	; 0x4d84 <__fp_nan>
    4ae2:	0c 94 6c 27 	jmp	0x4ed8	; 0x4ed8 <__fp_zero>

00004ae6 <atan2>:
    4ae6:	e9 2f       	mov	r30, r25
    4ae8:	e0 78       	andi	r30, 0x80	; 128
    4aea:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <__fp_split3>
    4aee:	40 f3       	brcs	.-48     	; 0x4ac0 <__addsf3x+0xaa>
    4af0:	09 2e       	mov	r0, r25
    4af2:	05 2a       	or	r0, r21
    4af4:	b1 f3       	breq	.-20     	; 0x4ae2 <__addsf3x+0xcc>
    4af6:	26 17       	cp	r18, r22
    4af8:	37 07       	cpc	r19, r23
    4afa:	48 07       	cpc	r20, r24
    4afc:	59 07       	cpc	r21, r25
    4afe:	38 f0       	brcs	.+14     	; 0x4b0e <atan2+0x28>
    4b00:	0e 2e       	mov	r0, r30
    4b02:	07 f8       	bld	r0, 7
    4b04:	e0 25       	eor	r30, r0
    4b06:	69 f0       	breq	.+26     	; 0x4b22 <atan2+0x3c>
    4b08:	e0 25       	eor	r30, r0
    4b0a:	e0 64       	ori	r30, 0x40	; 64
    4b0c:	0a c0       	rjmp	.+20     	; 0x4b22 <atan2+0x3c>
    4b0e:	ef 63       	ori	r30, 0x3F	; 63
    4b10:	07 f8       	bld	r0, 7
    4b12:	00 94       	com	r0
    4b14:	07 fa       	bst	r0, 7
    4b16:	db 01       	movw	r26, r22
    4b18:	b9 01       	movw	r22, r18
    4b1a:	9d 01       	movw	r18, r26
    4b1c:	dc 01       	movw	r26, r24
    4b1e:	ca 01       	movw	r24, r20
    4b20:	ad 01       	movw	r20, r26
    4b22:	ef 93       	push	r30
    4b24:	0e 94 ee 25 	call	0x4bdc	; 0x4bdc <__divsf3_pse>
    4b28:	0e 94 25 27 	call	0x4e4a	; 0x4e4a <__fp_round>
    4b2c:	0e 94 a3 25 	call	0x4b46	; 0x4b46 <atan>
    4b30:	5f 91       	pop	r21
    4b32:	55 23       	and	r21, r21
    4b34:	39 f0       	breq	.+14     	; 0x4b44 <atan2+0x5e>
    4b36:	2b ed       	ldi	r18, 0xDB	; 219
    4b38:	3f e0       	ldi	r19, 0x0F	; 15
    4b3a:	49 e4       	ldi	r20, 0x49	; 73
    4b3c:	50 fd       	sbrc	r21, 0
    4b3e:	49 ec       	ldi	r20, 0xC9	; 201
    4b40:	0c 94 f4 24 	jmp	0x49e8	; 0x49e8 <__addsf3>
    4b44:	08 95       	ret

00004b46 <atan>:
    4b46:	df 93       	push	r29
    4b48:	dd 27       	eor	r29, r29
    4b4a:	b9 2f       	mov	r27, r25
    4b4c:	bf 77       	andi	r27, 0x7F	; 127
    4b4e:	40 e8       	ldi	r20, 0x80	; 128
    4b50:	5f e3       	ldi	r21, 0x3F	; 63
    4b52:	16 16       	cp	r1, r22
    4b54:	17 06       	cpc	r1, r23
    4b56:	48 07       	cpc	r20, r24
    4b58:	5b 07       	cpc	r21, r27
    4b5a:	18 f4       	brcc	.+6      	; 0x4b62 <atan+0x1c>
    4b5c:	d9 2f       	mov	r29, r25
    4b5e:	0e 94 73 27 	call	0x4ee6	; 0x4ee6 <inverse>
    4b62:	9f 93       	push	r25
    4b64:	8f 93       	push	r24
    4b66:	7f 93       	push	r23
    4b68:	6f 93       	push	r22
    4b6a:	0e 94 36 28 	call	0x506c	; 0x506c <square>
    4b6e:	e0 e2       	ldi	r30, 0x20	; 32
    4b70:	f2 e0       	ldi	r31, 0x02	; 2
    4b72:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__fp_powser>
    4b76:	0e 94 25 27 	call	0x4e4a	; 0x4e4a <__fp_round>
    4b7a:	2f 91       	pop	r18
    4b7c:	3f 91       	pop	r19
    4b7e:	4f 91       	pop	r20
    4b80:	5f 91       	pop	r21
    4b82:	0e 94 8e 27 	call	0x4f1c	; 0x4f1c <__mulsf3x>
    4b86:	dd 23       	and	r29, r29
    4b88:	51 f0       	breq	.+20     	; 0x4b9e <atan+0x58>
    4b8a:	90 58       	subi	r25, 0x80	; 128
    4b8c:	a2 ea       	ldi	r26, 0xA2	; 162
    4b8e:	2a ed       	ldi	r18, 0xDA	; 218
    4b90:	3f e0       	ldi	r19, 0x0F	; 15
    4b92:	49 ec       	ldi	r20, 0xC9	; 201
    4b94:	5f e3       	ldi	r21, 0x3F	; 63
    4b96:	d0 78       	andi	r29, 0x80	; 128
    4b98:	5d 27       	eor	r21, r29
    4b9a:	0e 94 0b 25 	call	0x4a16	; 0x4a16 <__addsf3x>
    4b9e:	df 91       	pop	r29
    4ba0:	0c 94 25 27 	jmp	0x4e4a	; 0x4e4a <__fp_round>

00004ba4 <cos>:
    4ba4:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <__fp_rempio2>
    4ba8:	e3 95       	inc	r30
    4baa:	0c 94 36 27 	jmp	0x4e6c	; 0x4e6c <__fp_sinus>

00004bae <__divsf3>:
    4bae:	0e 94 eb 25 	call	0x4bd6	; 0x4bd6 <__divsf3x>
    4bb2:	0c 94 25 27 	jmp	0x4e4a	; 0x4e4a <__fp_round>
    4bb6:	0e 94 f3 26 	call	0x4de6	; 0x4de6 <__fp_pscB>
    4bba:	58 f0       	brcs	.+22     	; 0x4bd2 <__divsf3+0x24>
    4bbc:	0e 94 ec 26 	call	0x4dd8	; 0x4dd8 <__fp_pscA>
    4bc0:	40 f0       	brcs	.+16     	; 0x4bd2 <__divsf3+0x24>
    4bc2:	29 f4       	brne	.+10     	; 0x4bce <__divsf3+0x20>
    4bc4:	5f 3f       	cpi	r21, 0xFF	; 255
    4bc6:	29 f0       	breq	.+10     	; 0x4bd2 <__divsf3+0x24>
    4bc8:	0c 94 bc 26 	jmp	0x4d78	; 0x4d78 <__fp_inf>
    4bcc:	51 11       	cpse	r21, r1
    4bce:	0c 94 6d 27 	jmp	0x4eda	; 0x4eda <__fp_szero>
    4bd2:	0c 94 c2 26 	jmp	0x4d84	; 0x4d84 <__fp_nan>

00004bd6 <__divsf3x>:
    4bd6:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <__fp_split3>
    4bda:	68 f3       	brcs	.-38     	; 0x4bb6 <__divsf3+0x8>

00004bdc <__divsf3_pse>:
    4bdc:	99 23       	and	r25, r25
    4bde:	b1 f3       	breq	.-20     	; 0x4bcc <__divsf3+0x1e>
    4be0:	55 23       	and	r21, r21
    4be2:	91 f3       	breq	.-28     	; 0x4bc8 <__divsf3+0x1a>
    4be4:	95 1b       	sub	r25, r21
    4be6:	55 0b       	sbc	r21, r21
    4be8:	bb 27       	eor	r27, r27
    4bea:	aa 27       	eor	r26, r26
    4bec:	62 17       	cp	r22, r18
    4bee:	73 07       	cpc	r23, r19
    4bf0:	84 07       	cpc	r24, r20
    4bf2:	38 f0       	brcs	.+14     	; 0x4c02 <__divsf3_pse+0x26>
    4bf4:	9f 5f       	subi	r25, 0xFF	; 255
    4bf6:	5f 4f       	sbci	r21, 0xFF	; 255
    4bf8:	22 0f       	add	r18, r18
    4bfa:	33 1f       	adc	r19, r19
    4bfc:	44 1f       	adc	r20, r20
    4bfe:	aa 1f       	adc	r26, r26
    4c00:	a9 f3       	breq	.-22     	; 0x4bec <__divsf3_pse+0x10>
    4c02:	35 d0       	rcall	.+106    	; 0x4c6e <__divsf3_pse+0x92>
    4c04:	0e 2e       	mov	r0, r30
    4c06:	3a f0       	brmi	.+14     	; 0x4c16 <__divsf3_pse+0x3a>
    4c08:	e0 e8       	ldi	r30, 0x80	; 128
    4c0a:	32 d0       	rcall	.+100    	; 0x4c70 <__divsf3_pse+0x94>
    4c0c:	91 50       	subi	r25, 0x01	; 1
    4c0e:	50 40       	sbci	r21, 0x00	; 0
    4c10:	e6 95       	lsr	r30
    4c12:	00 1c       	adc	r0, r0
    4c14:	ca f7       	brpl	.-14     	; 0x4c08 <__divsf3_pse+0x2c>
    4c16:	2b d0       	rcall	.+86     	; 0x4c6e <__divsf3_pse+0x92>
    4c18:	fe 2f       	mov	r31, r30
    4c1a:	29 d0       	rcall	.+82     	; 0x4c6e <__divsf3_pse+0x92>
    4c1c:	66 0f       	add	r22, r22
    4c1e:	77 1f       	adc	r23, r23
    4c20:	88 1f       	adc	r24, r24
    4c22:	bb 1f       	adc	r27, r27
    4c24:	26 17       	cp	r18, r22
    4c26:	37 07       	cpc	r19, r23
    4c28:	48 07       	cpc	r20, r24
    4c2a:	ab 07       	cpc	r26, r27
    4c2c:	b0 e8       	ldi	r27, 0x80	; 128
    4c2e:	09 f0       	breq	.+2      	; 0x4c32 <__divsf3_pse+0x56>
    4c30:	bb 0b       	sbc	r27, r27
    4c32:	80 2d       	mov	r24, r0
    4c34:	bf 01       	movw	r22, r30
    4c36:	ff 27       	eor	r31, r31
    4c38:	93 58       	subi	r25, 0x83	; 131
    4c3a:	5f 4f       	sbci	r21, 0xFF	; 255
    4c3c:	3a f0       	brmi	.+14     	; 0x4c4c <__divsf3_pse+0x70>
    4c3e:	9e 3f       	cpi	r25, 0xFE	; 254
    4c40:	51 05       	cpc	r21, r1
    4c42:	78 f0       	brcs	.+30     	; 0x4c62 <__divsf3_pse+0x86>
    4c44:	0c 94 bc 26 	jmp	0x4d78	; 0x4d78 <__fp_inf>
    4c48:	0c 94 6d 27 	jmp	0x4eda	; 0x4eda <__fp_szero>
    4c4c:	5f 3f       	cpi	r21, 0xFF	; 255
    4c4e:	e4 f3       	brlt	.-8      	; 0x4c48 <__divsf3_pse+0x6c>
    4c50:	98 3e       	cpi	r25, 0xE8	; 232
    4c52:	d4 f3       	brlt	.-12     	; 0x4c48 <__divsf3_pse+0x6c>
    4c54:	86 95       	lsr	r24
    4c56:	77 95       	ror	r23
    4c58:	67 95       	ror	r22
    4c5a:	b7 95       	ror	r27
    4c5c:	f7 95       	ror	r31
    4c5e:	9f 5f       	subi	r25, 0xFF	; 255
    4c60:	c9 f7       	brne	.-14     	; 0x4c54 <__divsf3_pse+0x78>
    4c62:	88 0f       	add	r24, r24
    4c64:	91 1d       	adc	r25, r1
    4c66:	96 95       	lsr	r25
    4c68:	87 95       	ror	r24
    4c6a:	97 f9       	bld	r25, 7
    4c6c:	08 95       	ret
    4c6e:	e1 e0       	ldi	r30, 0x01	; 1
    4c70:	66 0f       	add	r22, r22
    4c72:	77 1f       	adc	r23, r23
    4c74:	88 1f       	adc	r24, r24
    4c76:	bb 1f       	adc	r27, r27
    4c78:	62 17       	cp	r22, r18
    4c7a:	73 07       	cpc	r23, r19
    4c7c:	84 07       	cpc	r24, r20
    4c7e:	ba 07       	cpc	r27, r26
    4c80:	20 f0       	brcs	.+8      	; 0x4c8a <__divsf3_pse+0xae>
    4c82:	62 1b       	sub	r22, r18
    4c84:	73 0b       	sbc	r23, r19
    4c86:	84 0b       	sbc	r24, r20
    4c88:	ba 0b       	sbc	r27, r26
    4c8a:	ee 1f       	adc	r30, r30
    4c8c:	88 f7       	brcc	.-30     	; 0x4c70 <__divsf3_pse+0x94>
    4c8e:	e0 95       	com	r30
    4c90:	08 95       	ret

00004c92 <__fixsfsi>:
    4c92:	0e 94 50 26 	call	0x4ca0	; 0x4ca0 <__fixunssfsi>
    4c96:	68 94       	set
    4c98:	b1 11       	cpse	r27, r1
    4c9a:	0c 94 6d 27 	jmp	0x4eda	; 0x4eda <__fp_szero>
    4c9e:	08 95       	ret

00004ca0 <__fixunssfsi>:
    4ca0:	0e 94 52 27 	call	0x4ea4	; 0x4ea4 <__fp_splitA>
    4ca4:	88 f0       	brcs	.+34     	; 0x4cc8 <__fixunssfsi+0x28>
    4ca6:	9f 57       	subi	r25, 0x7F	; 127
    4ca8:	98 f0       	brcs	.+38     	; 0x4cd0 <__fixunssfsi+0x30>
    4caa:	b9 2f       	mov	r27, r25
    4cac:	99 27       	eor	r25, r25
    4cae:	b7 51       	subi	r27, 0x17	; 23
    4cb0:	b0 f0       	brcs	.+44     	; 0x4cde <__fixunssfsi+0x3e>
    4cb2:	e1 f0       	breq	.+56     	; 0x4cec <__fixunssfsi+0x4c>
    4cb4:	66 0f       	add	r22, r22
    4cb6:	77 1f       	adc	r23, r23
    4cb8:	88 1f       	adc	r24, r24
    4cba:	99 1f       	adc	r25, r25
    4cbc:	1a f0       	brmi	.+6      	; 0x4cc4 <__fixunssfsi+0x24>
    4cbe:	ba 95       	dec	r27
    4cc0:	c9 f7       	brne	.-14     	; 0x4cb4 <__fixunssfsi+0x14>
    4cc2:	14 c0       	rjmp	.+40     	; 0x4cec <__fixunssfsi+0x4c>
    4cc4:	b1 30       	cpi	r27, 0x01	; 1
    4cc6:	91 f0       	breq	.+36     	; 0x4cec <__fixunssfsi+0x4c>
    4cc8:	0e 94 6c 27 	call	0x4ed8	; 0x4ed8 <__fp_zero>
    4ccc:	b1 e0       	ldi	r27, 0x01	; 1
    4cce:	08 95       	ret
    4cd0:	0c 94 6c 27 	jmp	0x4ed8	; 0x4ed8 <__fp_zero>
    4cd4:	67 2f       	mov	r22, r23
    4cd6:	78 2f       	mov	r23, r24
    4cd8:	88 27       	eor	r24, r24
    4cda:	b8 5f       	subi	r27, 0xF8	; 248
    4cdc:	39 f0       	breq	.+14     	; 0x4cec <__fixunssfsi+0x4c>
    4cde:	b9 3f       	cpi	r27, 0xF9	; 249
    4ce0:	cc f3       	brlt	.-14     	; 0x4cd4 <__fixunssfsi+0x34>
    4ce2:	86 95       	lsr	r24
    4ce4:	77 95       	ror	r23
    4ce6:	67 95       	ror	r22
    4ce8:	b3 95       	inc	r27
    4cea:	d9 f7       	brne	.-10     	; 0x4ce2 <__fixunssfsi+0x42>
    4cec:	3e f4       	brtc	.+14     	; 0x4cfc <__fixunssfsi+0x5c>
    4cee:	90 95       	com	r25
    4cf0:	80 95       	com	r24
    4cf2:	70 95       	com	r23
    4cf4:	61 95       	neg	r22
    4cf6:	7f 4f       	sbci	r23, 0xFF	; 255
    4cf8:	8f 4f       	sbci	r24, 0xFF	; 255
    4cfa:	9f 4f       	sbci	r25, 0xFF	; 255
    4cfc:	08 95       	ret

00004cfe <__floatunsisf>:
    4cfe:	e8 94       	clt
    4d00:	09 c0       	rjmp	.+18     	; 0x4d14 <__floatsisf+0x12>

00004d02 <__floatsisf>:
    4d02:	97 fb       	bst	r25, 7
    4d04:	3e f4       	brtc	.+14     	; 0x4d14 <__floatsisf+0x12>
    4d06:	90 95       	com	r25
    4d08:	80 95       	com	r24
    4d0a:	70 95       	com	r23
    4d0c:	61 95       	neg	r22
    4d0e:	7f 4f       	sbci	r23, 0xFF	; 255
    4d10:	8f 4f       	sbci	r24, 0xFF	; 255
    4d12:	9f 4f       	sbci	r25, 0xFF	; 255
    4d14:	99 23       	and	r25, r25
    4d16:	a9 f0       	breq	.+42     	; 0x4d42 <__floatsisf+0x40>
    4d18:	f9 2f       	mov	r31, r25
    4d1a:	96 e9       	ldi	r25, 0x96	; 150
    4d1c:	bb 27       	eor	r27, r27
    4d1e:	93 95       	inc	r25
    4d20:	f6 95       	lsr	r31
    4d22:	87 95       	ror	r24
    4d24:	77 95       	ror	r23
    4d26:	67 95       	ror	r22
    4d28:	b7 95       	ror	r27
    4d2a:	f1 11       	cpse	r31, r1
    4d2c:	f8 cf       	rjmp	.-16     	; 0x4d1e <__floatsisf+0x1c>
    4d2e:	fa f4       	brpl	.+62     	; 0x4d6e <__floatsisf+0x6c>
    4d30:	bb 0f       	add	r27, r27
    4d32:	11 f4       	brne	.+4      	; 0x4d38 <__floatsisf+0x36>
    4d34:	60 ff       	sbrs	r22, 0
    4d36:	1b c0       	rjmp	.+54     	; 0x4d6e <__floatsisf+0x6c>
    4d38:	6f 5f       	subi	r22, 0xFF	; 255
    4d3a:	7f 4f       	sbci	r23, 0xFF	; 255
    4d3c:	8f 4f       	sbci	r24, 0xFF	; 255
    4d3e:	9f 4f       	sbci	r25, 0xFF	; 255
    4d40:	16 c0       	rjmp	.+44     	; 0x4d6e <__floatsisf+0x6c>
    4d42:	88 23       	and	r24, r24
    4d44:	11 f0       	breq	.+4      	; 0x4d4a <__floatsisf+0x48>
    4d46:	96 e9       	ldi	r25, 0x96	; 150
    4d48:	11 c0       	rjmp	.+34     	; 0x4d6c <__floatsisf+0x6a>
    4d4a:	77 23       	and	r23, r23
    4d4c:	21 f0       	breq	.+8      	; 0x4d56 <__floatsisf+0x54>
    4d4e:	9e e8       	ldi	r25, 0x8E	; 142
    4d50:	87 2f       	mov	r24, r23
    4d52:	76 2f       	mov	r23, r22
    4d54:	05 c0       	rjmp	.+10     	; 0x4d60 <__floatsisf+0x5e>
    4d56:	66 23       	and	r22, r22
    4d58:	71 f0       	breq	.+28     	; 0x4d76 <__floatsisf+0x74>
    4d5a:	96 e8       	ldi	r25, 0x86	; 134
    4d5c:	86 2f       	mov	r24, r22
    4d5e:	70 e0       	ldi	r23, 0x00	; 0
    4d60:	60 e0       	ldi	r22, 0x00	; 0
    4d62:	2a f0       	brmi	.+10     	; 0x4d6e <__floatsisf+0x6c>
    4d64:	9a 95       	dec	r25
    4d66:	66 0f       	add	r22, r22
    4d68:	77 1f       	adc	r23, r23
    4d6a:	88 1f       	adc	r24, r24
    4d6c:	da f7       	brpl	.-10     	; 0x4d64 <__floatsisf+0x62>
    4d6e:	88 0f       	add	r24, r24
    4d70:	96 95       	lsr	r25
    4d72:	87 95       	ror	r24
    4d74:	97 f9       	bld	r25, 7
    4d76:	08 95       	ret

00004d78 <__fp_inf>:
    4d78:	97 f9       	bld	r25, 7
    4d7a:	9f 67       	ori	r25, 0x7F	; 127
    4d7c:	80 e8       	ldi	r24, 0x80	; 128
    4d7e:	70 e0       	ldi	r23, 0x00	; 0
    4d80:	60 e0       	ldi	r22, 0x00	; 0
    4d82:	08 95       	ret

00004d84 <__fp_nan>:
    4d84:	9f ef       	ldi	r25, 0xFF	; 255
    4d86:	80 ec       	ldi	r24, 0xC0	; 192
    4d88:	08 95       	ret

00004d8a <__fp_powser>:
    4d8a:	df 93       	push	r29
    4d8c:	cf 93       	push	r28
    4d8e:	1f 93       	push	r17
    4d90:	0f 93       	push	r16
    4d92:	ff 92       	push	r15
    4d94:	ef 92       	push	r14
    4d96:	df 92       	push	r13
    4d98:	7b 01       	movw	r14, r22
    4d9a:	8c 01       	movw	r16, r24
    4d9c:	68 94       	set
    4d9e:	06 c0       	rjmp	.+12     	; 0x4dac <__fp_powser+0x22>
    4da0:	da 2e       	mov	r13, r26
    4da2:	ef 01       	movw	r28, r30
    4da4:	0e 94 8e 27 	call	0x4f1c	; 0x4f1c <__mulsf3x>
    4da8:	fe 01       	movw	r30, r28
    4daa:	e8 94       	clt
    4dac:	a5 91       	lpm	r26, Z+
    4dae:	25 91       	lpm	r18, Z+
    4db0:	35 91       	lpm	r19, Z+
    4db2:	45 91       	lpm	r20, Z+
    4db4:	55 91       	lpm	r21, Z+
    4db6:	a6 f3       	brts	.-24     	; 0x4da0 <__fp_powser+0x16>
    4db8:	ef 01       	movw	r28, r30
    4dba:	0e 94 0b 25 	call	0x4a16	; 0x4a16 <__addsf3x>
    4dbe:	fe 01       	movw	r30, r28
    4dc0:	97 01       	movw	r18, r14
    4dc2:	a8 01       	movw	r20, r16
    4dc4:	da 94       	dec	r13
    4dc6:	69 f7       	brne	.-38     	; 0x4da2 <__fp_powser+0x18>
    4dc8:	df 90       	pop	r13
    4dca:	ef 90       	pop	r14
    4dcc:	ff 90       	pop	r15
    4dce:	0f 91       	pop	r16
    4dd0:	1f 91       	pop	r17
    4dd2:	cf 91       	pop	r28
    4dd4:	df 91       	pop	r29
    4dd6:	08 95       	ret

00004dd8 <__fp_pscA>:
    4dd8:	00 24       	eor	r0, r0
    4dda:	0a 94       	dec	r0
    4ddc:	16 16       	cp	r1, r22
    4dde:	17 06       	cpc	r1, r23
    4de0:	18 06       	cpc	r1, r24
    4de2:	09 06       	cpc	r0, r25
    4de4:	08 95       	ret

00004de6 <__fp_pscB>:
    4de6:	00 24       	eor	r0, r0
    4de8:	0a 94       	dec	r0
    4dea:	12 16       	cp	r1, r18
    4dec:	13 06       	cpc	r1, r19
    4dee:	14 06       	cpc	r1, r20
    4df0:	05 06       	cpc	r0, r21
    4df2:	08 95       	ret
    4df4:	0c 94 c2 26 	jmp	0x4d84	; 0x4d84 <__fp_nan>

00004df8 <__fp_rempio2>:
    4df8:	0e 94 52 27 	call	0x4ea4	; 0x4ea4 <__fp_splitA>
    4dfc:	d8 f3       	brcs	.-10     	; 0x4df4 <__fp_pscB+0xe>
    4dfe:	e8 94       	clt
    4e00:	e0 e0       	ldi	r30, 0x00	; 0
    4e02:	bb 27       	eor	r27, r27
    4e04:	9f 57       	subi	r25, 0x7F	; 127
    4e06:	f0 f0       	brcs	.+60     	; 0x4e44 <__fp_rempio2+0x4c>
    4e08:	2a ed       	ldi	r18, 0xDA	; 218
    4e0a:	3f e0       	ldi	r19, 0x0F	; 15
    4e0c:	49 ec       	ldi	r20, 0xC9	; 201
    4e0e:	06 c0       	rjmp	.+12     	; 0x4e1c <__fp_rempio2+0x24>
    4e10:	ee 0f       	add	r30, r30
    4e12:	bb 0f       	add	r27, r27
    4e14:	66 1f       	adc	r22, r22
    4e16:	77 1f       	adc	r23, r23
    4e18:	88 1f       	adc	r24, r24
    4e1a:	28 f0       	brcs	.+10     	; 0x4e26 <__fp_rempio2+0x2e>
    4e1c:	b2 3a       	cpi	r27, 0xA2	; 162
    4e1e:	62 07       	cpc	r22, r18
    4e20:	73 07       	cpc	r23, r19
    4e22:	84 07       	cpc	r24, r20
    4e24:	28 f0       	brcs	.+10     	; 0x4e30 <__fp_rempio2+0x38>
    4e26:	b2 5a       	subi	r27, 0xA2	; 162
    4e28:	62 0b       	sbc	r22, r18
    4e2a:	73 0b       	sbc	r23, r19
    4e2c:	84 0b       	sbc	r24, r20
    4e2e:	e3 95       	inc	r30
    4e30:	9a 95       	dec	r25
    4e32:	72 f7       	brpl	.-36     	; 0x4e10 <__fp_rempio2+0x18>
    4e34:	80 38       	cpi	r24, 0x80	; 128
    4e36:	30 f4       	brcc	.+12     	; 0x4e44 <__fp_rempio2+0x4c>
    4e38:	9a 95       	dec	r25
    4e3a:	bb 0f       	add	r27, r27
    4e3c:	66 1f       	adc	r22, r22
    4e3e:	77 1f       	adc	r23, r23
    4e40:	88 1f       	adc	r24, r24
    4e42:	d2 f7       	brpl	.-12     	; 0x4e38 <__fp_rempio2+0x40>
    4e44:	90 48       	sbci	r25, 0x80	; 128
    4e46:	0c 94 3c 28 	jmp	0x5078	; 0x5078 <__fp_mpack_finite>

00004e4a <__fp_round>:
    4e4a:	09 2e       	mov	r0, r25
    4e4c:	03 94       	inc	r0
    4e4e:	00 0c       	add	r0, r0
    4e50:	11 f4       	brne	.+4      	; 0x4e56 <__fp_round+0xc>
    4e52:	88 23       	and	r24, r24
    4e54:	52 f0       	brmi	.+20     	; 0x4e6a <__fp_round+0x20>
    4e56:	bb 0f       	add	r27, r27
    4e58:	40 f4       	brcc	.+16     	; 0x4e6a <__fp_round+0x20>
    4e5a:	bf 2b       	or	r27, r31
    4e5c:	11 f4       	brne	.+4      	; 0x4e62 <__fp_round+0x18>
    4e5e:	60 ff       	sbrs	r22, 0
    4e60:	04 c0       	rjmp	.+8      	; 0x4e6a <__fp_round+0x20>
    4e62:	6f 5f       	subi	r22, 0xFF	; 255
    4e64:	7f 4f       	sbci	r23, 0xFF	; 255
    4e66:	8f 4f       	sbci	r24, 0xFF	; 255
    4e68:	9f 4f       	sbci	r25, 0xFF	; 255
    4e6a:	08 95       	ret

00004e6c <__fp_sinus>:
    4e6c:	ef 93       	push	r30
    4e6e:	e0 ff       	sbrs	r30, 0
    4e70:	07 c0       	rjmp	.+14     	; 0x4e80 <__fp_sinus+0x14>
    4e72:	a2 ea       	ldi	r26, 0xA2	; 162
    4e74:	2a ed       	ldi	r18, 0xDA	; 218
    4e76:	3f e0       	ldi	r19, 0x0F	; 15
    4e78:	49 ec       	ldi	r20, 0xC9	; 201
    4e7a:	5f eb       	ldi	r21, 0xBF	; 191
    4e7c:	0e 94 0b 25 	call	0x4a16	; 0x4a16 <__addsf3x>
    4e80:	0e 94 25 27 	call	0x4e4a	; 0x4e4a <__fp_round>
    4e84:	0f 90       	pop	r0
    4e86:	03 94       	inc	r0
    4e88:	01 fc       	sbrc	r0, 1
    4e8a:	90 58       	subi	r25, 0x80	; 128
    4e8c:	ed e4       	ldi	r30, 0x4D	; 77
    4e8e:	f2 e0       	ldi	r31, 0x02	; 2
    4e90:	0c 94 4f 28 	jmp	0x509e	; 0x509e <__fp_powsodd>

00004e94 <__fp_split3>:
    4e94:	57 fd       	sbrc	r21, 7
    4e96:	90 58       	subi	r25, 0x80	; 128
    4e98:	44 0f       	add	r20, r20
    4e9a:	55 1f       	adc	r21, r21
    4e9c:	59 f0       	breq	.+22     	; 0x4eb4 <__fp_splitA+0x10>
    4e9e:	5f 3f       	cpi	r21, 0xFF	; 255
    4ea0:	71 f0       	breq	.+28     	; 0x4ebe <__fp_splitA+0x1a>
    4ea2:	47 95       	ror	r20

00004ea4 <__fp_splitA>:
    4ea4:	88 0f       	add	r24, r24
    4ea6:	97 fb       	bst	r25, 7
    4ea8:	99 1f       	adc	r25, r25
    4eaa:	61 f0       	breq	.+24     	; 0x4ec4 <__fp_splitA+0x20>
    4eac:	9f 3f       	cpi	r25, 0xFF	; 255
    4eae:	79 f0       	breq	.+30     	; 0x4ece <__fp_splitA+0x2a>
    4eb0:	87 95       	ror	r24
    4eb2:	08 95       	ret
    4eb4:	12 16       	cp	r1, r18
    4eb6:	13 06       	cpc	r1, r19
    4eb8:	14 06       	cpc	r1, r20
    4eba:	55 1f       	adc	r21, r21
    4ebc:	f2 cf       	rjmp	.-28     	; 0x4ea2 <__fp_split3+0xe>
    4ebe:	46 95       	lsr	r20
    4ec0:	f1 df       	rcall	.-30     	; 0x4ea4 <__fp_splitA>
    4ec2:	08 c0       	rjmp	.+16     	; 0x4ed4 <__fp_splitA+0x30>
    4ec4:	16 16       	cp	r1, r22
    4ec6:	17 06       	cpc	r1, r23
    4ec8:	18 06       	cpc	r1, r24
    4eca:	99 1f       	adc	r25, r25
    4ecc:	f1 cf       	rjmp	.-30     	; 0x4eb0 <__fp_splitA+0xc>
    4ece:	86 95       	lsr	r24
    4ed0:	71 05       	cpc	r23, r1
    4ed2:	61 05       	cpc	r22, r1
    4ed4:	08 94       	sec
    4ed6:	08 95       	ret

00004ed8 <__fp_zero>:
    4ed8:	e8 94       	clt

00004eda <__fp_szero>:
    4eda:	bb 27       	eor	r27, r27
    4edc:	66 27       	eor	r22, r22
    4ede:	77 27       	eor	r23, r23
    4ee0:	cb 01       	movw	r24, r22
    4ee2:	97 f9       	bld	r25, 7
    4ee4:	08 95       	ret

00004ee6 <inverse>:
    4ee6:	9b 01       	movw	r18, r22
    4ee8:	ac 01       	movw	r20, r24
    4eea:	60 e0       	ldi	r22, 0x00	; 0
    4eec:	70 e0       	ldi	r23, 0x00	; 0
    4eee:	80 e8       	ldi	r24, 0x80	; 128
    4ef0:	9f e3       	ldi	r25, 0x3F	; 63
    4ef2:	0c 94 d7 25 	jmp	0x4bae	; 0x4bae <__divsf3>

00004ef6 <__mulsf3>:
    4ef6:	0e 94 8e 27 	call	0x4f1c	; 0x4f1c <__mulsf3x>
    4efa:	0c 94 25 27 	jmp	0x4e4a	; 0x4e4a <__fp_round>
    4efe:	0e 94 ec 26 	call	0x4dd8	; 0x4dd8 <__fp_pscA>
    4f02:	38 f0       	brcs	.+14     	; 0x4f12 <__mulsf3+0x1c>
    4f04:	0e 94 f3 26 	call	0x4de6	; 0x4de6 <__fp_pscB>
    4f08:	20 f0       	brcs	.+8      	; 0x4f12 <__mulsf3+0x1c>
    4f0a:	95 23       	and	r25, r21
    4f0c:	11 f0       	breq	.+4      	; 0x4f12 <__mulsf3+0x1c>
    4f0e:	0c 94 bc 26 	jmp	0x4d78	; 0x4d78 <__fp_inf>
    4f12:	0c 94 c2 26 	jmp	0x4d84	; 0x4d84 <__fp_nan>
    4f16:	11 24       	eor	r1, r1
    4f18:	0c 94 6d 27 	jmp	0x4eda	; 0x4eda <__fp_szero>

00004f1c <__mulsf3x>:
    4f1c:	0e 94 4a 27 	call	0x4e94	; 0x4e94 <__fp_split3>
    4f20:	70 f3       	brcs	.-36     	; 0x4efe <__mulsf3+0x8>

00004f22 <__mulsf3_pse>:
    4f22:	95 9f       	mul	r25, r21
    4f24:	c1 f3       	breq	.-16     	; 0x4f16 <__mulsf3+0x20>
    4f26:	95 0f       	add	r25, r21
    4f28:	50 e0       	ldi	r21, 0x00	; 0
    4f2a:	55 1f       	adc	r21, r21
    4f2c:	62 9f       	mul	r22, r18
    4f2e:	f0 01       	movw	r30, r0
    4f30:	72 9f       	mul	r23, r18
    4f32:	bb 27       	eor	r27, r27
    4f34:	f0 0d       	add	r31, r0
    4f36:	b1 1d       	adc	r27, r1
    4f38:	63 9f       	mul	r22, r19
    4f3a:	aa 27       	eor	r26, r26
    4f3c:	f0 0d       	add	r31, r0
    4f3e:	b1 1d       	adc	r27, r1
    4f40:	aa 1f       	adc	r26, r26
    4f42:	64 9f       	mul	r22, r20
    4f44:	66 27       	eor	r22, r22
    4f46:	b0 0d       	add	r27, r0
    4f48:	a1 1d       	adc	r26, r1
    4f4a:	66 1f       	adc	r22, r22
    4f4c:	82 9f       	mul	r24, r18
    4f4e:	22 27       	eor	r18, r18
    4f50:	b0 0d       	add	r27, r0
    4f52:	a1 1d       	adc	r26, r1
    4f54:	62 1f       	adc	r22, r18
    4f56:	73 9f       	mul	r23, r19
    4f58:	b0 0d       	add	r27, r0
    4f5a:	a1 1d       	adc	r26, r1
    4f5c:	62 1f       	adc	r22, r18
    4f5e:	83 9f       	mul	r24, r19
    4f60:	a0 0d       	add	r26, r0
    4f62:	61 1d       	adc	r22, r1
    4f64:	22 1f       	adc	r18, r18
    4f66:	74 9f       	mul	r23, r20
    4f68:	33 27       	eor	r19, r19
    4f6a:	a0 0d       	add	r26, r0
    4f6c:	61 1d       	adc	r22, r1
    4f6e:	23 1f       	adc	r18, r19
    4f70:	84 9f       	mul	r24, r20
    4f72:	60 0d       	add	r22, r0
    4f74:	21 1d       	adc	r18, r1
    4f76:	82 2f       	mov	r24, r18
    4f78:	76 2f       	mov	r23, r22
    4f7a:	6a 2f       	mov	r22, r26
    4f7c:	11 24       	eor	r1, r1
    4f7e:	9f 57       	subi	r25, 0x7F	; 127
    4f80:	50 40       	sbci	r21, 0x00	; 0
    4f82:	9a f0       	brmi	.+38     	; 0x4faa <__mulsf3_pse+0x88>
    4f84:	f1 f0       	breq	.+60     	; 0x4fc2 <__mulsf3_pse+0xa0>
    4f86:	88 23       	and	r24, r24
    4f88:	4a f0       	brmi	.+18     	; 0x4f9c <__mulsf3_pse+0x7a>
    4f8a:	ee 0f       	add	r30, r30
    4f8c:	ff 1f       	adc	r31, r31
    4f8e:	bb 1f       	adc	r27, r27
    4f90:	66 1f       	adc	r22, r22
    4f92:	77 1f       	adc	r23, r23
    4f94:	88 1f       	adc	r24, r24
    4f96:	91 50       	subi	r25, 0x01	; 1
    4f98:	50 40       	sbci	r21, 0x00	; 0
    4f9a:	a9 f7       	brne	.-22     	; 0x4f86 <__mulsf3_pse+0x64>
    4f9c:	9e 3f       	cpi	r25, 0xFE	; 254
    4f9e:	51 05       	cpc	r21, r1
    4fa0:	80 f0       	brcs	.+32     	; 0x4fc2 <__mulsf3_pse+0xa0>
    4fa2:	0c 94 bc 26 	jmp	0x4d78	; 0x4d78 <__fp_inf>
    4fa6:	0c 94 6d 27 	jmp	0x4eda	; 0x4eda <__fp_szero>
    4faa:	5f 3f       	cpi	r21, 0xFF	; 255
    4fac:	e4 f3       	brlt	.-8      	; 0x4fa6 <__mulsf3_pse+0x84>
    4fae:	98 3e       	cpi	r25, 0xE8	; 232
    4fb0:	d4 f3       	brlt	.-12     	; 0x4fa6 <__mulsf3_pse+0x84>
    4fb2:	86 95       	lsr	r24
    4fb4:	77 95       	ror	r23
    4fb6:	67 95       	ror	r22
    4fb8:	b7 95       	ror	r27
    4fba:	f7 95       	ror	r31
    4fbc:	e7 95       	ror	r30
    4fbe:	9f 5f       	subi	r25, 0xFF	; 255
    4fc0:	c1 f7       	brne	.-16     	; 0x4fb2 <__mulsf3_pse+0x90>
    4fc2:	fe 2b       	or	r31, r30
    4fc4:	88 0f       	add	r24, r24
    4fc6:	91 1d       	adc	r25, r1
    4fc8:	96 95       	lsr	r25
    4fca:	87 95       	ror	r24
    4fcc:	97 f9       	bld	r25, 7
    4fce:	08 95       	ret

00004fd0 <sin>:
    4fd0:	9f 93       	push	r25
    4fd2:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <__fp_rempio2>
    4fd6:	0f 90       	pop	r0
    4fd8:	07 fc       	sbrc	r0, 7
    4fda:	ee 5f       	subi	r30, 0xFE	; 254
    4fdc:	0c 94 36 27 	jmp	0x4e6c	; 0x4e6c <__fp_sinus>
    4fe0:	19 f4       	brne	.+6      	; 0x4fe8 <sin+0x18>
    4fe2:	16 f4       	brtc	.+4      	; 0x4fe8 <sin+0x18>
    4fe4:	0c 94 c2 26 	jmp	0x4d84	; 0x4d84 <__fp_nan>
    4fe8:	0c 94 3a 28 	jmp	0x5074	; 0x5074 <__fp_mpack>

00004fec <sqrt>:
    4fec:	0e 94 52 27 	call	0x4ea4	; 0x4ea4 <__fp_splitA>
    4ff0:	b8 f3       	brcs	.-18     	; 0x4fe0 <sin+0x10>
    4ff2:	99 23       	and	r25, r25
    4ff4:	c9 f3       	breq	.-14     	; 0x4fe8 <sin+0x18>
    4ff6:	b6 f3       	brts	.-20     	; 0x4fe4 <sin+0x14>
    4ff8:	9f 57       	subi	r25, 0x7F	; 127
    4ffa:	55 0b       	sbc	r21, r21
    4ffc:	87 ff       	sbrs	r24, 7
    4ffe:	0e 94 48 28 	call	0x5090	; 0x5090 <__fp_norm2>
    5002:	00 24       	eor	r0, r0
    5004:	a0 e6       	ldi	r26, 0x60	; 96
    5006:	40 ea       	ldi	r20, 0xA0	; 160
    5008:	90 01       	movw	r18, r0
    500a:	80 58       	subi	r24, 0x80	; 128
    500c:	56 95       	lsr	r21
    500e:	97 95       	ror	r25
    5010:	28 f4       	brcc	.+10     	; 0x501c <sqrt+0x30>
    5012:	80 5c       	subi	r24, 0xC0	; 192
    5014:	66 0f       	add	r22, r22
    5016:	77 1f       	adc	r23, r23
    5018:	88 1f       	adc	r24, r24
    501a:	20 f0       	brcs	.+8      	; 0x5024 <sqrt+0x38>
    501c:	26 17       	cp	r18, r22
    501e:	37 07       	cpc	r19, r23
    5020:	48 07       	cpc	r20, r24
    5022:	30 f4       	brcc	.+12     	; 0x5030 <sqrt+0x44>
    5024:	62 1b       	sub	r22, r18
    5026:	73 0b       	sbc	r23, r19
    5028:	84 0b       	sbc	r24, r20
    502a:	20 29       	or	r18, r0
    502c:	31 29       	or	r19, r1
    502e:	4a 2b       	or	r20, r26
    5030:	a6 95       	lsr	r26
    5032:	17 94       	ror	r1
    5034:	07 94       	ror	r0
    5036:	20 25       	eor	r18, r0
    5038:	31 25       	eor	r19, r1
    503a:	4a 27       	eor	r20, r26
    503c:	58 f7       	brcc	.-42     	; 0x5014 <sqrt+0x28>
    503e:	66 0f       	add	r22, r22
    5040:	77 1f       	adc	r23, r23
    5042:	88 1f       	adc	r24, r24
    5044:	20 f0       	brcs	.+8      	; 0x504e <sqrt+0x62>
    5046:	26 17       	cp	r18, r22
    5048:	37 07       	cpc	r19, r23
    504a:	48 07       	cpc	r20, r24
    504c:	30 f4       	brcc	.+12     	; 0x505a <sqrt+0x6e>
    504e:	62 0b       	sbc	r22, r18
    5050:	73 0b       	sbc	r23, r19
    5052:	84 0b       	sbc	r24, r20
    5054:	20 0d       	add	r18, r0
    5056:	31 1d       	adc	r19, r1
    5058:	41 1d       	adc	r20, r1
    505a:	a0 95       	com	r26
    505c:	81 f7       	brne	.-32     	; 0x503e <sqrt+0x52>
    505e:	b9 01       	movw	r22, r18
    5060:	84 2f       	mov	r24, r20
    5062:	91 58       	subi	r25, 0x81	; 129
    5064:	88 0f       	add	r24, r24
    5066:	96 95       	lsr	r25
    5068:	87 95       	ror	r24
    506a:	08 95       	ret

0000506c <square>:
    506c:	9b 01       	movw	r18, r22
    506e:	ac 01       	movw	r20, r24
    5070:	0c 94 7b 27 	jmp	0x4ef6	; 0x4ef6 <__mulsf3>

00005074 <__fp_mpack>:
    5074:	9f 3f       	cpi	r25, 0xFF	; 255
    5076:	31 f0       	breq	.+12     	; 0x5084 <__fp_mpack_finite+0xc>

00005078 <__fp_mpack_finite>:
    5078:	91 50       	subi	r25, 0x01	; 1
    507a:	20 f4       	brcc	.+8      	; 0x5084 <__fp_mpack_finite+0xc>
    507c:	87 95       	ror	r24
    507e:	77 95       	ror	r23
    5080:	67 95       	ror	r22
    5082:	b7 95       	ror	r27
    5084:	88 0f       	add	r24, r24
    5086:	91 1d       	adc	r25, r1
    5088:	96 95       	lsr	r25
    508a:	87 95       	ror	r24
    508c:	97 f9       	bld	r25, 7
    508e:	08 95       	ret

00005090 <__fp_norm2>:
    5090:	91 50       	subi	r25, 0x01	; 1
    5092:	50 40       	sbci	r21, 0x00	; 0
    5094:	66 0f       	add	r22, r22
    5096:	77 1f       	adc	r23, r23
    5098:	88 1f       	adc	r24, r24
    509a:	d2 f7       	brpl	.-12     	; 0x5090 <__fp_norm2>
    509c:	08 95       	ret

0000509e <__fp_powsodd>:
    509e:	9f 93       	push	r25
    50a0:	8f 93       	push	r24
    50a2:	7f 93       	push	r23
    50a4:	6f 93       	push	r22
    50a6:	ff 93       	push	r31
    50a8:	ef 93       	push	r30
    50aa:	9b 01       	movw	r18, r22
    50ac:	ac 01       	movw	r20, r24
    50ae:	0e 94 7b 27 	call	0x4ef6	; 0x4ef6 <__mulsf3>
    50b2:	ef 91       	pop	r30
    50b4:	ff 91       	pop	r31
    50b6:	0e 94 c5 26 	call	0x4d8a	; 0x4d8a <__fp_powser>
    50ba:	2f 91       	pop	r18
    50bc:	3f 91       	pop	r19
    50be:	4f 91       	pop	r20
    50c0:	5f 91       	pop	r21
    50c2:	0c 94 7b 27 	jmp	0x4ef6	; 0x4ef6 <__mulsf3>

000050c6 <__divmodhi4>:
    50c6:	97 fb       	bst	r25, 7
    50c8:	07 2e       	mov	r0, r23
    50ca:	16 f4       	brtc	.+4      	; 0x50d0 <__divmodhi4+0xa>
    50cc:	00 94       	com	r0
    50ce:	07 d0       	rcall	.+14     	; 0x50de <__divmodhi4_neg1>
    50d0:	77 fd       	sbrc	r23, 7
    50d2:	09 d0       	rcall	.+18     	; 0x50e6 <__divmodhi4_neg2>
    50d4:	0e 94 b0 28 	call	0x5160	; 0x5160 <__udivmodhi4>
    50d8:	07 fc       	sbrc	r0, 7
    50da:	05 d0       	rcall	.+10     	; 0x50e6 <__divmodhi4_neg2>
    50dc:	3e f4       	brtc	.+14     	; 0x50ec <__divmodhi4_exit>

000050de <__divmodhi4_neg1>:
    50de:	90 95       	com	r25
    50e0:	81 95       	neg	r24
    50e2:	9f 4f       	sbci	r25, 0xFF	; 255
    50e4:	08 95       	ret

000050e6 <__divmodhi4_neg2>:
    50e6:	70 95       	com	r23
    50e8:	61 95       	neg	r22
    50ea:	7f 4f       	sbci	r23, 0xFF	; 255

000050ec <__divmodhi4_exit>:
    50ec:	08 95       	ret

000050ee <__udivmodsi4>:
    50ee:	a1 e2       	ldi	r26, 0x21	; 33
    50f0:	1a 2e       	mov	r1, r26
    50f2:	aa 1b       	sub	r26, r26
    50f4:	bb 1b       	sub	r27, r27
    50f6:	fd 01       	movw	r30, r26
    50f8:	0d c0       	rjmp	.+26     	; 0x5114 <__udivmodsi4_ep>

000050fa <__udivmodsi4_loop>:
    50fa:	aa 1f       	adc	r26, r26
    50fc:	bb 1f       	adc	r27, r27
    50fe:	ee 1f       	adc	r30, r30
    5100:	ff 1f       	adc	r31, r31
    5102:	a2 17       	cp	r26, r18
    5104:	b3 07       	cpc	r27, r19
    5106:	e4 07       	cpc	r30, r20
    5108:	f5 07       	cpc	r31, r21
    510a:	20 f0       	brcs	.+8      	; 0x5114 <__udivmodsi4_ep>
    510c:	a2 1b       	sub	r26, r18
    510e:	b3 0b       	sbc	r27, r19
    5110:	e4 0b       	sbc	r30, r20
    5112:	f5 0b       	sbc	r31, r21

00005114 <__udivmodsi4_ep>:
    5114:	66 1f       	adc	r22, r22
    5116:	77 1f       	adc	r23, r23
    5118:	88 1f       	adc	r24, r24
    511a:	99 1f       	adc	r25, r25
    511c:	1a 94       	dec	r1
    511e:	69 f7       	brne	.-38     	; 0x50fa <__udivmodsi4_loop>
    5120:	60 95       	com	r22
    5122:	70 95       	com	r23
    5124:	80 95       	com	r24
    5126:	90 95       	com	r25
    5128:	9b 01       	movw	r18, r22
    512a:	ac 01       	movw	r20, r24
    512c:	bd 01       	movw	r22, r26
    512e:	cf 01       	movw	r24, r30
    5130:	08 95       	ret

00005132 <__tablejump2__>:
    5132:	ee 0f       	add	r30, r30
    5134:	ff 1f       	adc	r31, r31
    5136:	88 1f       	adc	r24, r24
    5138:	8b bf       	out	0x3b, r24	; 59
    513a:	07 90       	elpm	r0, Z+
    513c:	f6 91       	elpm	r31, Z
    513e:	e0 2d       	mov	r30, r0
    5140:	19 94       	eijmp

00005142 <__umulhisi3>:
    5142:	a2 9f       	mul	r26, r18
    5144:	b0 01       	movw	r22, r0
    5146:	b3 9f       	mul	r27, r19
    5148:	c0 01       	movw	r24, r0
    514a:	a3 9f       	mul	r26, r19
    514c:	70 0d       	add	r23, r0
    514e:	81 1d       	adc	r24, r1
    5150:	11 24       	eor	r1, r1
    5152:	91 1d       	adc	r25, r1
    5154:	b2 9f       	mul	r27, r18
    5156:	70 0d       	add	r23, r0
    5158:	81 1d       	adc	r24, r1
    515a:	11 24       	eor	r1, r1
    515c:	91 1d       	adc	r25, r1
    515e:	08 95       	ret

00005160 <__udivmodhi4>:
    5160:	aa 1b       	sub	r26, r26
    5162:	bb 1b       	sub	r27, r27
    5164:	51 e1       	ldi	r21, 0x11	; 17
    5166:	07 c0       	rjmp	.+14     	; 0x5176 <__udivmodhi4_ep>

00005168 <__udivmodhi4_loop>:
    5168:	aa 1f       	adc	r26, r26
    516a:	bb 1f       	adc	r27, r27
    516c:	a6 17       	cp	r26, r22
    516e:	b7 07       	cpc	r27, r23
    5170:	10 f0       	brcs	.+4      	; 0x5176 <__udivmodhi4_ep>
    5172:	a6 1b       	sub	r26, r22
    5174:	b7 0b       	sbc	r27, r23

00005176 <__udivmodhi4_ep>:
    5176:	88 1f       	adc	r24, r24
    5178:	99 1f       	adc	r25, r25
    517a:	5a 95       	dec	r21
    517c:	a9 f7       	brne	.-22     	; 0x5168 <__udivmodhi4_loop>
    517e:	80 95       	com	r24
    5180:	90 95       	com	r25
    5182:	bc 01       	movw	r22, r24
    5184:	cd 01       	movw	r24, r26
    5186:	08 95       	ret

00005188 <memcpy>:
    5188:	fb 01       	movw	r30, r22
    518a:	dc 01       	movw	r26, r24
    518c:	02 c0       	rjmp	.+4      	; 0x5192 <memcpy+0xa>
    518e:	01 90       	ld	r0, Z+
    5190:	0d 92       	st	X+, r0
    5192:	41 50       	subi	r20, 0x01	; 1
    5194:	50 40       	sbci	r21, 0x00	; 0
    5196:	d8 f7       	brcc	.-10     	; 0x518e <memcpy+0x6>
    5198:	08 95       	ret

0000519a <memset>:
    519a:	dc 01       	movw	r26, r24
    519c:	01 c0       	rjmp	.+2      	; 0x51a0 <memset+0x6>
    519e:	6d 93       	st	X+, r22
    51a0:	41 50       	subi	r20, 0x01	; 1
    51a2:	50 40       	sbci	r21, 0x00	; 0
    51a4:	e0 f7       	brcc	.-8      	; 0x519e <memset+0x4>
    51a6:	08 95       	ret

000051a8 <strncpy>:
    51a8:	fb 01       	movw	r30, r22
    51aa:	dc 01       	movw	r26, r24
    51ac:	41 50       	subi	r20, 0x01	; 1
    51ae:	50 40       	sbci	r21, 0x00	; 0
    51b0:	48 f0       	brcs	.+18     	; 0x51c4 <strncpy+0x1c>
    51b2:	01 90       	ld	r0, Z+
    51b4:	0d 92       	st	X+, r0
    51b6:	00 20       	and	r0, r0
    51b8:	c9 f7       	brne	.-14     	; 0x51ac <strncpy+0x4>
    51ba:	01 c0       	rjmp	.+2      	; 0x51be <strncpy+0x16>
    51bc:	1d 92       	st	X+, r1
    51be:	41 50       	subi	r20, 0x01	; 1
    51c0:	50 40       	sbci	r21, 0x00	; 0
    51c2:	e0 f7       	brcc	.-8      	; 0x51bc <strncpy+0x14>
    51c4:	08 95       	ret

000051c6 <__itoa_ncheck>:
    51c6:	bb 27       	eor	r27, r27
    51c8:	4a 30       	cpi	r20, 0x0A	; 10
    51ca:	31 f4       	brne	.+12     	; 0x51d8 <__itoa_ncheck+0x12>
    51cc:	99 23       	and	r25, r25
    51ce:	22 f4       	brpl	.+8      	; 0x51d8 <__itoa_ncheck+0x12>
    51d0:	bd e2       	ldi	r27, 0x2D	; 45
    51d2:	90 95       	com	r25
    51d4:	81 95       	neg	r24
    51d6:	9f 4f       	sbci	r25, 0xFF	; 255
    51d8:	0c 94 27 29 	jmp	0x524e	; 0x524e <__utoa_common>

000051dc <ultoa>:
    51dc:	25 32       	cpi	r18, 0x25	; 37
    51de:	31 05       	cpc	r19, r1
    51e0:	20 f4       	brcc	.+8      	; 0x51ea <ultoa+0xe>
    51e2:	22 30       	cpi	r18, 0x02	; 2
    51e4:	10 f0       	brcs	.+4      	; 0x51ea <ultoa+0xe>
    51e6:	0c 94 f9 28 	jmp	0x51f2	; 0x51f2 <__ultoa_ncheck>
    51ea:	fa 01       	movw	r30, r20
    51ec:	10 82       	st	Z, r1
    51ee:	ca 01       	movw	r24, r20
    51f0:	08 95       	ret

000051f2 <__ultoa_ncheck>:
    51f2:	bb 27       	eor	r27, r27

000051f4 <__ultoa_common>:
    51f4:	fa 01       	movw	r30, r20
    51f6:	a6 2f       	mov	r26, r22
    51f8:	62 17       	cp	r22, r18
    51fa:	71 05       	cpc	r23, r1
    51fc:	81 05       	cpc	r24, r1
    51fe:	91 05       	cpc	r25, r1
    5200:	33 0b       	sbc	r19, r19
    5202:	30 fb       	bst	r19, 0
    5204:	66 f0       	brts	.+24     	; 0x521e <__ultoa_common+0x2a>
    5206:	aa 27       	eor	r26, r26
    5208:	66 0f       	add	r22, r22
    520a:	77 1f       	adc	r23, r23
    520c:	88 1f       	adc	r24, r24
    520e:	99 1f       	adc	r25, r25
    5210:	aa 1f       	adc	r26, r26
    5212:	a2 17       	cp	r26, r18
    5214:	10 f0       	brcs	.+4      	; 0x521a <__ultoa_common+0x26>
    5216:	a2 1b       	sub	r26, r18
    5218:	63 95       	inc	r22
    521a:	38 50       	subi	r19, 0x08	; 8
    521c:	a9 f7       	brne	.-22     	; 0x5208 <__ultoa_common+0x14>
    521e:	a0 5d       	subi	r26, 0xD0	; 208
    5220:	aa 33       	cpi	r26, 0x3A	; 58
    5222:	08 f0       	brcs	.+2      	; 0x5226 <__ultoa_common+0x32>
    5224:	a9 5d       	subi	r26, 0xD9	; 217
    5226:	a1 93       	st	Z+, r26
    5228:	36 f7       	brtc	.-52     	; 0x51f6 <__ultoa_common+0x2>
    522a:	b1 11       	cpse	r27, r1
    522c:	b1 93       	st	Z+, r27
    522e:	10 82       	st	Z, r1
    5230:	ca 01       	movw	r24, r20
    5232:	0c 94 40 29 	jmp	0x5280	; 0x5280 <strrev>

00005236 <utoa>:
    5236:	45 32       	cpi	r20, 0x25	; 37
    5238:	51 05       	cpc	r21, r1
    523a:	20 f4       	brcc	.+8      	; 0x5244 <utoa+0xe>
    523c:	42 30       	cpi	r20, 0x02	; 2
    523e:	10 f0       	brcs	.+4      	; 0x5244 <utoa+0xe>
    5240:	0c 94 26 29 	jmp	0x524c	; 0x524c <__utoa_ncheck>
    5244:	fb 01       	movw	r30, r22
    5246:	10 82       	st	Z, r1
    5248:	cb 01       	movw	r24, r22
    524a:	08 95       	ret

0000524c <__utoa_ncheck>:
    524c:	bb 27       	eor	r27, r27

0000524e <__utoa_common>:
    524e:	fb 01       	movw	r30, r22
    5250:	55 27       	eor	r21, r21
    5252:	aa 27       	eor	r26, r26
    5254:	88 0f       	add	r24, r24
    5256:	99 1f       	adc	r25, r25
    5258:	aa 1f       	adc	r26, r26
    525a:	a4 17       	cp	r26, r20
    525c:	10 f0       	brcs	.+4      	; 0x5262 <__utoa_common+0x14>
    525e:	a4 1b       	sub	r26, r20
    5260:	83 95       	inc	r24
    5262:	50 51       	subi	r21, 0x10	; 16
    5264:	b9 f7       	brne	.-18     	; 0x5254 <__utoa_common+0x6>
    5266:	a0 5d       	subi	r26, 0xD0	; 208
    5268:	aa 33       	cpi	r26, 0x3A	; 58
    526a:	08 f0       	brcs	.+2      	; 0x526e <__utoa_common+0x20>
    526c:	a9 5d       	subi	r26, 0xD9	; 217
    526e:	a1 93       	st	Z+, r26
    5270:	00 97       	sbiw	r24, 0x00	; 0
    5272:	79 f7       	brne	.-34     	; 0x5252 <__utoa_common+0x4>
    5274:	b1 11       	cpse	r27, r1
    5276:	b1 93       	st	Z+, r27
    5278:	11 92       	st	Z+, r1
    527a:	cb 01       	movw	r24, r22
    527c:	0c 94 40 29 	jmp	0x5280	; 0x5280 <strrev>

00005280 <strrev>:
    5280:	dc 01       	movw	r26, r24
    5282:	fc 01       	movw	r30, r24
    5284:	67 2f       	mov	r22, r23
    5286:	71 91       	ld	r23, Z+
    5288:	77 23       	and	r23, r23
    528a:	e1 f7       	brne	.-8      	; 0x5284 <strrev+0x4>
    528c:	32 97       	sbiw	r30, 0x02	; 2
    528e:	04 c0       	rjmp	.+8      	; 0x5298 <strrev+0x18>
    5290:	7c 91       	ld	r23, X
    5292:	6d 93       	st	X+, r22
    5294:	70 83       	st	Z, r23
    5296:	62 91       	ld	r22, -Z
    5298:	ae 17       	cp	r26, r30
    529a:	bf 07       	cpc	r27, r31
    529c:	c8 f3       	brcs	.-14     	; 0x5290 <strrev+0x10>
    529e:	08 95       	ret

000052a0 <_exit>:
    52a0:	f8 94       	cli

000052a2 <__stop_program>:
    52a2:	ff cf       	rjmp	.-2      	; 0x52a2 <__stop_program>
