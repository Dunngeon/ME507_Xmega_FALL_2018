
FREERTOS_SHELL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000523c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000104  00802000  0000523c  000052d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00001112  00802104  00802104  000053d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000053d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005404  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000008a8  00000000  00000000  00005444  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000159fe  00000000  00000000  00005cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00006ce6  00000000  00000000  0001b6ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00007958  00000000  00000000  000223d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000020dc  00000000  00000000  00029d28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0003496d  00000000  00000000  0002be04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00008499  00000000  00000000  00060771  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000750  00000000  00000000  00068c0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00001872  00000000  00000000  0006935a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e2 01 	jmp	0x3c4	; 0x3c4 <__ctors_end>
       4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
       8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
       c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      10:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      14:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      18:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      1c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      20:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      24:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      28:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      2c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      30:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      34:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      38:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__vector_14>
      3c:	0c 94 55 09 	jmp	0x12aa	; 0x12aa <__vector_15>
      40:	0c 94 82 09 	jmp	0x1304	; 0x1304 <__vector_16>
      44:	0c 94 af 09 	jmp	0x135e	; 0x135e <__vector_17>
      48:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__vector_18>
      4c:	0c 94 09 0a 	jmp	0x1412	; 0x1412 <__vector_19>
      50:	0c 94 36 0a 	jmp	0x146c	; 0x146c <__vector_20>
      54:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <__vector_21>
      58:	0c 94 90 0a 	jmp	0x1520	; 0x1520 <__vector_22>
      5c:	0c 94 bd 0a 	jmp	0x157a	; 0x157a <__vector_23>
      60:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      64:	0c 94 e8 21 	jmp	0x43d0	; 0x43d0 <__vector_25>
      68:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      6c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      70:	0c 94 40 22 	jmp	0x4480	; 0x4480 <__vector_28>
      74:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      78:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      7c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      80:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      84:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      88:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      8c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      90:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      94:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      98:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      9c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      a0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      a4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      a8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      ac:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      b0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      b4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      b8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      bc:	0c 94 ac 0c 	jmp	0x1958	; 0x1958 <__vector_47>
      c0:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__vector_48>
      c4:	0c 94 06 0d 	jmp	0x1a0c	; 0x1a0c <__vector_49>
      c8:	0c 94 33 0d 	jmp	0x1a66	; 0x1a66 <__vector_50>
      cc:	0c 94 60 0d 	jmp	0x1ac0	; 0x1ac0 <__vector_51>
      d0:	0c 94 8d 0d 	jmp	0x1b1a	; 0x1b1a <__vector_52>
      d4:	0c 94 ba 0d 	jmp	0x1b74	; 0x1b74 <__vector_53>
      d8:	0c 94 e7 0d 	jmp	0x1bce	; 0x1bce <__vector_54>
      dc:	0c 94 47 14 	jmp	0x288e	; 0x288e <__vector_55>
      e0:	0c 94 14 0e 	jmp	0x1c28	; 0x1c28 <__vector_56>
      e4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      e8:	0c 94 48 23 	jmp	0x4690	; 0x4690 <__vector_58>
      ec:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      f0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      f4:	0c 94 a0 23 	jmp	0x4740	; 0x4740 <__vector_61>
      f8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
      fc:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     100:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     104:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     108:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     10c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     110:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     114:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     118:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     11c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     120:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     124:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     128:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     12c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     130:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     134:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__vector_77>
     138:	0c 94 17 0b 	jmp	0x162e	; 0x162e <__vector_78>
     13c:	0c 94 44 0b 	jmp	0x1688	; 0x1688 <__vector_79>
     140:	0c 94 71 0b 	jmp	0x16e2	; 0x16e2 <__vector_80>
     144:	0c 94 9e 0b 	jmp	0x173c	; 0x173c <__vector_81>
     148:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__vector_82>
     14c:	0c 94 f8 0b 	jmp	0x17f0	; 0x17f0 <__vector_83>
     150:	0c 94 25 0c 	jmp	0x184a	; 0x184a <__vector_84>
     154:	0c 94 52 0c 	jmp	0x18a4	; 0x18a4 <__vector_85>
     158:	0c 94 7f 0c 	jmp	0x18fe	; 0x18fe <__vector_86>
     15c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     160:	0c 94 98 22 	jmp	0x4530	; 0x4530 <__vector_88>
     164:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     168:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     16c:	0c 94 f0 22 	jmp	0x45e0	; 0x45e0 <__vector_91>
     170:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     174:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     178:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     17c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     180:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     184:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     188:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     18c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     190:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     194:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     198:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     19c:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1a0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1a4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1a8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1ac:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1b0:	0c 94 41 0e 	jmp	0x1c82	; 0x1c82 <__vector_108>
     1b4:	0c 94 6e 0e 	jmp	0x1cdc	; 0x1cdc <__vector_109>
     1b8:	0c 94 9b 0e 	jmp	0x1d36	; 0x1d36 <__vector_110>
     1bc:	0c 94 c8 0e 	jmp	0x1d90	; 0x1d90 <__vector_111>
     1c0:	0c 94 f5 0e 	jmp	0x1dea	; 0x1dea <__vector_112>
     1c4:	0c 94 22 0f 	jmp	0x1e44	; 0x1e44 <__vector_113>
     1c8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1cc:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1d0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1d4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1d8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1dc:	0c 94 f8 23 	jmp	0x47f0	; 0x47f0 <__vector_119>
     1e0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1e4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1e8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1ec:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1f0:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1f4:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1f8:	0c 94 13 02 	jmp	0x426	; 0x426 <__bad_interrupt>
     1fc:	4d 10       	cpse	r4, r13
     1fe:	60 10       	cpse	r6, r0
     200:	73 10       	cpse	r7, r3
     202:	86 10       	cpse	r8, r6
     204:	99 10       	cpse	r9, r9
     206:	ac 10       	cpse	r10, r12
     208:	bf 10       	cpse	r11, r15
     20a:	89 1f       	adc	r24, r25
     20c:	8c 1f       	adc	r24, r28
     20e:	8f 1f       	adc	r24, r31
     210:	92 1f       	adc	r25, r18
     212:	95 1f       	adc	r25, r21
     214:	98 1f       	adc	r25, r24
     216:	9a 1f       	adc	r25, r26
     218:	ab 1f       	adc	r26, r27
     21a:	b3 1f       	adc	r27, r19
     21c:	bd 1f       	adc	r27, r29
     21e:	bb 1f       	adc	r27, r27
     220:	08 4a       	sbci	r16, 0xA8	; 168
     222:	d7 3b       	cpi	r29, 0xB7	; 183
     224:	3b ce       	rjmp	.-906    	; 0xfffffe9c <__eeprom_end+0xff7efe9c>
     226:	01 6e       	ori	r16, 0xE1	; 225
     228:	84 bc       	out	0x24, r8	; 36
     22a:	bf fd       	.word	0xfdbf	; ????
     22c:	c1 2f       	mov	r28, r17
     22e:	3d 6c       	ori	r19, 0xCD	; 205
     230:	74 31       	cpi	r23, 0x14	; 20
     232:	9a bd       	out	0x2a, r25	; 42
     234:	56 83       	std	Z+6, r21	; 0x06
     236:	3d da       	rcall	.-2950   	; 0xfffff6b2 <__eeprom_end+0xff7ef6b2>
     238:	3d 00       	.word	0x003d	; ????
     23a:	c7 7f       	andi	r28, 0xF7	; 247
     23c:	11 be       	out	0x31, r1	; 49
     23e:	d9 e4       	ldi	r29, 0x49	; 73
     240:	bb 4c       	sbci	r27, 0xCB	; 203
     242:	3e 91       	ld	r19, -X
     244:	6b aa       	std	Y+51, r6	; 0x33
     246:	aa be       	out	0x3a, r10	; 58
     248:	00 00       	nop
     24a:	00 80       	ld	r0, Z
     24c:	3f 05       	cpc	r19, r15
     24e:	a8 4c       	sbci	r26, 0xC8	; 200
     250:	cd b2       	in	r12, 0x1d	; 29
     252:	d4 4e       	sbci	r29, 0xE4	; 228
     254:	b9 38       	cpi	r27, 0x89	; 137
     256:	36 a9       	ldd	r19, Z+54	; 0x36
     258:	02 0c       	add	r0, r2
     25a:	50 b9       	out	0x00, r21	; 0
     25c:	91 86       	std	Z+9, r9	; 0x09
     25e:	88 08       	sbc	r8, r8
     260:	3c a6       	std	Y+44, r3	; 0x2c
     262:	aa aa       	std	Y+50, r10	; 0x32
     264:	2a be       	out	0x3a, r2	; 58
     266:	00 00       	nop
     268:	00 80       	ld	r0, Z
     26a:	3f 00       	.word	0x003f	; ????

0000026c <__trampolines_start>:
     26c:	0c 94 d3 16 	jmp	0x2da6	; 0x2da6 <prvIdleTask>
     270:	0c 94 98 1f 	jmp	0x3f30	; 0x3f30 <_ZN8emstreamlsE15ser_manipulator+0x3c>
     274:	0c 94 28 1e 	jmp	0x3c50	; 0x3c50 <_ZN14frt_text_queue7putcharEc>
     278:	0c 94 df 01 	jmp	0x3be	; 0x3be <_call_static_run_method>
     27c:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <_ZN10task_motor3runEv>
     280:	0c 94 6f 1d 	jmp	0x3ade	; 0x3ade <_ZN8frt_task12print_statusER8emstream>
     284:	0c 94 8f 1f 	jmp	0x3f1e	; 0x3f1e <_ZN8emstreamlsE15ser_manipulator+0x2a>
     288:	0c 94 1d 1e 	jmp	0x3c3a	; 0x3c3a <_ZN14frt_text_queue14check_for_charEv>
     28c:	0c 94 95 1f 	jmp	0x3f2a	; 0x3f2a <_ZN8emstreamlsE15ser_manipulator+0x36>
     290:	0c 94 ab 1f 	jmp	0x3f56	; 0x3f56 <_ZN8emstreamlsE15ser_manipulator+0x62>
     294:	0c 94 e0 20 	jmp	0x41c0	; 0x41c0 <_ZN5rs2327putcharEc>
     298:	0c 94 bb 1f 	jmp	0x3f76	; 0x3f76 <_ZN8emstreamlsE15ser_manipulator+0x82>
     29c:	0c 94 2c 1f 	jmp	0x3e58	; 0x3e58 <_ZN8emstream13ready_to_sendEv>
     2a0:	0c 94 3d 21 	jmp	0x427a	; 0x427a <_ZN5rs23212clear_screenEv>
     2a4:	0c 94 ff 1d 	jmp	0x3bfe	; 0x3bfe <_ZN14frt_text_queue7getcharEv>
     2a8:	0c 94 bd 1f 	jmp	0x3f7a	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
     2ac:	0c 94 99 10 	jmp	0x2132	; 0x2132 <pwm_init+0xbe>
     2b0:	0c 94 31 1f 	jmp	0x3e62	; 0x3e62 <_ZN8emstream14check_for_charEv>
     2b4:	0c 94 89 1f 	jmp	0x3f12	; 0x3f12 <_ZN8emstreamlsE15ser_manipulator+0x1e>
     2b8:	0c 94 7b 1e 	jmp	0x3cf6	; 0x3cf6 <__cxa_pure_virtual>
     2bc:	0c 94 33 1f 	jmp	0x3e66	; 0x3e66 <_ZN8emstream12transmit_nowEv>
     2c0:	0c 94 92 1f 	jmp	0x3f24	; 0x3f24 <_ZN8emstreamlsE15ser_manipulator+0x30>
     2c4:	0c 94 2e 1f 	jmp	0x3e5c	; 0x3e5c <_ZN8emstream7getcharEv>
     2c8:	0c 94 ae 24 	jmp	0x495c	; 0x495c <_GLOBAL__sub_I_print_ser_queue>
     2cc:	0c 94 86 10 	jmp	0x210c	; 0x210c <pwm_init+0x98>
     2d0:	0c 94 60 10 	jmp	0x20c0	; 0x20c0 <pwm_init+0x4c>
     2d4:	0c 94 04 21 	jmp	0x4208	; 0x4208 <_ZN5rs2327getcharEv>
     2d8:	0c 94 4d 10 	jmp	0x209a	; 0x209a <pwm_init+0x26>
     2dc:	0c 94 8c 1f 	jmp	0x3f18	; 0x3f18 <_ZN8emstreamlsE15ser_manipulator+0x24>
     2e0:	0c 94 2a 21 	jmp	0x4254	; 0x4254 <_ZN5rs23214check_for_charEv>
     2e4:	0c 94 73 10 	jmp	0x20e6	; 0x20e6 <pwm_init+0x72>
     2e8:	0c 94 ac 10 	jmp	0x2158	; 0x2158 <pwm_init+0xe4>
     2ec:	0c 94 b3 1f 	jmp	0x3f66	; 0x3f66 <_ZN8emstreamlsE15ser_manipulator+0x72>
     2f0:	0c 94 9a 1f 	jmp	0x3f34	; 0x3f34 <_ZN8emstreamlsE15ser_manipulator+0x40>
     2f4:	0c 94 bf 10 	jmp	0x217e	; 0x217e <pwm_init+0x10a>
     2f8:	0c 94 d7 06 	jmp	0xdae	; 0xdae <_ZN16task_Robot_State3runEv>
     2fc:	0c 94 34 1f 	jmp	0x3e68	; 0x3e68 <_ZN8emstream12clear_screenEv>

00000300 <__trampolines_end>:
     300:	52 65       	ori	r21, 0x52	; 82
     302:	73 65       	ori	r23, 0x53	; 83
     304:	74 74       	andi	r23, 0x44	; 68
     306:	69 6e       	ori	r22, 0xE9	; 233
     308:	67 00       	.word	0x0067	; ????

0000030a <_ZZN8frt_task15emergency_resetEvE3__c>:
     30a:	45 52 52 4f 52 20 69 6e 20 74 61 73 6b 20 00        ERROR in task .

00000319 <_ZZN8frt_taskC4EPKchjP8emstreamE3__c_2>:
     319:	45 52 52 4f 52 20 63 72 65 61 74 69 6e 67 20 74     ERROR creating t
     329:	61 73 6b 20 00                                      ask .

0000032e <_ZZN8frt_taskC4EPKchjP8emstreamE3__c_1>:
     32e:	2c 20 73 74 61 63 6b 20 61 74 20 30 78 00           , stack at 0x.

0000033c <_ZZN8frt_taskC4EPKchjP8emstreamE3__c_0>:
     33c:	20 63 72 65 61 74 65 64 00                           created.

00000345 <_ZZN8frt_taskC4EPKchjP8emstreamE3__c>:
     345:	54 61 73 6b 20 00                                   Task .

0000034b <_ZZ15print_task_listP8emstreamE3__c_9>:
     34b:	09 09 00                                            ...

0000034e <_ZZ15print_task_listP8emstreamE3__c_8>:
     34e:	2f 00                                               /.

00000350 <_ZZ15print_task_listP8emstreamE3__c_7>:
     350:	49 44 4c 45 09 09 30 09 2d 09 00                    IDLE..0.-..

0000035b <_ZZ15print_task_listP8emstreamE3__c_6>:
     35b:	09 2d 2d 2d 2d 00                                   .----.

00000361 <_ZZ15print_task_listP8emstreamE3__c_5>:
     361:	09 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 00                 .----------.

0000036d <_ZZ15print_task_listP8emstreamE3__c_4>:
     36d:	2d 2d 2d 2d 09 09 2d 2d 2d 2d 09 2d 2d 2d 2d 2d     ----..----.-----
	...

0000037e <_ZZ15print_task_listP8emstreamE3__c_3>:
     37e:	09 52 75 6e 73 00                                   .Runs.

00000384 <_ZZ15print_task_listP8emstreamE3__c_2>:
     384:	09 46 72 65 65 2f 54 6f 74 61 6c 00                 .Free/Total.

00000390 <_ZZ15print_task_listP8emstreamE3__c_1>:
     390:	4e 61 6d 65 09 09 50 72 69 2e 09 53 74 61 74 65     Name..Pri..State
	...

000003a1 <_ZZ15print_task_listP8emstreamE3__c_0>:
     3a1:	09 53 74 61 63 6b 00                                .Stack.

000003a8 <_ZZ15print_task_listP8emstreamE3__c>:
     3a8:	54 61 73 6b 09 09 20 20 09 20 00                    Task..  . .

000003b3 <_ZZN8frt_task12print_statusER8emstreamE3__c_3>:
     3b3:	09 00                                               ..

000003b5 <_ZZN8frt_task12print_statusER8emstreamE3__c_2>:
     3b5:	09 00                                               ..

000003b7 <_ZZN8frt_task12print_statusER8emstreamE3__c_1>:
     3b7:	2f 00                                               /.

000003b9 <_ZZN8frt_task12print_statusER8emstreamE3__c_0>:
     3b9:	09 00                                               ..

000003bb <_ZZN8frt_task12print_statusER8emstreamE3__c>:
     3bb:	09 00 00                                            ...

000003be <_call_static_run_method>:
     3be:	0e 94 95 1c 	call	0x392a	; 0x392a <_ZN8frt_task22_call_users_run_methodEPS_>

000003c2 <__ctors_start>:
     3c2:	ae 24       	eor	r10, r14

000003c4 <__ctors_end>:
     3c4:	11 24       	eor	r1, r1
     3c6:	1f be       	out	0x3f, r1	; 63
     3c8:	cf ef       	ldi	r28, 0xFF	; 255
     3ca:	cd bf       	out	0x3d, r28	; 61
     3cc:	df e3       	ldi	r29, 0x3F	; 63
     3ce:	de bf       	out	0x3e, r29	; 62
     3d0:	00 e0       	ldi	r16, 0x00	; 0
     3d2:	0c bf       	out	0x3c, r16	; 60

000003d4 <__do_copy_data>:
     3d4:	11 e2       	ldi	r17, 0x21	; 33
     3d6:	a0 e0       	ldi	r26, 0x00	; 0
     3d8:	b0 e2       	ldi	r27, 0x20	; 32
     3da:	ec e3       	ldi	r30, 0x3C	; 60
     3dc:	f2 e5       	ldi	r31, 0x52	; 82
     3de:	00 e0       	ldi	r16, 0x00	; 0
     3e0:	0b bf       	out	0x3b, r16	; 59
     3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <__do_copy_data+0x14>
     3e4:	07 90       	elpm	r0, Z+
     3e6:	0d 92       	st	X+, r0
     3e8:	a4 30       	cpi	r26, 0x04	; 4
     3ea:	b1 07       	cpc	r27, r17
     3ec:	d9 f7       	brne	.-10     	; 0x3e4 <__do_copy_data+0x10>

000003ee <__do_clear_bss>:
     3ee:	22 e3       	ldi	r18, 0x32	; 50
     3f0:	a4 e0       	ldi	r26, 0x04	; 4
     3f2:	b1 e2       	ldi	r27, 0x21	; 33
     3f4:	01 c0       	rjmp	.+2      	; 0x3f8 <.do_clear_bss_start>

000003f6 <.do_clear_bss_loop>:
     3f6:	1d 92       	st	X+, r1

000003f8 <.do_clear_bss_start>:
     3f8:	a6 31       	cpi	r26, 0x16	; 22
     3fa:	b2 07       	cpc	r27, r18
     3fc:	e1 f7       	brne	.-8      	; 0x3f6 <.do_clear_bss_loop>

000003fe <__do_global_ctors>:
     3fe:	11 e0       	ldi	r17, 0x01	; 1
     400:	c2 ee       	ldi	r28, 0xE2	; 226
     402:	d1 e0       	ldi	r29, 0x01	; 1
     404:	00 e0       	ldi	r16, 0x00	; 0
     406:	06 c0       	rjmp	.+12     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     408:	21 97       	sbiw	r28, 0x01	; 1
     40a:	01 09       	sbc	r16, r1
     40c:	80 2f       	mov	r24, r16
     40e:	fe 01       	movw	r30, r28
     410:	0e 94 65 28 	call	0x50ca	; 0x50ca <__tablejump2__>
     414:	c1 3e       	cpi	r28, 0xE1	; 225
     416:	d1 07       	cpc	r29, r17
     418:	80 e0       	ldi	r24, 0x00	; 0
     41a:	08 07       	cpc	r16, r24
     41c:	a9 f7       	brne	.-22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     41e:	0e 94 50 24 	call	0x48a0	; 0x48a0 <main>
     422:	0c 94 1c 29 	jmp	0x5238	; 0x5238 <_exit>

00000426 <__bad_interrupt>:
     426:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000042a <_ZN11motorDriver7set_k_lEiii>:
 */

void motorDriver::zero_esum_a(void)
 {
	 // Resetting esum_a
	 esum_a = 0;
     42a:	fc 01       	movw	r30, r24
     42c:	61 8b       	std	Z+17, r22	; 0x11
     42e:	72 8b       	std	Z+18, r23	; 0x12
     430:	43 8b       	std	Z+19, r20	; 0x13
     432:	54 8b       	std	Z+20, r21	; 0x14
     434:	25 8b       	std	Z+21, r18	; 0x15
     436:	36 8b       	std	Z+22, r19	; 0x16
     438:	08 95       	ret

0000043a <_ZN11motorDriver7set_k_aEiii>:
     43a:	fc 01       	movw	r30, r24
     43c:	67 8b       	std	Z+23, r22	; 0x17
     43e:	70 8f       	std	Z+24, r23	; 0x18
     440:	41 8f       	std	Z+25, r20	; 0x19
     442:	52 8f       	std	Z+26, r21	; 0x1a
     444:	23 8f       	std	Z+27, r18	; 0x1b
     446:	34 8f       	std	Z+28, r19	; 0x1c
     448:	08 95       	ret

0000044a <_ZN11motorDriver15set_pwm_scalingEi>:
     44a:	fc 01       	movw	r30, r24
     44c:	65 8f       	std	Z+29, r22	; 0x1d
     44e:	76 8f       	std	Z+30, r23	; 0x1e
     450:	08 95       	ret

00000452 <_ZN11motorDriver11set_pwm_limEi>:
     452:	65 36       	cpi	r22, 0x65	; 101
     454:	71 05       	cpc	r23, r1
     456:	34 f0       	brlt	.+12     	; 0x464 <_ZN11motorDriver11set_pwm_limEi+0x12>
     458:	24 e6       	ldi	r18, 0x64	; 100
     45a:	30 e0       	ldi	r19, 0x00	; 0
     45c:	fc 01       	movw	r30, r24
     45e:	25 ab       	std	Z+53, r18	; 0x35
     460:	36 ab       	std	Z+54, r19	; 0x36
     462:	08 95       	ret
     464:	fc 01       	movw	r30, r24
     466:	65 ab       	std	Z+53, r22	; 0x35
     468:	76 ab       	std	Z+54, r23	; 0x36
     46a:	08 95       	ret

0000046c <_ZN11motorDriver18set_pwm_lim_linearEi>:
     46c:	fc 01       	movw	r30, r24
     46e:	25 a9       	ldd	r18, Z+53	; 0x35
     470:	36 a9       	ldd	r19, Z+54	; 0x36
     472:	26 17       	cp	r18, r22
     474:	37 07       	cpc	r19, r23
     476:	1c f4       	brge	.+6      	; 0x47e <_ZN11motorDriver18set_pwm_lim_linearEi+0x12>
     478:	27 ab       	std	Z+55, r18	; 0x37
     47a:	30 af       	std	Z+56, r19	; 0x38
     47c:	08 95       	ret
     47e:	fc 01       	movw	r30, r24
     480:	67 ab       	std	Z+55, r22	; 0x37
     482:	70 af       	std	Z+56, r23	; 0x38
     484:	08 95       	ret

00000486 <_ZN11motorDriverC1EcP8emstream>:
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
     48a:	ec 01       	movw	r28, r24
     48c:	4e 87       	std	Y+14, r20	; 0x0e
     48e:	5f 87       	std	Y+15, r21	; 0x0f
     490:	68 8b       	std	Y+16, r22	; 0x10
     492:	61 33       	cpi	r22, 0x31	; 49
     494:	99 f4       	brne	.+38     	; 0x4bc <_ZN11motorDriverC1EcP8emstream+0x36>
     496:	24 ef       	ldi	r18, 0xF4	; 244
     498:	31 e0       	ldi	r19, 0x01	; 1
     49a:	41 e0       	ldi	r20, 0x01	; 1
     49c:	60 e0       	ldi	r22, 0x00	; 0
     49e:	0e 94 3a 10 	call	0x2074	; 0x2074 <pwm_init>
     4a2:	24 ef       	ldi	r18, 0xF4	; 244
     4a4:	31 e0       	ldi	r19, 0x01	; 1
     4a6:	42 e0       	ldi	r20, 0x02	; 2
     4a8:	60 e0       	ldi	r22, 0x00	; 0
     4aa:	ce 01       	movw	r24, r28
     4ac:	07 96       	adiw	r24, 0x07	; 7
     4ae:	0e 94 3a 10 	call	0x2074	; 0x2074 <pwm_init>
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	8f a3       	std	Y+39, r24	; 0x27
     4b8:	98 a7       	std	Y+40, r25	; 0x28
     4ba:	14 c0       	rjmp	.+40     	; 0x4e4 <_ZN11motorDriverC1EcP8emstream+0x5e>
     4bc:	62 33       	cpi	r22, 0x32	; 50
     4be:	91 f4       	brne	.+36     	; 0x4e4 <_ZN11motorDriverC1EcP8emstream+0x5e>
     4c0:	24 ef       	ldi	r18, 0xF4	; 244
     4c2:	31 e0       	ldi	r19, 0x01	; 1
     4c4:	43 e0       	ldi	r20, 0x03	; 3
     4c6:	60 e0       	ldi	r22, 0x00	; 0
     4c8:	0e 94 3a 10 	call	0x2074	; 0x2074 <pwm_init>
     4cc:	24 ef       	ldi	r18, 0xF4	; 244
     4ce:	31 e0       	ldi	r19, 0x01	; 1
     4d0:	44 e0       	ldi	r20, 0x04	; 4
     4d2:	60 e0       	ldi	r22, 0x00	; 0
     4d4:	ce 01       	movw	r24, r28
     4d6:	07 96       	adiw	r24, 0x07	; 7
     4d8:	0e 94 3a 10 	call	0x2074	; 0x2074 <pwm_init>
     4dc:	8f ef       	ldi	r24, 0xFF	; 255
     4de:	9f ef       	ldi	r25, 0xFF	; 255
     4e0:	8f a3       	std	Y+39, r24	; 0x27
     4e2:	98 a7       	std	Y+40, r25	; 0x28
     4e4:	1b a6       	std	Y+43, r1	; 0x2b
     4e6:	1c a6       	std	Y+44, r1	; 0x2c
     4e8:	19 aa       	std	Y+49, r1	; 0x31
     4ea:	1a aa       	std	Y+50, r1	; 0x32
     4ec:	19 8a       	std	Y+17, r1	; 0x11
     4ee:	1a 8a       	std	Y+18, r1	; 0x12
     4f0:	1b 8a       	std	Y+19, r1	; 0x13
     4f2:	1c 8a       	std	Y+20, r1	; 0x14
     4f4:	1d 8a       	std	Y+21, r1	; 0x15
     4f6:	1e 8a       	std	Y+22, r1	; 0x16
     4f8:	1f 8a       	std	Y+23, r1	; 0x17
     4fa:	18 8e       	std	Y+24, r1	; 0x18
     4fc:	19 8e       	std	Y+25, r1	; 0x19
     4fe:	1a 8e       	std	Y+26, r1	; 0x1a
     500:	1b 8e       	std	Y+27, r1	; 0x1b
     502:	1c 8e       	std	Y+28, r1	; 0x1c
     504:	1d aa       	std	Y+53, r1	; 0x35
     506:	1e aa       	std	Y+54, r1	; 0x36
     508:	60 e0       	ldi	r22, 0x00	; 0
     50a:	70 e0       	ldi	r23, 0x00	; 0
     50c:	ce 01       	movw	r24, r28
     50e:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN11motorDriver18set_pwm_lim_linearEi>
     512:	19 ae       	std	Y+57, r1	; 0x39
     514:	1a ae       	std	Y+58, r1	; 0x3a
     516:	1b ae       	std	Y+59, r1	; 0x3b
     518:	1c ae       	std	Y+60, r1	; 0x3c
     51a:	1f 8e       	std	Y+31, r1	; 0x1f
     51c:	18 a2       	std	Y+32, r1	; 0x20
     51e:	1d a2       	std	Y+37, r1	; 0x25
     520:	1e a2       	std	Y+38, r1	; 0x26
     522:	19 a2       	std	Y+33, r1	; 0x21
     524:	1a a2       	std	Y+34, r1	; 0x22
     526:	1b a2       	std	Y+35, r1	; 0x23
     528:	1c a2       	std	Y+36, r1	; 0x24
     52a:	81 e0       	ldi	r24, 0x01	; 1
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	8d 8f       	std	Y+29, r24	; 0x1d
     530:	9e 8f       	std	Y+30, r25	; 0x1e
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	08 95       	ret

00000538 <_ZN11motorDriver14set_esum_l_limEi>:
     538:	fc 01       	movw	r30, r24
     53a:	61 af       	std	Z+57, r22	; 0x39
     53c:	72 af       	std	Z+58, r23	; 0x3a
     53e:	08 95       	ret

00000540 <_ZN11motorDriver14set_esum_a_limEi>:
     540:	fc 01       	movw	r30, r24
     542:	63 af       	std	Z+59, r22	; 0x3b
     544:	74 af       	std	Z+60, r23	; 0x3c
     546:	08 95       	ret

00000548 <_ZN11motorDriver14set_setpoint_lEi>:
     548:	fc 01       	movw	r30, r24
     54a:	67 8f       	std	Z+31, r22	; 0x1f
     54c:	70 a3       	std	Z+32, r23	; 0x20
     54e:	08 95       	ret

00000550 <_ZN11motorDriver14set_setpoint_aEi>:
     550:	fc 01       	movw	r30, r24
     552:	65 a3       	std	Z+37, r22	; 0x25
     554:	76 a3       	std	Z+38, r23	; 0x26
     556:	08 95       	ret

00000558 <_ZN11motorDriver12set_positionEi>:
     558:	fc 01       	movw	r30, r24
     55a:	61 a3       	std	Z+33, r22	; 0x21
     55c:	72 a3       	std	Z+34, r23	; 0x22
     55e:	08 95       	ret

00000560 <_ZN11motorDriver9set_angleEi>:
     560:	fc 01       	movw	r30, r24
     562:	63 a3       	std	Z+35, r22	; 0x23
     564:	74 a3       	std	Z+36, r23	; 0x24
     566:	08 95       	ret

00000568 <_ZN11motorDriver3runEbbbb>:
 */



diagnostic motorDriver::run(bool en_p = 0, bool en_i = 0, bool en_d = 0, bool op_type = 0)
 {
     568:	5f 92       	push	r5
     56a:	6f 92       	push	r6
     56c:	7f 92       	push	r7
     56e:	8f 92       	push	r8
     570:	9f 92       	push	r9
     572:	af 92       	push	r10
     574:	bf 92       	push	r11
     576:	cf 92       	push	r12
     578:	df 92       	push	r13
     57a:	ef 92       	push	r14
     57c:	ff 92       	push	r15
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	cf 93       	push	r28
     584:	df 93       	push	r29
     586:	8c 01       	movw	r16, r24
     588:	eb 01       	movw	r28, r22
     58a:	5e 2c       	mov	r5, r14
	// Calculating error terms
   error_l = setpoint_l - position;
     58c:	6f 8d       	ldd	r22, Y+31	; 0x1f
     58e:	78 a1       	ldd	r23, Y+32	; 0x20
     590:	89 a1       	ldd	r24, Y+33	; 0x21
     592:	9a a1       	ldd	r25, Y+34	; 0x22
     594:	68 1b       	sub	r22, r24
     596:	79 0b       	sbc	r23, r25
     598:	69 a7       	std	Y+41, r22	; 0x29
     59a:	7a a7       	std	Y+42, r23	; 0x2a
   error_a = setpoint_a - angle;
     59c:	ed a1       	ldd	r30, Y+37	; 0x25
     59e:	fe a1       	ldd	r31, Y+38	; 0x26
     5a0:	8b a1       	ldd	r24, Y+35	; 0x23
     5a2:	9c a1       	ldd	r25, Y+36	; 0x24
     5a4:	e8 1b       	sub	r30, r24
     5a6:	f9 0b       	sbc	r31, r25
     5a8:	ef a7       	std	Y+47, r30	; 0x2f
     5aa:	f8 ab       	std	Y+48, r31	; 0x30
   esum_l += error_l;
     5ac:	8b a5       	ldd	r24, Y+43	; 0x2b
     5ae:	9c a5       	ldd	r25, Y+44	; 0x2c
     5b0:	86 0f       	add	r24, r22
     5b2:	97 1f       	adc	r25, r23
     5b4:	8b a7       	std	Y+43, r24	; 0x2b
     5b6:	9c a7       	std	Y+44, r25	; 0x2c
   if (esum_l > esum_l_lim) // Rounding esum_l to esum_l_lim on either end
     5b8:	a9 ad       	ldd	r26, Y+57	; 0x39
     5ba:	ba ad       	ldd	r27, Y+58	; 0x3a
     5bc:	a8 17       	cp	r26, r24
     5be:	b9 07       	cpc	r27, r25
     5c0:	1c f4       	brge	.+6      	; 0x5c8 <_ZN11motorDriver3runEbbbb+0x60>
   {
       esum_l = esum_l_lim;
     5c2:	ab a7       	std	Y+43, r26	; 0x2b
     5c4:	bc a7       	std	Y+44, r27	; 0x2c
     5c6:	08 c0       	rjmp	.+16     	; 0x5d8 <_ZN11motorDriver3runEbbbb+0x70>
   } else if (esum_l < -esum_l_lim)
     5c8:	b1 95       	neg	r27
     5ca:	a1 95       	neg	r26
     5cc:	b1 09       	sbc	r27, r1
     5ce:	8a 17       	cp	r24, r26
     5d0:	9b 07       	cpc	r25, r27
     5d2:	14 f4       	brge	.+4      	; 0x5d8 <_ZN11motorDriver3runEbbbb+0x70>
   {
       esum_l = -esum_l_lim;
     5d4:	ab a7       	std	Y+43, r26	; 0x2b
     5d6:	bc a7       	std	Y+44, r27	; 0x2c
   }
   esum_a += error_a;
     5d8:	89 a9       	ldd	r24, Y+49	; 0x31
     5da:	9a a9       	ldd	r25, Y+50	; 0x32
     5dc:	8e 0f       	add	r24, r30
     5de:	9f 1f       	adc	r25, r31
     5e0:	89 ab       	std	Y+49, r24	; 0x31
     5e2:	9a ab       	std	Y+50, r25	; 0x32
   if (esum_a > esum_a_lim) // Rounding esum_a to esum_a_lim on either end
     5e4:	ab ad       	ldd	r26, Y+59	; 0x3b
     5e6:	bc ad       	ldd	r27, Y+60	; 0x3c
     5e8:	a8 17       	cp	r26, r24
     5ea:	b9 07       	cpc	r27, r25
     5ec:	1c f4       	brge	.+6      	; 0x5f4 <_ZN11motorDriver3runEbbbb+0x8c>
   {
	   esum_a = esum_a_lim;
     5ee:	a9 ab       	std	Y+49, r26	; 0x31
     5f0:	ba ab       	std	Y+50, r27	; 0x32
     5f2:	08 c0       	rjmp	.+16     	; 0x604 <_ZN11motorDriver3runEbbbb+0x9c>
   } else if (esum_a < -esum_a_lim)
     5f4:	b1 95       	neg	r27
     5f6:	a1 95       	neg	r26
     5f8:	b1 09       	sbc	r27, r1
     5fa:	8a 17       	cp	r24, r26
     5fc:	9b 07       	cpc	r25, r27
     5fe:	14 f4       	brge	.+4      	; 0x604 <_ZN11motorDriver3runEbbbb+0x9c>
   {
	   esum_a = -esum_a_lim;
     600:	a9 ab       	std	Y+49, r26	; 0x31
     602:	ba ab       	std	Y+50, r27	; 0x32
   }
   eder_l = 0;  // Placeholder
     604:	1d a6       	std	Y+45, r1	; 0x2d
     606:	1e a6       	std	Y+46, r1	; 0x2e
   eder_a = 0;  // Placeholder
     608:	1b aa       	std	Y+51, r1	; 0x33
     60a:	1c aa       	std	Y+52, r1	; 0x34

   // Calculating linear signal components
   int16_t signal_l_p = kp_l*error_l;
   int16_t signal_l_i = ki_l*esum_l;
   int16_t signal_l_d = kd_l*eder_l;
   int16_t pwm_percent_linear = (((int16_t) en_p)*signal_l_p + ((int16_t) en_i)*signal_l_i + ((int16_t) en_d)*signal_l_d)/pwm_scale;
     60c:	c4 2e       	mov	r12, r20
     60e:	d1 2c       	mov	r13, r1
     610:	30 e0       	ldi	r19, 0x00	; 0
     612:	ad 8c       	ldd	r10, Y+29	; 0x1d
     614:	be 8c       	ldd	r11, Y+30	; 0x1e
     616:	ab 89       	ldd	r26, Y+19	; 0x13
     618:	bc 89       	ldd	r27, Y+20	; 0x14
     61a:	8b a5       	ldd	r24, Y+43	; 0x2b
     61c:	9c a5       	ldd	r25, Y+44	; 0x2c
     61e:	a8 9f       	mul	r26, r24
     620:	a0 01       	movw	r20, r0
     622:	a9 9f       	mul	r26, r25
     624:	50 0d       	add	r21, r0
     626:	b8 9f       	mul	r27, r24
     628:	50 0d       	add	r21, r0
     62a:	11 24       	eor	r1, r1
     62c:	42 9f       	mul	r20, r18
     62e:	c0 01       	movw	r24, r0
     630:	43 9f       	mul	r20, r19
     632:	90 0d       	add	r25, r0
     634:	52 9f       	mul	r21, r18
     636:	90 0d       	add	r25, r0
     638:	11 24       	eor	r1, r1
     63a:	a9 89       	ldd	r26, Y+17	; 0x11
     63c:	ba 89       	ldd	r27, Y+18	; 0x12
     63e:	6a 9f       	mul	r22, r26
     640:	a0 01       	movw	r20, r0
     642:	6b 9f       	mul	r22, r27
     644:	50 0d       	add	r21, r0
     646:	7a 9f       	mul	r23, r26
     648:	50 0d       	add	r21, r0
     64a:	11 24       	eor	r1, r1
     64c:	4c 9d       	mul	r20, r12
     64e:	b0 01       	movw	r22, r0
     650:	4d 9d       	mul	r20, r13
     652:	70 0d       	add	r23, r0
     654:	5c 9d       	mul	r21, r12
     656:	70 0d       	add	r23, r0
     658:	11 24       	eor	r1, r1
     65a:	86 0f       	add	r24, r22
     65c:	97 1f       	adc	r25, r23
     65e:	b5 01       	movw	r22, r10
     660:	0e 94 2f 28 	call	0x505e	; 0x505e <__divmodhi4>
   if (pwm_percent_linear > pwm_lim_linear)	// Saturating linear component of pwm_percent
     664:	ef a8       	ldd	r14, Y+55	; 0x37
     666:	f8 ac       	ldd	r15, Y+56	; 0x38
     668:	e6 16       	cp	r14, r22
     66a:	f7 06       	cpc	r15, r23
     66c:	54 f0       	brlt	.+20     	; 0x682 <_ZN11motorDriver3runEbbbb+0x11a>
   {
	   pwm_percent_linear = pwm_lim_linear;
   }
   else if (pwm_percent_linear < -pwm_lim_linear)
     66e:	88 27       	eor	r24, r24
     670:	99 27       	eor	r25, r25
     672:	8e 19       	sub	r24, r14
     674:	9f 09       	sbc	r25, r15
     676:	3b 01       	movw	r6, r22
     678:	68 17       	cp	r22, r24
     67a:	79 07       	cpc	r23, r25
     67c:	1c f4       	brge	.+6      	; 0x684 <_ZN11motorDriver3runEbbbb+0x11c>
     67e:	3c 01       	movw	r6, r24
     680:	01 c0       	rjmp	.+2      	; 0x684 <_ZN11motorDriver3runEbbbb+0x11c>
   int16_t signal_l_i = ki_l*esum_l;
   int16_t signal_l_d = kd_l*eder_l;
   int16_t pwm_percent_linear = (((int16_t) en_p)*signal_l_p + ((int16_t) en_i)*signal_l_i + ((int16_t) en_d)*signal_l_d)/pwm_scale;
   if (pwm_percent_linear > pwm_lim_linear)	// Saturating linear component of pwm_percent
   {
	   pwm_percent_linear = pwm_lim_linear;
     682:	37 01       	movw	r6, r14

   // Calculating angular signal components
   int16_t signal_a_p = kp_a*error_a;
   int16_t signal_a_i = ki_a*esum_a;
   int16_t signal_a_d = kd_a*eder_a;
   int16_t pwm_percent_angular = (((int16_t) en_p)*signal_a_p + ((int16_t) en_i)*signal_a_i + ((int16_t) en_d)*signal_a_d)*motor_dir/pwm_scale;	// This entire term needs to be either positive or negative depending on how we define the angle externally
     684:	8f a0       	ldd	r8, Y+39	; 0x27
     686:	98 a4       	ldd	r9, Y+40	; 0x28
     688:	69 8d       	ldd	r22, Y+25	; 0x19
     68a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     68c:	49 a9       	ldd	r20, Y+49	; 0x31
     68e:	5a a9       	ldd	r21, Y+50	; 0x32
     690:	64 9f       	mul	r22, r20
     692:	c0 01       	movw	r24, r0
     694:	65 9f       	mul	r22, r21
     696:	90 0d       	add	r25, r0
     698:	74 9f       	mul	r23, r20
     69a:	90 0d       	add	r25, r0
     69c:	11 24       	eor	r1, r1
     69e:	82 9f       	mul	r24, r18
     6a0:	a0 01       	movw	r20, r0
     6a2:	83 9f       	mul	r24, r19
     6a4:	50 0d       	add	r21, r0
     6a6:	92 9f       	mul	r25, r18
     6a8:	50 0d       	add	r21, r0
     6aa:	11 24       	eor	r1, r1
     6ac:	2f 89       	ldd	r18, Y+23	; 0x17
     6ae:	38 8d       	ldd	r19, Y+24	; 0x18
     6b0:	e2 9f       	mul	r30, r18
     6b2:	c0 01       	movw	r24, r0
     6b4:	e3 9f       	mul	r30, r19
     6b6:	90 0d       	add	r25, r0
     6b8:	f2 9f       	mul	r31, r18
     6ba:	90 0d       	add	r25, r0
     6bc:	11 24       	eor	r1, r1
     6be:	8c 9d       	mul	r24, r12
     6c0:	90 01       	movw	r18, r0
     6c2:	8d 9d       	mul	r24, r13
     6c4:	30 0d       	add	r19, r0
     6c6:	9c 9d       	mul	r25, r12
     6c8:	30 0d       	add	r19, r0
     6ca:	11 24       	eor	r1, r1
     6cc:	42 0f       	add	r20, r18
     6ce:	53 1f       	adc	r21, r19
     6d0:	48 9d       	mul	r20, r8
     6d2:	c0 01       	movw	r24, r0
     6d4:	49 9d       	mul	r20, r9
     6d6:	90 0d       	add	r25, r0
     6d8:	58 9d       	mul	r21, r8
     6da:	90 0d       	add	r25, r0
     6dc:	11 24       	eor	r1, r1
     6de:	b5 01       	movw	r22, r10
     6e0:	0e 94 2f 28 	call	0x505e	; 0x505e <__divmodhi4>
   if (pwm_percent_angular > (pwm_lim - pwm_lim_linear))	// Saturating angular component of pwm_percent
     6e4:	cd a8       	ldd	r12, Y+53	; 0x35
     6e6:	de a8       	ldd	r13, Y+54	; 0x36
     6e8:	56 01       	movw	r10, r12
     6ea:	ae 18       	sub	r10, r14
     6ec:	bf 08       	sbc	r11, r15
     6ee:	a6 16       	cp	r10, r22
     6f0:	b7 06       	cpc	r11, r23
     6f2:	3c f0       	brlt	.+14     	; 0x702 <_ZN11motorDriver3runEbbbb+0x19a>
   {
	   pwm_percent_angular = pwm_lim - pwm_lim_linear;
   }
   else if (pwm_percent_angular < -(pwm_lim - pwm_lim_linear))
     6f4:	ec 18       	sub	r14, r12
     6f6:	fd 08       	sbc	r15, r13
     6f8:	5b 01       	movw	r10, r22
     6fa:	6e 15       	cp	r22, r14
     6fc:	7f 05       	cpc	r23, r15
     6fe:	0c f4       	brge	.+2      	; 0x702 <_ZN11motorDriver3runEbbbb+0x19a>
     700:	57 01       	movw	r10, r14
   {
	   pwm_percent_angular = -(pwm_lim - pwm_lim_linear);
   }
   
   // Calculating total signal to motors
   int16_t pwm_percent = (pwm_percent_linear + pwm_percent_angular)*motor_dir;
     702:	93 01       	movw	r18, r6
     704:	2a 0d       	add	r18, r10
     706:	3b 1d       	adc	r19, r11
     708:	28 9d       	mul	r18, r8
     70a:	c0 01       	movw	r24, r0
     70c:	29 9d       	mul	r18, r9
     70e:	90 0d       	add	r25, r0
     710:	38 9d       	mul	r19, r8
     712:	90 0d       	add	r25, r0
     714:	11 24       	eor	r1, r1
   
   // Serial diagnostics
   //*ser_out << "Motor " << motor_ID << " Signal P " << signal_l_p << " I " << signal_l_i << " esum " << esum_l << " D " << signal_l_d << " PWM % " << pwm_percent << endl;
   
   // Limiting total pwm percentage 
   if (pwm_percent > pwm_lim)	
     716:	c8 16       	cp	r12, r24
     718:	d9 06       	cpc	r13, r25
     71a:	4c f0       	brlt	.+18     	; 0x72e <_ZN11motorDriver3runEbbbb+0x1c6>
   {
	   pwm_percent = pwm_lim;
   } 
   else if (pwm_percent < -pwm_lim)
     71c:	22 27       	eor	r18, r18
     71e:	33 27       	eor	r19, r19
     720:	2c 19       	sub	r18, r12
     722:	3d 09       	sbc	r19, r13
     724:	6c 01       	movw	r12, r24
     726:	82 17       	cp	r24, r18
     728:	93 07       	cpc	r25, r19
     72a:	0c f4       	brge	.+2      	; 0x72e <_ZN11motorDriver3runEbbbb+0x1c6>
     72c:	69 01       	movw	r12, r18
   {
	   pwm_percent = -pwm_lim;
   }

   // Operating motor
   if (op_type)	// Drive-brake mode. Modulates brake pin instead of drive pin, higher performance (?).
     72e:	55 20       	and	r5, r5
     730:	39 f1       	breq	.+78     	; 0x780 <_ZN11motorDriver3runEbbbb+0x218>
   {
	   if (pwm_percent > 0)
     732:	1c 14       	cp	r1, r12
     734:	1d 04       	cpc	r1, r13
     736:	94 f4       	brge	.+36     	; 0x75c <_ZN11motorDriver3runEbbbb+0x1f4>
	   {
		   pwm_start(&pwm_1, 100);	// Setting IN1 high 
     738:	64 e6       	ldi	r22, 0x64	; 100
     73a:	ce 01       	movw	r24, r28
     73c:	0e 94 03 11 	call	0x2206	; 0x2206 <pwm_start>
		   pwm_start(&pwm_2, 100 - abs(pwm_percent));	// Modulating IN2 low
     740:	c6 01       	movw	r24, r12
     742:	dd 20       	and	r13, r13
     744:	24 f4       	brge	.+8      	; 0x74e <_ZN11motorDriver3runEbbbb+0x1e6>
     746:	88 27       	eor	r24, r24
     748:	99 27       	eor	r25, r25
     74a:	8c 19       	sub	r24, r12
     74c:	9d 09       	sbc	r25, r13
     74e:	64 e6       	ldi	r22, 0x64	; 100
     750:	68 1b       	sub	r22, r24
     752:	ce 01       	movw	r24, r28
     754:	07 96       	adiw	r24, 0x07	; 7
     756:	0e 94 03 11 	call	0x2206	; 0x2206 <pwm_start>
     75a:	34 c0       	rjmp	.+104    	; 0x7c4 <_ZN11motorDriver3runEbbbb+0x25c>
	   } else {
		   pwm_start(&pwm_1, 100 - abs(pwm_percent));	// Modulating IN1 low
     75c:	c6 01       	movw	r24, r12
     75e:	dd 20       	and	r13, r13
     760:	24 f4       	brge	.+8      	; 0x76a <_ZN11motorDriver3runEbbbb+0x202>
     762:	88 27       	eor	r24, r24
     764:	99 27       	eor	r25, r25
     766:	8c 19       	sub	r24, r12
     768:	9d 09       	sbc	r25, r13
     76a:	64 e6       	ldi	r22, 0x64	; 100
     76c:	68 1b       	sub	r22, r24
     76e:	ce 01       	movw	r24, r28
     770:	0e 94 03 11 	call	0x2206	; 0x2206 <pwm_start>
		   pwm_start(&pwm_2, 100);	// Setting IN2 high
     774:	64 e6       	ldi	r22, 0x64	; 100
     776:	ce 01       	movw	r24, r28
     778:	07 96       	adiw	r24, 0x07	; 7
     77a:	0e 94 03 11 	call	0x2206	; 0x2206 <pwm_start>
     77e:	22 c0       	rjmp	.+68     	; 0x7c4 <_ZN11motorDriver3runEbbbb+0x25c>
	   }
   } 
   else // Drive-coast mode. Modulates drive pin, higher current decay
   { 
	   if (pwm_percent > 0)
     780:	1c 14       	cp	r1, r12
     782:	1d 04       	cpc	r1, r13
     784:	84 f4       	brge	.+32     	; 0x7a6 <_ZN11motorDriver3runEbbbb+0x23e>
	   {
		   pwm_start(&pwm_1, abs(pwm_percent));	// Modulating IN1 high 
     786:	b6 01       	movw	r22, r12
     788:	dd 20       	and	r13, r13
     78a:	24 f4       	brge	.+8      	; 0x794 <_ZN11motorDriver3runEbbbb+0x22c>
     78c:	66 27       	eor	r22, r22
     78e:	77 27       	eor	r23, r23
     790:	6c 19       	sub	r22, r12
     792:	7d 09       	sbc	r23, r13
     794:	ce 01       	movw	r24, r28
     796:	0e 94 03 11 	call	0x2206	; 0x2206 <pwm_start>
		   pwm_start(&pwm_2, 0);	// Setting IN2 low
     79a:	60 e0       	ldi	r22, 0x00	; 0
     79c:	ce 01       	movw	r24, r28
     79e:	07 96       	adiw	r24, 0x07	; 7
     7a0:	0e 94 03 11 	call	0x2206	; 0x2206 <pwm_start>
     7a4:	0f c0       	rjmp	.+30     	; 0x7c4 <_ZN11motorDriver3runEbbbb+0x25c>
	   } else {
		   pwm_start(&pwm_1, 0);	// Setting IN1 low
     7a6:	60 e0       	ldi	r22, 0x00	; 0
     7a8:	ce 01       	movw	r24, r28
     7aa:	0e 94 03 11 	call	0x2206	; 0x2206 <pwm_start>
		   pwm_start(&pwm_2, abs(pwm_percent));	// Modulating IN2 high
     7ae:	b6 01       	movw	r22, r12
     7b0:	dd 20       	and	r13, r13
     7b2:	24 f4       	brge	.+8      	; 0x7bc <_ZN11motorDriver3runEbbbb+0x254>
     7b4:	66 27       	eor	r22, r22
     7b6:	77 27       	eor	r23, r23
     7b8:	6c 19       	sub	r22, r12
     7ba:	7d 09       	sbc	r23, r13
     7bc:	ce 01       	movw	r24, r28
     7be:	07 96       	adiw	r24, 0x07	; 7
     7c0:	0e 94 03 11 	call	0x2206	; 0x2206 <pwm_start>
	   }
   }

   diagnostic diag;
   diag.pwm_tot = pwm_percent;
     7c4:	f8 01       	movw	r30, r16
     7c6:	c0 82       	st	Z, r12
     7c8:	d1 82       	std	Z+1, r13	; 0x01
   diag.pwm_lin = pwm_percent_linear;
     7ca:	62 82       	std	Z+2, r6	; 0x02
     7cc:	73 82       	std	Z+3, r7	; 0x03
   diag.pwm_ang = pwm_percent_angular;
     7ce:	a4 82       	std	Z+4, r10	; 0x04
     7d0:	b5 82       	std	Z+5, r11	; 0x05
   diag.esum_a_ = esum_a;
     7d2:	89 a9       	ldd	r24, Y+49	; 0x31
     7d4:	9a a9       	ldd	r25, Y+50	; 0x32
     7d6:	86 83       	std	Z+6, r24	; 0x06
     7d8:	97 83       	std	Z+7, r25	; 0x07
   diag.esum_l_ = esum_l;
     7da:	8b a5       	ldd	r24, Y+43	; 0x2b
     7dc:	9c a5       	ldd	r25, Y+44	; 0x2c
     7de:	80 87       	std	Z+8, r24	; 0x08
     7e0:	91 87       	std	Z+9, r25	; 0x09

   return diag;
 }
     7e2:	c8 01       	movw	r24, r16
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	1f 91       	pop	r17
     7ea:	0f 91       	pop	r16
     7ec:	ff 90       	pop	r15
     7ee:	ef 90       	pop	r14
     7f0:	df 90       	pop	r13
     7f2:	cf 90       	pop	r12
     7f4:	bf 90       	pop	r11
     7f6:	af 90       	pop	r10
     7f8:	9f 90       	pop	r9
     7fa:	8f 90       	pop	r8
     7fc:	7f 90       	pop	r7
     7fe:	6f 90       	pop	r6
     800:	5f 90       	pop	r5
     802:	08 95       	ret

00000804 <_Z15QDEC_Port_SetupP11PORT_structhbb>:
     804:	fc 01       	movw	r30, r24
     806:	44 23       	and	r20, r20
     808:	f9 f0       	breq	.+62     	; 0x848 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x44>
     80a:	66 30       	cpi	r22, 0x06	; 6
     80c:	e8 f5       	brcc	.+122    	; 0x888 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x84>
     80e:	87 e0       	ldi	r24, 0x07	; 7
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	06 2e       	mov	r0, r22
     814:	02 c0       	rjmp	.+4      	; 0x81a <_Z15QDEC_Port_SetupP11PORT_structhbb+0x16>
     816:	88 0f       	add	r24, r24
     818:	99 1f       	adc	r25, r25
     81a:	0a 94       	dec	r0
     81c:	e2 f7       	brpl	.-8      	; 0x816 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x12>
     81e:	82 83       	std	Z+2, r24	; 0x02
     820:	84 e0       	ldi	r24, 0x04	; 4
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	06 2e       	mov	r0, r22
     826:	02 c0       	rjmp	.+4      	; 0x82c <_Z15QDEC_Port_SetupP11PORT_structhbb+0x28>
     828:	88 0f       	add	r24, r24
     82a:	99 1f       	adc	r25, r25
     82c:	0a 94       	dec	r0
     82e:	e2 f7       	brpl	.-8      	; 0x828 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x24>
     830:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
     834:	80 89       	ldd	r24, Z+16	; 0x10
     836:	88 7f       	andi	r24, 0xF8	; 248
     838:	21 11       	cpse	r18, r1
     83a:	02 c0       	rjmp	.+4      	; 0x840 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x3c>
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	01 c0       	rjmp	.+2      	; 0x842 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x3e>
     840:	90 e4       	ldi	r25, 0x40	; 64
     842:	89 2b       	or	r24, r25
     844:	80 8b       	std	Z+16, r24	; 0x10
     846:	0b c0       	rjmp	.+22     	; 0x85e <_Z15QDEC_Port_SetupP11PORT_structhbb+0x5a>
     848:	67 30       	cpi	r22, 0x07	; 7
     84a:	00 f5       	brcc	.+64     	; 0x88c <_Z15QDEC_Port_SetupP11PORT_structhbb+0x88>
     84c:	83 e0       	ldi	r24, 0x03	; 3
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	06 2e       	mov	r0, r22
     852:	02 c0       	rjmp	.+4      	; 0x858 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x54>
     854:	88 0f       	add	r24, r24
     856:	99 1f       	adc	r25, r25
     858:	0a 94       	dec	r0
     85a:	e2 f7       	brpl	.-8      	; 0x854 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x50>
     85c:	82 83       	std	Z+2, r24	; 0x02
     85e:	83 e0       	ldi	r24, 0x03	; 3
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	02 c0       	rjmp	.+4      	; 0x868 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x64>
     864:	88 0f       	add	r24, r24
     866:	99 1f       	adc	r25, r25
     868:	6a 95       	dec	r22
     86a:	e2 f7       	brpl	.-8      	; 0x864 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x60>
     86c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
     870:	90 89       	ldd	r25, Z+16	; 0x10
     872:	98 7f       	andi	r25, 0xF8	; 248
     874:	93 60       	ori	r25, 0x03	; 3
     876:	21 11       	cpse	r18, r1
     878:	02 c0       	rjmp	.+4      	; 0x87e <_Z15QDEC_Port_SetupP11PORT_structhbb+0x7a>
     87a:	80 e0       	ldi	r24, 0x00	; 0
     87c:	01 c0       	rjmp	.+2      	; 0x880 <_Z15QDEC_Port_SetupP11PORT_structhbb+0x7c>
     87e:	80 e4       	ldi	r24, 0x40	; 64
     880:	98 2b       	or	r25, r24
     882:	90 8b       	std	Z+16, r25	; 0x10
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	08 95       	ret
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	08 95       	ret
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	08 95       	ret

00000890 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum>:
     890:	82 30       	cpi	r24, 0x02	; 2
     892:	a9 f0       	breq	.+42     	; 0x8be <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x2e>
     894:	84 30       	cpi	r24, 0x04	; 4
     896:	21 f1       	breq	.+72     	; 0x8e0 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x50>
     898:	81 11       	cpse	r24, r1
     89a:	33 c0       	rjmp	.+102    	; 0x902 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x72>
     89c:	e0 e8       	ldi	r30, 0x80	; 128
     89e:	f1 e0       	ldi	r31, 0x01	; 1
     8a0:	60 83       	st	Z, r22
     8a2:	89 e0       	ldi	r24, 0x09	; 9
     8a4:	80 87       	std	Z+8, r24	; 0x08
     8a6:	44 23       	and	r20, r20
     8a8:	71 f1       	breq	.+92     	; 0x906 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x76>
     8aa:	6e 5f       	subi	r22, 0xFE	; 254
     8ac:	61 83       	std	Z+1, r22	; 0x01
     8ae:	81 e0       	ldi	r24, 0x01	; 1
     8b0:	81 87       	std	Z+9, r24	; 0x09
     8b2:	80 85       	ldd	r24, Z+8	; 0x08
     8b4:	80 61       	ori	r24, 0x10	; 16
     8b6:	28 2b       	or	r18, r24
     8b8:	20 87       	std	Z+8, r18	; 0x08
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	08 95       	ret
     8be:	e0 e8       	ldi	r30, 0x80	; 128
     8c0:	f1 e0       	ldi	r31, 0x01	; 1
     8c2:	62 83       	std	Z+2, r22	; 0x02
     8c4:	89 e0       	ldi	r24, 0x09	; 9
     8c6:	82 87       	std	Z+10, r24	; 0x0a
     8c8:	44 23       	and	r20, r20
     8ca:	f9 f0       	breq	.+62     	; 0x90a <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x7a>
     8cc:	6e 5f       	subi	r22, 0xFE	; 254
     8ce:	63 83       	std	Z+3, r22	; 0x03
     8d0:	81 e0       	ldi	r24, 0x01	; 1
     8d2:	83 87       	std	Z+11, r24	; 0x0b
     8d4:	82 85       	ldd	r24, Z+10	; 0x0a
     8d6:	80 61       	ori	r24, 0x10	; 16
     8d8:	28 2b       	or	r18, r24
     8da:	22 87       	std	Z+10, r18	; 0x0a
     8dc:	81 e0       	ldi	r24, 0x01	; 1
     8de:	08 95       	ret
     8e0:	e0 e8       	ldi	r30, 0x80	; 128
     8e2:	f1 e0       	ldi	r31, 0x01	; 1
     8e4:	64 83       	std	Z+4, r22	; 0x04
     8e6:	89 e0       	ldi	r24, 0x09	; 9
     8e8:	84 87       	std	Z+12, r24	; 0x0c
     8ea:	44 23       	and	r20, r20
     8ec:	81 f0       	breq	.+32     	; 0x90e <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum+0x7e>
     8ee:	6e 5f       	subi	r22, 0xFE	; 254
     8f0:	65 83       	std	Z+5, r22	; 0x05
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	85 87       	std	Z+13, r24	; 0x0d
     8f6:	84 85       	ldd	r24, Z+12	; 0x0c
     8f8:	80 61       	ori	r24, 0x10	; 16
     8fa:	28 2b       	or	r18, r24
     8fc:	24 87       	std	Z+12, r18	; 0x0c
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	08 95       	ret
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	08 95       	ret
     906:	81 e0       	ldi	r24, 0x01	; 1
     908:	08 95       	ret
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	08 95       	ret
     90e:	81 e0       	ldi	r24, 0x01	; 1
     910:	08 95       	ret

00000912 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC0_struct13TC_EVSEL_enumj>:
     912:	8f 92       	push	r8
     914:	af 92       	push	r10
     916:	bf 92       	push	r11
     918:	cf 92       	push	r12
     91a:	df 92       	push	r13
     91c:	ef 92       	push	r14
     91e:	ff 92       	push	r15
     920:	0f 93       	push	r16
     922:	1f 93       	push	r17
     924:	cf 93       	push	r28
     926:	df 93       	push	r29
     928:	cd b7       	in	r28, 0x3d	; 61
     92a:	de b7       	in	r29, 0x3e	; 62
     92c:	12 2f       	mov	r17, r18
     92e:	df 84       	ldd	r13, Y+15	; 0x0f
     930:	f8 88       	ldd	r15, Y+16	; 0x10
     932:	24 2f       	mov	r18, r20
     934:	4e 2d       	mov	r20, r14
     936:	0e 94 02 04 	call	0x804	; 0x804 <_Z15QDEC_Port_SetupP11PORT_structhbb>
     93a:	88 23       	and	r24, r24
     93c:	81 f0       	breq	.+32     	; 0x95e <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC0_struct13TC_EVSEL_enumj+0x4c>
     93e:	2c 2d       	mov	r18, r12
     940:	4e 2d       	mov	r20, r14
     942:	60 2f       	mov	r22, r16
     944:	81 2f       	mov	r24, r17
     946:	0e 94 48 04 	call	0x890	; 0x890 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum>
     94a:	88 23       	and	r24, r24
     94c:	41 f0       	breq	.+16     	; 0x95e <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC0_struct13TC_EVSEL_enumj+0x4c>
     94e:	98 2d       	mov	r25, r8
     950:	90 66       	ori	r25, 0x60	; 96
     952:	f5 01       	movw	r30, r10
     954:	93 83       	std	Z+3, r25	; 0x03
     956:	d6 a2       	std	Z+38, r13	; 0x26
     958:	f7 a2       	std	Z+39, r15	; 0x27
     95a:	91 e0       	ldi	r25, 0x01	; 1
     95c:	90 83       	st	Z, r25
     95e:	df 91       	pop	r29
     960:	cf 91       	pop	r28
     962:	1f 91       	pop	r17
     964:	0f 91       	pop	r16
     966:	ff 90       	pop	r15
     968:	ef 90       	pop	r14
     96a:	df 90       	pop	r13
     96c:	cf 90       	pop	r12
     96e:	bf 90       	pop	r11
     970:	af 90       	pop	r10
     972:	8f 90       	pop	r8
     974:	08 95       	ret

00000976 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC1_struct13TC_EVSEL_enumj>:
     976:	8f 92       	push	r8
     978:	af 92       	push	r10
     97a:	bf 92       	push	r11
     97c:	cf 92       	push	r12
     97e:	df 92       	push	r13
     980:	ef 92       	push	r14
     982:	ff 92       	push	r15
     984:	0f 93       	push	r16
     986:	1f 93       	push	r17
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	cd b7       	in	r28, 0x3d	; 61
     98e:	de b7       	in	r29, 0x3e	; 62
     990:	12 2f       	mov	r17, r18
     992:	df 84       	ldd	r13, Y+15	; 0x0f
     994:	f8 88       	ldd	r15, Y+16	; 0x10
     996:	24 2f       	mov	r18, r20
     998:	4e 2d       	mov	r20, r14
     99a:	0e 94 02 04 	call	0x804	; 0x804 <_Z15QDEC_Port_SetupP11PORT_structhbb>
     99e:	88 23       	and	r24, r24
     9a0:	81 f0       	breq	.+32     	; 0x9c2 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC1_struct13TC_EVSEL_enumj+0x4c>
     9a2:	2c 2d       	mov	r18, r12
     9a4:	4e 2d       	mov	r20, r14
     9a6:	60 2f       	mov	r22, r16
     9a8:	81 2f       	mov	r24, r17
     9aa:	0e 94 48 04 	call	0x890	; 0x890 <_Z16QDEC_EVSYS_Setuph16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enum>
     9ae:	88 23       	and	r24, r24
     9b0:	41 f0       	breq	.+16     	; 0x9c2 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC1_struct13TC_EVSEL_enumj+0x4c>
     9b2:	98 2d       	mov	r25, r8
     9b4:	90 66       	ori	r25, 0x60	; 96
     9b6:	f5 01       	movw	r30, r10
     9b8:	93 83       	std	Z+3, r25	; 0x03
     9ba:	d6 a2       	std	Z+38, r13	; 0x26
     9bc:	f7 a2       	std	Z+39, r15	; 0x27
     9be:	91 e0       	ldi	r25, 0x01	; 1
     9c0:	90 83       	st	Z, r25
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	1f 91       	pop	r17
     9c8:	0f 91       	pop	r16
     9ca:	ff 90       	pop	r15
     9cc:	ef 90       	pop	r14
     9ce:	df 90       	pop	r13
     9d0:	cf 90       	pop	r12
     9d2:	bf 90       	pop	r11
     9d4:	af 90       	pop	r10
     9d6:	8f 90       	pop	r8
     9d8:	08 95       	ret

000009da <_Z12QDEC_Read_TCP10TC0_struct>:
     9da:	fc 01       	movw	r30, r24
     9dc:	90 a1       	ldd	r25, Z+32	; 0x20
     9de:	21 a1       	ldd	r18, Z+33	; 0x21
     9e0:	89 2f       	mov	r24, r25
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	92 2b       	or	r25, r18
     9e6:	08 95       	ret

000009e8 <_Z12QDEC_Read_TCP10TC1_struct>:
     9e8:	fc 01       	movw	r30, r24
     9ea:	90 a1       	ldd	r25, Z+32	; 0x20
     9ec:	21 a1       	ldd	r18, Z+33	; 0x21
     9ee:	89 2f       	mov	r24, r25
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	92 2b       	or	r25, r18
     9f4:	08 95       	ret

000009f6 <_ZN10task_motor3runEv>:
/** This task updates the motors with their current position and setpoints (intertask
*	variables) and adjusts the output pwm signals.
*/

void task_motor::run (void)
{
     9f6:	cf 93       	push	r28
     9f8:	df 93       	push	r29
     9fa:	cd b7       	in	r28, 0x3d	; 61
     9fc:	de b7       	in	r29, 0x3e	; 62
     9fe:	c6 59       	subi	r28, 0x96	; 150
     a00:	d1 09       	sbc	r29, r1
     a02:	cd bf       	out	0x3d, r28	; 61
     a04:	de bf       	out	0x3e, r29	; 62
     a06:	8c 01       	movw	r16, r24
	// Initializing objects driver
		// All gains, limits, and positions are initialized to zero.
	motorDriver motor1 ('1', p_serial);
     a08:	fc 01       	movw	r30, r24
     a0a:	46 81       	ldd	r20, Z+6	; 0x06
     a0c:	57 81       	ldd	r21, Z+7	; 0x07
     a0e:	61 e3       	ldi	r22, 0x31	; 49
     a10:	ce 01       	movw	r24, r28
     a12:	01 96       	adiw	r24, 0x01	; 1
     a14:	0e 94 43 02 	call	0x486	; 0x486 <_ZN11motorDriverC1EcP8emstream>
	motorDriver motor2 ('2', p_serial);
     a18:	f8 01       	movw	r30, r16
     a1a:	46 81       	ldd	r20, Z+6	; 0x06
     a1c:	57 81       	ldd	r21, Z+7	; 0x07
     a1e:	62 e3       	ldi	r22, 0x32	; 50
     a20:	ce 01       	movw	r24, r28
     a22:	ce 96       	adiw	r24, 0x3e	; 62
     a24:	0e 94 43 02 	call	0x486	; 0x486 <_ZN11motorDriverC1EcP8emstream>
	
	// Setting gain scaling
		// Gain scaling is the factor by which signals are divided. Allows for gains
		// to be scaled appropriately for int limits. Currently set to 1 (no scaling).
	int16_t pwm_scale = 100;
	motor1.set_pwm_scaling(pwm_scale);
     a28:	64 e6       	ldi	r22, 0x64	; 100
     a2a:	70 e0       	ldi	r23, 0x00	; 0
     a2c:	ce 01       	movw	r24, r28
     a2e:	01 96       	adiw	r24, 0x01	; 1
     a30:	0e 94 25 02 	call	0x44a	; 0x44a <_ZN11motorDriver15set_pwm_scalingEi>
	motor2.set_pwm_scaling(pwm_scale);
     a34:	64 e6       	ldi	r22, 0x64	; 100
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	ce 01       	movw	r24, r28
     a3a:	ce 96       	adiw	r24, 0x3e	; 62
     a3c:	0e 94 25 02 	call	0x44a	; 0x44a <_ZN11motorDriver15set_pwm_scalingEi>

	// Setting linear gains
	int16_t kp_l = 30;
	int16_t ki_l = 1;
	int16_t kd_l = 0;
	motor1.set_k_l(kp_l,ki_l,kd_l);
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	41 e0       	ldi	r20, 0x01	; 1
     a46:	50 e0       	ldi	r21, 0x00	; 0
     a48:	6e e1       	ldi	r22, 0x1E	; 30
     a4a:	70 e0       	ldi	r23, 0x00	; 0
     a4c:	ce 01       	movw	r24, r28
     a4e:	01 96       	adiw	r24, 0x01	; 1
     a50:	0e 94 15 02 	call	0x42a	; 0x42a <_ZN11motorDriver7set_k_lEiii>
	motor2.set_k_l(kp_l,ki_l,kd_l);
     a54:	20 e0       	ldi	r18, 0x00	; 0
     a56:	30 e0       	ldi	r19, 0x00	; 0
     a58:	41 e0       	ldi	r20, 0x01	; 1
     a5a:	50 e0       	ldi	r21, 0x00	; 0
     a5c:	6e e1       	ldi	r22, 0x1E	; 30
     a5e:	70 e0       	ldi	r23, 0x00	; 0
     a60:	ce 01       	movw	r24, r28
     a62:	ce 96       	adiw	r24, 0x3e	; 62
     a64:	0e 94 15 02 	call	0x42a	; 0x42a <_ZN11motorDriver7set_k_lEiii>

	// Setting angular gains
	int16_t kp_a = 60;
	int16_t ki_a = 10;
	int16_t kd_a = 0;
	motor1.set_k_a(kp_a,ki_a,kd_a);
     a68:	20 e0       	ldi	r18, 0x00	; 0
     a6a:	30 e0       	ldi	r19, 0x00	; 0
     a6c:	4a e0       	ldi	r20, 0x0A	; 10
     a6e:	50 e0       	ldi	r21, 0x00	; 0
     a70:	6c e3       	ldi	r22, 0x3C	; 60
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	ce 01       	movw	r24, r28
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	0e 94 1d 02 	call	0x43a	; 0x43a <_ZN11motorDriver7set_k_aEiii>
	motor2.set_k_a(kp_a,ki_a,kd_a);
     a7c:	20 e0       	ldi	r18, 0x00	; 0
     a7e:	30 e0       	ldi	r19, 0x00	; 0
     a80:	4a e0       	ldi	r20, 0x0A	; 10
     a82:	50 e0       	ldi	r21, 0x00	; 0
     a84:	6c e3       	ldi	r22, 0x3C	; 60
     a86:	70 e0       	ldi	r23, 0x00	; 0
     a88:	ce 01       	movw	r24, r28
     a8a:	ce 96       	adiw	r24, 0x3e	; 62
     a8c:	0e 94 1d 02 	call	0x43a	; 0x43a <_ZN11motorDriver7set_k_aEiii>
		// esum_lim is the limit for the accumulation of errors for integral gain.
	int16_t pwm_lim = 50;	// Max percentage pwm output
	int16_t pwm_lim_linear = 3*pwm_lim/5;	// Portion of pwm_lim used for linear driving. Rest is for angular
	int16_t esum_l_lim = pwm_lim*pwm_scale/10;	// Note: esum_lim is used prior to the pwm being scaled
	int16_t esum_a_lim = (pwm_lim-pwm_lim_linear)*pwm_scale;
	motor1.set_pwm_lim(pwm_lim); // Needs to be performed prior to set_pwm_lim_linear
     a90:	62 e3       	ldi	r22, 0x32	; 50
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	ce 01       	movw	r24, r28
     a96:	01 96       	adiw	r24, 0x01	; 1
     a98:	0e 94 29 02 	call	0x452	; 0x452 <_ZN11motorDriver11set_pwm_limEi>
	motor2.set_pwm_lim(pwm_lim);
     a9c:	62 e3       	ldi	r22, 0x32	; 50
     a9e:	70 e0       	ldi	r23, 0x00	; 0
     aa0:	ce 01       	movw	r24, r28
     aa2:	ce 96       	adiw	r24, 0x3e	; 62
     aa4:	0e 94 29 02 	call	0x452	; 0x452 <_ZN11motorDriver11set_pwm_limEi>
	motor1.set_pwm_lim_linear(pwm_lim_linear);
     aa8:	6e e1       	ldi	r22, 0x1E	; 30
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	ce 01       	movw	r24, r28
     aae:	01 96       	adiw	r24, 0x01	; 1
     ab0:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN11motorDriver18set_pwm_lim_linearEi>
	motor2.set_pwm_lim_linear(pwm_lim_linear);
     ab4:	6e e1       	ldi	r22, 0x1E	; 30
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	ce 01       	movw	r24, r28
     aba:	ce 96       	adiw	r24, 0x3e	; 62
     abc:	0e 94 36 02 	call	0x46c	; 0x46c <_ZN11motorDriver18set_pwm_lim_linearEi>
	motor1.set_esum_l_lim(esum_l_lim);
     ac0:	64 ef       	ldi	r22, 0xF4	; 244
     ac2:	71 e0       	ldi	r23, 0x01	; 1
     ac4:	ce 01       	movw	r24, r28
     ac6:	01 96       	adiw	r24, 0x01	; 1
     ac8:	0e 94 9c 02 	call	0x538	; 0x538 <_ZN11motorDriver14set_esum_l_limEi>
	motor2.set_esum_l_lim(esum_l_lim);
     acc:	64 ef       	ldi	r22, 0xF4	; 244
     ace:	71 e0       	ldi	r23, 0x01	; 1
     ad0:	ce 01       	movw	r24, r28
     ad2:	ce 96       	adiw	r24, 0x3e	; 62
     ad4:	0e 94 9c 02 	call	0x538	; 0x538 <_ZN11motorDriver14set_esum_l_limEi>
	motor1.set_esum_a_lim(esum_a_lim);
     ad8:	60 ed       	ldi	r22, 0xD0	; 208
     ada:	77 e0       	ldi	r23, 0x07	; 7
     adc:	ce 01       	movw	r24, r28
     ade:	01 96       	adiw	r24, 0x01	; 1
     ae0:	0e 94 a0 02 	call	0x540	; 0x540 <_ZN11motorDriver14set_esum_a_limEi>
	motor2.set_esum_a_lim(esum_a_lim);
     ae4:	60 ed       	ldi	r22, 0xD0	; 208
     ae6:	77 e0       	ldi	r23, 0x07	; 7
     ae8:	ce 01       	movw	r24, r28
     aea:	ce 96       	adiw	r24, 0x3e	; 62
     aec:	0e 94 a0 02 	call	0x540	; 0x540 <_ZN11motorDriver14set_esum_a_limEi>
	diagnostic diag_1;
	diagnostic diag_2;

	// This is an infinite loop; it runs until the power is turned off. This loop
	// continually updates motor position, setpoint, and pwm output.
	portTickType previousTicks = xTaskGetTickCount ();
     af0:	0e 94 72 18 	call	0x30e4	; 0x30e4 <xTaskGetTickCount>
     af4:	c1 57       	subi	r28, 0x71	; 113
     af6:	df 4f       	sbci	r29, 0xFF	; 255
     af8:	68 83       	st	Y, r22
     afa:	79 83       	std	Y+1, r23	; 0x01
     afc:	8a 83       	std	Y+2, r24	; 0x02
     afe:	9b 83       	std	Y+3, r25	; 0x03
     b00:	cf 58       	subi	r28, 0x8F	; 143
     b02:	d0 40       	sbci	r29, 0x00	; 0
	*p_serial << "this should only appear once" << endl;
     b04:	f8 01       	movw	r30, r16
     b06:	06 81       	ldd	r16, Z+6	; 0x06
     b08:	17 81       	ldd	r17, Z+7	; 0x07
		 *          reference is used to string (bad pun) printable items together with 
		 *          many "<<" operators
		 */
		emstream& operator<< (const char* p_string)
		{
			puts (p_string);
     b0a:	6a e0       	ldi	r22, 0x0A	; 10
     b0c:	70 e2       	ldi	r23, 0x20	; 32
     b0e:	c8 01       	movw	r24, r16
     b10:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
     b14:	66 e0       	ldi	r22, 0x06	; 6
     b16:	c8 01       	movw	r24, r16
     b18:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
	while(1)
	{
		
		//calculate linear distance from the setpoint, then pass that linear distance to both motors. We control distance from goal and angular heading.
		LinearDistance = sqrt(pow((setpoint_l_2 - Robot_Pos_Y_INERT),2) + pow((setpoint_l_1-Robot_Pos_X_INERT),2));
     b1c:	60 91 00 20 	lds	r22, 0x2000	; 0x802000 <__data_start>
     b20:	70 91 01 20 	lds	r23, 0x2001	; 0x802001 <__data_start+0x1>
     b24:	80 91 1e 21 	lds	r24, 0x211E	; 0x80211e <Robot_Pos_Y_INERT>
     b28:	90 91 1f 21 	lds	r25, 0x211F	; 0x80211f <Robot_Pos_Y_INERT+0x1>
     b2c:	68 1b       	sub	r22, r24
     b2e:	79 0b       	sbc	r23, r25
     b30:	07 2e       	mov	r0, r23
     b32:	00 0c       	add	r0, r0
     b34:	88 0b       	sbc	r24, r24
     b36:	99 0b       	sbc	r25, r25
     b38:	0e 94 4d 26 	call	0x4c9a	; 0x4c9a <__floatsisf>
     b3c:	6b 01       	movw	r12, r22
     b3e:	7c 01       	movw	r14, r24
     b40:	00 91 02 20 	lds	r16, 0x2002	; 0x802002 <setpoint_l_1>
     b44:	10 91 03 20 	lds	r17, 0x2003	; 0x802003 <setpoint_l_1+0x1>
     b48:	80 91 20 21 	lds	r24, 0x2120	; 0x802120 <Robot_Pos_X_INERT>
     b4c:	90 91 21 21 	lds	r25, 0x2121	; 0x802121 <Robot_Pos_X_INERT+0x1>
     b50:	08 1b       	sub	r16, r24
     b52:	19 0b       	sbc	r17, r25
     b54:	b8 01       	movw	r22, r16
     b56:	01 2e       	mov	r0, r17
     b58:	00 0c       	add	r0, r0
     b5a:	88 0b       	sbc	r24, r24
     b5c:	99 0b       	sbc	r25, r25
     b5e:	0e 94 4d 26 	call	0x4c9a	; 0x4c9a <__floatsisf>
     b62:	4b 01       	movw	r8, r22
     b64:	5c 01       	movw	r10, r24
     b66:	a7 01       	movw	r20, r14
     b68:	96 01       	movw	r18, r12
     b6a:	c7 01       	movw	r24, r14
     b6c:	b6 01       	movw	r22, r12
     b6e:	0e 94 47 27 	call	0x4e8e	; 0x4e8e <__mulsf3>
     b72:	2b 01       	movw	r4, r22
     b74:	3c 01       	movw	r6, r24
     b76:	a5 01       	movw	r20, r10
     b78:	94 01       	movw	r18, r8
     b7a:	c5 01       	movw	r24, r10
     b7c:	b4 01       	movw	r22, r8
     b7e:	0e 94 47 27 	call	0x4e8e	; 0x4e8e <__mulsf3>
     b82:	cd 56       	subi	r28, 0x6D	; 109
     b84:	df 4f       	sbci	r29, 0xFF	; 255
     b86:	68 83       	st	Y, r22
     b88:	79 83       	std	Y+1, r23	; 0x01
     b8a:	8a 83       	std	Y+2, r24	; 0x02
     b8c:	9b 83       	std	Y+3, r25	; 0x03
     b8e:	c3 59       	subi	r28, 0x93	; 147
     b90:	d0 40       	sbci	r29, 0x00	; 0
     b92:	cd 56       	subi	r28, 0x6D	; 109
     b94:	df 4f       	sbci	r29, 0xFF	; 255
     b96:	28 81       	ld	r18, Y
     b98:	39 81       	ldd	r19, Y+1	; 0x01
     b9a:	4a 81       	ldd	r20, Y+2	; 0x02
     b9c:	5b 81       	ldd	r21, Y+3	; 0x03
     b9e:	c3 59       	subi	r28, 0x93	; 147
     ba0:	d0 40       	sbci	r29, 0x00	; 0
     ba2:	c3 01       	movw	r24, r6
     ba4:	b2 01       	movw	r22, r4
     ba6:	0e 94 c0 24 	call	0x4980	; 0x4980 <__addsf3>
     baa:	0e 94 c2 27 	call	0x4f84	; 0x4f84 <sqrt>
     bae:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__fixsfsi>
     bb2:	2b 01       	movw	r4, r22
     bb4:	3c 01       	movw	r6, r24
     bb6:	60 93 06 21 	sts	0x2106, r22	; 0x802106 <LinearDistance>
     bba:	70 93 07 21 	sts	0x2107, r23	; 0x802107 <LinearDistance+0x1>
		int16_t AngleGoal = atan2((setpoint_l_2 - Robot_Pos_Y_INERT), (setpoint_l_1-Robot_Pos_X_INERT));
     bbe:	a5 01       	movw	r20, r10
     bc0:	94 01       	movw	r18, r8
     bc2:	c7 01       	movw	r24, r14
     bc4:	b6 01       	movw	r22, r12
     bc6:	0e 94 3f 25 	call	0x4a7e	; 0x4a7e <atan2>
     bca:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__fixsfsi>
     bce:	6b 01       	movw	r12, r22
     bd0:	7c 01       	movw	r14, r24
		setpoint_a_1 = AngleGoal - LinearDistance;
     bd2:	cb 01       	movw	r24, r22
     bd4:	84 19       	sub	r24, r4
     bd6:	95 09       	sbc	r25, r5
     bd8:	80 93 04 21 	sts	0x2104, r24	; 0x802104 <__data_end>
     bdc:	90 93 05 21 	sts	0x2105, r25	; 0x802105 <__data_end+0x1>
		if(setpoint_l_1-Robot_Pos_X_INERT <= 0)
     be0:	10 16       	cp	r1, r16
     be2:	11 06       	cpc	r1, r17
     be4:	3c f0       	brlt	.+14     	; 0xbf4 <_ZN10task_motor3runEv+0x1fe>
		{
			LinearDistance = LinearDistance * -1;
     be6:	51 94       	neg	r5
     be8:	41 94       	neg	r4
     bea:	51 08       	sbc	r5, r1
     bec:	40 92 06 21 	sts	0x2106, r4	; 0x802106 <LinearDistance>
     bf0:	50 92 07 21 	sts	0x2107, r5	; 0x802107 <LinearDistance+0x1>
		else {
			//do nothing
		}
		
		// Updating positions, always zero because we've calculated the error above
		motor1.set_position(0);
     bf4:	60 e0       	ldi	r22, 0x00	; 0
     bf6:	70 e0       	ldi	r23, 0x00	; 0
     bf8:	ce 01       	movw	r24, r28
     bfa:	01 96       	adiw	r24, 0x01	; 1
     bfc:	0e 94 ac 02 	call	0x558	; 0x558 <_ZN11motorDriver12set_positionEi>
		motor2.set_position(0);
     c00:	60 e0       	ldi	r22, 0x00	; 0
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	ce 01       	movw	r24, r28
     c06:	ce 96       	adiw	r24, 0x3e	; 62
     c08:	0e 94 ac 02 	call	0x558	; 0x558 <_ZN11motorDriver12set_positionEi>
		
		// Updating motor linear setpoints
		motor1.set_setpoint_l(LinearDistance);
     c0c:	60 91 06 21 	lds	r22, 0x2106	; 0x802106 <LinearDistance>
     c10:	70 91 07 21 	lds	r23, 0x2107	; 0x802107 <LinearDistance+0x1>
     c14:	ce 01       	movw	r24, r28
     c16:	01 96       	adiw	r24, 0x01	; 1
     c18:	0e 94 a4 02 	call	0x548	; 0x548 <_ZN11motorDriver14set_setpoint_lEi>
		motor2.set_setpoint_l(LinearDistance);
     c1c:	60 91 06 21 	lds	r22, 0x2106	; 0x802106 <LinearDistance>
     c20:	70 91 07 21 	lds	r23, 0x2107	; 0x802107 <LinearDistance+0x1>
     c24:	ce 01       	movw	r24, r28
     c26:	ce 96       	adiw	r24, 0x3e	; 62
     c28:	0e 94 a4 02 	call	0x548	; 0x548 <_ZN11motorDriver14set_setpoint_lEi>

		// Updating angles
		motor1.set_angle(AngleGoal - Robot_Angle_Theta_INERT);
     c2c:	80 91 1c 21 	lds	r24, 0x211C	; 0x80211c <Robot_Angle_Theta_INERT>
     c30:	90 91 1d 21 	lds	r25, 0x211D	; 0x80211d <Robot_Angle_Theta_INERT+0x1>
     c34:	b6 01       	movw	r22, r12
     c36:	68 1b       	sub	r22, r24
     c38:	79 0b       	sbc	r23, r25
     c3a:	ce 01       	movw	r24, r28
     c3c:	01 96       	adiw	r24, 0x01	; 1
     c3e:	0e 94 b0 02 	call	0x560	; 0x560 <_ZN11motorDriver9set_angleEi>
		motor2.set_angle(AngleGoal - Robot_Angle_Theta_INERT);
     c42:	80 91 1c 21 	lds	r24, 0x211C	; 0x80211c <Robot_Angle_Theta_INERT>
     c46:	90 91 1d 21 	lds	r25, 0x211D	; 0x80211d <Robot_Angle_Theta_INERT+0x1>
     c4a:	b6 01       	movw	r22, r12
     c4c:	68 1b       	sub	r22, r24
     c4e:	79 0b       	sbc	r23, r25
     c50:	ce 01       	movw	r24, r28
     c52:	ce 96       	adiw	r24, 0x3e	; 62
     c54:	0e 94 b0 02 	call	0x560	; 0x560 <_ZN11motorDriver9set_angleEi>
		
		// Updating angular setpoints, setpoint_a_1 is the goal angle of the robot.
		motor1.set_setpoint_a(setpoint_a_1);
     c58:	60 91 04 21 	lds	r22, 0x2104	; 0x802104 <__data_end>
     c5c:	70 91 05 21 	lds	r23, 0x2105	; 0x802105 <__data_end+0x1>
     c60:	ce 01       	movw	r24, r28
     c62:	01 96       	adiw	r24, 0x01	; 1
     c64:	0e 94 a8 02 	call	0x550	; 0x550 <_ZN11motorDriver14set_setpoint_aEi>
		motor2.set_setpoint_a(setpoint_a_1);
     c68:	60 91 04 21 	lds	r22, 0x2104	; 0x802104 <__data_end>
     c6c:	70 91 05 21 	lds	r23, 0x2105	; 0x802105 <__data_end+0x1>
     c70:	ce 01       	movw	r24, r28
     c72:	ce 96       	adiw	r24, 0x3e	; 62
     c74:	0e 94 a8 02 	call	0x550	; 0x550 <_ZN11motorDriver14set_setpoint_aEi>
			// PWM signal is calculated using the sum of each action that is
			// enabled (the first three arguments). The pins are modulated
			// according to the drive mode. True means higher performance,
			// false means lower current (ish). Higher performance is recommended,
			// especially for lower pwm's.
		diag_1 = motor1.run(true,true,false,true);
     c78:	ee 24       	eor	r14, r14
     c7a:	e3 94       	inc	r14
     c7c:	00 e0       	ldi	r16, 0x00	; 0
     c7e:	21 e0       	ldi	r18, 0x01	; 1
     c80:	41 e0       	ldi	r20, 0x01	; 1
     c82:	be 01       	movw	r22, r28
     c84:	6f 5f       	subi	r22, 0xFF	; 255
     c86:	7f 4f       	sbci	r23, 0xFF	; 255
     c88:	ce 01       	movw	r24, r28
     c8a:	85 58       	subi	r24, 0x85	; 133
     c8c:	9f 4f       	sbci	r25, 0xFF	; 255
     c8e:	0e 94 b4 02 	call	0x568	; 0x568 <_ZN11motorDriver3runEbbbb>
		diag_2 = motor2.run(true,true,false,true);	// Currently is set to run in PI mode
     c92:	21 e0       	ldi	r18, 0x01	; 1
     c94:	41 e0       	ldi	r20, 0x01	; 1
     c96:	be 01       	movw	r22, r28
     c98:	62 5c       	subi	r22, 0xC2	; 194
     c9a:	7f 4f       	sbci	r23, 0xFF	; 255
     c9c:	ce 01       	movw	r24, r28
     c9e:	8b 57       	subi	r24, 0x7B	; 123
     ca0:	9f 4f       	sbci	r25, 0xFF	; 255
     ca2:	0e 94 b4 02 	call	0x568	; 0x568 <_ZN11motorDriver3runEbbbb>

		// Updating diagnostic shares
		pwm_tot_1 = diag_1.pwm_tot;
     ca6:	ed 96       	adiw	r28, 0x3d	; 61
     ca8:	8e ad       	ldd	r24, Y+62	; 0x3e
     caa:	9f ad       	ldd	r25, Y+63	; 0x3f
     cac:	ed 97       	sbiw	r28, 0x3d	; 61
     cae:	80 93 1a 21 	sts	0x211A, r24	; 0x80211a <pwm_tot_1>
     cb2:	90 93 1b 21 	sts	0x211B, r25	; 0x80211b <pwm_tot_1+0x1>
		pwm_tot_2 = diag_2.pwm_tot;
     cb6:	cb 57       	subi	r28, 0x7B	; 123
     cb8:	df 4f       	sbci	r29, 0xFF	; 255
     cba:	88 81       	ld	r24, Y
     cbc:	99 81       	ldd	r25, Y+1	; 0x01
     cbe:	c5 58       	subi	r28, 0x85	; 133
     cc0:	d0 40       	sbci	r29, 0x00	; 0
     cc2:	80 93 18 21 	sts	0x2118, r24	; 0x802118 <pwm_tot_2>
     cc6:	90 93 19 21 	sts	0x2119, r25	; 0x802119 <pwm_tot_2+0x1>
		pwm_lin_1 = diag_1.pwm_lin;
     cca:	ef 96       	adiw	r28, 0x3f	; 63
     ccc:	8e ad       	ldd	r24, Y+62	; 0x3e
     cce:	9f ad       	ldd	r25, Y+63	; 0x3f
     cd0:	ef 97       	sbiw	r28, 0x3f	; 63
     cd2:	80 93 0e 21 	sts	0x210E, r24	; 0x80210e <pwm_lin_1>
     cd6:	90 93 0f 21 	sts	0x210F, r25	; 0x80210f <pwm_lin_1+0x1>
		pwm_lin_2 = diag_2.pwm_lin;
     cda:	c9 57       	subi	r28, 0x79	; 121
     cdc:	df 4f       	sbci	r29, 0xFF	; 255
     cde:	88 81       	ld	r24, Y
     ce0:	99 81       	ldd	r25, Y+1	; 0x01
     ce2:	c7 58       	subi	r28, 0x87	; 135
     ce4:	d0 40       	sbci	r29, 0x00	; 0
     ce6:	80 93 0c 21 	sts	0x210C, r24	; 0x80210c <pwm_lin_2>
     cea:	90 93 0d 21 	sts	0x210D, r25	; 0x80210d <pwm_lin_2+0x1>
		pwm_ang_1 = diag_1.pwm_ang;
     cee:	c1 58       	subi	r28, 0x81	; 129
     cf0:	df 4f       	sbci	r29, 0xFF	; 255
     cf2:	88 81       	ld	r24, Y
     cf4:	99 81       	ldd	r25, Y+1	; 0x01
     cf6:	cf 57       	subi	r28, 0x7F	; 127
     cf8:	d0 40       	sbci	r29, 0x00	; 0
     cfa:	80 93 0a 21 	sts	0x210A, r24	; 0x80210a <pwm_ang_1>
     cfe:	90 93 0b 21 	sts	0x210B, r25	; 0x80210b <pwm_ang_1+0x1>
		pwm_ang_2 = diag_2.pwm_ang;
     d02:	c7 57       	subi	r28, 0x77	; 119
     d04:	df 4f       	sbci	r29, 0xFF	; 255
     d06:	88 81       	ld	r24, Y
     d08:	99 81       	ldd	r25, Y+1	; 0x01
     d0a:	c9 58       	subi	r28, 0x89	; 137
     d0c:	d0 40       	sbci	r29, 0x00	; 0
     d0e:	80 93 08 21 	sts	0x2108, r24	; 0x802108 <pwm_ang_2>
     d12:	90 93 09 21 	sts	0x2109, r25	; 0x802109 <pwm_ang_2+0x1>
		esum_l_1 = diag_1.esum_l_;
     d16:	cd 57       	subi	r28, 0x7D	; 125
     d18:	df 4f       	sbci	r29, 0xFF	; 255
     d1a:	88 81       	ld	r24, Y
     d1c:	99 81       	ldd	r25, Y+1	; 0x01
     d1e:	c3 58       	subi	r28, 0x83	; 131
     d20:	d0 40       	sbci	r29, 0x00	; 0
     d22:	80 93 16 21 	sts	0x2116, r24	; 0x802116 <esum_l_1>
     d26:	90 93 17 21 	sts	0x2117, r25	; 0x802117 <esum_l_1+0x1>
		esum_l_2 = diag_2.esum_l_;
     d2a:	c3 57       	subi	r28, 0x73	; 115
     d2c:	df 4f       	sbci	r29, 0xFF	; 255
     d2e:	88 81       	ld	r24, Y
     d30:	99 81       	ldd	r25, Y+1	; 0x01
     d32:	cd 58       	subi	r28, 0x8D	; 141
     d34:	d0 40       	sbci	r29, 0x00	; 0
     d36:	80 93 14 21 	sts	0x2114, r24	; 0x802114 <esum_l_2>
     d3a:	90 93 15 21 	sts	0x2115, r25	; 0x802115 <esum_l_2+0x1>
		esum_a_1 = diag_1.esum_a_;
     d3e:	cf 57       	subi	r28, 0x7F	; 127
     d40:	df 4f       	sbci	r29, 0xFF	; 255
     d42:	88 81       	ld	r24, Y
     d44:	99 81       	ldd	r25, Y+1	; 0x01
     d46:	c1 58       	subi	r28, 0x81	; 129
     d48:	d0 40       	sbci	r29, 0x00	; 0
     d4a:	80 93 12 21 	sts	0x2112, r24	; 0x802112 <esum_a_1>
     d4e:	90 93 13 21 	sts	0x2113, r25	; 0x802113 <esum_a_1+0x1>
		esum_a_2 = diag_2.esum_a_;
     d52:	c5 57       	subi	r28, 0x75	; 117
     d54:	df 4f       	sbci	r29, 0xFF	; 255
     d56:	88 81       	ld	r24, Y
     d58:	99 81       	ldd	r25, Y+1	; 0x01
     d5a:	cb 58       	subi	r28, 0x8B	; 139
     d5c:	d0 40       	sbci	r29, 0x00	; 0
     d5e:	80 93 10 21 	sts	0x2110, r24	; 0x802110 <esum_a_2>
     d62:	90 93 11 21 	sts	0x2111, r25	; 0x802111 <esum_a_2+0x1>

		// Sending serial diagnostics
		//*p_serial << "PWM setting (M1)" << pwm_1 << " (M2) " << pwm_2 << " time " << previousTicks << endl;

		// Delaying
		previousTicks = xTaskGetTickCount();
     d66:	0e 94 72 18 	call	0x30e4	; 0x30e4 <xTaskGetTickCount>
     d6a:	c1 57       	subi	r28, 0x71	; 113
     d6c:	df 4f       	sbci	r29, 0xFF	; 255
     d6e:	68 83       	st	Y, r22
     d70:	79 83       	std	Y+1, r23	; 0x01
     d72:	8a 83       	std	Y+2, r24	; 0x02
     d74:	9b 83       	std	Y+3, r25	; 0x03
     d76:	cf 58       	subi	r28, 0x8F	; 143
     d78:	d0 40       	sbci	r29, 0x00	; 0
		 *  @param milliseconds The duration of the delay interval in milliseconds
		 */
		void delay_from_to_ms (portTickType& from_ticks, portTickType milliseconds)
		{
			portTickType interval = configMS_TO_TICKS (milliseconds);
			vTaskDelayUntil (&from_ticks, interval);
     d7a:	4a e0       	ldi	r20, 0x0A	; 10
     d7c:	50 e0       	ldi	r21, 0x00	; 0
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	ce 01       	movw	r24, r28
     d84:	81 57       	subi	r24, 0x71	; 113
     d86:	9f 4f       	sbci	r25, 0xFF	; 255
     d88:	0e 94 0b 1a 	call	0x3416	; 0x3416 <vTaskDelayUntil>
     d8c:	c7 ce       	rjmp	.-626    	; 0xb1c <_ZN10task_motor3runEv+0x126>

00000d8e <_ZN10task_motorC1EPKchjP8emstream>:
 *                      (default: configMINIMAL_STACK_SIZE)
 *  @param p_ser_dev Pointer to a serial device (port, radio, SD card, etc.) which can
 *                   be used by this task to communicate (default: NULL)
 */

task_motor::task_motor (const char* a_name, 
     d8e:	0f 93       	push	r16
     d90:	1f 93       	push	r17
     d92:	cf 93       	push	r28
     d94:	df 93       	push	r29
     d96:	ec 01       	movw	r28, r24
					  unsigned portBASE_TYPE a_priority, 
					  size_t a_stack_size,
					  emstream* p_ser_dev
					 )
	: frt_task (a_name, a_priority, a_stack_size, p_ser_dev)
     d98:	0e 94 a8 1c 	call	0x3950	; 0x3950 <_ZN8frt_taskC1EPKchjP8emstream>
     d9c:	8b e2       	ldi	r24, 0x2B	; 43
     d9e:	90 e2       	ldi	r25, 0x20	; 32
     da0:	88 83       	st	Y, r24
     da2:	99 83       	std	Y+1, r25	; 0x01
{
	
	// Nothing is done in the body of this constructor. All the work is done in the
	// call to the frt_task constructor on the line just above this one
}
     da4:	df 91       	pop	r29
     da6:	cf 91       	pop	r28
     da8:	1f 91       	pop	r17
     daa:	0f 91       	pop	r16
     dac:	08 95       	ret

00000dae <_ZN16task_Robot_State3runEv>:

//-------------------------------------------------------------------------------------


void task_Robot_State::run (void)
{
     dae:	cf 93       	push	r28
     db0:	df 93       	push	r29
     db2:	cd b7       	in	r28, 0x3d	; 61
     db4:	de b7       	in	r29, 0x3e	; 62
     db6:	28 97       	sbiw	r28, 0x08	; 8
     db8:	cd bf       	out	0x3d, r28	; 61
     dba:	de bf       	out	0x3e, r29	; 62
     dbc:	3c 01       	movw	r6, r24
	// Make a variable which will hold times to use for precise task scheduling
	portTickType previousTicks = xTaskGetTickCount ();
     dbe:	0e 94 72 18 	call	0x30e4	; 0x30e4 <xTaskGetTickCount>
     dc2:	69 83       	std	Y+1, r22	; 0x01
     dc4:	7a 83       	std	Y+2, r23	; 0x02
     dc6:	8b 83       	std	Y+3, r24	; 0x03
     dc8:	9c 83       	std	Y+4, r25	; 0x04
		 *  @param milliseconds The number of milliseconds to delay
		 */
		void delay_ms (portTickType milliseconds)
		{
			portTickType duration = configMS_TO_TICKS (milliseconds);
			vTaskDelay (duration);
     dca:	6a e0       	ldi	r22, 0x0A	; 10
     dcc:	70 e0       	ldi	r23, 0x00	; 0
     dce:	80 e0       	ldi	r24, 0x00	; 0
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 78 1a 	call	0x34f0	; 0x34f0 <vTaskDelay>
		case (0):
			//setting up quadrature encoders!
			// ENC1 is Left side of bot
			// ENC2 is right side of bot
			
			success = QDEC_Total_Setup(&PORTD, 4, false, 0, EVSYS_CHMUX_PORTD_PIN4_gc, false, EVSYS_QDIRM_00_gc, &TCD1, TC_EVSEL_CH0_gc, 0xFFFF); //setup M_ENC1 quad. encoder
     dd6:	55 24       	eor	r5, r5
     dd8:	5a 94       	dec	r5
				M_DifferTick = (M_2_DistTick - M_1_DistTick); //left shifted by two from earlier
				*p_serial << "Differential Encoder Values" << M_1_DistTick << " " << M_2_DistTick << endl;
				
				//remain in tick units (leftshifted two) to maintain maximal resolution
				//calculate v1 & v2 (ticks/timetasktakestorun)
				M_1_v1 = M_1_DistTick / (DELAYINTERVAL_MS << 2);			//calculate linear velocity of left wheel (ticks/ms)
     dda:	0f 2e       	mov	r0, r31
     ddc:	f4 e1       	ldi	r31, 0x14	; 20
     dde:	2f 2e       	mov	r2, r31
     de0:	31 2c       	mov	r3, r1
     de2:	f0 2d       	mov	r31, r0
				M_2_v2 = M_2_DistTick / (DELAYINTERVAL_MS << 2);			//calculate linear velocity of right wheel (ticks/ms)
				*p_serial << "M vel 1" << hex << (M_1_v1>>0) << " " << (M_1_v1>>1)  << " M2 V " << (M_2_v2) << " " << (M_2_v2 >> 1) << endl;
				//calculate vbar and angular position of the drivebase in robot coordinates.
				R_V_Bar = (M_2_v2 + M_1_v1) / (2<<2);					//calculate Vbar for the robot (ticks/ms)
				R_POS_Y_delta = ((M_2_v2 + M_1_v1) / (2<<2)) * (DELAYINTERVAL_MS << 2); //delta y position in local frame
     de4:	0f 2e       	mov	r0, r31
     de6:	f4 e1       	ldi	r31, 0x14	; 20
     de8:	4f 2e       	mov	r4, r31
     dea:	f0 2d       	mov	r31, r0
	bool success = false; //declare bool for checking success of function calls
	//configure both quadrature counter elements
	
	while(1)
	{
		switch (state)
     dec:	f3 01       	movw	r30, r6
     dee:	84 85       	ldd	r24, Z+12	; 0x0c
     df0:	88 23       	and	r24, r24
     df2:	21 f0       	breq	.+8      	; 0xdfc <_ZN16task_Robot_State3runEv+0x4e>
     df4:	81 30       	cpi	r24, 0x01	; 1
     df6:	09 f4       	brne	.+2      	; 0xdfa <_ZN16task_Robot_State3runEv+0x4c>
     df8:	46 c0       	rjmp	.+140    	; 0xe86 <_ZN16task_Robot_State3runEv+0xd8>
     dfa:	a7 c1       	rjmp	.+846    	; 0x114a <_ZN16task_Robot_State3runEv+0x39c>
		case (0):
			//setting up quadrature encoders!
			// ENC1 is Left side of bot
			// ENC2 is right side of bot
			
			success = QDEC_Total_Setup(&PORTD, 4, false, 0, EVSYS_CHMUX_PORTD_PIN4_gc, false, EVSYS_QDIRM_00_gc, &TCD1, TC_EVSEL_CH0_gc, 0xFFFF); //setup M_ENC1 quad. encoder
     dfc:	5f 92       	push	r5
     dfe:	5f 92       	push	r5
     e00:	68 94       	set
     e02:	88 24       	eor	r8, r8
     e04:	83 f8       	bld	r8, 3
     e06:	0f 2e       	mov	r0, r31
     e08:	f0 e4       	ldi	r31, 0x40	; 64
     e0a:	af 2e       	mov	r10, r31
     e0c:	f9 e0       	ldi	r31, 0x09	; 9
     e0e:	bf 2e       	mov	r11, r31
     e10:	f0 2d       	mov	r31, r0
     e12:	c1 2c       	mov	r12, r1
     e14:	e1 2c       	mov	r14, r1
     e16:	0c e6       	ldi	r16, 0x6C	; 108
     e18:	20 e0       	ldi	r18, 0x00	; 0
     e1a:	40 e0       	ldi	r20, 0x00	; 0
     e1c:	64 e0       	ldi	r22, 0x04	; 4
     e1e:	80 e6       	ldi	r24, 0x60	; 96
     e20:	96 e0       	ldi	r25, 0x06	; 6
     e22:	0e 94 bb 04 	call	0x976	; 0x976 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC1_struct13TC_EVSEL_enumj>
			//*p_serial << "ENC1 Setup Success? " << success << endl;
			success = false;
			success = QDEC_Total_Setup(&PORTE, 4, false, 2, EVSYS_CHMUX_PORTE_PIN4_gc, false, EVSYS_QDIRM_00_gc, &TCF0, TC_EVSEL_CH2_gc, 0xFFFF); //setup M_ENC2 quad. encoder
     e26:	5f 92       	push	r5
     e28:	5f 92       	push	r5
     e2a:	0f 2e       	mov	r0, r31
     e2c:	fa e0       	ldi	r31, 0x0A	; 10
     e2e:	8f 2e       	mov	r8, r31
     e30:	f0 2d       	mov	r31, r0
     e32:	0f 2e       	mov	r0, r31
     e34:	a1 2c       	mov	r10, r1
     e36:	fb e0       	ldi	r31, 0x0B	; 11
     e38:	bf 2e       	mov	r11, r31
     e3a:	f0 2d       	mov	r31, r0
     e3c:	04 e7       	ldi	r16, 0x74	; 116
     e3e:	22 e0       	ldi	r18, 0x02	; 2
     e40:	40 e0       	ldi	r20, 0x00	; 0
     e42:	64 e0       	ldi	r22, 0x04	; 4
     e44:	80 e8       	ldi	r24, 0x80	; 128
     e46:	96 e0       	ldi	r25, 0x06	; 6
     e48:	0e 94 89 04 	call	0x912	; 0x912 <_Z16QDEC_Total_SetupP11PORT_structhbh16EVSYS_CHMUX_enumb16EVSYS_QDIRM_enumP10TC0_struct13TC_EVSEL_enumj>
			//*p_serial << "ENC2 Setup Success? " << success << endl;
			M_Enc1_Val_Prev = QDEC_Read_TC(&TCD1); //read value of encoders for starting value
     e4c:	80 e4       	ldi	r24, 0x40	; 64
     e4e:	99 e0       	ldi	r25, 0x09	; 9
     e50:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <_Z12QDEC_Read_TCP10TC1_struct>
     e54:	f3 01       	movw	r30, r6
     e56:	87 8b       	std	Z+23, r24	; 0x17
     e58:	90 8f       	std	Z+24, r25	; 0x18
			M_Enc2_Val_Prev = QDEC_Read_TC(&TCF0);
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	9b e0       	ldi	r25, 0x0B	; 11
     e5e:	0e 94 ed 04 	call	0x9da	; 0x9da <_Z12QDEC_Read_TCP10TC0_struct>
     e62:	f3 01       	movw	r30, r6
     e64:	81 8f       	std	Z+25, r24	; 0x19
     e66:	92 8f       	std	Z+26, r25	; 0x1a
			R_THETA_Delta = 0; //zero out the angular position of the robot upon startup.
     e68:	13 a6       	std	Z+43, r1	; 0x2b
     e6a:	14 a6       	std	Z+44, r1	; 0x2c
			R_I_POS_X = 0;
     e6c:	15 aa       	std	Z+53, r1	; 0x35
     e6e:	16 aa       	std	Z+54, r1	; 0x36
			R_I_POS_Y = 0;
     e70:	17 aa       	std	Z+55, r1	; 0x37
     e72:	10 ae       	std	Z+56, r1	; 0x38
			transition_to(1);
     e74:	61 e0       	ldi	r22, 0x01	; 1
     e76:	c3 01       	movw	r24, r6
     e78:	0e 94 a4 1c 	call	0x3948	; 0x3948 <_ZN8frt_task13transition_toEh>
			break;
     e7c:	0f 90       	pop	r0
     e7e:	0f 90       	pop	r0
     e80:	0f 90       	pop	r0
     e82:	0f 90       	pop	r0
     e84:	62 c1       	rjmp	.+708    	; 0x114a <_ZN16task_Robot_State3runEv+0x39c>
			
		case (1):
				//get current encoder values
				M_Enc1_Val = -1 * QDEC_Read_TC(&TCD1); //multiply by -1 so that positive encoder count is forwards on both sides.
     e86:	80 e4       	ldi	r24, 0x40	; 64
     e88:	99 e0       	ldi	r25, 0x09	; 9
     e8a:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <_Z12QDEC_Read_TCP10TC1_struct>
     e8e:	91 95       	neg	r25
     e90:	81 95       	neg	r24
     e92:	91 09       	sbc	r25, r1
     e94:	f3 01       	movw	r30, r6
     e96:	83 8b       	std	Z+19, r24	; 0x13
     e98:	94 8b       	std	Z+20, r25	; 0x14
				M_Enc2_Val = QDEC_Read_TC(&TCF0);
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	9b e0       	ldi	r25, 0x0B	; 11
     e9e:	0e 94 ed 04 	call	0x9da	; 0x9da <_Z12QDEC_Read_TCP10TC0_struct>
     ea2:	f3 01       	movw	r30, r6
     ea4:	85 8b       	std	Z+21, r24	; 0x15
     ea6:	96 8b       	std	Z+22, r25	; 0x16
				
				//calculate ticks elapsed since last iteration, we'll left shift by 2 bits to increase data resolution (at max speed, we run the risk of losing MSB data, should quantify this risk)
				M_1_DistTick = ((M_Enc1_Val-M_Enc1_Val_Prev) << 2);
     ea8:	e3 88       	ldd	r14, Z+19	; 0x13
     eaa:	f4 88       	ldd	r15, Z+20	; 0x14
     eac:	27 89       	ldd	r18, Z+23	; 0x17
     eae:	30 8d       	ldd	r19, Z+24	; 0x18
     eb0:	e2 1a       	sub	r14, r18
     eb2:	f3 0a       	sbc	r15, r19
     eb4:	ee 0c       	add	r14, r14
     eb6:	ff 1c       	adc	r15, r15
     eb8:	ee 0c       	add	r14, r14
     eba:	ff 1c       	adc	r15, r15
     ebc:	e3 8e       	std	Z+27, r14	; 0x1b
     ebe:	f4 8e       	std	Z+28, r15	; 0x1c
				M_2_DistTick = ((M_Enc2_Val-M_Enc2_Val_Prev) << 2);
     ec0:	21 8d       	ldd	r18, Z+25	; 0x19
     ec2:	32 8d       	ldd	r19, Z+26	; 0x1a
     ec4:	82 1b       	sub	r24, r18
     ec6:	93 0b       	sbc	r25, r19
     ec8:	8c 01       	movw	r16, r24
     eca:	00 0f       	add	r16, r16
     ecc:	11 1f       	adc	r17, r17
     ece:	00 0f       	add	r16, r16
     ed0:	11 1f       	adc	r17, r17
     ed2:	05 8f       	std	Z+29, r16	; 0x1d
     ed4:	16 8f       	std	Z+30, r17	; 0x1e
				//calculate differential ticks between the motors.
				//Positive M_DifferTick = CCW Rotation (right faster than left)
				//Negative M_DifferTick = CW Rotation (left side faster than right)
				M_DifferTick = (M_2_DistTick - M_1_DistTick); //left shifted by two from earlier
     ed6:	c8 01       	movw	r24, r16
     ed8:	8e 19       	sub	r24, r14
     eda:	9f 09       	sbc	r25, r15
     edc:	87 8f       	std	Z+31, r24	; 0x1f
     ede:	90 a3       	std	Z+32, r25	; 0x20
				*p_serial << "Differential Encoder Values" << M_1_DistTick << " " << M_2_DistTick << endl;
     ee0:	c6 80       	ldd	r12, Z+6	; 0x06
     ee2:	d7 80       	ldd	r13, Z+7	; 0x07
		 *          reference is used to string (bad pun) printable items together with 
		 *          many "<<" operators
		 */
		emstream& operator<< (const char* p_string)
		{
			puts (p_string);
     ee4:	6f e2       	ldi	r22, 0x2F	; 47
     ee6:	70 e2       	ldi	r23, 0x20	; 32
     ee8:	c6 01       	movw	r24, r12
     eea:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
     eee:	b7 01       	movw	r22, r14
     ef0:	c6 01       	movw	r24, r12
     ef2:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
     ef6:	7c 01       	movw	r14, r24
     ef8:	67 e7       	ldi	r22, 0x77	; 119
     efa:	70 e2       	ldi	r23, 0x20	; 32
     efc:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
     f00:	b8 01       	movw	r22, r16
     f02:	c7 01       	movw	r24, r14
     f04:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
     f08:	66 e0       	ldi	r22, 0x06	; 6
     f0a:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
				
				//remain in tick units (leftshifted two) to maintain maximal resolution
				//calculate v1 & v2 (ticks/timetasktakestorun)
				M_1_v1 = M_1_DistTick / (DELAYINTERVAL_MS << 2);			//calculate linear velocity of left wheel (ticks/ms)
     f0e:	f3 01       	movw	r30, r6
     f10:	83 8d       	ldd	r24, Z+27	; 0x1b
     f12:	94 8d       	ldd	r25, Z+28	; 0x1c
     f14:	b1 01       	movw	r22, r2
     f16:	0e 94 2f 28 	call	0x505e	; 0x505e <__divmodhi4>
     f1a:	7b 01       	movw	r14, r22
     f1c:	61 a3       	std	Z+33, r22	; 0x21
     f1e:	72 a3       	std	Z+34, r23	; 0x22
				M_2_v2 = M_2_DistTick / (DELAYINTERVAL_MS << 2);			//calculate linear velocity of right wheel (ticks/ms)
     f20:	85 8d       	ldd	r24, Z+29	; 0x1d
     f22:	96 8d       	ldd	r25, Z+30	; 0x1e
     f24:	b1 01       	movw	r22, r2
     f26:	0e 94 2f 28 	call	0x505e	; 0x505e <__divmodhi4>
     f2a:	8b 01       	movw	r16, r22
     f2c:	63 a3       	std	Z+35, r22	; 0x23
     f2e:	74 a3       	std	Z+36, r23	; 0x24
				*p_serial << "M vel 1" << hex << (M_1_v1>>0) << " " << (M_1_v1>>1)  << " M2 V " << (M_2_v2) << " " << (M_2_v2 >> 1) << endl;
     f30:	c6 80       	ldd	r12, Z+6	; 0x06
     f32:	d7 80       	ldd	r13, Z+7	; 0x07
     f34:	6b e4       	ldi	r22, 0x4B	; 75
     f36:	70 e2       	ldi	r23, 0x20	; 32
     f38:	c6 01       	movw	r24, r12
     f3a:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
     f3e:	63 e0       	ldi	r22, 0x03	; 3
     f40:	c6 01       	movw	r24, r12
     f42:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
     f46:	b7 01       	movw	r22, r14
     f48:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
     f4c:	6c 01       	movw	r12, r24
     f4e:	67 e7       	ldi	r22, 0x77	; 119
     f50:	70 e2       	ldi	r23, 0x20	; 32
     f52:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
     f56:	b7 01       	movw	r22, r14
     f58:	75 95       	asr	r23
     f5a:	67 95       	ror	r22
     f5c:	c6 01       	movw	r24, r12
     f5e:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
     f62:	7c 01       	movw	r14, r24
     f64:	63 e5       	ldi	r22, 0x53	; 83
     f66:	70 e2       	ldi	r23, 0x20	; 32
     f68:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
     f6c:	b8 01       	movw	r22, r16
     f6e:	c7 01       	movw	r24, r14
     f70:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
     f74:	7c 01       	movw	r14, r24
     f76:	67 e7       	ldi	r22, 0x77	; 119
     f78:	70 e2       	ldi	r23, 0x20	; 32
     f7a:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
     f7e:	b8 01       	movw	r22, r16
     f80:	75 95       	asr	r23
     f82:	67 95       	ror	r22
     f84:	c7 01       	movw	r24, r14
     f86:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
     f8a:	66 e0       	ldi	r22, 0x06	; 6
     f8c:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
				//calculate vbar and angular position of the drivebase in robot coordinates.
				R_V_Bar = (M_2_v2 + M_1_v1) / (2<<2);					//calculate Vbar for the robot (ticks/ms)
     f90:	f3 01       	movw	r30, r6
     f92:	23 a1       	ldd	r18, Z+35	; 0x23
     f94:	34 a1       	ldd	r19, Z+36	; 0x24
     f96:	81 a1       	ldd	r24, Z+33	; 0x21
     f98:	92 a1       	ldd	r25, Z+34	; 0x22
     f9a:	89 01       	movw	r16, r18
     f9c:	08 0f       	add	r16, r24
     f9e:	19 1f       	adc	r17, r25
     fa0:	11 23       	and	r17, r17
     fa2:	14 f4       	brge	.+4      	; 0xfa8 <_ZN16task_Robot_State3runEv+0x1fa>
     fa4:	09 5f       	subi	r16, 0xF9	; 249
     fa6:	1f 4f       	sbci	r17, 0xFF	; 255
     fa8:	15 95       	asr	r17
     faa:	07 95       	ror	r16
     fac:	15 95       	asr	r17
     fae:	07 95       	ror	r16
     fb0:	15 95       	asr	r17
     fb2:	07 95       	ror	r16
     fb4:	f3 01       	movw	r30, r6
     fb6:	05 a3       	std	Z+37, r16	; 0x25
     fb8:	16 a3       	std	Z+38, r17	; 0x26
				R_POS_Y_delta = ((M_2_v2 + M_1_v1) / (2<<2)) * (DELAYINTERVAL_MS << 2); //delta y position in local frame
     fba:	40 9e       	mul	r4, r16
     fbc:	50 01       	movw	r10, r0
     fbe:	41 9e       	mul	r4, r17
     fc0:	b0 0c       	add	r11, r0
     fc2:	11 24       	eor	r1, r1
     fc4:	a1 a6       	std	Z+41, r10	; 0x29
     fc6:	b2 a6       	std	Z+42, r11	; 0x2a
				R_Omega = (M_2_v2 - M_1_v1) / (WHEELBASE_TICKS << 2);	//angular velocity (rad/ms) -> only calculated for debugging. Angular position is calculated directly.
     fc8:	28 1b       	sub	r18, r24
     fca:	39 0b       	sbc	r19, r25
     fcc:	c9 01       	movw	r24, r18
     fce:	6c e4       	ldi	r22, 0x4C	; 76
     fd0:	78 e0       	ldi	r23, 0x08	; 8
     fd2:	0e 94 2f 28 	call	0x505e	; 0x505e <__divmodhi4>
     fd6:	6b 01       	movw	r12, r22
     fd8:	67 a3       	std	Z+39, r22	; 0x27
     fda:	70 a7       	std	Z+40, r23	; 0x28
				R_THETA_Delta = ((M_2_v2 - M_1_v1) * (DELAYINTERVAL_MS << 2)) / (WHEELBASE_TICKS<<2);		//calculate angular position change for the robot (we calculate directly to avoid losing resolution (rad))
     fdc:	42 9e       	mul	r4, r18
     fde:	c0 01       	movw	r24, r0
     fe0:	43 9e       	mul	r4, r19
     fe2:	90 0d       	add	r25, r0
     fe4:	11 24       	eor	r1, r1
     fe6:	6c e4       	ldi	r22, 0x4C	; 76
     fe8:	78 e0       	ldi	r23, 0x08	; 8
     fea:	0e 94 2f 28 	call	0x505e	; 0x505e <__divmodhi4>
     fee:	7b 01       	movw	r14, r22
     ff0:	63 a7       	std	Z+43, r22	; 0x2b
     ff2:	74 a7       	std	Z+44, r23	; 0x2c
				
				*p_serial << "R_V_Bar " << hex << R_V_Bar << " RPOSYDELTA " << R_POS_Y_delta << " ROMEGA " << R_Omega << " R_THETA_DELTA " << R_THETA_Delta << endl;
     ff4:	86 80       	ldd	r8, Z+6	; 0x06
     ff6:	97 80       	ldd	r9, Z+7	; 0x07
     ff8:	6a e5       	ldi	r22, 0x5A	; 90
     ffa:	70 e2       	ldi	r23, 0x20	; 32
     ffc:	c4 01       	movw	r24, r8
     ffe:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    1002:	63 e0       	ldi	r22, 0x03	; 3
    1004:	c4 01       	movw	r24, r8
    1006:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    100a:	b8 01       	movw	r22, r16
    100c:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
    1010:	8c 01       	movw	r16, r24
    1012:	63 e6       	ldi	r22, 0x63	; 99
    1014:	70 e2       	ldi	r23, 0x20	; 32
    1016:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    101a:	b5 01       	movw	r22, r10
    101c:	c8 01       	movw	r24, r16
    101e:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
    1022:	8c 01       	movw	r16, r24
    1024:	60 e7       	ldi	r22, 0x70	; 112
    1026:	70 e2       	ldi	r23, 0x20	; 32
    1028:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    102c:	b6 01       	movw	r22, r12
    102e:	c8 01       	movw	r24, r16
    1030:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
    1034:	8c 01       	movw	r16, r24
    1036:	69 e7       	ldi	r22, 0x79	; 121
    1038:	70 e2       	ldi	r23, 0x20	; 32
    103a:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    103e:	b7 01       	movw	r22, r14
    1040:	c8 01       	movw	r24, r16
    1042:	0e 94 c1 1f 	call	0x3f82	; 0x3f82 <_ZN8emstreamlsEi>
    1046:	66 e0       	ldi	r22, 0x06	; 6
    1048:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
				R_INERT_Theta = R_INERT_Theta + (R_THETA_Delta>>2); //update the angular position of the robot with the new estimate (right shift two for compatibility).
    104c:	f3 01       	movw	r30, r6
    104e:	03 a5       	ldd	r16, Z+43	; 0x2b
    1050:	14 a5       	ldd	r17, Z+44	; 0x2c
    1052:	15 95       	asr	r17
    1054:	07 95       	ror	r16
    1056:	15 95       	asr	r17
    1058:	07 95       	ror	r16
    105a:	87 a5       	ldd	r24, Z+47	; 0x2f
    105c:	90 a9       	ldd	r25, Z+48	; 0x30
    105e:	08 0f       	add	r16, r24
    1060:	19 1f       	adc	r17, r25
    1062:	07 a7       	std	Z+47, r16	; 0x2f
    1064:	10 ab       	std	Z+48, r17	; 0x30
				//now translate R_POS_Y_delta back to inertial frame
				
				R_I_POS_X_delta = R_POS_Y_delta * cos(R_INERT_Theta);	//calculate vbar component in x inertial frame
    1066:	61 a5       	ldd	r22, Z+41	; 0x29
    1068:	72 a5       	ldd	r23, Z+42	; 0x2a
    106a:	07 2e       	mov	r0, r23
    106c:	00 0c       	add	r0, r0
    106e:	88 0b       	sbc	r24, r24
    1070:	99 0b       	sbc	r25, r25
    1072:	0e 94 4d 26 	call	0x4c9a	; 0x4c9a <__floatsisf>
    1076:	4b 01       	movw	r8, r22
    1078:	5c 01       	movw	r10, r24
    107a:	b8 01       	movw	r22, r16
    107c:	01 2e       	mov	r0, r17
    107e:	00 0c       	add	r0, r0
    1080:	88 0b       	sbc	r24, r24
    1082:	99 0b       	sbc	r25, r25
    1084:	0e 94 4d 26 	call	0x4c9a	; 0x4c9a <__floatsisf>
    1088:	6d 83       	std	Y+5, r22	; 0x05
    108a:	7e 83       	std	Y+6, r23	; 0x06
    108c:	8f 83       	std	Y+7, r24	; 0x07
    108e:	98 87       	std	Y+8, r25	; 0x08
    1090:	0e 94 9e 25 	call	0x4b3c	; 0x4b3c <cos>
    1094:	9b 01       	movw	r18, r22
    1096:	ac 01       	movw	r20, r24
    1098:	c5 01       	movw	r24, r10
    109a:	b4 01       	movw	r22, r8
    109c:	0e 94 47 27 	call	0x4e8e	; 0x4e8e <__mulsf3>
    10a0:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__fixsfsi>
    10a4:	6b 01       	movw	r12, r22
    10a6:	7c 01       	movw	r14, r24
    10a8:	f3 01       	movw	r30, r6
    10aa:	61 ab       	std	Z+49, r22	; 0x31
    10ac:	72 ab       	std	Z+50, r23	; 0x32
				R_I_POS_Y_delta = R_POS_Y_delta * sin(R_INERT_Theta);	//calculate vbar component in y intertial frame
    10ae:	6d 81       	ldd	r22, Y+5	; 0x05
    10b0:	7e 81       	ldd	r23, Y+6	; 0x06
    10b2:	8f 81       	ldd	r24, Y+7	; 0x07
    10b4:	98 85       	ldd	r25, Y+8	; 0x08
    10b6:	0e 94 b4 27 	call	0x4f68	; 0x4f68 <sin>
    10ba:	9b 01       	movw	r18, r22
    10bc:	ac 01       	movw	r20, r24
    10be:	c5 01       	movw	r24, r10
    10c0:	b4 01       	movw	r22, r8
    10c2:	0e 94 47 27 	call	0x4e8e	; 0x4e8e <__mulsf3>
    10c6:	0e 94 15 26 	call	0x4c2a	; 0x4c2a <__fixsfsi>
    10ca:	f3 01       	movw	r30, r6
    10cc:	63 ab       	std	Z+51, r22	; 0x33
    10ce:	74 ab       	std	Z+52, r23	; 0x34
				R_I_POS_X = R_I_POS_X + (R_I_POS_X_delta>>2);				//compute new robot position in X inertial
    10d0:	d5 94       	asr	r13
    10d2:	c7 94       	ror	r12
    10d4:	d5 94       	asr	r13
    10d6:	c7 94       	ror	r12
    10d8:	25 a9       	ldd	r18, Z+53	; 0x35
    10da:	36 a9       	ldd	r19, Z+54	; 0x36
    10dc:	c2 0e       	add	r12, r18
    10de:	d3 1e       	adc	r13, r19
    10e0:	c5 aa       	std	Z+53, r12	; 0x35
    10e2:	d6 aa       	std	Z+54, r13	; 0x36
				R_I_POS_Y = R_I_POS_Y + (R_I_POS_Y_delta>>2);				//compute new robot position in Y inertial
    10e4:	ab 01       	movw	r20, r22
    10e6:	55 95       	asr	r21
    10e8:	47 95       	ror	r20
    10ea:	55 95       	asr	r21
    10ec:	47 95       	ror	r20
    10ee:	87 a9       	ldd	r24, Z+55	; 0x37
    10f0:	90 ad       	ldd	r25, Z+56	; 0x38
    10f2:	ba 01       	movw	r22, r20
    10f4:	68 0f       	add	r22, r24
    10f6:	79 1f       	adc	r23, r25
    10f8:	67 ab       	std	Z+55, r22	; 0x37
    10fa:	70 af       	std	Z+56, r23	; 0x38
				
				//we are back to regular no leftshift data!
				//output X,Y,Theta to motordriver task via shares.
				Robot_Pos_X_INERT = R_I_POS_X;
    10fc:	c0 92 20 21 	sts	0x2120, r12	; 0x802120 <Robot_Pos_X_INERT>
    1100:	d0 92 21 21 	sts	0x2121, r13	; 0x802121 <Robot_Pos_X_INERT+0x1>
				Robot_Pos_Y_INERT = R_I_POS_Y;
    1104:	60 93 1e 21 	sts	0x211E, r22	; 0x80211e <Robot_Pos_Y_INERT>
    1108:	70 93 1f 21 	sts	0x211F, r23	; 0x80211f <Robot_Pos_Y_INERT+0x1>
				Robot_Angle_Theta_INERT = R_INERT_Theta;
    110c:	00 93 1c 21 	sts	0x211C, r16	; 0x80211c <Robot_Angle_Theta_INERT>
    1110:	10 93 1d 21 	sts	0x211D, r17	; 0x80211d <Robot_Angle_Theta_INERT+0x1>
				
				
				
				M_Enc1_Val_Prev = M_Enc1_Val;
    1114:	83 89       	ldd	r24, Z+19	; 0x13
    1116:	94 89       	ldd	r25, Z+20	; 0x14
    1118:	87 8b       	std	Z+23, r24	; 0x17
    111a:	90 8f       	std	Z+24, r25	; 0x18
				M_Enc2_Val_Prev = M_Enc2_Val;
    111c:	85 89       	ldd	r24, Z+21	; 0x15
    111e:	96 89       	ldd	r25, Z+22	; 0x16
    1120:	81 8f       	std	Z+25, r24	; 0x19
    1122:	92 8f       	std	Z+26, r25	; 0x1a
				runs++;
    1124:	86 85       	ldd	r24, Z+14	; 0x0e
    1126:	97 85       	ldd	r25, Z+15	; 0x0f
    1128:	a0 89       	ldd	r26, Z+16	; 0x10
    112a:	b1 89       	ldd	r27, Z+17	; 0x11
    112c:	01 96       	adiw	r24, 0x01	; 1
    112e:	a1 1d       	adc	r26, r1
    1130:	b1 1d       	adc	r27, r1
    1132:	86 87       	std	Z+14, r24	; 0x0e
    1134:	97 87       	std	Z+15, r25	; 0x0f
    1136:	a0 8b       	std	Z+16, r26	; 0x10
    1138:	b1 8b       	std	Z+17, r27	; 0x11
		 *  @param milliseconds The duration of the delay interval in milliseconds
		 */
		void delay_from_to_ms (portTickType& from_ticks, portTickType milliseconds)
		{
			portTickType interval = configMS_TO_TICKS (milliseconds);
			vTaskDelayUntil (&from_ticks, interval);
    113a:	45 e0       	ldi	r20, 0x05	; 5
    113c:	50 e0       	ldi	r21, 0x00	; 0
    113e:	60 e0       	ldi	r22, 0x00	; 0
    1140:	70 e0       	ldi	r23, 0x00	; 0
    1142:	ce 01       	movw	r24, r28
    1144:	01 96       	adiw	r24, 0x01	; 1
    1146:	0e 94 0b 1a 	call	0x3416	; 0x3416 <vTaskDelayUntil>
				delay_from_to_ms(previousTicks,DELAYINTERVAL_MS);
			
			
		}
		runs++;
    114a:	f3 01       	movw	r30, r6
    114c:	86 85       	ldd	r24, Z+14	; 0x0e
    114e:	97 85       	ldd	r25, Z+15	; 0x0f
    1150:	a0 89       	ldd	r26, Z+16	; 0x10
    1152:	b1 89       	ldd	r27, Z+17	; 0x11
    1154:	01 96       	adiw	r24, 0x01	; 1
    1156:	a1 1d       	adc	r26, r1
    1158:	b1 1d       	adc	r27, r1
    115a:	86 87       	std	Z+14, r24	; 0x0e
    115c:	97 87       	std	Z+15, r25	; 0x0f
    115e:	a0 8b       	std	Z+16, r26	; 0x10
    1160:	b1 8b       	std	Z+17, r27	; 0x11
    1162:	4a e0       	ldi	r20, 0x0A	; 10
    1164:	50 e0       	ldi	r21, 0x00	; 0
    1166:	60 e0       	ldi	r22, 0x00	; 0
    1168:	70 e0       	ldi	r23, 0x00	; 0
    116a:	ce 01       	movw	r24, r28
    116c:	01 96       	adiw	r24, 0x01	; 1
    116e:	0e 94 0b 1a 	call	0x3416	; 0x3416 <vTaskDelayUntil>
    1172:	3c ce       	rjmp	.-904    	; 0xdec <_ZN16task_Robot_State3runEv+0x3e>

00001174 <_ZN16task_Robot_StateC1EPKchjP8emstream>:
 *                      (default: configMINIMAL_STACK_SIZE)
 *  @param p_ser_dev Pointer to a serial device (port, radio, SD card, etc.) which can
 *                   be used by this task to communicate (default: NULL)
 */

task_Robot_State::task_Robot_State (const char* a_name, 
    1174:	0f 93       	push	r16
    1176:	1f 93       	push	r17
    1178:	cf 93       	push	r28
    117a:	df 93       	push	r29
    117c:	ec 01       	movw	r28, r24
					  unsigned portBASE_TYPE a_priority, 
					  size_t a_stack_size,
					  emstream* p_ser_dev
					 )
	: frt_task (a_name, a_priority, a_stack_size, p_ser_dev)
    117e:	0e 94 a8 1c 	call	0x3950	; 0x3950 <_ZN8frt_taskC1EPKchjP8emstream>
    1182:	8d e8       	ldi	r24, 0x8D	; 141
    1184:	90 e2       	ldi	r25, 0x20	; 32
    1186:	88 83       	st	Y, r24
    1188:	99 83       	std	Y+1, r25	; 0x01
{
	//This constructor does nothing.
	
}
    118a:	df 91       	pop	r29
    118c:	cf 91       	pop	r28
    118e:	1f 91       	pop	r17
    1190:	0f 91       	pop	r16
    1192:	08 95       	ret

00001194 <_Z8CCPWritePVhh>:
    1194:	0f 93       	push	r16
    1196:	cf 93       	push	r28
    1198:	df 93       	push	r29
    119a:	1f 92       	push	r1
    119c:	cd b7       	in	r28, 0x3d	; 61
    119e:	de b7       	in	r29, 0x3e	; 62
    11a0:	2f b7       	in	r18, 0x3f	; 63
    11a2:	29 83       	std	Y+1, r18	; 0x01
    11a4:	f8 94       	cli
    11a6:	1b be       	out	0x3b, r1	; 59
    11a8:	fc 01       	movw	r30, r24
    11aa:	08 ed       	ldi	r16, 0xD8	; 216
    11ac:	04 bf       	out	0x34, r16	; 52
    11ae:	60 83       	st	Z, r22
    11b0:	89 81       	ldd	r24, Y+1	; 0x01
    11b2:	8f bf       	out	0x3f, r24	; 63
    11b4:	0f 90       	pop	r0
    11b6:	df 91       	pop	r29
    11b8:	cf 91       	pop	r28
    11ba:	0f 91       	pop	r16
    11bc:	08 95       	ret

000011be <_Z15config_SYSCLOCKv>:
    11be:	cf 93       	push	r28
    11c0:	df 93       	push	r29
    11c2:	1f 92       	push	r1
    11c4:	cd b7       	in	r28, 0x3d	; 61
    11c6:	de b7       	in	r29, 0x3e	; 62
    11c8:	8f b7       	in	r24, 0x3f	; 63
    11ca:	89 83       	std	Y+1, r24	; 0x01
    11cc:	f8 94       	cli
    11ce:	e0 e5       	ldi	r30, 0x50	; 80
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	8b ec       	ldi	r24, 0xCB	; 203
    11d4:	82 83       	std	Z+2, r24	; 0x02
    11d6:	80 81       	ld	r24, Z
    11d8:	88 60       	ori	r24, 0x08	; 8
    11da:	80 83       	st	Z, r24
    11dc:	81 81       	ldd	r24, Z+1	; 0x01
    11de:	83 ff       	sbrs	r24, 3
    11e0:	fd cf       	rjmp	.-6      	; 0x11dc <_Z15config_SYSCLOCKv+0x1e>
    11e2:	e0 e5       	ldi	r30, 0x50	; 80
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	82 ec       	ldi	r24, 0xC2	; 194
    11e8:	85 83       	std	Z+5, r24	; 0x05
    11ea:	80 81       	ld	r24, Z
    11ec:	80 61       	ori	r24, 0x10	; 16
    11ee:	80 83       	st	Z, r24
    11f0:	81 81       	ldd	r24, Z+1	; 0x01
    11f2:	84 ff       	sbrs	r24, 4
    11f4:	fd cf       	rjmp	.-6      	; 0x11f0 <_Z15config_SYSCLOCKv+0x32>
    11f6:	e0 e4       	ldi	r30, 0x40	; 64
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	60 81       	ld	r22, Z
    11fc:	68 7f       	andi	r22, 0xF8	; 248
    11fe:	64 60       	ori	r22, 0x04	; 4
    1200:	60 83       	st	Z, r22
    1202:	88 ed       	ldi	r24, 0xD8	; 216
    1204:	84 bf       	out	0x34, r24	; 52
    1206:	80 e4       	ldi	r24, 0x40	; 64
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	0e 94 ca 08 	call	0x1194	; 0x1194 <_Z8CCPWritePVhh>
    120e:	e0 e5       	ldi	r30, 0x50	; 80
    1210:	f0 e0       	ldi	r31, 0x00	; 0
    1212:	80 81       	ld	r24, Z
    1214:	8b 7f       	andi	r24, 0xFB	; 251
    1216:	80 83       	st	Z, r24
    1218:	89 81       	ldd	r24, Y+1	; 0x01
    121a:	8f bf       	out	0x3f, r24	; 63
    121c:	0f 90       	pop	r0
    121e:	df 91       	pop	r29
    1220:	cf 91       	pop	r28
    1222:	08 95       	ret

00001224 <sysclk_enable_module>:
    1224:	cf 93       	push	r28
    1226:	df 93       	push	r29
    1228:	1f 92       	push	r1
    122a:	cd b7       	in	r28, 0x3d	; 61
    122c:	de b7       	in	r29, 0x3e	; 62
    122e:	9f b7       	in	r25, 0x3f	; 63
    1230:	99 83       	std	Y+1, r25	; 0x01
    1232:	f8 94       	cli
    1234:	99 81       	ldd	r25, Y+1	; 0x01
    1236:	e8 2f       	mov	r30, r24
    1238:	f0 e0       	ldi	r31, 0x00	; 0
    123a:	e0 59       	subi	r30, 0x90	; 144
    123c:	ff 4f       	sbci	r31, 0xFF	; 255
    123e:	60 95       	com	r22
    1240:	80 81       	ld	r24, Z
    1242:	68 23       	and	r22, r24
    1244:	60 83       	st	Z, r22
    1246:	9f bf       	out	0x3f, r25	; 63
    1248:	0f 90       	pop	r0
    124a:	df 91       	pop	r29
    124c:	cf 91       	pop	r28
    124e:	08 95       	ret

00001250 <__vector_14>:
    1250:	1f 92       	push	r1
    1252:	0f 92       	push	r0
    1254:	0f b6       	in	r0, 0x3f	; 63
    1256:	0f 92       	push	r0
    1258:	11 24       	eor	r1, r1
    125a:	0b b6       	in	r0, 0x3b	; 59
    125c:	0f 92       	push	r0
    125e:	2f 93       	push	r18
    1260:	3f 93       	push	r19
    1262:	4f 93       	push	r20
    1264:	5f 93       	push	r21
    1266:	6f 93       	push	r22
    1268:	7f 93       	push	r23
    126a:	8f 93       	push	r24
    126c:	9f 93       	push	r25
    126e:	af 93       	push	r26
    1270:	bf 93       	push	r27
    1272:	ef 93       	push	r30
    1274:	ff 93       	push	r31
    1276:	e0 91 66 21 	lds	r30, 0x2166	; 0x802166 <tc_tcc0_ovf_callback>
    127a:	f0 91 67 21 	lds	r31, 0x2167	; 0x802167 <tc_tcc0_ovf_callback+0x1>
    127e:	30 97       	sbiw	r30, 0x00	; 0
    1280:	09 f0       	breq	.+2      	; 0x1284 <__vector_14+0x34>
    1282:	19 95       	eicall
    1284:	ff 91       	pop	r31
    1286:	ef 91       	pop	r30
    1288:	bf 91       	pop	r27
    128a:	af 91       	pop	r26
    128c:	9f 91       	pop	r25
    128e:	8f 91       	pop	r24
    1290:	7f 91       	pop	r23
    1292:	6f 91       	pop	r22
    1294:	5f 91       	pop	r21
    1296:	4f 91       	pop	r20
    1298:	3f 91       	pop	r19
    129a:	2f 91       	pop	r18
    129c:	0f 90       	pop	r0
    129e:	0b be       	out	0x3b, r0	; 59
    12a0:	0f 90       	pop	r0
    12a2:	0f be       	out	0x3f, r0	; 63
    12a4:	0f 90       	pop	r0
    12a6:	1f 90       	pop	r1
    12a8:	18 95       	reti

000012aa <__vector_15>:
    12aa:	1f 92       	push	r1
    12ac:	0f 92       	push	r0
    12ae:	0f b6       	in	r0, 0x3f	; 63
    12b0:	0f 92       	push	r0
    12b2:	11 24       	eor	r1, r1
    12b4:	0b b6       	in	r0, 0x3b	; 59
    12b6:	0f 92       	push	r0
    12b8:	2f 93       	push	r18
    12ba:	3f 93       	push	r19
    12bc:	4f 93       	push	r20
    12be:	5f 93       	push	r21
    12c0:	6f 93       	push	r22
    12c2:	7f 93       	push	r23
    12c4:	8f 93       	push	r24
    12c6:	9f 93       	push	r25
    12c8:	af 93       	push	r26
    12ca:	bf 93       	push	r27
    12cc:	ef 93       	push	r30
    12ce:	ff 93       	push	r31
    12d0:	e0 91 64 21 	lds	r30, 0x2164	; 0x802164 <tc_tcc0_err_callback>
    12d4:	f0 91 65 21 	lds	r31, 0x2165	; 0x802165 <tc_tcc0_err_callback+0x1>
    12d8:	30 97       	sbiw	r30, 0x00	; 0
    12da:	09 f0       	breq	.+2      	; 0x12de <__vector_15+0x34>
    12dc:	19 95       	eicall
    12de:	ff 91       	pop	r31
    12e0:	ef 91       	pop	r30
    12e2:	bf 91       	pop	r27
    12e4:	af 91       	pop	r26
    12e6:	9f 91       	pop	r25
    12e8:	8f 91       	pop	r24
    12ea:	7f 91       	pop	r23
    12ec:	6f 91       	pop	r22
    12ee:	5f 91       	pop	r21
    12f0:	4f 91       	pop	r20
    12f2:	3f 91       	pop	r19
    12f4:	2f 91       	pop	r18
    12f6:	0f 90       	pop	r0
    12f8:	0b be       	out	0x3b, r0	; 59
    12fa:	0f 90       	pop	r0
    12fc:	0f be       	out	0x3f, r0	; 63
    12fe:	0f 90       	pop	r0
    1300:	1f 90       	pop	r1
    1302:	18 95       	reti

00001304 <__vector_16>:
    1304:	1f 92       	push	r1
    1306:	0f 92       	push	r0
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	0f 92       	push	r0
    130c:	11 24       	eor	r1, r1
    130e:	0b b6       	in	r0, 0x3b	; 59
    1310:	0f 92       	push	r0
    1312:	2f 93       	push	r18
    1314:	3f 93       	push	r19
    1316:	4f 93       	push	r20
    1318:	5f 93       	push	r21
    131a:	6f 93       	push	r22
    131c:	7f 93       	push	r23
    131e:	8f 93       	push	r24
    1320:	9f 93       	push	r25
    1322:	af 93       	push	r26
    1324:	bf 93       	push	r27
    1326:	ef 93       	push	r30
    1328:	ff 93       	push	r31
    132a:	e0 91 62 21 	lds	r30, 0x2162	; 0x802162 <tc_tcc0_cca_callback>
    132e:	f0 91 63 21 	lds	r31, 0x2163	; 0x802163 <tc_tcc0_cca_callback+0x1>
    1332:	30 97       	sbiw	r30, 0x00	; 0
    1334:	09 f0       	breq	.+2      	; 0x1338 <__vector_16+0x34>
    1336:	19 95       	eicall
    1338:	ff 91       	pop	r31
    133a:	ef 91       	pop	r30
    133c:	bf 91       	pop	r27
    133e:	af 91       	pop	r26
    1340:	9f 91       	pop	r25
    1342:	8f 91       	pop	r24
    1344:	7f 91       	pop	r23
    1346:	6f 91       	pop	r22
    1348:	5f 91       	pop	r21
    134a:	4f 91       	pop	r20
    134c:	3f 91       	pop	r19
    134e:	2f 91       	pop	r18
    1350:	0f 90       	pop	r0
    1352:	0b be       	out	0x3b, r0	; 59
    1354:	0f 90       	pop	r0
    1356:	0f be       	out	0x3f, r0	; 63
    1358:	0f 90       	pop	r0
    135a:	1f 90       	pop	r1
    135c:	18 95       	reti

0000135e <__vector_17>:
    135e:	1f 92       	push	r1
    1360:	0f 92       	push	r0
    1362:	0f b6       	in	r0, 0x3f	; 63
    1364:	0f 92       	push	r0
    1366:	11 24       	eor	r1, r1
    1368:	0b b6       	in	r0, 0x3b	; 59
    136a:	0f 92       	push	r0
    136c:	2f 93       	push	r18
    136e:	3f 93       	push	r19
    1370:	4f 93       	push	r20
    1372:	5f 93       	push	r21
    1374:	6f 93       	push	r22
    1376:	7f 93       	push	r23
    1378:	8f 93       	push	r24
    137a:	9f 93       	push	r25
    137c:	af 93       	push	r26
    137e:	bf 93       	push	r27
    1380:	ef 93       	push	r30
    1382:	ff 93       	push	r31
    1384:	e0 91 60 21 	lds	r30, 0x2160	; 0x802160 <tc_tcc0_ccb_callback>
    1388:	f0 91 61 21 	lds	r31, 0x2161	; 0x802161 <tc_tcc0_ccb_callback+0x1>
    138c:	30 97       	sbiw	r30, 0x00	; 0
    138e:	09 f0       	breq	.+2      	; 0x1392 <__vector_17+0x34>
    1390:	19 95       	eicall
    1392:	ff 91       	pop	r31
    1394:	ef 91       	pop	r30
    1396:	bf 91       	pop	r27
    1398:	af 91       	pop	r26
    139a:	9f 91       	pop	r25
    139c:	8f 91       	pop	r24
    139e:	7f 91       	pop	r23
    13a0:	6f 91       	pop	r22
    13a2:	5f 91       	pop	r21
    13a4:	4f 91       	pop	r20
    13a6:	3f 91       	pop	r19
    13a8:	2f 91       	pop	r18
    13aa:	0f 90       	pop	r0
    13ac:	0b be       	out	0x3b, r0	; 59
    13ae:	0f 90       	pop	r0
    13b0:	0f be       	out	0x3f, r0	; 63
    13b2:	0f 90       	pop	r0
    13b4:	1f 90       	pop	r1
    13b6:	18 95       	reti

000013b8 <__vector_18>:
    13b8:	1f 92       	push	r1
    13ba:	0f 92       	push	r0
    13bc:	0f b6       	in	r0, 0x3f	; 63
    13be:	0f 92       	push	r0
    13c0:	11 24       	eor	r1, r1
    13c2:	0b b6       	in	r0, 0x3b	; 59
    13c4:	0f 92       	push	r0
    13c6:	2f 93       	push	r18
    13c8:	3f 93       	push	r19
    13ca:	4f 93       	push	r20
    13cc:	5f 93       	push	r21
    13ce:	6f 93       	push	r22
    13d0:	7f 93       	push	r23
    13d2:	8f 93       	push	r24
    13d4:	9f 93       	push	r25
    13d6:	af 93       	push	r26
    13d8:	bf 93       	push	r27
    13da:	ef 93       	push	r30
    13dc:	ff 93       	push	r31
    13de:	e0 91 5e 21 	lds	r30, 0x215E	; 0x80215e <tc_tcc0_ccc_callback>
    13e2:	f0 91 5f 21 	lds	r31, 0x215F	; 0x80215f <tc_tcc0_ccc_callback+0x1>
    13e6:	30 97       	sbiw	r30, 0x00	; 0
    13e8:	09 f0       	breq	.+2      	; 0x13ec <__vector_18+0x34>
    13ea:	19 95       	eicall
    13ec:	ff 91       	pop	r31
    13ee:	ef 91       	pop	r30
    13f0:	bf 91       	pop	r27
    13f2:	af 91       	pop	r26
    13f4:	9f 91       	pop	r25
    13f6:	8f 91       	pop	r24
    13f8:	7f 91       	pop	r23
    13fa:	6f 91       	pop	r22
    13fc:	5f 91       	pop	r21
    13fe:	4f 91       	pop	r20
    1400:	3f 91       	pop	r19
    1402:	2f 91       	pop	r18
    1404:	0f 90       	pop	r0
    1406:	0b be       	out	0x3b, r0	; 59
    1408:	0f 90       	pop	r0
    140a:	0f be       	out	0x3f, r0	; 63
    140c:	0f 90       	pop	r0
    140e:	1f 90       	pop	r1
    1410:	18 95       	reti

00001412 <__vector_19>:
    1412:	1f 92       	push	r1
    1414:	0f 92       	push	r0
    1416:	0f b6       	in	r0, 0x3f	; 63
    1418:	0f 92       	push	r0
    141a:	11 24       	eor	r1, r1
    141c:	0b b6       	in	r0, 0x3b	; 59
    141e:	0f 92       	push	r0
    1420:	2f 93       	push	r18
    1422:	3f 93       	push	r19
    1424:	4f 93       	push	r20
    1426:	5f 93       	push	r21
    1428:	6f 93       	push	r22
    142a:	7f 93       	push	r23
    142c:	8f 93       	push	r24
    142e:	9f 93       	push	r25
    1430:	af 93       	push	r26
    1432:	bf 93       	push	r27
    1434:	ef 93       	push	r30
    1436:	ff 93       	push	r31
    1438:	e0 91 5c 21 	lds	r30, 0x215C	; 0x80215c <tc_tcc0_ccd_callback>
    143c:	f0 91 5d 21 	lds	r31, 0x215D	; 0x80215d <tc_tcc0_ccd_callback+0x1>
    1440:	30 97       	sbiw	r30, 0x00	; 0
    1442:	09 f0       	breq	.+2      	; 0x1446 <__vector_19+0x34>
    1444:	19 95       	eicall
    1446:	ff 91       	pop	r31
    1448:	ef 91       	pop	r30
    144a:	bf 91       	pop	r27
    144c:	af 91       	pop	r26
    144e:	9f 91       	pop	r25
    1450:	8f 91       	pop	r24
    1452:	7f 91       	pop	r23
    1454:	6f 91       	pop	r22
    1456:	5f 91       	pop	r21
    1458:	4f 91       	pop	r20
    145a:	3f 91       	pop	r19
    145c:	2f 91       	pop	r18
    145e:	0f 90       	pop	r0
    1460:	0b be       	out	0x3b, r0	; 59
    1462:	0f 90       	pop	r0
    1464:	0f be       	out	0x3f, r0	; 63
    1466:	0f 90       	pop	r0
    1468:	1f 90       	pop	r1
    146a:	18 95       	reti

0000146c <__vector_20>:
    146c:	1f 92       	push	r1
    146e:	0f 92       	push	r0
    1470:	0f b6       	in	r0, 0x3f	; 63
    1472:	0f 92       	push	r0
    1474:	11 24       	eor	r1, r1
    1476:	0b b6       	in	r0, 0x3b	; 59
    1478:	0f 92       	push	r0
    147a:	2f 93       	push	r18
    147c:	3f 93       	push	r19
    147e:	4f 93       	push	r20
    1480:	5f 93       	push	r21
    1482:	6f 93       	push	r22
    1484:	7f 93       	push	r23
    1486:	8f 93       	push	r24
    1488:	9f 93       	push	r25
    148a:	af 93       	push	r26
    148c:	bf 93       	push	r27
    148e:	ef 93       	push	r30
    1490:	ff 93       	push	r31
    1492:	e0 91 5a 21 	lds	r30, 0x215A	; 0x80215a <tc_tcc1_ovf_callback>
    1496:	f0 91 5b 21 	lds	r31, 0x215B	; 0x80215b <tc_tcc1_ovf_callback+0x1>
    149a:	30 97       	sbiw	r30, 0x00	; 0
    149c:	09 f0       	breq	.+2      	; 0x14a0 <__vector_20+0x34>
    149e:	19 95       	eicall
    14a0:	ff 91       	pop	r31
    14a2:	ef 91       	pop	r30
    14a4:	bf 91       	pop	r27
    14a6:	af 91       	pop	r26
    14a8:	9f 91       	pop	r25
    14aa:	8f 91       	pop	r24
    14ac:	7f 91       	pop	r23
    14ae:	6f 91       	pop	r22
    14b0:	5f 91       	pop	r21
    14b2:	4f 91       	pop	r20
    14b4:	3f 91       	pop	r19
    14b6:	2f 91       	pop	r18
    14b8:	0f 90       	pop	r0
    14ba:	0b be       	out	0x3b, r0	; 59
    14bc:	0f 90       	pop	r0
    14be:	0f be       	out	0x3f, r0	; 63
    14c0:	0f 90       	pop	r0
    14c2:	1f 90       	pop	r1
    14c4:	18 95       	reti

000014c6 <__vector_21>:
    14c6:	1f 92       	push	r1
    14c8:	0f 92       	push	r0
    14ca:	0f b6       	in	r0, 0x3f	; 63
    14cc:	0f 92       	push	r0
    14ce:	11 24       	eor	r1, r1
    14d0:	0b b6       	in	r0, 0x3b	; 59
    14d2:	0f 92       	push	r0
    14d4:	2f 93       	push	r18
    14d6:	3f 93       	push	r19
    14d8:	4f 93       	push	r20
    14da:	5f 93       	push	r21
    14dc:	6f 93       	push	r22
    14de:	7f 93       	push	r23
    14e0:	8f 93       	push	r24
    14e2:	9f 93       	push	r25
    14e4:	af 93       	push	r26
    14e6:	bf 93       	push	r27
    14e8:	ef 93       	push	r30
    14ea:	ff 93       	push	r31
    14ec:	e0 91 58 21 	lds	r30, 0x2158	; 0x802158 <tc_tcc1_err_callback>
    14f0:	f0 91 59 21 	lds	r31, 0x2159	; 0x802159 <tc_tcc1_err_callback+0x1>
    14f4:	30 97       	sbiw	r30, 0x00	; 0
    14f6:	09 f0       	breq	.+2      	; 0x14fa <__vector_21+0x34>
    14f8:	19 95       	eicall
    14fa:	ff 91       	pop	r31
    14fc:	ef 91       	pop	r30
    14fe:	bf 91       	pop	r27
    1500:	af 91       	pop	r26
    1502:	9f 91       	pop	r25
    1504:	8f 91       	pop	r24
    1506:	7f 91       	pop	r23
    1508:	6f 91       	pop	r22
    150a:	5f 91       	pop	r21
    150c:	4f 91       	pop	r20
    150e:	3f 91       	pop	r19
    1510:	2f 91       	pop	r18
    1512:	0f 90       	pop	r0
    1514:	0b be       	out	0x3b, r0	; 59
    1516:	0f 90       	pop	r0
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	0f 90       	pop	r0
    151c:	1f 90       	pop	r1
    151e:	18 95       	reti

00001520 <__vector_22>:
    1520:	1f 92       	push	r1
    1522:	0f 92       	push	r0
    1524:	0f b6       	in	r0, 0x3f	; 63
    1526:	0f 92       	push	r0
    1528:	11 24       	eor	r1, r1
    152a:	0b b6       	in	r0, 0x3b	; 59
    152c:	0f 92       	push	r0
    152e:	2f 93       	push	r18
    1530:	3f 93       	push	r19
    1532:	4f 93       	push	r20
    1534:	5f 93       	push	r21
    1536:	6f 93       	push	r22
    1538:	7f 93       	push	r23
    153a:	8f 93       	push	r24
    153c:	9f 93       	push	r25
    153e:	af 93       	push	r26
    1540:	bf 93       	push	r27
    1542:	ef 93       	push	r30
    1544:	ff 93       	push	r31
    1546:	e0 91 56 21 	lds	r30, 0x2156	; 0x802156 <tc_tcc1_cca_callback>
    154a:	f0 91 57 21 	lds	r31, 0x2157	; 0x802157 <tc_tcc1_cca_callback+0x1>
    154e:	30 97       	sbiw	r30, 0x00	; 0
    1550:	09 f0       	breq	.+2      	; 0x1554 <__vector_22+0x34>
    1552:	19 95       	eicall
    1554:	ff 91       	pop	r31
    1556:	ef 91       	pop	r30
    1558:	bf 91       	pop	r27
    155a:	af 91       	pop	r26
    155c:	9f 91       	pop	r25
    155e:	8f 91       	pop	r24
    1560:	7f 91       	pop	r23
    1562:	6f 91       	pop	r22
    1564:	5f 91       	pop	r21
    1566:	4f 91       	pop	r20
    1568:	3f 91       	pop	r19
    156a:	2f 91       	pop	r18
    156c:	0f 90       	pop	r0
    156e:	0b be       	out	0x3b, r0	; 59
    1570:	0f 90       	pop	r0
    1572:	0f be       	out	0x3f, r0	; 63
    1574:	0f 90       	pop	r0
    1576:	1f 90       	pop	r1
    1578:	18 95       	reti

0000157a <__vector_23>:
    157a:	1f 92       	push	r1
    157c:	0f 92       	push	r0
    157e:	0f b6       	in	r0, 0x3f	; 63
    1580:	0f 92       	push	r0
    1582:	11 24       	eor	r1, r1
    1584:	0b b6       	in	r0, 0x3b	; 59
    1586:	0f 92       	push	r0
    1588:	2f 93       	push	r18
    158a:	3f 93       	push	r19
    158c:	4f 93       	push	r20
    158e:	5f 93       	push	r21
    1590:	6f 93       	push	r22
    1592:	7f 93       	push	r23
    1594:	8f 93       	push	r24
    1596:	9f 93       	push	r25
    1598:	af 93       	push	r26
    159a:	bf 93       	push	r27
    159c:	ef 93       	push	r30
    159e:	ff 93       	push	r31
    15a0:	e0 91 54 21 	lds	r30, 0x2154	; 0x802154 <tc_tcc1_ccb_callback>
    15a4:	f0 91 55 21 	lds	r31, 0x2155	; 0x802155 <tc_tcc1_ccb_callback+0x1>
    15a8:	30 97       	sbiw	r30, 0x00	; 0
    15aa:	09 f0       	breq	.+2      	; 0x15ae <__vector_23+0x34>
    15ac:	19 95       	eicall
    15ae:	ff 91       	pop	r31
    15b0:	ef 91       	pop	r30
    15b2:	bf 91       	pop	r27
    15b4:	af 91       	pop	r26
    15b6:	9f 91       	pop	r25
    15b8:	8f 91       	pop	r24
    15ba:	7f 91       	pop	r23
    15bc:	6f 91       	pop	r22
    15be:	5f 91       	pop	r21
    15c0:	4f 91       	pop	r20
    15c2:	3f 91       	pop	r19
    15c4:	2f 91       	pop	r18
    15c6:	0f 90       	pop	r0
    15c8:	0b be       	out	0x3b, r0	; 59
    15ca:	0f 90       	pop	r0
    15cc:	0f be       	out	0x3f, r0	; 63
    15ce:	0f 90       	pop	r0
    15d0:	1f 90       	pop	r1
    15d2:	18 95       	reti

000015d4 <__vector_77>:
    15d4:	1f 92       	push	r1
    15d6:	0f 92       	push	r0
    15d8:	0f b6       	in	r0, 0x3f	; 63
    15da:	0f 92       	push	r0
    15dc:	11 24       	eor	r1, r1
    15de:	0b b6       	in	r0, 0x3b	; 59
    15e0:	0f 92       	push	r0
    15e2:	2f 93       	push	r18
    15e4:	3f 93       	push	r19
    15e6:	4f 93       	push	r20
    15e8:	5f 93       	push	r21
    15ea:	6f 93       	push	r22
    15ec:	7f 93       	push	r23
    15ee:	8f 93       	push	r24
    15f0:	9f 93       	push	r25
    15f2:	af 93       	push	r26
    15f4:	bf 93       	push	r27
    15f6:	ef 93       	push	r30
    15f8:	ff 93       	push	r31
    15fa:	e0 91 52 21 	lds	r30, 0x2152	; 0x802152 <tc_tcd0_ovf_callback>
    15fe:	f0 91 53 21 	lds	r31, 0x2153	; 0x802153 <tc_tcd0_ovf_callback+0x1>
    1602:	30 97       	sbiw	r30, 0x00	; 0
    1604:	09 f0       	breq	.+2      	; 0x1608 <__vector_77+0x34>
    1606:	19 95       	eicall
    1608:	ff 91       	pop	r31
    160a:	ef 91       	pop	r30
    160c:	bf 91       	pop	r27
    160e:	af 91       	pop	r26
    1610:	9f 91       	pop	r25
    1612:	8f 91       	pop	r24
    1614:	7f 91       	pop	r23
    1616:	6f 91       	pop	r22
    1618:	5f 91       	pop	r21
    161a:	4f 91       	pop	r20
    161c:	3f 91       	pop	r19
    161e:	2f 91       	pop	r18
    1620:	0f 90       	pop	r0
    1622:	0b be       	out	0x3b, r0	; 59
    1624:	0f 90       	pop	r0
    1626:	0f be       	out	0x3f, r0	; 63
    1628:	0f 90       	pop	r0
    162a:	1f 90       	pop	r1
    162c:	18 95       	reti

0000162e <__vector_78>:
    162e:	1f 92       	push	r1
    1630:	0f 92       	push	r0
    1632:	0f b6       	in	r0, 0x3f	; 63
    1634:	0f 92       	push	r0
    1636:	11 24       	eor	r1, r1
    1638:	0b b6       	in	r0, 0x3b	; 59
    163a:	0f 92       	push	r0
    163c:	2f 93       	push	r18
    163e:	3f 93       	push	r19
    1640:	4f 93       	push	r20
    1642:	5f 93       	push	r21
    1644:	6f 93       	push	r22
    1646:	7f 93       	push	r23
    1648:	8f 93       	push	r24
    164a:	9f 93       	push	r25
    164c:	af 93       	push	r26
    164e:	bf 93       	push	r27
    1650:	ef 93       	push	r30
    1652:	ff 93       	push	r31
    1654:	e0 91 50 21 	lds	r30, 0x2150	; 0x802150 <tc_tcd0_err_callback>
    1658:	f0 91 51 21 	lds	r31, 0x2151	; 0x802151 <tc_tcd0_err_callback+0x1>
    165c:	30 97       	sbiw	r30, 0x00	; 0
    165e:	09 f0       	breq	.+2      	; 0x1662 <__vector_78+0x34>
    1660:	19 95       	eicall
    1662:	ff 91       	pop	r31
    1664:	ef 91       	pop	r30
    1666:	bf 91       	pop	r27
    1668:	af 91       	pop	r26
    166a:	9f 91       	pop	r25
    166c:	8f 91       	pop	r24
    166e:	7f 91       	pop	r23
    1670:	6f 91       	pop	r22
    1672:	5f 91       	pop	r21
    1674:	4f 91       	pop	r20
    1676:	3f 91       	pop	r19
    1678:	2f 91       	pop	r18
    167a:	0f 90       	pop	r0
    167c:	0b be       	out	0x3b, r0	; 59
    167e:	0f 90       	pop	r0
    1680:	0f be       	out	0x3f, r0	; 63
    1682:	0f 90       	pop	r0
    1684:	1f 90       	pop	r1
    1686:	18 95       	reti

00001688 <__vector_79>:
    1688:	1f 92       	push	r1
    168a:	0f 92       	push	r0
    168c:	0f b6       	in	r0, 0x3f	; 63
    168e:	0f 92       	push	r0
    1690:	11 24       	eor	r1, r1
    1692:	0b b6       	in	r0, 0x3b	; 59
    1694:	0f 92       	push	r0
    1696:	2f 93       	push	r18
    1698:	3f 93       	push	r19
    169a:	4f 93       	push	r20
    169c:	5f 93       	push	r21
    169e:	6f 93       	push	r22
    16a0:	7f 93       	push	r23
    16a2:	8f 93       	push	r24
    16a4:	9f 93       	push	r25
    16a6:	af 93       	push	r26
    16a8:	bf 93       	push	r27
    16aa:	ef 93       	push	r30
    16ac:	ff 93       	push	r31
    16ae:	e0 91 4e 21 	lds	r30, 0x214E	; 0x80214e <tc_tcd0_cca_callback>
    16b2:	f0 91 4f 21 	lds	r31, 0x214F	; 0x80214f <tc_tcd0_cca_callback+0x1>
    16b6:	30 97       	sbiw	r30, 0x00	; 0
    16b8:	09 f0       	breq	.+2      	; 0x16bc <__vector_79+0x34>
    16ba:	19 95       	eicall
    16bc:	ff 91       	pop	r31
    16be:	ef 91       	pop	r30
    16c0:	bf 91       	pop	r27
    16c2:	af 91       	pop	r26
    16c4:	9f 91       	pop	r25
    16c6:	8f 91       	pop	r24
    16c8:	7f 91       	pop	r23
    16ca:	6f 91       	pop	r22
    16cc:	5f 91       	pop	r21
    16ce:	4f 91       	pop	r20
    16d0:	3f 91       	pop	r19
    16d2:	2f 91       	pop	r18
    16d4:	0f 90       	pop	r0
    16d6:	0b be       	out	0x3b, r0	; 59
    16d8:	0f 90       	pop	r0
    16da:	0f be       	out	0x3f, r0	; 63
    16dc:	0f 90       	pop	r0
    16de:	1f 90       	pop	r1
    16e0:	18 95       	reti

000016e2 <__vector_80>:
    16e2:	1f 92       	push	r1
    16e4:	0f 92       	push	r0
    16e6:	0f b6       	in	r0, 0x3f	; 63
    16e8:	0f 92       	push	r0
    16ea:	11 24       	eor	r1, r1
    16ec:	0b b6       	in	r0, 0x3b	; 59
    16ee:	0f 92       	push	r0
    16f0:	2f 93       	push	r18
    16f2:	3f 93       	push	r19
    16f4:	4f 93       	push	r20
    16f6:	5f 93       	push	r21
    16f8:	6f 93       	push	r22
    16fa:	7f 93       	push	r23
    16fc:	8f 93       	push	r24
    16fe:	9f 93       	push	r25
    1700:	af 93       	push	r26
    1702:	bf 93       	push	r27
    1704:	ef 93       	push	r30
    1706:	ff 93       	push	r31
    1708:	e0 91 4c 21 	lds	r30, 0x214C	; 0x80214c <tc_tcd0_ccb_callback>
    170c:	f0 91 4d 21 	lds	r31, 0x214D	; 0x80214d <tc_tcd0_ccb_callback+0x1>
    1710:	30 97       	sbiw	r30, 0x00	; 0
    1712:	09 f0       	breq	.+2      	; 0x1716 <__vector_80+0x34>
    1714:	19 95       	eicall
    1716:	ff 91       	pop	r31
    1718:	ef 91       	pop	r30
    171a:	bf 91       	pop	r27
    171c:	af 91       	pop	r26
    171e:	9f 91       	pop	r25
    1720:	8f 91       	pop	r24
    1722:	7f 91       	pop	r23
    1724:	6f 91       	pop	r22
    1726:	5f 91       	pop	r21
    1728:	4f 91       	pop	r20
    172a:	3f 91       	pop	r19
    172c:	2f 91       	pop	r18
    172e:	0f 90       	pop	r0
    1730:	0b be       	out	0x3b, r0	; 59
    1732:	0f 90       	pop	r0
    1734:	0f be       	out	0x3f, r0	; 63
    1736:	0f 90       	pop	r0
    1738:	1f 90       	pop	r1
    173a:	18 95       	reti

0000173c <__vector_81>:
    173c:	1f 92       	push	r1
    173e:	0f 92       	push	r0
    1740:	0f b6       	in	r0, 0x3f	; 63
    1742:	0f 92       	push	r0
    1744:	11 24       	eor	r1, r1
    1746:	0b b6       	in	r0, 0x3b	; 59
    1748:	0f 92       	push	r0
    174a:	2f 93       	push	r18
    174c:	3f 93       	push	r19
    174e:	4f 93       	push	r20
    1750:	5f 93       	push	r21
    1752:	6f 93       	push	r22
    1754:	7f 93       	push	r23
    1756:	8f 93       	push	r24
    1758:	9f 93       	push	r25
    175a:	af 93       	push	r26
    175c:	bf 93       	push	r27
    175e:	ef 93       	push	r30
    1760:	ff 93       	push	r31
    1762:	e0 91 4a 21 	lds	r30, 0x214A	; 0x80214a <tc_tcd0_ccc_callback>
    1766:	f0 91 4b 21 	lds	r31, 0x214B	; 0x80214b <tc_tcd0_ccc_callback+0x1>
    176a:	30 97       	sbiw	r30, 0x00	; 0
    176c:	09 f0       	breq	.+2      	; 0x1770 <__vector_81+0x34>
    176e:	19 95       	eicall
    1770:	ff 91       	pop	r31
    1772:	ef 91       	pop	r30
    1774:	bf 91       	pop	r27
    1776:	af 91       	pop	r26
    1778:	9f 91       	pop	r25
    177a:	8f 91       	pop	r24
    177c:	7f 91       	pop	r23
    177e:	6f 91       	pop	r22
    1780:	5f 91       	pop	r21
    1782:	4f 91       	pop	r20
    1784:	3f 91       	pop	r19
    1786:	2f 91       	pop	r18
    1788:	0f 90       	pop	r0
    178a:	0b be       	out	0x3b, r0	; 59
    178c:	0f 90       	pop	r0
    178e:	0f be       	out	0x3f, r0	; 63
    1790:	0f 90       	pop	r0
    1792:	1f 90       	pop	r1
    1794:	18 95       	reti

00001796 <__vector_82>:
    1796:	1f 92       	push	r1
    1798:	0f 92       	push	r0
    179a:	0f b6       	in	r0, 0x3f	; 63
    179c:	0f 92       	push	r0
    179e:	11 24       	eor	r1, r1
    17a0:	0b b6       	in	r0, 0x3b	; 59
    17a2:	0f 92       	push	r0
    17a4:	2f 93       	push	r18
    17a6:	3f 93       	push	r19
    17a8:	4f 93       	push	r20
    17aa:	5f 93       	push	r21
    17ac:	6f 93       	push	r22
    17ae:	7f 93       	push	r23
    17b0:	8f 93       	push	r24
    17b2:	9f 93       	push	r25
    17b4:	af 93       	push	r26
    17b6:	bf 93       	push	r27
    17b8:	ef 93       	push	r30
    17ba:	ff 93       	push	r31
    17bc:	e0 91 48 21 	lds	r30, 0x2148	; 0x802148 <tc_tcd0_ccd_callback>
    17c0:	f0 91 49 21 	lds	r31, 0x2149	; 0x802149 <tc_tcd0_ccd_callback+0x1>
    17c4:	30 97       	sbiw	r30, 0x00	; 0
    17c6:	09 f0       	breq	.+2      	; 0x17ca <__vector_82+0x34>
    17c8:	19 95       	eicall
    17ca:	ff 91       	pop	r31
    17cc:	ef 91       	pop	r30
    17ce:	bf 91       	pop	r27
    17d0:	af 91       	pop	r26
    17d2:	9f 91       	pop	r25
    17d4:	8f 91       	pop	r24
    17d6:	7f 91       	pop	r23
    17d8:	6f 91       	pop	r22
    17da:	5f 91       	pop	r21
    17dc:	4f 91       	pop	r20
    17de:	3f 91       	pop	r19
    17e0:	2f 91       	pop	r18
    17e2:	0f 90       	pop	r0
    17e4:	0b be       	out	0x3b, r0	; 59
    17e6:	0f 90       	pop	r0
    17e8:	0f be       	out	0x3f, r0	; 63
    17ea:	0f 90       	pop	r0
    17ec:	1f 90       	pop	r1
    17ee:	18 95       	reti

000017f0 <__vector_83>:
    17f0:	1f 92       	push	r1
    17f2:	0f 92       	push	r0
    17f4:	0f b6       	in	r0, 0x3f	; 63
    17f6:	0f 92       	push	r0
    17f8:	11 24       	eor	r1, r1
    17fa:	0b b6       	in	r0, 0x3b	; 59
    17fc:	0f 92       	push	r0
    17fe:	2f 93       	push	r18
    1800:	3f 93       	push	r19
    1802:	4f 93       	push	r20
    1804:	5f 93       	push	r21
    1806:	6f 93       	push	r22
    1808:	7f 93       	push	r23
    180a:	8f 93       	push	r24
    180c:	9f 93       	push	r25
    180e:	af 93       	push	r26
    1810:	bf 93       	push	r27
    1812:	ef 93       	push	r30
    1814:	ff 93       	push	r31
    1816:	e0 91 46 21 	lds	r30, 0x2146	; 0x802146 <tc_tcd1_ovf_callback>
    181a:	f0 91 47 21 	lds	r31, 0x2147	; 0x802147 <tc_tcd1_ovf_callback+0x1>
    181e:	30 97       	sbiw	r30, 0x00	; 0
    1820:	09 f0       	breq	.+2      	; 0x1824 <__vector_83+0x34>
    1822:	19 95       	eicall
    1824:	ff 91       	pop	r31
    1826:	ef 91       	pop	r30
    1828:	bf 91       	pop	r27
    182a:	af 91       	pop	r26
    182c:	9f 91       	pop	r25
    182e:	8f 91       	pop	r24
    1830:	7f 91       	pop	r23
    1832:	6f 91       	pop	r22
    1834:	5f 91       	pop	r21
    1836:	4f 91       	pop	r20
    1838:	3f 91       	pop	r19
    183a:	2f 91       	pop	r18
    183c:	0f 90       	pop	r0
    183e:	0b be       	out	0x3b, r0	; 59
    1840:	0f 90       	pop	r0
    1842:	0f be       	out	0x3f, r0	; 63
    1844:	0f 90       	pop	r0
    1846:	1f 90       	pop	r1
    1848:	18 95       	reti

0000184a <__vector_84>:
    184a:	1f 92       	push	r1
    184c:	0f 92       	push	r0
    184e:	0f b6       	in	r0, 0x3f	; 63
    1850:	0f 92       	push	r0
    1852:	11 24       	eor	r1, r1
    1854:	0b b6       	in	r0, 0x3b	; 59
    1856:	0f 92       	push	r0
    1858:	2f 93       	push	r18
    185a:	3f 93       	push	r19
    185c:	4f 93       	push	r20
    185e:	5f 93       	push	r21
    1860:	6f 93       	push	r22
    1862:	7f 93       	push	r23
    1864:	8f 93       	push	r24
    1866:	9f 93       	push	r25
    1868:	af 93       	push	r26
    186a:	bf 93       	push	r27
    186c:	ef 93       	push	r30
    186e:	ff 93       	push	r31
    1870:	e0 91 44 21 	lds	r30, 0x2144	; 0x802144 <tc_tcd1_err_callback>
    1874:	f0 91 45 21 	lds	r31, 0x2145	; 0x802145 <tc_tcd1_err_callback+0x1>
    1878:	30 97       	sbiw	r30, 0x00	; 0
    187a:	09 f0       	breq	.+2      	; 0x187e <__vector_84+0x34>
    187c:	19 95       	eicall
    187e:	ff 91       	pop	r31
    1880:	ef 91       	pop	r30
    1882:	bf 91       	pop	r27
    1884:	af 91       	pop	r26
    1886:	9f 91       	pop	r25
    1888:	8f 91       	pop	r24
    188a:	7f 91       	pop	r23
    188c:	6f 91       	pop	r22
    188e:	5f 91       	pop	r21
    1890:	4f 91       	pop	r20
    1892:	3f 91       	pop	r19
    1894:	2f 91       	pop	r18
    1896:	0f 90       	pop	r0
    1898:	0b be       	out	0x3b, r0	; 59
    189a:	0f 90       	pop	r0
    189c:	0f be       	out	0x3f, r0	; 63
    189e:	0f 90       	pop	r0
    18a0:	1f 90       	pop	r1
    18a2:	18 95       	reti

000018a4 <__vector_85>:
    18a4:	1f 92       	push	r1
    18a6:	0f 92       	push	r0
    18a8:	0f b6       	in	r0, 0x3f	; 63
    18aa:	0f 92       	push	r0
    18ac:	11 24       	eor	r1, r1
    18ae:	0b b6       	in	r0, 0x3b	; 59
    18b0:	0f 92       	push	r0
    18b2:	2f 93       	push	r18
    18b4:	3f 93       	push	r19
    18b6:	4f 93       	push	r20
    18b8:	5f 93       	push	r21
    18ba:	6f 93       	push	r22
    18bc:	7f 93       	push	r23
    18be:	8f 93       	push	r24
    18c0:	9f 93       	push	r25
    18c2:	af 93       	push	r26
    18c4:	bf 93       	push	r27
    18c6:	ef 93       	push	r30
    18c8:	ff 93       	push	r31
    18ca:	e0 91 42 21 	lds	r30, 0x2142	; 0x802142 <tc_tcd1_cca_callback>
    18ce:	f0 91 43 21 	lds	r31, 0x2143	; 0x802143 <tc_tcd1_cca_callback+0x1>
    18d2:	30 97       	sbiw	r30, 0x00	; 0
    18d4:	09 f0       	breq	.+2      	; 0x18d8 <__vector_85+0x34>
    18d6:	19 95       	eicall
    18d8:	ff 91       	pop	r31
    18da:	ef 91       	pop	r30
    18dc:	bf 91       	pop	r27
    18de:	af 91       	pop	r26
    18e0:	9f 91       	pop	r25
    18e2:	8f 91       	pop	r24
    18e4:	7f 91       	pop	r23
    18e6:	6f 91       	pop	r22
    18e8:	5f 91       	pop	r21
    18ea:	4f 91       	pop	r20
    18ec:	3f 91       	pop	r19
    18ee:	2f 91       	pop	r18
    18f0:	0f 90       	pop	r0
    18f2:	0b be       	out	0x3b, r0	; 59
    18f4:	0f 90       	pop	r0
    18f6:	0f be       	out	0x3f, r0	; 63
    18f8:	0f 90       	pop	r0
    18fa:	1f 90       	pop	r1
    18fc:	18 95       	reti

000018fe <__vector_86>:
    18fe:	1f 92       	push	r1
    1900:	0f 92       	push	r0
    1902:	0f b6       	in	r0, 0x3f	; 63
    1904:	0f 92       	push	r0
    1906:	11 24       	eor	r1, r1
    1908:	0b b6       	in	r0, 0x3b	; 59
    190a:	0f 92       	push	r0
    190c:	2f 93       	push	r18
    190e:	3f 93       	push	r19
    1910:	4f 93       	push	r20
    1912:	5f 93       	push	r21
    1914:	6f 93       	push	r22
    1916:	7f 93       	push	r23
    1918:	8f 93       	push	r24
    191a:	9f 93       	push	r25
    191c:	af 93       	push	r26
    191e:	bf 93       	push	r27
    1920:	ef 93       	push	r30
    1922:	ff 93       	push	r31
    1924:	e0 91 40 21 	lds	r30, 0x2140	; 0x802140 <tc_tcd1_ccb_callback>
    1928:	f0 91 41 21 	lds	r31, 0x2141	; 0x802141 <tc_tcd1_ccb_callback+0x1>
    192c:	30 97       	sbiw	r30, 0x00	; 0
    192e:	09 f0       	breq	.+2      	; 0x1932 <__vector_86+0x34>
    1930:	19 95       	eicall
    1932:	ff 91       	pop	r31
    1934:	ef 91       	pop	r30
    1936:	bf 91       	pop	r27
    1938:	af 91       	pop	r26
    193a:	9f 91       	pop	r25
    193c:	8f 91       	pop	r24
    193e:	7f 91       	pop	r23
    1940:	6f 91       	pop	r22
    1942:	5f 91       	pop	r21
    1944:	4f 91       	pop	r20
    1946:	3f 91       	pop	r19
    1948:	2f 91       	pop	r18
    194a:	0f 90       	pop	r0
    194c:	0b be       	out	0x3b, r0	; 59
    194e:	0f 90       	pop	r0
    1950:	0f be       	out	0x3f, r0	; 63
    1952:	0f 90       	pop	r0
    1954:	1f 90       	pop	r1
    1956:	18 95       	reti

00001958 <__vector_47>:
    1958:	1f 92       	push	r1
    195a:	0f 92       	push	r0
    195c:	0f b6       	in	r0, 0x3f	; 63
    195e:	0f 92       	push	r0
    1960:	11 24       	eor	r1, r1
    1962:	0b b6       	in	r0, 0x3b	; 59
    1964:	0f 92       	push	r0
    1966:	2f 93       	push	r18
    1968:	3f 93       	push	r19
    196a:	4f 93       	push	r20
    196c:	5f 93       	push	r21
    196e:	6f 93       	push	r22
    1970:	7f 93       	push	r23
    1972:	8f 93       	push	r24
    1974:	9f 93       	push	r25
    1976:	af 93       	push	r26
    1978:	bf 93       	push	r27
    197a:	ef 93       	push	r30
    197c:	ff 93       	push	r31
    197e:	e0 91 3e 21 	lds	r30, 0x213E	; 0x80213e <tc_tce0_ovf_callback>
    1982:	f0 91 3f 21 	lds	r31, 0x213F	; 0x80213f <tc_tce0_ovf_callback+0x1>
    1986:	30 97       	sbiw	r30, 0x00	; 0
    1988:	09 f0       	breq	.+2      	; 0x198c <__vector_47+0x34>
    198a:	19 95       	eicall
    198c:	ff 91       	pop	r31
    198e:	ef 91       	pop	r30
    1990:	bf 91       	pop	r27
    1992:	af 91       	pop	r26
    1994:	9f 91       	pop	r25
    1996:	8f 91       	pop	r24
    1998:	7f 91       	pop	r23
    199a:	6f 91       	pop	r22
    199c:	5f 91       	pop	r21
    199e:	4f 91       	pop	r20
    19a0:	3f 91       	pop	r19
    19a2:	2f 91       	pop	r18
    19a4:	0f 90       	pop	r0
    19a6:	0b be       	out	0x3b, r0	; 59
    19a8:	0f 90       	pop	r0
    19aa:	0f be       	out	0x3f, r0	; 63
    19ac:	0f 90       	pop	r0
    19ae:	1f 90       	pop	r1
    19b0:	18 95       	reti

000019b2 <__vector_48>:
    19b2:	1f 92       	push	r1
    19b4:	0f 92       	push	r0
    19b6:	0f b6       	in	r0, 0x3f	; 63
    19b8:	0f 92       	push	r0
    19ba:	11 24       	eor	r1, r1
    19bc:	0b b6       	in	r0, 0x3b	; 59
    19be:	0f 92       	push	r0
    19c0:	2f 93       	push	r18
    19c2:	3f 93       	push	r19
    19c4:	4f 93       	push	r20
    19c6:	5f 93       	push	r21
    19c8:	6f 93       	push	r22
    19ca:	7f 93       	push	r23
    19cc:	8f 93       	push	r24
    19ce:	9f 93       	push	r25
    19d0:	af 93       	push	r26
    19d2:	bf 93       	push	r27
    19d4:	ef 93       	push	r30
    19d6:	ff 93       	push	r31
    19d8:	e0 91 3c 21 	lds	r30, 0x213C	; 0x80213c <tc_tce0_err_callback>
    19dc:	f0 91 3d 21 	lds	r31, 0x213D	; 0x80213d <tc_tce0_err_callback+0x1>
    19e0:	30 97       	sbiw	r30, 0x00	; 0
    19e2:	09 f0       	breq	.+2      	; 0x19e6 <__vector_48+0x34>
    19e4:	19 95       	eicall
    19e6:	ff 91       	pop	r31
    19e8:	ef 91       	pop	r30
    19ea:	bf 91       	pop	r27
    19ec:	af 91       	pop	r26
    19ee:	9f 91       	pop	r25
    19f0:	8f 91       	pop	r24
    19f2:	7f 91       	pop	r23
    19f4:	6f 91       	pop	r22
    19f6:	5f 91       	pop	r21
    19f8:	4f 91       	pop	r20
    19fa:	3f 91       	pop	r19
    19fc:	2f 91       	pop	r18
    19fe:	0f 90       	pop	r0
    1a00:	0b be       	out	0x3b, r0	; 59
    1a02:	0f 90       	pop	r0
    1a04:	0f be       	out	0x3f, r0	; 63
    1a06:	0f 90       	pop	r0
    1a08:	1f 90       	pop	r1
    1a0a:	18 95       	reti

00001a0c <__vector_49>:
    1a0c:	1f 92       	push	r1
    1a0e:	0f 92       	push	r0
    1a10:	0f b6       	in	r0, 0x3f	; 63
    1a12:	0f 92       	push	r0
    1a14:	11 24       	eor	r1, r1
    1a16:	0b b6       	in	r0, 0x3b	; 59
    1a18:	0f 92       	push	r0
    1a1a:	2f 93       	push	r18
    1a1c:	3f 93       	push	r19
    1a1e:	4f 93       	push	r20
    1a20:	5f 93       	push	r21
    1a22:	6f 93       	push	r22
    1a24:	7f 93       	push	r23
    1a26:	8f 93       	push	r24
    1a28:	9f 93       	push	r25
    1a2a:	af 93       	push	r26
    1a2c:	bf 93       	push	r27
    1a2e:	ef 93       	push	r30
    1a30:	ff 93       	push	r31
    1a32:	e0 91 3a 21 	lds	r30, 0x213A	; 0x80213a <tc_tce0_cca_callback>
    1a36:	f0 91 3b 21 	lds	r31, 0x213B	; 0x80213b <tc_tce0_cca_callback+0x1>
    1a3a:	30 97       	sbiw	r30, 0x00	; 0
    1a3c:	09 f0       	breq	.+2      	; 0x1a40 <__vector_49+0x34>
    1a3e:	19 95       	eicall
    1a40:	ff 91       	pop	r31
    1a42:	ef 91       	pop	r30
    1a44:	bf 91       	pop	r27
    1a46:	af 91       	pop	r26
    1a48:	9f 91       	pop	r25
    1a4a:	8f 91       	pop	r24
    1a4c:	7f 91       	pop	r23
    1a4e:	6f 91       	pop	r22
    1a50:	5f 91       	pop	r21
    1a52:	4f 91       	pop	r20
    1a54:	3f 91       	pop	r19
    1a56:	2f 91       	pop	r18
    1a58:	0f 90       	pop	r0
    1a5a:	0b be       	out	0x3b, r0	; 59
    1a5c:	0f 90       	pop	r0
    1a5e:	0f be       	out	0x3f, r0	; 63
    1a60:	0f 90       	pop	r0
    1a62:	1f 90       	pop	r1
    1a64:	18 95       	reti

00001a66 <__vector_50>:
    1a66:	1f 92       	push	r1
    1a68:	0f 92       	push	r0
    1a6a:	0f b6       	in	r0, 0x3f	; 63
    1a6c:	0f 92       	push	r0
    1a6e:	11 24       	eor	r1, r1
    1a70:	0b b6       	in	r0, 0x3b	; 59
    1a72:	0f 92       	push	r0
    1a74:	2f 93       	push	r18
    1a76:	3f 93       	push	r19
    1a78:	4f 93       	push	r20
    1a7a:	5f 93       	push	r21
    1a7c:	6f 93       	push	r22
    1a7e:	7f 93       	push	r23
    1a80:	8f 93       	push	r24
    1a82:	9f 93       	push	r25
    1a84:	af 93       	push	r26
    1a86:	bf 93       	push	r27
    1a88:	ef 93       	push	r30
    1a8a:	ff 93       	push	r31
    1a8c:	e0 91 38 21 	lds	r30, 0x2138	; 0x802138 <tc_tce0_ccb_callback>
    1a90:	f0 91 39 21 	lds	r31, 0x2139	; 0x802139 <tc_tce0_ccb_callback+0x1>
    1a94:	30 97       	sbiw	r30, 0x00	; 0
    1a96:	09 f0       	breq	.+2      	; 0x1a9a <__vector_50+0x34>
    1a98:	19 95       	eicall
    1a9a:	ff 91       	pop	r31
    1a9c:	ef 91       	pop	r30
    1a9e:	bf 91       	pop	r27
    1aa0:	af 91       	pop	r26
    1aa2:	9f 91       	pop	r25
    1aa4:	8f 91       	pop	r24
    1aa6:	7f 91       	pop	r23
    1aa8:	6f 91       	pop	r22
    1aaa:	5f 91       	pop	r21
    1aac:	4f 91       	pop	r20
    1aae:	3f 91       	pop	r19
    1ab0:	2f 91       	pop	r18
    1ab2:	0f 90       	pop	r0
    1ab4:	0b be       	out	0x3b, r0	; 59
    1ab6:	0f 90       	pop	r0
    1ab8:	0f be       	out	0x3f, r0	; 63
    1aba:	0f 90       	pop	r0
    1abc:	1f 90       	pop	r1
    1abe:	18 95       	reti

00001ac0 <__vector_51>:
    1ac0:	1f 92       	push	r1
    1ac2:	0f 92       	push	r0
    1ac4:	0f b6       	in	r0, 0x3f	; 63
    1ac6:	0f 92       	push	r0
    1ac8:	11 24       	eor	r1, r1
    1aca:	0b b6       	in	r0, 0x3b	; 59
    1acc:	0f 92       	push	r0
    1ace:	2f 93       	push	r18
    1ad0:	3f 93       	push	r19
    1ad2:	4f 93       	push	r20
    1ad4:	5f 93       	push	r21
    1ad6:	6f 93       	push	r22
    1ad8:	7f 93       	push	r23
    1ada:	8f 93       	push	r24
    1adc:	9f 93       	push	r25
    1ade:	af 93       	push	r26
    1ae0:	bf 93       	push	r27
    1ae2:	ef 93       	push	r30
    1ae4:	ff 93       	push	r31
    1ae6:	e0 91 36 21 	lds	r30, 0x2136	; 0x802136 <tc_tce0_ccc_callback>
    1aea:	f0 91 37 21 	lds	r31, 0x2137	; 0x802137 <tc_tce0_ccc_callback+0x1>
    1aee:	30 97       	sbiw	r30, 0x00	; 0
    1af0:	09 f0       	breq	.+2      	; 0x1af4 <__vector_51+0x34>
    1af2:	19 95       	eicall
    1af4:	ff 91       	pop	r31
    1af6:	ef 91       	pop	r30
    1af8:	bf 91       	pop	r27
    1afa:	af 91       	pop	r26
    1afc:	9f 91       	pop	r25
    1afe:	8f 91       	pop	r24
    1b00:	7f 91       	pop	r23
    1b02:	6f 91       	pop	r22
    1b04:	5f 91       	pop	r21
    1b06:	4f 91       	pop	r20
    1b08:	3f 91       	pop	r19
    1b0a:	2f 91       	pop	r18
    1b0c:	0f 90       	pop	r0
    1b0e:	0b be       	out	0x3b, r0	; 59
    1b10:	0f 90       	pop	r0
    1b12:	0f be       	out	0x3f, r0	; 63
    1b14:	0f 90       	pop	r0
    1b16:	1f 90       	pop	r1
    1b18:	18 95       	reti

00001b1a <__vector_52>:
    1b1a:	1f 92       	push	r1
    1b1c:	0f 92       	push	r0
    1b1e:	0f b6       	in	r0, 0x3f	; 63
    1b20:	0f 92       	push	r0
    1b22:	11 24       	eor	r1, r1
    1b24:	0b b6       	in	r0, 0x3b	; 59
    1b26:	0f 92       	push	r0
    1b28:	2f 93       	push	r18
    1b2a:	3f 93       	push	r19
    1b2c:	4f 93       	push	r20
    1b2e:	5f 93       	push	r21
    1b30:	6f 93       	push	r22
    1b32:	7f 93       	push	r23
    1b34:	8f 93       	push	r24
    1b36:	9f 93       	push	r25
    1b38:	af 93       	push	r26
    1b3a:	bf 93       	push	r27
    1b3c:	ef 93       	push	r30
    1b3e:	ff 93       	push	r31
    1b40:	e0 91 34 21 	lds	r30, 0x2134	; 0x802134 <tc_tce0_ccd_callback>
    1b44:	f0 91 35 21 	lds	r31, 0x2135	; 0x802135 <tc_tce0_ccd_callback+0x1>
    1b48:	30 97       	sbiw	r30, 0x00	; 0
    1b4a:	09 f0       	breq	.+2      	; 0x1b4e <__vector_52+0x34>
    1b4c:	19 95       	eicall
    1b4e:	ff 91       	pop	r31
    1b50:	ef 91       	pop	r30
    1b52:	bf 91       	pop	r27
    1b54:	af 91       	pop	r26
    1b56:	9f 91       	pop	r25
    1b58:	8f 91       	pop	r24
    1b5a:	7f 91       	pop	r23
    1b5c:	6f 91       	pop	r22
    1b5e:	5f 91       	pop	r21
    1b60:	4f 91       	pop	r20
    1b62:	3f 91       	pop	r19
    1b64:	2f 91       	pop	r18
    1b66:	0f 90       	pop	r0
    1b68:	0b be       	out	0x3b, r0	; 59
    1b6a:	0f 90       	pop	r0
    1b6c:	0f be       	out	0x3f, r0	; 63
    1b6e:	0f 90       	pop	r0
    1b70:	1f 90       	pop	r1
    1b72:	18 95       	reti

00001b74 <__vector_53>:
    1b74:	1f 92       	push	r1
    1b76:	0f 92       	push	r0
    1b78:	0f b6       	in	r0, 0x3f	; 63
    1b7a:	0f 92       	push	r0
    1b7c:	11 24       	eor	r1, r1
    1b7e:	0b b6       	in	r0, 0x3b	; 59
    1b80:	0f 92       	push	r0
    1b82:	2f 93       	push	r18
    1b84:	3f 93       	push	r19
    1b86:	4f 93       	push	r20
    1b88:	5f 93       	push	r21
    1b8a:	6f 93       	push	r22
    1b8c:	7f 93       	push	r23
    1b8e:	8f 93       	push	r24
    1b90:	9f 93       	push	r25
    1b92:	af 93       	push	r26
    1b94:	bf 93       	push	r27
    1b96:	ef 93       	push	r30
    1b98:	ff 93       	push	r31
    1b9a:	e0 91 32 21 	lds	r30, 0x2132	; 0x802132 <tc_tce1_ovf_callback>
    1b9e:	f0 91 33 21 	lds	r31, 0x2133	; 0x802133 <tc_tce1_ovf_callback+0x1>
    1ba2:	30 97       	sbiw	r30, 0x00	; 0
    1ba4:	09 f0       	breq	.+2      	; 0x1ba8 <__vector_53+0x34>
    1ba6:	19 95       	eicall
    1ba8:	ff 91       	pop	r31
    1baa:	ef 91       	pop	r30
    1bac:	bf 91       	pop	r27
    1bae:	af 91       	pop	r26
    1bb0:	9f 91       	pop	r25
    1bb2:	8f 91       	pop	r24
    1bb4:	7f 91       	pop	r23
    1bb6:	6f 91       	pop	r22
    1bb8:	5f 91       	pop	r21
    1bba:	4f 91       	pop	r20
    1bbc:	3f 91       	pop	r19
    1bbe:	2f 91       	pop	r18
    1bc0:	0f 90       	pop	r0
    1bc2:	0b be       	out	0x3b, r0	; 59
    1bc4:	0f 90       	pop	r0
    1bc6:	0f be       	out	0x3f, r0	; 63
    1bc8:	0f 90       	pop	r0
    1bca:	1f 90       	pop	r1
    1bcc:	18 95       	reti

00001bce <__vector_54>:
    1bce:	1f 92       	push	r1
    1bd0:	0f 92       	push	r0
    1bd2:	0f b6       	in	r0, 0x3f	; 63
    1bd4:	0f 92       	push	r0
    1bd6:	11 24       	eor	r1, r1
    1bd8:	0b b6       	in	r0, 0x3b	; 59
    1bda:	0f 92       	push	r0
    1bdc:	2f 93       	push	r18
    1bde:	3f 93       	push	r19
    1be0:	4f 93       	push	r20
    1be2:	5f 93       	push	r21
    1be4:	6f 93       	push	r22
    1be6:	7f 93       	push	r23
    1be8:	8f 93       	push	r24
    1bea:	9f 93       	push	r25
    1bec:	af 93       	push	r26
    1bee:	bf 93       	push	r27
    1bf0:	ef 93       	push	r30
    1bf2:	ff 93       	push	r31
    1bf4:	e0 91 30 21 	lds	r30, 0x2130	; 0x802130 <tc_tce1_err_callback>
    1bf8:	f0 91 31 21 	lds	r31, 0x2131	; 0x802131 <tc_tce1_err_callback+0x1>
    1bfc:	30 97       	sbiw	r30, 0x00	; 0
    1bfe:	09 f0       	breq	.+2      	; 0x1c02 <__vector_54+0x34>
    1c00:	19 95       	eicall
    1c02:	ff 91       	pop	r31
    1c04:	ef 91       	pop	r30
    1c06:	bf 91       	pop	r27
    1c08:	af 91       	pop	r26
    1c0a:	9f 91       	pop	r25
    1c0c:	8f 91       	pop	r24
    1c0e:	7f 91       	pop	r23
    1c10:	6f 91       	pop	r22
    1c12:	5f 91       	pop	r21
    1c14:	4f 91       	pop	r20
    1c16:	3f 91       	pop	r19
    1c18:	2f 91       	pop	r18
    1c1a:	0f 90       	pop	r0
    1c1c:	0b be       	out	0x3b, r0	; 59
    1c1e:	0f 90       	pop	r0
    1c20:	0f be       	out	0x3f, r0	; 63
    1c22:	0f 90       	pop	r0
    1c24:	1f 90       	pop	r1
    1c26:	18 95       	reti

00001c28 <__vector_56>:
    1c28:	1f 92       	push	r1
    1c2a:	0f 92       	push	r0
    1c2c:	0f b6       	in	r0, 0x3f	; 63
    1c2e:	0f 92       	push	r0
    1c30:	11 24       	eor	r1, r1
    1c32:	0b b6       	in	r0, 0x3b	; 59
    1c34:	0f 92       	push	r0
    1c36:	2f 93       	push	r18
    1c38:	3f 93       	push	r19
    1c3a:	4f 93       	push	r20
    1c3c:	5f 93       	push	r21
    1c3e:	6f 93       	push	r22
    1c40:	7f 93       	push	r23
    1c42:	8f 93       	push	r24
    1c44:	9f 93       	push	r25
    1c46:	af 93       	push	r26
    1c48:	bf 93       	push	r27
    1c4a:	ef 93       	push	r30
    1c4c:	ff 93       	push	r31
    1c4e:	e0 91 2e 21 	lds	r30, 0x212E	; 0x80212e <tc_tce1_ccb_callback>
    1c52:	f0 91 2f 21 	lds	r31, 0x212F	; 0x80212f <tc_tce1_ccb_callback+0x1>
    1c56:	30 97       	sbiw	r30, 0x00	; 0
    1c58:	09 f0       	breq	.+2      	; 0x1c5c <__vector_56+0x34>
    1c5a:	19 95       	eicall
    1c5c:	ff 91       	pop	r31
    1c5e:	ef 91       	pop	r30
    1c60:	bf 91       	pop	r27
    1c62:	af 91       	pop	r26
    1c64:	9f 91       	pop	r25
    1c66:	8f 91       	pop	r24
    1c68:	7f 91       	pop	r23
    1c6a:	6f 91       	pop	r22
    1c6c:	5f 91       	pop	r21
    1c6e:	4f 91       	pop	r20
    1c70:	3f 91       	pop	r19
    1c72:	2f 91       	pop	r18
    1c74:	0f 90       	pop	r0
    1c76:	0b be       	out	0x3b, r0	; 59
    1c78:	0f 90       	pop	r0
    1c7a:	0f be       	out	0x3f, r0	; 63
    1c7c:	0f 90       	pop	r0
    1c7e:	1f 90       	pop	r1
    1c80:	18 95       	reti

00001c82 <__vector_108>:
    1c82:	1f 92       	push	r1
    1c84:	0f 92       	push	r0
    1c86:	0f b6       	in	r0, 0x3f	; 63
    1c88:	0f 92       	push	r0
    1c8a:	11 24       	eor	r1, r1
    1c8c:	0b b6       	in	r0, 0x3b	; 59
    1c8e:	0f 92       	push	r0
    1c90:	2f 93       	push	r18
    1c92:	3f 93       	push	r19
    1c94:	4f 93       	push	r20
    1c96:	5f 93       	push	r21
    1c98:	6f 93       	push	r22
    1c9a:	7f 93       	push	r23
    1c9c:	8f 93       	push	r24
    1c9e:	9f 93       	push	r25
    1ca0:	af 93       	push	r26
    1ca2:	bf 93       	push	r27
    1ca4:	ef 93       	push	r30
    1ca6:	ff 93       	push	r31
    1ca8:	e0 91 2c 21 	lds	r30, 0x212C	; 0x80212c <tc_tcf0_ovf_callback>
    1cac:	f0 91 2d 21 	lds	r31, 0x212D	; 0x80212d <tc_tcf0_ovf_callback+0x1>
    1cb0:	30 97       	sbiw	r30, 0x00	; 0
    1cb2:	09 f0       	breq	.+2      	; 0x1cb6 <__vector_108+0x34>
    1cb4:	19 95       	eicall
    1cb6:	ff 91       	pop	r31
    1cb8:	ef 91       	pop	r30
    1cba:	bf 91       	pop	r27
    1cbc:	af 91       	pop	r26
    1cbe:	9f 91       	pop	r25
    1cc0:	8f 91       	pop	r24
    1cc2:	7f 91       	pop	r23
    1cc4:	6f 91       	pop	r22
    1cc6:	5f 91       	pop	r21
    1cc8:	4f 91       	pop	r20
    1cca:	3f 91       	pop	r19
    1ccc:	2f 91       	pop	r18
    1cce:	0f 90       	pop	r0
    1cd0:	0b be       	out	0x3b, r0	; 59
    1cd2:	0f 90       	pop	r0
    1cd4:	0f be       	out	0x3f, r0	; 63
    1cd6:	0f 90       	pop	r0
    1cd8:	1f 90       	pop	r1
    1cda:	18 95       	reti

00001cdc <__vector_109>:
    1cdc:	1f 92       	push	r1
    1cde:	0f 92       	push	r0
    1ce0:	0f b6       	in	r0, 0x3f	; 63
    1ce2:	0f 92       	push	r0
    1ce4:	11 24       	eor	r1, r1
    1ce6:	0b b6       	in	r0, 0x3b	; 59
    1ce8:	0f 92       	push	r0
    1cea:	2f 93       	push	r18
    1cec:	3f 93       	push	r19
    1cee:	4f 93       	push	r20
    1cf0:	5f 93       	push	r21
    1cf2:	6f 93       	push	r22
    1cf4:	7f 93       	push	r23
    1cf6:	8f 93       	push	r24
    1cf8:	9f 93       	push	r25
    1cfa:	af 93       	push	r26
    1cfc:	bf 93       	push	r27
    1cfe:	ef 93       	push	r30
    1d00:	ff 93       	push	r31
    1d02:	e0 91 2a 21 	lds	r30, 0x212A	; 0x80212a <tc_tcf0_err_callback>
    1d06:	f0 91 2b 21 	lds	r31, 0x212B	; 0x80212b <tc_tcf0_err_callback+0x1>
    1d0a:	30 97       	sbiw	r30, 0x00	; 0
    1d0c:	09 f0       	breq	.+2      	; 0x1d10 <__vector_109+0x34>
    1d0e:	19 95       	eicall
    1d10:	ff 91       	pop	r31
    1d12:	ef 91       	pop	r30
    1d14:	bf 91       	pop	r27
    1d16:	af 91       	pop	r26
    1d18:	9f 91       	pop	r25
    1d1a:	8f 91       	pop	r24
    1d1c:	7f 91       	pop	r23
    1d1e:	6f 91       	pop	r22
    1d20:	5f 91       	pop	r21
    1d22:	4f 91       	pop	r20
    1d24:	3f 91       	pop	r19
    1d26:	2f 91       	pop	r18
    1d28:	0f 90       	pop	r0
    1d2a:	0b be       	out	0x3b, r0	; 59
    1d2c:	0f 90       	pop	r0
    1d2e:	0f be       	out	0x3f, r0	; 63
    1d30:	0f 90       	pop	r0
    1d32:	1f 90       	pop	r1
    1d34:	18 95       	reti

00001d36 <__vector_110>:
    1d36:	1f 92       	push	r1
    1d38:	0f 92       	push	r0
    1d3a:	0f b6       	in	r0, 0x3f	; 63
    1d3c:	0f 92       	push	r0
    1d3e:	11 24       	eor	r1, r1
    1d40:	0b b6       	in	r0, 0x3b	; 59
    1d42:	0f 92       	push	r0
    1d44:	2f 93       	push	r18
    1d46:	3f 93       	push	r19
    1d48:	4f 93       	push	r20
    1d4a:	5f 93       	push	r21
    1d4c:	6f 93       	push	r22
    1d4e:	7f 93       	push	r23
    1d50:	8f 93       	push	r24
    1d52:	9f 93       	push	r25
    1d54:	af 93       	push	r26
    1d56:	bf 93       	push	r27
    1d58:	ef 93       	push	r30
    1d5a:	ff 93       	push	r31
    1d5c:	e0 91 28 21 	lds	r30, 0x2128	; 0x802128 <tc_tcf0_cca_callback>
    1d60:	f0 91 29 21 	lds	r31, 0x2129	; 0x802129 <tc_tcf0_cca_callback+0x1>
    1d64:	30 97       	sbiw	r30, 0x00	; 0
    1d66:	09 f0       	breq	.+2      	; 0x1d6a <__vector_110+0x34>
    1d68:	19 95       	eicall
    1d6a:	ff 91       	pop	r31
    1d6c:	ef 91       	pop	r30
    1d6e:	bf 91       	pop	r27
    1d70:	af 91       	pop	r26
    1d72:	9f 91       	pop	r25
    1d74:	8f 91       	pop	r24
    1d76:	7f 91       	pop	r23
    1d78:	6f 91       	pop	r22
    1d7a:	5f 91       	pop	r21
    1d7c:	4f 91       	pop	r20
    1d7e:	3f 91       	pop	r19
    1d80:	2f 91       	pop	r18
    1d82:	0f 90       	pop	r0
    1d84:	0b be       	out	0x3b, r0	; 59
    1d86:	0f 90       	pop	r0
    1d88:	0f be       	out	0x3f, r0	; 63
    1d8a:	0f 90       	pop	r0
    1d8c:	1f 90       	pop	r1
    1d8e:	18 95       	reti

00001d90 <__vector_111>:
    1d90:	1f 92       	push	r1
    1d92:	0f 92       	push	r0
    1d94:	0f b6       	in	r0, 0x3f	; 63
    1d96:	0f 92       	push	r0
    1d98:	11 24       	eor	r1, r1
    1d9a:	0b b6       	in	r0, 0x3b	; 59
    1d9c:	0f 92       	push	r0
    1d9e:	2f 93       	push	r18
    1da0:	3f 93       	push	r19
    1da2:	4f 93       	push	r20
    1da4:	5f 93       	push	r21
    1da6:	6f 93       	push	r22
    1da8:	7f 93       	push	r23
    1daa:	8f 93       	push	r24
    1dac:	9f 93       	push	r25
    1dae:	af 93       	push	r26
    1db0:	bf 93       	push	r27
    1db2:	ef 93       	push	r30
    1db4:	ff 93       	push	r31
    1db6:	e0 91 26 21 	lds	r30, 0x2126	; 0x802126 <tc_tcf0_ccb_callback>
    1dba:	f0 91 27 21 	lds	r31, 0x2127	; 0x802127 <tc_tcf0_ccb_callback+0x1>
    1dbe:	30 97       	sbiw	r30, 0x00	; 0
    1dc0:	09 f0       	breq	.+2      	; 0x1dc4 <__vector_111+0x34>
    1dc2:	19 95       	eicall
    1dc4:	ff 91       	pop	r31
    1dc6:	ef 91       	pop	r30
    1dc8:	bf 91       	pop	r27
    1dca:	af 91       	pop	r26
    1dcc:	9f 91       	pop	r25
    1dce:	8f 91       	pop	r24
    1dd0:	7f 91       	pop	r23
    1dd2:	6f 91       	pop	r22
    1dd4:	5f 91       	pop	r21
    1dd6:	4f 91       	pop	r20
    1dd8:	3f 91       	pop	r19
    1dda:	2f 91       	pop	r18
    1ddc:	0f 90       	pop	r0
    1dde:	0b be       	out	0x3b, r0	; 59
    1de0:	0f 90       	pop	r0
    1de2:	0f be       	out	0x3f, r0	; 63
    1de4:	0f 90       	pop	r0
    1de6:	1f 90       	pop	r1
    1de8:	18 95       	reti

00001dea <__vector_112>:
    1dea:	1f 92       	push	r1
    1dec:	0f 92       	push	r0
    1dee:	0f b6       	in	r0, 0x3f	; 63
    1df0:	0f 92       	push	r0
    1df2:	11 24       	eor	r1, r1
    1df4:	0b b6       	in	r0, 0x3b	; 59
    1df6:	0f 92       	push	r0
    1df8:	2f 93       	push	r18
    1dfa:	3f 93       	push	r19
    1dfc:	4f 93       	push	r20
    1dfe:	5f 93       	push	r21
    1e00:	6f 93       	push	r22
    1e02:	7f 93       	push	r23
    1e04:	8f 93       	push	r24
    1e06:	9f 93       	push	r25
    1e08:	af 93       	push	r26
    1e0a:	bf 93       	push	r27
    1e0c:	ef 93       	push	r30
    1e0e:	ff 93       	push	r31
    1e10:	e0 91 24 21 	lds	r30, 0x2124	; 0x802124 <tc_tcf0_ccc_callback>
    1e14:	f0 91 25 21 	lds	r31, 0x2125	; 0x802125 <tc_tcf0_ccc_callback+0x1>
    1e18:	30 97       	sbiw	r30, 0x00	; 0
    1e1a:	09 f0       	breq	.+2      	; 0x1e1e <__vector_112+0x34>
    1e1c:	19 95       	eicall
    1e1e:	ff 91       	pop	r31
    1e20:	ef 91       	pop	r30
    1e22:	bf 91       	pop	r27
    1e24:	af 91       	pop	r26
    1e26:	9f 91       	pop	r25
    1e28:	8f 91       	pop	r24
    1e2a:	7f 91       	pop	r23
    1e2c:	6f 91       	pop	r22
    1e2e:	5f 91       	pop	r21
    1e30:	4f 91       	pop	r20
    1e32:	3f 91       	pop	r19
    1e34:	2f 91       	pop	r18
    1e36:	0f 90       	pop	r0
    1e38:	0b be       	out	0x3b, r0	; 59
    1e3a:	0f 90       	pop	r0
    1e3c:	0f be       	out	0x3f, r0	; 63
    1e3e:	0f 90       	pop	r0
    1e40:	1f 90       	pop	r1
    1e42:	18 95       	reti

00001e44 <__vector_113>:
    1e44:	1f 92       	push	r1
    1e46:	0f 92       	push	r0
    1e48:	0f b6       	in	r0, 0x3f	; 63
    1e4a:	0f 92       	push	r0
    1e4c:	11 24       	eor	r1, r1
    1e4e:	0b b6       	in	r0, 0x3b	; 59
    1e50:	0f 92       	push	r0
    1e52:	2f 93       	push	r18
    1e54:	3f 93       	push	r19
    1e56:	4f 93       	push	r20
    1e58:	5f 93       	push	r21
    1e5a:	6f 93       	push	r22
    1e5c:	7f 93       	push	r23
    1e5e:	8f 93       	push	r24
    1e60:	9f 93       	push	r25
    1e62:	af 93       	push	r26
    1e64:	bf 93       	push	r27
    1e66:	ef 93       	push	r30
    1e68:	ff 93       	push	r31
    1e6a:	e0 91 22 21 	lds	r30, 0x2122	; 0x802122 <tc_tcf0_ccd_callback>
    1e6e:	f0 91 23 21 	lds	r31, 0x2123	; 0x802123 <tc_tcf0_ccd_callback+0x1>
    1e72:	30 97       	sbiw	r30, 0x00	; 0
    1e74:	09 f0       	breq	.+2      	; 0x1e78 <__vector_113+0x34>
    1e76:	19 95       	eicall
    1e78:	ff 91       	pop	r31
    1e7a:	ef 91       	pop	r30
    1e7c:	bf 91       	pop	r27
    1e7e:	af 91       	pop	r26
    1e80:	9f 91       	pop	r25
    1e82:	8f 91       	pop	r24
    1e84:	7f 91       	pop	r23
    1e86:	6f 91       	pop	r22
    1e88:	5f 91       	pop	r21
    1e8a:	4f 91       	pop	r20
    1e8c:	3f 91       	pop	r19
    1e8e:	2f 91       	pop	r18
    1e90:	0f 90       	pop	r0
    1e92:	0b be       	out	0x3b, r0	; 59
    1e94:	0f 90       	pop	r0
    1e96:	0f be       	out	0x3f, r0	; 63
    1e98:	0f 90       	pop	r0
    1e9a:	1f 90       	pop	r1
    1e9c:	18 95       	reti

00001e9e <tc_enable>:
    1e9e:	1f 93       	push	r17
    1ea0:	cf 93       	push	r28
    1ea2:	df 93       	push	r29
    1ea4:	1f 92       	push	r1
    1ea6:	1f 92       	push	r1
    1ea8:	cd b7       	in	r28, 0x3d	; 61
    1eaa:	de b7       	in	r29, 0x3e	; 62
    1eac:	2f b7       	in	r18, 0x3f	; 63
    1eae:	2a 83       	std	Y+2, r18	; 0x02
    1eb0:	f8 94       	cli
    1eb2:	1a 81       	ldd	r17, Y+2	; 0x02
    1eb4:	28 2f       	mov	r18, r24
    1eb6:	39 2f       	mov	r19, r25
    1eb8:	21 15       	cp	r18, r1
    1eba:	88 e0       	ldi	r24, 0x08	; 8
    1ebc:	38 07       	cpc	r19, r24
    1ebe:	49 f4       	brne	.+18     	; 0x1ed2 <tc_enable+0x34>
    1ec0:	61 e0       	ldi	r22, 0x01	; 1
    1ec2:	83 e0       	ldi	r24, 0x03	; 3
    1ec4:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1ec8:	64 e0       	ldi	r22, 0x04	; 4
    1eca:	83 e0       	ldi	r24, 0x03	; 3
    1ecc:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1ed0:	4f c0       	rjmp	.+158    	; 0x1f70 <tc_enable+0xd2>
    1ed2:	20 34       	cpi	r18, 0x40	; 64
    1ed4:	88 e0       	ldi	r24, 0x08	; 8
    1ed6:	38 07       	cpc	r19, r24
    1ed8:	49 f4       	brne	.+18     	; 0x1eec <tc_enable+0x4e>
    1eda:	62 e0       	ldi	r22, 0x02	; 2
    1edc:	83 e0       	ldi	r24, 0x03	; 3
    1ede:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1ee2:	64 e0       	ldi	r22, 0x04	; 4
    1ee4:	83 e0       	ldi	r24, 0x03	; 3
    1ee6:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1eea:	42 c0       	rjmp	.+132    	; 0x1f70 <tc_enable+0xd2>
    1eec:	21 15       	cp	r18, r1
    1eee:	89 e0       	ldi	r24, 0x09	; 9
    1ef0:	38 07       	cpc	r19, r24
    1ef2:	49 f4       	brne	.+18     	; 0x1f06 <tc_enable+0x68>
    1ef4:	61 e0       	ldi	r22, 0x01	; 1
    1ef6:	84 e0       	ldi	r24, 0x04	; 4
    1ef8:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1efc:	64 e0       	ldi	r22, 0x04	; 4
    1efe:	84 e0       	ldi	r24, 0x04	; 4
    1f00:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1f04:	35 c0       	rjmp	.+106    	; 0x1f70 <tc_enable+0xd2>
    1f06:	20 34       	cpi	r18, 0x40	; 64
    1f08:	89 e0       	ldi	r24, 0x09	; 9
    1f0a:	38 07       	cpc	r19, r24
    1f0c:	49 f4       	brne	.+18     	; 0x1f20 <tc_enable+0x82>
    1f0e:	62 e0       	ldi	r22, 0x02	; 2
    1f10:	84 e0       	ldi	r24, 0x04	; 4
    1f12:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1f16:	64 e0       	ldi	r22, 0x04	; 4
    1f18:	84 e0       	ldi	r24, 0x04	; 4
    1f1a:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1f1e:	28 c0       	rjmp	.+80     	; 0x1f70 <tc_enable+0xd2>
    1f20:	21 15       	cp	r18, r1
    1f22:	8a e0       	ldi	r24, 0x0A	; 10
    1f24:	38 07       	cpc	r19, r24
    1f26:	49 f4       	brne	.+18     	; 0x1f3a <tc_enable+0x9c>
    1f28:	61 e0       	ldi	r22, 0x01	; 1
    1f2a:	85 e0       	ldi	r24, 0x05	; 5
    1f2c:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1f30:	64 e0       	ldi	r22, 0x04	; 4
    1f32:	85 e0       	ldi	r24, 0x05	; 5
    1f34:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1f38:	1b c0       	rjmp	.+54     	; 0x1f70 <tc_enable+0xd2>
    1f3a:	20 34       	cpi	r18, 0x40	; 64
    1f3c:	8a e0       	ldi	r24, 0x0A	; 10
    1f3e:	38 07       	cpc	r19, r24
    1f40:	49 f4       	brne	.+18     	; 0x1f54 <tc_enable+0xb6>
    1f42:	62 e0       	ldi	r22, 0x02	; 2
    1f44:	85 e0       	ldi	r24, 0x05	; 5
    1f46:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1f4a:	64 e0       	ldi	r22, 0x04	; 4
    1f4c:	85 e0       	ldi	r24, 0x05	; 5
    1f4e:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1f52:	0e c0       	rjmp	.+28     	; 0x1f70 <tc_enable+0xd2>
    1f54:	21 15       	cp	r18, r1
    1f56:	3b 40       	sbci	r19, 0x0B	; 11
    1f58:	49 f4       	brne	.+18     	; 0x1f6c <tc_enable+0xce>
    1f5a:	61 e0       	ldi	r22, 0x01	; 1
    1f5c:	86 e0       	ldi	r24, 0x06	; 6
    1f5e:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1f62:	64 e0       	ldi	r22, 0x04	; 4
    1f64:	86 e0       	ldi	r24, 0x06	; 6
    1f66:	0e 94 12 09 	call	0x1224	; 0x1224 <sysclk_enable_module>
    1f6a:	02 c0       	rjmp	.+4      	; 0x1f70 <tc_enable+0xd2>
    1f6c:	1f bf       	out	0x3f, r17	; 63
    1f6e:	10 c0       	rjmp	.+32     	; 0x1f90 <tc_enable+0xf2>
    1f70:	80 91 0f 32 	lds	r24, 0x320F	; 0x80320f <sleepmgr_locks+0x1>
    1f74:	8f 3f       	cpi	r24, 0xFF	; 255
    1f76:	09 f4       	brne	.+2      	; 0x1f7a <tc_enable+0xdc>
    1f78:	ff cf       	rjmp	.-2      	; 0x1f78 <tc_enable+0xda>
    1f7a:	8f b7       	in	r24, 0x3f	; 63
    1f7c:	89 83       	std	Y+1, r24	; 0x01
    1f7e:	f8 94       	cli
    1f80:	99 81       	ldd	r25, Y+1	; 0x01
    1f82:	ee e0       	ldi	r30, 0x0E	; 14
    1f84:	f2 e3       	ldi	r31, 0x32	; 50
    1f86:	81 81       	ldd	r24, Z+1	; 0x01
    1f88:	8f 5f       	subi	r24, 0xFF	; 255
    1f8a:	81 83       	std	Z+1, r24	; 0x01
    1f8c:	9f bf       	out	0x3f, r25	; 63
    1f8e:	1f bf       	out	0x3f, r17	; 63
    1f90:	0f 90       	pop	r0
    1f92:	0f 90       	pop	r0
    1f94:	df 91       	pop	r29
    1f96:	cf 91       	pop	r28
    1f98:	1f 91       	pop	r17
    1f9a:	08 95       	ret

00001f9c <pwm_set_frequency>:
    1f9c:	cf 92       	push	r12
    1f9e:	df 92       	push	r13
    1fa0:	ef 92       	push	r14
    1fa2:	ff 92       	push	r15
    1fa4:	cf 93       	push	r28
    1fa6:	df 93       	push	r29
    1fa8:	ec 01       	movw	r28, r24
    1faa:	6b 01       	movw	r12, r22
    1fac:	e1 2c       	mov	r14, r1
    1fae:	f1 2c       	mov	r15, r1
    1fb0:	60 e8       	ldi	r22, 0x80	; 128
    1fb2:	74 e8       	ldi	r23, 0x84	; 132
    1fb4:	8e e1       	ldi	r24, 0x1E	; 30
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	a7 01       	movw	r20, r14
    1fba:	96 01       	movw	r18, r12
    1fbc:	0e 94 43 28 	call	0x5086	; 0x5086 <__udivmodsi4>
    1fc0:	ca 01       	movw	r24, r20
    1fc2:	b9 01       	movw	r22, r18
    1fc4:	2f ef       	ldi	r18, 0xFF	; 255
    1fc6:	3f ef       	ldi	r19, 0xFF	; 255
    1fc8:	40 e0       	ldi	r20, 0x00	; 0
    1fca:	50 e0       	ldi	r21, 0x00	; 0
    1fcc:	0e 94 43 28 	call	0x5086	; 0x5086 <__udivmodsi4>
    1fd0:	21 15       	cp	r18, r1
    1fd2:	31 05       	cpc	r19, r1
    1fd4:	29 f4       	brne	.+10     	; 0x1fe0 <pwm_set_frequency+0x44>
    1fd6:	81 e0       	ldi	r24, 0x01	; 1
    1fd8:	8c 83       	std	Y+4, r24	; 0x04
    1fda:	21 e0       	ldi	r18, 0x01	; 1
    1fdc:	30 e0       	ldi	r19, 0x00	; 0
    1fde:	2d c0       	rjmp	.+90     	; 0x203a <pwm_set_frequency+0x9e>
    1fe0:	22 30       	cpi	r18, 0x02	; 2
    1fe2:	31 05       	cpc	r19, r1
    1fe4:	28 f4       	brcc	.+10     	; 0x1ff0 <pwm_set_frequency+0x54>
    1fe6:	82 e0       	ldi	r24, 0x02	; 2
    1fe8:	8c 83       	std	Y+4, r24	; 0x04
    1fea:	22 e0       	ldi	r18, 0x02	; 2
    1fec:	30 e0       	ldi	r19, 0x00	; 0
    1fee:	25 c0       	rjmp	.+74     	; 0x203a <pwm_set_frequency+0x9e>
    1ff0:	24 30       	cpi	r18, 0x04	; 4
    1ff2:	31 05       	cpc	r19, r1
    1ff4:	28 f4       	brcc	.+10     	; 0x2000 <pwm_set_frequency+0x64>
    1ff6:	83 e0       	ldi	r24, 0x03	; 3
    1ff8:	8c 83       	std	Y+4, r24	; 0x04
    1ffa:	24 e0       	ldi	r18, 0x04	; 4
    1ffc:	30 e0       	ldi	r19, 0x00	; 0
    1ffe:	1d c0       	rjmp	.+58     	; 0x203a <pwm_set_frequency+0x9e>
    2000:	28 30       	cpi	r18, 0x08	; 8
    2002:	31 05       	cpc	r19, r1
    2004:	28 f4       	brcc	.+10     	; 0x2010 <pwm_set_frequency+0x74>
    2006:	84 e0       	ldi	r24, 0x04	; 4
    2008:	8c 83       	std	Y+4, r24	; 0x04
    200a:	28 e0       	ldi	r18, 0x08	; 8
    200c:	30 e0       	ldi	r19, 0x00	; 0
    200e:	15 c0       	rjmp	.+42     	; 0x203a <pwm_set_frequency+0x9e>
    2010:	20 34       	cpi	r18, 0x40	; 64
    2012:	31 05       	cpc	r19, r1
    2014:	28 f4       	brcc	.+10     	; 0x2020 <pwm_set_frequency+0x84>
    2016:	85 e0       	ldi	r24, 0x05	; 5
    2018:	8c 83       	std	Y+4, r24	; 0x04
    201a:	20 e4       	ldi	r18, 0x40	; 64
    201c:	30 e0       	ldi	r19, 0x00	; 0
    201e:	0d c0       	rjmp	.+26     	; 0x203a <pwm_set_frequency+0x9e>
    2020:	2f 3f       	cpi	r18, 0xFF	; 255
    2022:	31 05       	cpc	r19, r1
    2024:	09 f0       	breq	.+2      	; 0x2028 <pwm_set_frequency+0x8c>
    2026:	28 f4       	brcc	.+10     	; 0x2032 <pwm_set_frequency+0x96>
    2028:	86 e0       	ldi	r24, 0x06	; 6
    202a:	8c 83       	std	Y+4, r24	; 0x04
    202c:	20 e0       	ldi	r18, 0x00	; 0
    202e:	31 e0       	ldi	r19, 0x01	; 1
    2030:	04 c0       	rjmp	.+8      	; 0x203a <pwm_set_frequency+0x9e>
    2032:	87 e0       	ldi	r24, 0x07	; 7
    2034:	8c 83       	std	Y+4, r24	; 0x04
    2036:	20 e0       	ldi	r18, 0x00	; 0
    2038:	34 e0       	ldi	r19, 0x04	; 4
    203a:	40 e0       	ldi	r20, 0x00	; 0
    203c:	50 e0       	ldi	r21, 0x00	; 0
    203e:	60 e8       	ldi	r22, 0x80	; 128
    2040:	74 e8       	ldi	r23, 0x84	; 132
    2042:	8e e1       	ldi	r24, 0x1E	; 30
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	0e 94 43 28 	call	0x5086	; 0x5086 <__udivmodsi4>
    204a:	ca 01       	movw	r24, r20
    204c:	b9 01       	movw	r22, r18
    204e:	a7 01       	movw	r20, r14
    2050:	96 01       	movw	r18, r12
    2052:	0e 94 43 28 	call	0x5086	; 0x5086 <__udivmodsi4>
    2056:	2d 83       	std	Y+5, r18	; 0x05
    2058:	3e 83       	std	Y+6, r19	; 0x06
    205a:	24 36       	cpi	r18, 0x64	; 100
    205c:	31 05       	cpc	r19, r1
    205e:	18 f4       	brcc	.+6      	; 0x2066 <pwm_set_frequency+0xca>
    2060:	1c 82       	std	Y+4, r1	; 0x04
    2062:	1d 82       	std	Y+5, r1	; 0x05
    2064:	1e 82       	std	Y+6, r1	; 0x06
    2066:	df 91       	pop	r29
    2068:	cf 91       	pop	r28
    206a:	ff 90       	pop	r15
    206c:	ef 90       	pop	r14
    206e:	df 90       	pop	r13
    2070:	cf 90       	pop	r12
    2072:	08 95       	ret

00002074 <pwm_init>:
    2074:	0f 93       	push	r16
    2076:	1f 93       	push	r17
    2078:	cf 93       	push	r28
    207a:	df 93       	push	r29
    207c:	ec 01       	movw	r28, r24
    207e:	89 01       	movw	r16, r18
    2080:	86 2f       	mov	r24, r22
    2082:	90 e0       	ldi	r25, 0x00	; 0
    2084:	87 30       	cpi	r24, 0x07	; 7
    2086:	91 05       	cpc	r25, r1
    2088:	08 f0       	brcs	.+2      	; 0x208c <pwm_init+0x18>
    208a:	8b c0       	rjmp	.+278    	; 0x21a2 <pwm_init+0x12e>
    208c:	fc 01       	movw	r30, r24
    208e:	88 27       	eor	r24, r24
    2090:	e2 50       	subi	r30, 0x02	; 2
    2092:	ff 4f       	sbci	r31, 0xFF	; 255
    2094:	8f 4f       	sbci	r24, 0xFF	; 255
    2096:	0c 94 65 28 	jmp	0x50ca	; 0x50ca <__tablejump2__>
    209a:	80 e0       	ldi	r24, 0x00	; 0
    209c:	98 e0       	ldi	r25, 0x08	; 8
    209e:	88 83       	st	Y, r24
    20a0:	99 83       	std	Y+1, r25	; 0x01
    20a2:	e0 e4       	ldi	r30, 0x40	; 64
    20a4:	f6 e0       	ldi	r31, 0x06	; 6
    20a6:	30 81       	ld	r19, Z
    20a8:	81 e0       	ldi	r24, 0x01	; 1
    20aa:	90 e0       	ldi	r25, 0x00	; 0
    20ac:	2f ef       	ldi	r18, 0xFF	; 255
    20ae:	24 0f       	add	r18, r20
    20b0:	02 c0       	rjmp	.+4      	; 0x20b6 <pwm_init+0x42>
    20b2:	88 0f       	add	r24, r24
    20b4:	99 1f       	adc	r25, r25
    20b6:	2a 95       	dec	r18
    20b8:	e2 f7       	brpl	.-8      	; 0x20b2 <pwm_init+0x3e>
    20ba:	83 2b       	or	r24, r19
    20bc:	80 83       	st	Z, r24
    20be:	71 c0       	rjmp	.+226    	; 0x21a2 <pwm_init+0x12e>
    20c0:	80 e4       	ldi	r24, 0x40	; 64
    20c2:	98 e0       	ldi	r25, 0x08	; 8
    20c4:	88 83       	st	Y, r24
    20c6:	99 83       	std	Y+1, r25	; 0x01
    20c8:	e0 e4       	ldi	r30, 0x40	; 64
    20ca:	f6 e0       	ldi	r31, 0x06	; 6
    20cc:	30 81       	ld	r19, Z
    20ce:	81 e0       	ldi	r24, 0x01	; 1
    20d0:	90 e0       	ldi	r25, 0x00	; 0
    20d2:	23 e0       	ldi	r18, 0x03	; 3
    20d4:	24 0f       	add	r18, r20
    20d6:	02 c0       	rjmp	.+4      	; 0x20dc <pwm_init+0x68>
    20d8:	88 0f       	add	r24, r24
    20da:	99 1f       	adc	r25, r25
    20dc:	2a 95       	dec	r18
    20de:	e2 f7       	brpl	.-8      	; 0x20d8 <pwm_init+0x64>
    20e0:	83 2b       	or	r24, r19
    20e2:	80 83       	st	Z, r24
    20e4:	5e c0       	rjmp	.+188    	; 0x21a2 <pwm_init+0x12e>
    20e6:	80 e0       	ldi	r24, 0x00	; 0
    20e8:	99 e0       	ldi	r25, 0x09	; 9
    20ea:	88 83       	st	Y, r24
    20ec:	99 83       	std	Y+1, r25	; 0x01
    20ee:	e0 e6       	ldi	r30, 0x60	; 96
    20f0:	f6 e0       	ldi	r31, 0x06	; 6
    20f2:	30 81       	ld	r19, Z
    20f4:	81 e0       	ldi	r24, 0x01	; 1
    20f6:	90 e0       	ldi	r25, 0x00	; 0
    20f8:	2f ef       	ldi	r18, 0xFF	; 255
    20fa:	24 0f       	add	r18, r20
    20fc:	02 c0       	rjmp	.+4      	; 0x2102 <pwm_init+0x8e>
    20fe:	88 0f       	add	r24, r24
    2100:	99 1f       	adc	r25, r25
    2102:	2a 95       	dec	r18
    2104:	e2 f7       	brpl	.-8      	; 0x20fe <pwm_init+0x8a>
    2106:	83 2b       	or	r24, r19
    2108:	80 83       	st	Z, r24
    210a:	4b c0       	rjmp	.+150    	; 0x21a2 <pwm_init+0x12e>
    210c:	80 e4       	ldi	r24, 0x40	; 64
    210e:	99 e0       	ldi	r25, 0x09	; 9
    2110:	88 83       	st	Y, r24
    2112:	99 83       	std	Y+1, r25	; 0x01
    2114:	e0 e6       	ldi	r30, 0x60	; 96
    2116:	f6 e0       	ldi	r31, 0x06	; 6
    2118:	30 81       	ld	r19, Z
    211a:	81 e0       	ldi	r24, 0x01	; 1
    211c:	90 e0       	ldi	r25, 0x00	; 0
    211e:	23 e0       	ldi	r18, 0x03	; 3
    2120:	24 0f       	add	r18, r20
    2122:	02 c0       	rjmp	.+4      	; 0x2128 <pwm_init+0xb4>
    2124:	88 0f       	add	r24, r24
    2126:	99 1f       	adc	r25, r25
    2128:	2a 95       	dec	r18
    212a:	e2 f7       	brpl	.-8      	; 0x2124 <pwm_init+0xb0>
    212c:	83 2b       	or	r24, r19
    212e:	80 83       	st	Z, r24
    2130:	38 c0       	rjmp	.+112    	; 0x21a2 <pwm_init+0x12e>
    2132:	80 e0       	ldi	r24, 0x00	; 0
    2134:	9a e0       	ldi	r25, 0x0A	; 10
    2136:	88 83       	st	Y, r24
    2138:	99 83       	std	Y+1, r25	; 0x01
    213a:	e0 e8       	ldi	r30, 0x80	; 128
    213c:	f6 e0       	ldi	r31, 0x06	; 6
    213e:	30 81       	ld	r19, Z
    2140:	81 e0       	ldi	r24, 0x01	; 1
    2142:	90 e0       	ldi	r25, 0x00	; 0
    2144:	2f ef       	ldi	r18, 0xFF	; 255
    2146:	24 0f       	add	r18, r20
    2148:	02 c0       	rjmp	.+4      	; 0x214e <pwm_init+0xda>
    214a:	88 0f       	add	r24, r24
    214c:	99 1f       	adc	r25, r25
    214e:	2a 95       	dec	r18
    2150:	e2 f7       	brpl	.-8      	; 0x214a <pwm_init+0xd6>
    2152:	83 2b       	or	r24, r19
    2154:	80 83       	st	Z, r24
    2156:	25 c0       	rjmp	.+74     	; 0x21a2 <pwm_init+0x12e>
    2158:	80 e4       	ldi	r24, 0x40	; 64
    215a:	9a e0       	ldi	r25, 0x0A	; 10
    215c:	88 83       	st	Y, r24
    215e:	99 83       	std	Y+1, r25	; 0x01
    2160:	e0 e8       	ldi	r30, 0x80	; 128
    2162:	f6 e0       	ldi	r31, 0x06	; 6
    2164:	30 81       	ld	r19, Z
    2166:	81 e0       	ldi	r24, 0x01	; 1
    2168:	90 e0       	ldi	r25, 0x00	; 0
    216a:	23 e0       	ldi	r18, 0x03	; 3
    216c:	24 0f       	add	r18, r20
    216e:	02 c0       	rjmp	.+4      	; 0x2174 <pwm_init+0x100>
    2170:	88 0f       	add	r24, r24
    2172:	99 1f       	adc	r25, r25
    2174:	2a 95       	dec	r18
    2176:	e2 f7       	brpl	.-8      	; 0x2170 <pwm_init+0xfc>
    2178:	83 2b       	or	r24, r19
    217a:	80 83       	st	Z, r24
    217c:	12 c0       	rjmp	.+36     	; 0x21a2 <pwm_init+0x12e>
    217e:	80 e0       	ldi	r24, 0x00	; 0
    2180:	9b e0       	ldi	r25, 0x0B	; 11
    2182:	88 83       	st	Y, r24
    2184:	99 83       	std	Y+1, r25	; 0x01
    2186:	e0 ea       	ldi	r30, 0xA0	; 160
    2188:	f6 e0       	ldi	r31, 0x06	; 6
    218a:	30 81       	ld	r19, Z
    218c:	81 e0       	ldi	r24, 0x01	; 1
    218e:	90 e0       	ldi	r25, 0x00	; 0
    2190:	2f ef       	ldi	r18, 0xFF	; 255
    2192:	24 0f       	add	r18, r20
    2194:	02 c0       	rjmp	.+4      	; 0x219a <pwm_init+0x126>
    2196:	88 0f       	add	r24, r24
    2198:	99 1f       	adc	r25, r25
    219a:	2a 95       	dec	r18
    219c:	e2 f7       	brpl	.-8      	; 0x2196 <pwm_init+0x122>
    219e:	83 2b       	or	r24, r19
    21a0:	80 83       	st	Z, r24
    21a2:	4a 83       	std	Y+2, r20	; 0x02
    21a4:	42 30       	cpi	r20, 0x02	; 2
    21a6:	61 f0       	breq	.+24     	; 0x21c0 <pwm_init+0x14c>
    21a8:	18 f4       	brcc	.+6      	; 0x21b0 <pwm_init+0x13c>
    21aa:	41 30       	cpi	r20, 0x01	; 1
    21ac:	31 f0       	breq	.+12     	; 0x21ba <pwm_init+0x146>
    21ae:	10 c0       	rjmp	.+32     	; 0x21d0 <pwm_init+0x15c>
    21b0:	43 30       	cpi	r20, 0x03	; 3
    21b2:	49 f0       	breq	.+18     	; 0x21c6 <pwm_init+0x152>
    21b4:	44 30       	cpi	r20, 0x04	; 4
    21b6:	51 f0       	breq	.+20     	; 0x21cc <pwm_init+0x158>
    21b8:	0b c0       	rjmp	.+22     	; 0x21d0 <pwm_init+0x15c>
    21ba:	80 e1       	ldi	r24, 0x10	; 16
    21bc:	8b 83       	std	Y+3, r24	; 0x03
    21be:	08 c0       	rjmp	.+16     	; 0x21d0 <pwm_init+0x15c>
    21c0:	80 e2       	ldi	r24, 0x20	; 32
    21c2:	8b 83       	std	Y+3, r24	; 0x03
    21c4:	05 c0       	rjmp	.+10     	; 0x21d0 <pwm_init+0x15c>
    21c6:	80 e4       	ldi	r24, 0x40	; 64
    21c8:	8b 83       	std	Y+3, r24	; 0x03
    21ca:	02 c0       	rjmp	.+4      	; 0x21d0 <pwm_init+0x15c>
    21cc:	80 e8       	ldi	r24, 0x80	; 128
    21ce:	8b 83       	std	Y+3, r24	; 0x03
    21d0:	88 81       	ld	r24, Y
    21d2:	99 81       	ldd	r25, Y+1	; 0x01
    21d4:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <tc_enable>
    21d8:	e8 81       	ld	r30, Y
    21da:	f9 81       	ldd	r31, Y+1	; 0x01
    21dc:	81 81       	ldd	r24, Z+1	; 0x01
    21de:	88 7f       	andi	r24, 0xF8	; 248
    21e0:	83 60       	ori	r24, 0x03	; 3
    21e2:	81 83       	std	Z+1, r24	; 0x01
    21e4:	1d 82       	std	Y+5, r1	; 0x05
    21e6:	1e 82       	std	Y+6, r1	; 0x06
    21e8:	1c 82       	std	Y+4, r1	; 0x04
    21ea:	e8 81       	ld	r30, Y
    21ec:	f9 81       	ldd	r31, Y+1	; 0x01
    21ee:	80 81       	ld	r24, Z
    21f0:	80 7f       	andi	r24, 0xF0	; 240
    21f2:	80 83       	st	Z, r24
    21f4:	b8 01       	movw	r22, r16
    21f6:	ce 01       	movw	r24, r28
    21f8:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <pwm_set_frequency>
    21fc:	df 91       	pop	r29
    21fe:	cf 91       	pop	r28
    2200:	1f 91       	pop	r17
    2202:	0f 91       	pop	r16
    2204:	08 95       	ret

00002206 <pwm_start>:
    2206:	cf 93       	push	r28
    2208:	df 93       	push	r29
    220a:	ec 01       	movw	r28, r24
    220c:	2d 81       	ldd	r18, Y+5	; 0x05
    220e:	3e 81       	ldd	r19, Y+6	; 0x06
    2210:	a6 2f       	mov	r26, r22
    2212:	b0 e0       	ldi	r27, 0x00	; 0
    2214:	0e 94 6d 28 	call	0x50da	; 0x50da <__umulhisi3>
    2218:	24 e6       	ldi	r18, 0x64	; 100
    221a:	30 e0       	ldi	r19, 0x00	; 0
    221c:	40 e0       	ldi	r20, 0x00	; 0
    221e:	50 e0       	ldi	r21, 0x00	; 0
    2220:	0e 94 43 28 	call	0x5086	; 0x5086 <__udivmodsi4>
    2224:	8a 81       	ldd	r24, Y+2	; 0x02
    2226:	e8 81       	ld	r30, Y
    2228:	f9 81       	ldd	r31, Y+1	; 0x01
    222a:	e6 fd       	sbrc	r30, 6
    222c:	17 c0       	rjmp	.+46     	; 0x225c <pwm_start+0x56>
    222e:	82 30       	cpi	r24, 0x02	; 2
    2230:	61 f0       	breq	.+24     	; 0x224a <pwm_start+0x44>
    2232:	18 f4       	brcc	.+6      	; 0x223a <pwm_start+0x34>
    2234:	81 30       	cpi	r24, 0x01	; 1
    2236:	31 f0       	breq	.+12     	; 0x2244 <pwm_start+0x3e>
    2238:	1b c0       	rjmp	.+54     	; 0x2270 <pwm_start+0x6a>
    223a:	83 30       	cpi	r24, 0x03	; 3
    223c:	49 f0       	breq	.+18     	; 0x2250 <pwm_start+0x4a>
    223e:	84 30       	cpi	r24, 0x04	; 4
    2240:	51 f0       	breq	.+20     	; 0x2256 <pwm_start+0x50>
    2242:	16 c0       	rjmp	.+44     	; 0x2270 <pwm_start+0x6a>
    2244:	20 af       	std	Z+56, r18	; 0x38
    2246:	31 af       	std	Z+57, r19	; 0x39
    2248:	13 c0       	rjmp	.+38     	; 0x2270 <pwm_start+0x6a>
    224a:	22 af       	std	Z+58, r18	; 0x3a
    224c:	33 af       	std	Z+59, r19	; 0x3b
    224e:	10 c0       	rjmp	.+32     	; 0x2270 <pwm_start+0x6a>
    2250:	24 af       	std	Z+60, r18	; 0x3c
    2252:	35 af       	std	Z+61, r19	; 0x3d
    2254:	0d c0       	rjmp	.+26     	; 0x2270 <pwm_start+0x6a>
    2256:	26 af       	std	Z+62, r18	; 0x3e
    2258:	37 af       	std	Z+63, r19	; 0x3f
    225a:	0a c0       	rjmp	.+20     	; 0x2270 <pwm_start+0x6a>
    225c:	81 30       	cpi	r24, 0x01	; 1
    225e:	19 f0       	breq	.+6      	; 0x2266 <pwm_start+0x60>
    2260:	82 30       	cpi	r24, 0x02	; 2
    2262:	21 f0       	breq	.+8      	; 0x226c <pwm_start+0x66>
    2264:	05 c0       	rjmp	.+10     	; 0x2270 <pwm_start+0x6a>
    2266:	20 af       	std	Z+56, r18	; 0x38
    2268:	31 af       	std	Z+57, r19	; 0x39
    226a:	02 c0       	rjmp	.+4      	; 0x2270 <pwm_start+0x6a>
    226c:	22 af       	std	Z+58, r18	; 0x3a
    226e:	33 af       	std	Z+59, r19	; 0x3b
    2270:	8d 81       	ldd	r24, Y+5	; 0x05
    2272:	9e 81       	ldd	r25, Y+6	; 0x06
    2274:	e8 81       	ld	r30, Y
    2276:	f9 81       	ldd	r31, Y+1	; 0x01
    2278:	86 a3       	std	Z+38, r24	; 0x26
    227a:	97 a3       	std	Z+39, r25	; 0x27
    227c:	8b 81       	ldd	r24, Y+3	; 0x03
    227e:	e8 81       	ld	r30, Y
    2280:	f9 81       	ldd	r31, Y+1	; 0x01
    2282:	e6 fd       	sbrc	r30, 6
    2284:	04 c0       	rjmp	.+8      	; 0x228e <pwm_start+0x88>
    2286:	91 81       	ldd	r25, Z+1	; 0x01
    2288:	89 2b       	or	r24, r25
    228a:	81 83       	std	Z+1, r24	; 0x01
    228c:	04 c0       	rjmp	.+8      	; 0x2296 <pwm_start+0x90>
    228e:	91 81       	ldd	r25, Z+1	; 0x01
    2290:	80 73       	andi	r24, 0x30	; 48
    2292:	89 2b       	or	r24, r25
    2294:	81 83       	std	Z+1, r24	; 0x01
    2296:	e8 81       	ld	r30, Y
    2298:	f9 81       	ldd	r31, Y+1	; 0x01
    229a:	80 81       	ld	r24, Z
    229c:	80 7f       	andi	r24, 0xF0	; 240
    229e:	9c 81       	ldd	r25, Y+4	; 0x04
    22a0:	89 2b       	or	r24, r25
    22a2:	80 83       	st	Z, r24
    22a4:	df 91       	pop	r29
    22a6:	cf 91       	pop	r28
    22a8:	08 95       	ret

000022aa <pvPortMalloc>:
    22aa:	0f 93       	push	r16
    22ac:	1f 93       	push	r17
    22ae:	cf 93       	push	r28
    22b0:	df 93       	push	r29
    22b2:	ec 01       	movw	r28, r24
    22b4:	0e 94 6c 18 	call	0x30d8	; 0x30d8 <vTaskSuspendAll>
    22b8:	80 91 68 21 	lds	r24, 0x2168	; 0x802168 <xHeapHasBeenInitialised.4150>
    22bc:	81 11       	cpse	r24, r1
    22be:	1d c0       	rjmp	.+58     	; 0x22fa <pvPortMalloc+0x50>
    22c0:	ad e6       	ldi	r26, 0x6D	; 109
    22c2:	b1 e2       	ldi	r27, 0x21	; 33
    22c4:	e1 e7       	ldi	r30, 0x71	; 113
    22c6:	f1 e2       	ldi	r31, 0x21	; 33
    22c8:	ed 93       	st	X+, r30
    22ca:	fc 93       	st	X, r31
    22cc:	11 97       	sbiw	r26, 0x01	; 1
    22ce:	12 96       	adiw	r26, 0x02	; 2
    22d0:	1d 92       	st	X+, r1
    22d2:	1c 92       	st	X, r1
    22d4:	13 97       	sbiw	r26, 0x03	; 3
    22d6:	a9 e6       	ldi	r26, 0x69	; 105
    22d8:	b1 e2       	ldi	r27, 0x21	; 33
    22da:	8f ef       	ldi	r24, 0xFF	; 255
    22dc:	9f e0       	ldi	r25, 0x0F	; 15
    22de:	12 96       	adiw	r26, 0x02	; 2
    22e0:	8d 93       	st	X+, r24
    22e2:	9c 93       	st	X, r25
    22e4:	13 97       	sbiw	r26, 0x03	; 3
    22e6:	1d 92       	st	X+, r1
    22e8:	1c 92       	st	X, r1
    22ea:	11 97       	sbiw	r26, 0x01	; 1
    22ec:	82 83       	std	Z+2, r24	; 0x02
    22ee:	93 83       	std	Z+3, r25	; 0x03
    22f0:	a0 83       	st	Z, r26
    22f2:	b1 83       	std	Z+1, r27	; 0x01
    22f4:	81 e0       	ldi	r24, 0x01	; 1
    22f6:	80 93 68 21 	sts	0x2168, r24	; 0x802168 <xHeapHasBeenInitialised.4150>
    22fa:	20 97       	sbiw	r28, 0x00	; 0
    22fc:	09 f4       	brne	.+2      	; 0x2300 <pvPortMalloc+0x56>
    22fe:	5f c0       	rjmp	.+190    	; 0x23be <pvPortMalloc+0x114>
    2300:	9e 01       	movw	r18, r28
    2302:	2b 5f       	subi	r18, 0xFB	; 251
    2304:	3f 4f       	sbci	r19, 0xFF	; 255
    2306:	24 96       	adiw	r28, 0x04	; 4
    2308:	ce 3f       	cpi	r28, 0xFE	; 254
    230a:	df 40       	sbci	r29, 0x0F	; 15
    230c:	08 f0       	brcs	.+2      	; 0x2310 <pvPortMalloc+0x66>
    230e:	5a c0       	rjmp	.+180    	; 0x23c4 <pvPortMalloc+0x11a>
    2310:	e0 91 6d 21 	lds	r30, 0x216D	; 0x80216d <xStart>
    2314:	f0 91 6e 21 	lds	r31, 0x216E	; 0x80216e <xStart+0x1>
    2318:	ad e6       	ldi	r26, 0x6D	; 109
    231a:	b1 e2       	ldi	r27, 0x21	; 33
    231c:	02 c0       	rjmp	.+4      	; 0x2322 <pvPortMalloc+0x78>
    231e:	df 01       	movw	r26, r30
    2320:	fc 01       	movw	r30, r24
    2322:	82 81       	ldd	r24, Z+2	; 0x02
    2324:	93 81       	ldd	r25, Z+3	; 0x03
    2326:	82 17       	cp	r24, r18
    2328:	93 07       	cpc	r25, r19
    232a:	20 f4       	brcc	.+8      	; 0x2334 <pvPortMalloc+0x8a>
    232c:	80 81       	ld	r24, Z
    232e:	91 81       	ldd	r25, Z+1	; 0x01
    2330:	00 97       	sbiw	r24, 0x00	; 0
    2332:	a9 f7       	brne	.-22     	; 0x231e <pvPortMalloc+0x74>
    2334:	c1 e2       	ldi	r28, 0x21	; 33
    2336:	e9 36       	cpi	r30, 0x69	; 105
    2338:	fc 07       	cpc	r31, r28
    233a:	09 f4       	brne	.+2      	; 0x233e <pvPortMalloc+0x94>
    233c:	46 c0       	rjmp	.+140    	; 0x23ca <pvPortMalloc+0x120>
    233e:	cd 91       	ld	r28, X+
    2340:	dc 91       	ld	r29, X
    2342:	11 97       	sbiw	r26, 0x01	; 1
    2344:	8e 01       	movw	r16, r28
    2346:	0b 5f       	subi	r16, 0xFB	; 251
    2348:	1f 4f       	sbci	r17, 0xFF	; 255
    234a:	80 81       	ld	r24, Z
    234c:	91 81       	ldd	r25, Z+1	; 0x01
    234e:	8d 93       	st	X+, r24
    2350:	9c 93       	st	X, r25
    2352:	82 81       	ldd	r24, Z+2	; 0x02
    2354:	93 81       	ldd	r25, Z+3	; 0x03
    2356:	82 1b       	sub	r24, r18
    2358:	93 0b       	sbc	r25, r19
    235a:	8b 30       	cpi	r24, 0x0B	; 11
    235c:	91 05       	cpc	r25, r1
    235e:	10 f1       	brcs	.+68     	; 0x23a4 <pvPortMalloc+0xfa>
    2360:	bf 01       	movw	r22, r30
    2362:	62 0f       	add	r22, r18
    2364:	73 1f       	adc	r23, r19
    2366:	db 01       	movw	r26, r22
    2368:	12 96       	adiw	r26, 0x02	; 2
    236a:	8d 93       	st	X+, r24
    236c:	9c 93       	st	X, r25
    236e:	13 97       	sbiw	r26, 0x03	; 3
    2370:	22 83       	std	Z+2, r18	; 0x02
    2372:	33 83       	std	Z+3, r19	; 0x03
    2374:	12 96       	adiw	r26, 0x02	; 2
    2376:	4d 91       	ld	r20, X+
    2378:	5c 91       	ld	r21, X
    237a:	13 97       	sbiw	r26, 0x03	; 3
    237c:	8d e6       	ldi	r24, 0x6D	; 109
    237e:	91 e2       	ldi	r25, 0x21	; 33
    2380:	01 c0       	rjmp	.+2      	; 0x2384 <pvPortMalloc+0xda>
    2382:	cd 01       	movw	r24, r26
    2384:	ec 01       	movw	r28, r24
    2386:	a8 81       	ld	r26, Y
    2388:	b9 81       	ldd	r27, Y+1	; 0x01
    238a:	12 96       	adiw	r26, 0x02	; 2
    238c:	2d 91       	ld	r18, X+
    238e:	3c 91       	ld	r19, X
    2390:	13 97       	sbiw	r26, 0x03	; 3
    2392:	24 17       	cp	r18, r20
    2394:	35 07       	cpc	r19, r21
    2396:	a8 f3       	brcs	.-22     	; 0x2382 <pvPortMalloc+0xd8>
    2398:	eb 01       	movw	r28, r22
    239a:	a8 83       	st	Y, r26
    239c:	b9 83       	std	Y+1, r27	; 0x01
    239e:	dc 01       	movw	r26, r24
    23a0:	6d 93       	st	X+, r22
    23a2:	7c 93       	st	X, r23
    23a4:	80 91 04 20 	lds	r24, 0x2004	; 0x802004 <xFreeBytesRemaining>
    23a8:	90 91 05 20 	lds	r25, 0x2005	; 0x802005 <xFreeBytesRemaining+0x1>
    23ac:	22 81       	ldd	r18, Z+2	; 0x02
    23ae:	33 81       	ldd	r19, Z+3	; 0x03
    23b0:	82 1b       	sub	r24, r18
    23b2:	93 0b       	sbc	r25, r19
    23b4:	80 93 04 20 	sts	0x2004, r24	; 0x802004 <xFreeBytesRemaining>
    23b8:	90 93 05 20 	sts	0x2005, r25	; 0x802005 <xFreeBytesRemaining+0x1>
    23bc:	08 c0       	rjmp	.+16     	; 0x23ce <pvPortMalloc+0x124>
    23be:	00 e0       	ldi	r16, 0x00	; 0
    23c0:	10 e0       	ldi	r17, 0x00	; 0
    23c2:	05 c0       	rjmp	.+10     	; 0x23ce <pvPortMalloc+0x124>
    23c4:	00 e0       	ldi	r16, 0x00	; 0
    23c6:	10 e0       	ldi	r17, 0x00	; 0
    23c8:	02 c0       	rjmp	.+4      	; 0x23ce <pvPortMalloc+0x124>
    23ca:	00 e0       	ldi	r16, 0x00	; 0
    23cc:	10 e0       	ldi	r17, 0x00	; 0
    23ce:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    23d2:	c8 01       	movw	r24, r16
    23d4:	df 91       	pop	r29
    23d6:	cf 91       	pop	r28
    23d8:	1f 91       	pop	r17
    23da:	0f 91       	pop	r16
    23dc:	08 95       	ret

000023de <vPortFree>:
    23de:	0f 93       	push	r16
    23e0:	1f 93       	push	r17
    23e2:	cf 93       	push	r28
    23e4:	df 93       	push	r29
    23e6:	00 97       	sbiw	r24, 0x00	; 0
    23e8:	41 f1       	breq	.+80     	; 0x243a <vPortFree+0x5c>
    23ea:	ec 01       	movw	r28, r24
    23ec:	8c 01       	movw	r16, r24
    23ee:	05 50       	subi	r16, 0x05	; 5
    23f0:	11 09       	sbc	r17, r1
    23f2:	0e 94 6c 18 	call	0x30d8	; 0x30d8 <vTaskSuspendAll>
    23f6:	f8 01       	movw	r30, r16
    23f8:	42 81       	ldd	r20, Z+2	; 0x02
    23fa:	53 81       	ldd	r21, Z+3	; 0x03
    23fc:	ad e6       	ldi	r26, 0x6D	; 109
    23fe:	b1 e2       	ldi	r27, 0x21	; 33
    2400:	01 c0       	rjmp	.+2      	; 0x2404 <vPortFree+0x26>
    2402:	df 01       	movw	r26, r30
    2404:	ed 91       	ld	r30, X+
    2406:	fc 91       	ld	r31, X
    2408:	11 97       	sbiw	r26, 0x01	; 1
    240a:	22 81       	ldd	r18, Z+2	; 0x02
    240c:	33 81       	ldd	r19, Z+3	; 0x03
    240e:	24 17       	cp	r18, r20
    2410:	35 07       	cpc	r19, r21
    2412:	b8 f3       	brcs	.-18     	; 0x2402 <vPortFree+0x24>
    2414:	25 97       	sbiw	r28, 0x05	; 5
    2416:	e8 83       	st	Y, r30
    2418:	f9 83       	std	Y+1, r31	; 0x01
    241a:	0d 93       	st	X+, r16
    241c:	1c 93       	st	X, r17
    241e:	20 91 04 20 	lds	r18, 0x2004	; 0x802004 <xFreeBytesRemaining>
    2422:	30 91 05 20 	lds	r19, 0x2005	; 0x802005 <xFreeBytesRemaining+0x1>
    2426:	8a 81       	ldd	r24, Y+2	; 0x02
    2428:	9b 81       	ldd	r25, Y+3	; 0x03
    242a:	82 0f       	add	r24, r18
    242c:	93 1f       	adc	r25, r19
    242e:	80 93 04 20 	sts	0x2004, r24	; 0x802004 <xFreeBytesRemaining>
    2432:	90 93 05 20 	sts	0x2005, r25	; 0x802005 <xFreeBytesRemaining+0x1>
    2436:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    243a:	df 91       	pop	r29
    243c:	cf 91       	pop	r28
    243e:	1f 91       	pop	r17
    2440:	0f 91       	pop	r16
    2442:	08 95       	ret

00002444 <vListInitialise>:
    2444:	fc 01       	movw	r30, r24
    2446:	03 96       	adiw	r24, 0x03	; 3
    2448:	81 83       	std	Z+1, r24	; 0x01
    244a:	92 83       	std	Z+2, r25	; 0x02
    244c:	4f ef       	ldi	r20, 0xFF	; 255
    244e:	5f ef       	ldi	r21, 0xFF	; 255
    2450:	ba 01       	movw	r22, r20
    2452:	43 83       	std	Z+3, r20	; 0x03
    2454:	54 83       	std	Z+4, r21	; 0x04
    2456:	65 83       	std	Z+5, r22	; 0x05
    2458:	76 83       	std	Z+6, r23	; 0x06
    245a:	87 83       	std	Z+7, r24	; 0x07
    245c:	90 87       	std	Z+8, r25	; 0x08
    245e:	81 87       	std	Z+9, r24	; 0x09
    2460:	92 87       	std	Z+10, r25	; 0x0a
    2462:	10 82       	st	Z, r1
    2464:	08 95       	ret

00002466 <vListInitialiseItem>:
    2466:	fc 01       	movw	r30, r24
    2468:	12 86       	std	Z+10, r1	; 0x0a
    246a:	13 86       	std	Z+11, r1	; 0x0b
    246c:	08 95       	ret

0000246e <vListInsertEnd>:
    246e:	cf 93       	push	r28
    2470:	df 93       	push	r29
    2472:	fc 01       	movw	r30, r24
    2474:	db 01       	movw	r26, r22
    2476:	21 81       	ldd	r18, Z+1	; 0x01
    2478:	32 81       	ldd	r19, Z+2	; 0x02
    247a:	e9 01       	movw	r28, r18
    247c:	8c 81       	ldd	r24, Y+4	; 0x04
    247e:	9d 81       	ldd	r25, Y+5	; 0x05
    2480:	14 96       	adiw	r26, 0x04	; 4
    2482:	8d 93       	st	X+, r24
    2484:	9c 93       	st	X, r25
    2486:	15 97       	sbiw	r26, 0x05	; 5
    2488:	81 81       	ldd	r24, Z+1	; 0x01
    248a:	92 81       	ldd	r25, Z+2	; 0x02
    248c:	16 96       	adiw	r26, 0x06	; 6
    248e:	8d 93       	st	X+, r24
    2490:	9c 93       	st	X, r25
    2492:	17 97       	sbiw	r26, 0x07	; 7
    2494:	8c 81       	ldd	r24, Y+4	; 0x04
    2496:	9d 81       	ldd	r25, Y+5	; 0x05
    2498:	ec 01       	movw	r28, r24
    249a:	6e 83       	std	Y+6, r22	; 0x06
    249c:	7f 83       	std	Y+7, r23	; 0x07
    249e:	e9 01       	movw	r28, r18
    24a0:	6c 83       	std	Y+4, r22	; 0x04
    24a2:	7d 83       	std	Y+5, r23	; 0x05
    24a4:	61 83       	std	Z+1, r22	; 0x01
    24a6:	72 83       	std	Z+2, r23	; 0x02
    24a8:	1a 96       	adiw	r26, 0x0a	; 10
    24aa:	ed 93       	st	X+, r30
    24ac:	fc 93       	st	X, r31
    24ae:	1b 97       	sbiw	r26, 0x0b	; 11
    24b0:	80 81       	ld	r24, Z
    24b2:	8f 5f       	subi	r24, 0xFF	; 255
    24b4:	80 83       	st	Z, r24
    24b6:	df 91       	pop	r29
    24b8:	cf 91       	pop	r28
    24ba:	08 95       	ret

000024bc <vListInsert>:
    24bc:	0f 93       	push	r16
    24be:	1f 93       	push	r17
    24c0:	cf 93       	push	r28
    24c2:	df 93       	push	r29
    24c4:	eb 01       	movw	r28, r22
    24c6:	08 81       	ld	r16, Y
    24c8:	19 81       	ldd	r17, Y+1	; 0x01
    24ca:	2a 81       	ldd	r18, Y+2	; 0x02
    24cc:	3b 81       	ldd	r19, Y+3	; 0x03
    24ce:	0f 3f       	cpi	r16, 0xFF	; 255
    24d0:	4f ef       	ldi	r20, 0xFF	; 255
    24d2:	14 07       	cpc	r17, r20
    24d4:	24 07       	cpc	r18, r20
    24d6:	34 07       	cpc	r19, r20
    24d8:	31 f4       	brne	.+12     	; 0x24e6 <vListInsert+0x2a>
    24da:	dc 01       	movw	r26, r24
    24dc:	19 96       	adiw	r26, 0x09	; 9
    24de:	ed 91       	ld	r30, X+
    24e0:	fc 91       	ld	r31, X
    24e2:	1a 97       	sbiw	r26, 0x0a	; 10
    24e4:	1f c0       	rjmp	.+62     	; 0x2524 <vListInsert+0x68>
    24e6:	fc 01       	movw	r30, r24
    24e8:	33 96       	adiw	r30, 0x03	; 3
    24ea:	dc 01       	movw	r26, r24
    24ec:	17 96       	adiw	r26, 0x07	; 7
    24ee:	4d 91       	ld	r20, X+
    24f0:	5c 91       	ld	r21, X
    24f2:	18 97       	sbiw	r26, 0x08	; 8
    24f4:	da 01       	movw	r26, r20
    24f6:	4d 91       	ld	r20, X+
    24f8:	5d 91       	ld	r21, X+
    24fa:	6d 91       	ld	r22, X+
    24fc:	7c 91       	ld	r23, X
    24fe:	04 17       	cp	r16, r20
    2500:	15 07       	cpc	r17, r21
    2502:	26 07       	cpc	r18, r22
    2504:	37 07       	cpc	r19, r23
    2506:	70 f0       	brcs	.+28     	; 0x2524 <vListInsert+0x68>
    2508:	04 80       	ldd	r0, Z+4	; 0x04
    250a:	f5 81       	ldd	r31, Z+5	; 0x05
    250c:	e0 2d       	mov	r30, r0
    250e:	a4 81       	ldd	r26, Z+4	; 0x04
    2510:	b5 81       	ldd	r27, Z+5	; 0x05
    2512:	4d 91       	ld	r20, X+
    2514:	5d 91       	ld	r21, X+
    2516:	6d 91       	ld	r22, X+
    2518:	7c 91       	ld	r23, X
    251a:	04 17       	cp	r16, r20
    251c:	15 07       	cpc	r17, r21
    251e:	26 07       	cpc	r18, r22
    2520:	37 07       	cpc	r19, r23
    2522:	90 f7       	brcc	.-28     	; 0x2508 <vListInsert+0x4c>
    2524:	a4 81       	ldd	r26, Z+4	; 0x04
    2526:	b5 81       	ldd	r27, Z+5	; 0x05
    2528:	ac 83       	std	Y+4, r26	; 0x04
    252a:	bd 83       	std	Y+5, r27	; 0x05
    252c:	16 96       	adiw	r26, 0x06	; 6
    252e:	cd 93       	st	X+, r28
    2530:	dc 93       	st	X, r29
    2532:	17 97       	sbiw	r26, 0x07	; 7
    2534:	ee 83       	std	Y+6, r30	; 0x06
    2536:	ff 83       	std	Y+7, r31	; 0x07
    2538:	c4 83       	std	Z+4, r28	; 0x04
    253a:	d5 83       	std	Z+5, r29	; 0x05
    253c:	8a 87       	std	Y+10, r24	; 0x0a
    253e:	9b 87       	std	Y+11, r25	; 0x0b
    2540:	fc 01       	movw	r30, r24
    2542:	20 81       	ld	r18, Z
    2544:	2f 5f       	subi	r18, 0xFF	; 255
    2546:	20 83       	st	Z, r18
    2548:	df 91       	pop	r29
    254a:	cf 91       	pop	r28
    254c:	1f 91       	pop	r17
    254e:	0f 91       	pop	r16
    2550:	08 95       	ret

00002552 <vListRemove>:
    2552:	fc 01       	movw	r30, r24
    2554:	a4 81       	ldd	r26, Z+4	; 0x04
    2556:	b5 81       	ldd	r27, Z+5	; 0x05
    2558:	86 81       	ldd	r24, Z+6	; 0x06
    255a:	97 81       	ldd	r25, Z+7	; 0x07
    255c:	16 96       	adiw	r26, 0x06	; 6
    255e:	8d 93       	st	X+, r24
    2560:	9c 93       	st	X, r25
    2562:	17 97       	sbiw	r26, 0x07	; 7
    2564:	a6 81       	ldd	r26, Z+6	; 0x06
    2566:	b7 81       	ldd	r27, Z+7	; 0x07
    2568:	84 81       	ldd	r24, Z+4	; 0x04
    256a:	95 81       	ldd	r25, Z+5	; 0x05
    256c:	14 96       	adiw	r26, 0x04	; 4
    256e:	8d 93       	st	X+, r24
    2570:	9c 93       	st	X, r25
    2572:	15 97       	sbiw	r26, 0x05	; 5
    2574:	a2 85       	ldd	r26, Z+10	; 0x0a
    2576:	b3 85       	ldd	r27, Z+11	; 0x0b
    2578:	11 96       	adiw	r26, 0x01	; 1
    257a:	8d 91       	ld	r24, X+
    257c:	9c 91       	ld	r25, X
    257e:	12 97       	sbiw	r26, 0x02	; 2
    2580:	e8 17       	cp	r30, r24
    2582:	f9 07       	cpc	r31, r25
    2584:	31 f4       	brne	.+12     	; 0x2592 <vListRemove+0x40>
    2586:	86 81       	ldd	r24, Z+6	; 0x06
    2588:	97 81       	ldd	r25, Z+7	; 0x07
    258a:	11 96       	adiw	r26, 0x01	; 1
    258c:	8d 93       	st	X+, r24
    258e:	9c 93       	st	X, r25
    2590:	12 97       	sbiw	r26, 0x02	; 2
    2592:	12 86       	std	Z+10, r1	; 0x0a
    2594:	13 86       	std	Z+11, r1	; 0x0b
    2596:	8c 91       	ld	r24, X
    2598:	81 50       	subi	r24, 0x01	; 1
    259a:	8c 93       	st	X, r24
    259c:	08 95       	ret

0000259e <pxPortInitialiseStack>:
    259e:	80 93 14 32 	sts	0x3214, r24	; 0x803214 <portStackTopForTask>
    25a2:	90 93 15 32 	sts	0x3215, r25	; 0x803215 <portStackTopForTask+0x1>
    25a6:	31 e1       	ldi	r19, 0x11	; 17
    25a8:	fc 01       	movw	r30, r24
    25aa:	30 83       	st	Z, r19
    25ac:	31 97       	sbiw	r30, 0x01	; 1
    25ae:	22 e2       	ldi	r18, 0x22	; 34
    25b0:	20 83       	st	Z, r18
    25b2:	31 97       	sbiw	r30, 0x01	; 1
    25b4:	a3 e3       	ldi	r26, 0x33	; 51
    25b6:	a0 83       	st	Z, r26
    25b8:	31 97       	sbiw	r30, 0x01	; 1
    25ba:	60 83       	st	Z, r22
    25bc:	31 97       	sbiw	r30, 0x01	; 1
    25be:	70 83       	st	Z, r23
    25c0:	31 97       	sbiw	r30, 0x01	; 1
    25c2:	10 82       	st	Z, r1
    25c4:	31 97       	sbiw	r30, 0x01	; 1
    25c6:	10 82       	st	Z, r1
    25c8:	31 97       	sbiw	r30, 0x01	; 1
    25ca:	60 e8       	ldi	r22, 0x80	; 128
    25cc:	60 83       	st	Z, r22
    25ce:	31 97       	sbiw	r30, 0x01	; 1
    25d0:	10 82       	st	Z, r1
    25d2:	31 97       	sbiw	r30, 0x01	; 1
    25d4:	10 82       	st	Z, r1
    25d6:	31 97       	sbiw	r30, 0x01	; 1
    25d8:	10 82       	st	Z, r1
    25da:	31 97       	sbiw	r30, 0x01	; 1
    25dc:	62 e0       	ldi	r22, 0x02	; 2
    25de:	60 83       	st	Z, r22
    25e0:	31 97       	sbiw	r30, 0x01	; 1
    25e2:	63 e0       	ldi	r22, 0x03	; 3
    25e4:	60 83       	st	Z, r22
    25e6:	31 97       	sbiw	r30, 0x01	; 1
    25e8:	64 e0       	ldi	r22, 0x04	; 4
    25ea:	60 83       	st	Z, r22
    25ec:	31 97       	sbiw	r30, 0x01	; 1
    25ee:	65 e0       	ldi	r22, 0x05	; 5
    25f0:	60 83       	st	Z, r22
    25f2:	31 97       	sbiw	r30, 0x01	; 1
    25f4:	66 e0       	ldi	r22, 0x06	; 6
    25f6:	60 83       	st	Z, r22
    25f8:	31 97       	sbiw	r30, 0x01	; 1
    25fa:	67 e0       	ldi	r22, 0x07	; 7
    25fc:	60 83       	st	Z, r22
    25fe:	31 97       	sbiw	r30, 0x01	; 1
    2600:	68 e0       	ldi	r22, 0x08	; 8
    2602:	60 83       	st	Z, r22
    2604:	31 97       	sbiw	r30, 0x01	; 1
    2606:	69 e0       	ldi	r22, 0x09	; 9
    2608:	60 83       	st	Z, r22
    260a:	31 97       	sbiw	r30, 0x01	; 1
    260c:	60 e1       	ldi	r22, 0x10	; 16
    260e:	60 83       	st	Z, r22
    2610:	31 97       	sbiw	r30, 0x01	; 1
    2612:	30 83       	st	Z, r19
    2614:	31 97       	sbiw	r30, 0x01	; 1
    2616:	32 e1       	ldi	r19, 0x12	; 18
    2618:	30 83       	st	Z, r19
    261a:	31 97       	sbiw	r30, 0x01	; 1
    261c:	33 e1       	ldi	r19, 0x13	; 19
    261e:	30 83       	st	Z, r19
    2620:	31 97       	sbiw	r30, 0x01	; 1
    2622:	34 e1       	ldi	r19, 0x14	; 20
    2624:	30 83       	st	Z, r19
    2626:	31 97       	sbiw	r30, 0x01	; 1
    2628:	35 e1       	ldi	r19, 0x15	; 21
    262a:	30 83       	st	Z, r19
    262c:	31 97       	sbiw	r30, 0x01	; 1
    262e:	36 e1       	ldi	r19, 0x16	; 22
    2630:	30 83       	st	Z, r19
    2632:	31 97       	sbiw	r30, 0x01	; 1
    2634:	37 e1       	ldi	r19, 0x17	; 23
    2636:	30 83       	st	Z, r19
    2638:	31 97       	sbiw	r30, 0x01	; 1
    263a:	38 e1       	ldi	r19, 0x18	; 24
    263c:	30 83       	st	Z, r19
    263e:	31 97       	sbiw	r30, 0x01	; 1
    2640:	39 e1       	ldi	r19, 0x19	; 25
    2642:	30 83       	st	Z, r19
    2644:	31 97       	sbiw	r30, 0x01	; 1
    2646:	30 e2       	ldi	r19, 0x20	; 32
    2648:	30 83       	st	Z, r19
    264a:	31 97       	sbiw	r30, 0x01	; 1
    264c:	31 e2       	ldi	r19, 0x21	; 33
    264e:	30 83       	st	Z, r19
    2650:	31 97       	sbiw	r30, 0x01	; 1
    2652:	20 83       	st	Z, r18
    2654:	31 97       	sbiw	r30, 0x01	; 1
    2656:	23 e2       	ldi	r18, 0x23	; 35
    2658:	20 83       	st	Z, r18
    265a:	31 97       	sbiw	r30, 0x01	; 1
    265c:	40 83       	st	Z, r20
    265e:	31 97       	sbiw	r30, 0x01	; 1
    2660:	50 83       	st	Z, r21
    2662:	31 97       	sbiw	r30, 0x01	; 1
    2664:	26 e2       	ldi	r18, 0x26	; 38
    2666:	20 83       	st	Z, r18
    2668:	31 97       	sbiw	r30, 0x01	; 1
    266a:	27 e2       	ldi	r18, 0x27	; 39
    266c:	20 83       	st	Z, r18
    266e:	31 97       	sbiw	r30, 0x01	; 1
    2670:	28 e2       	ldi	r18, 0x28	; 40
    2672:	20 83       	st	Z, r18
    2674:	31 97       	sbiw	r30, 0x01	; 1
    2676:	29 e2       	ldi	r18, 0x29	; 41
    2678:	20 83       	st	Z, r18
    267a:	31 97       	sbiw	r30, 0x01	; 1
    267c:	20 e3       	ldi	r18, 0x30	; 48
    267e:	20 83       	st	Z, r18
    2680:	31 97       	sbiw	r30, 0x01	; 1
    2682:	21 e3       	ldi	r18, 0x31	; 49
    2684:	20 83       	st	Z, r18
    2686:	89 97       	sbiw	r24, 0x29	; 41
    2688:	08 95       	ret

0000268a <xPortStartScheduler>:
    268a:	8c e7       	ldi	r24, 0x7C	; 124
    268c:	80 93 69 0a 	sts	0x0A69, r24	; 0x800a69 <__TEXT_REGION_LENGTH__+0x700a69>
    2690:	8f ef       	ldi	r24, 0xFF	; 255
    2692:	80 93 68 0a 	sts	0x0A68, r24	; 0x800a68 <__TEXT_REGION_LENGTH__+0x700a68>
    2696:	81 e0       	ldi	r24, 0x01	; 1
    2698:	80 93 40 0a 	sts	0x0A40, r24	; 0x800a40 <__TEXT_REGION_LENGTH__+0x700a40>
    269c:	90 e1       	ldi	r25, 0x10	; 16
    269e:	90 93 41 0a 	sts	0x0A41, r25	; 0x800a41 <__TEXT_REGION_LENGTH__+0x700a41>
    26a2:	80 93 47 0a 	sts	0x0A47, r24	; 0x800a47 <__TEXT_REGION_LENGTH__+0x700a47>
    26a6:	a0 91 d0 31 	lds	r26, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    26aa:	b0 91 d1 31 	lds	r27, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    26ae:	cd 91       	ld	r28, X+
    26b0:	cd bf       	out	0x3d, r28	; 61
    26b2:	dd 91       	ld	r29, X+
    26b4:	de bf       	out	0x3e, r29	; 62
    26b6:	ff 91       	pop	r31
    26b8:	ef 91       	pop	r30
    26ba:	df 91       	pop	r29
    26bc:	cf 91       	pop	r28
    26be:	bf 91       	pop	r27
    26c0:	af 91       	pop	r26
    26c2:	9f 91       	pop	r25
    26c4:	8f 91       	pop	r24
    26c6:	7f 91       	pop	r23
    26c8:	6f 91       	pop	r22
    26ca:	5f 91       	pop	r21
    26cc:	4f 91       	pop	r20
    26ce:	3f 91       	pop	r19
    26d0:	2f 91       	pop	r18
    26d2:	1f 91       	pop	r17
    26d4:	0f 91       	pop	r16
    26d6:	ff 90       	pop	r15
    26d8:	ef 90       	pop	r14
    26da:	df 90       	pop	r13
    26dc:	cf 90       	pop	r12
    26de:	bf 90       	pop	r11
    26e0:	af 90       	pop	r10
    26e2:	9f 90       	pop	r9
    26e4:	8f 90       	pop	r8
    26e6:	7f 90       	pop	r7
    26e8:	6f 90       	pop	r6
    26ea:	5f 90       	pop	r5
    26ec:	4f 90       	pop	r4
    26ee:	3f 90       	pop	r3
    26f0:	2f 90       	pop	r2
    26f2:	1f 90       	pop	r1
    26f4:	0f 90       	pop	r0
    26f6:	0c be       	out	0x3c, r0	; 60
    26f8:	0f 90       	pop	r0
    26fa:	0b be       	out	0x3b, r0	; 59
    26fc:	0f 90       	pop	r0
    26fe:	0f be       	out	0x3f, r0	; 63
    2700:	0f 90       	pop	r0
    2702:	08 95       	ret
    2704:	08 95       	ret

00002706 <vPortYield>:
    2706:	0f 92       	push	r0
    2708:	0f b6       	in	r0, 0x3f	; 63
    270a:	f8 94       	cli
    270c:	0f 92       	push	r0
    270e:	0b b6       	in	r0, 0x3b	; 59
    2710:	0f 92       	push	r0
    2712:	0c b6       	in	r0, 0x3c	; 60
    2714:	0f 92       	push	r0
    2716:	1f 92       	push	r1
    2718:	11 24       	eor	r1, r1
    271a:	2f 92       	push	r2
    271c:	3f 92       	push	r3
    271e:	4f 92       	push	r4
    2720:	5f 92       	push	r5
    2722:	6f 92       	push	r6
    2724:	7f 92       	push	r7
    2726:	8f 92       	push	r8
    2728:	9f 92       	push	r9
    272a:	af 92       	push	r10
    272c:	bf 92       	push	r11
    272e:	cf 92       	push	r12
    2730:	df 92       	push	r13
    2732:	ef 92       	push	r14
    2734:	ff 92       	push	r15
    2736:	0f 93       	push	r16
    2738:	1f 93       	push	r17
    273a:	2f 93       	push	r18
    273c:	3f 93       	push	r19
    273e:	4f 93       	push	r20
    2740:	5f 93       	push	r21
    2742:	6f 93       	push	r22
    2744:	7f 93       	push	r23
    2746:	8f 93       	push	r24
    2748:	9f 93       	push	r25
    274a:	af 93       	push	r26
    274c:	bf 93       	push	r27
    274e:	cf 93       	push	r28
    2750:	df 93       	push	r29
    2752:	ef 93       	push	r30
    2754:	ff 93       	push	r31
    2756:	a0 91 d0 31 	lds	r26, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    275a:	b0 91 d1 31 	lds	r27, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    275e:	0d b6       	in	r0, 0x3d	; 61
    2760:	0d 92       	st	X+, r0
    2762:	0e b6       	in	r0, 0x3e	; 62
    2764:	0d 92       	st	X+, r0
    2766:	0e 94 a6 1a 	call	0x354c	; 0x354c <vTaskSwitchContext>
    276a:	a0 91 d0 31 	lds	r26, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    276e:	b0 91 d1 31 	lds	r27, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    2772:	cd 91       	ld	r28, X+
    2774:	cd bf       	out	0x3d, r28	; 61
    2776:	dd 91       	ld	r29, X+
    2778:	de bf       	out	0x3e, r29	; 62
    277a:	ff 91       	pop	r31
    277c:	ef 91       	pop	r30
    277e:	df 91       	pop	r29
    2780:	cf 91       	pop	r28
    2782:	bf 91       	pop	r27
    2784:	af 91       	pop	r26
    2786:	9f 91       	pop	r25
    2788:	8f 91       	pop	r24
    278a:	7f 91       	pop	r23
    278c:	6f 91       	pop	r22
    278e:	5f 91       	pop	r21
    2790:	4f 91       	pop	r20
    2792:	3f 91       	pop	r19
    2794:	2f 91       	pop	r18
    2796:	1f 91       	pop	r17
    2798:	0f 91       	pop	r16
    279a:	ff 90       	pop	r15
    279c:	ef 90       	pop	r14
    279e:	df 90       	pop	r13
    27a0:	cf 90       	pop	r12
    27a2:	bf 90       	pop	r11
    27a4:	af 90       	pop	r10
    27a6:	9f 90       	pop	r9
    27a8:	8f 90       	pop	r8
    27aa:	7f 90       	pop	r7
    27ac:	6f 90       	pop	r6
    27ae:	5f 90       	pop	r5
    27b0:	4f 90       	pop	r4
    27b2:	3f 90       	pop	r3
    27b4:	2f 90       	pop	r2
    27b6:	1f 90       	pop	r1
    27b8:	0f 90       	pop	r0
    27ba:	0c be       	out	0x3c, r0	; 60
    27bc:	0f 90       	pop	r0
    27be:	0b be       	out	0x3b, r0	; 59
    27c0:	0f 90       	pop	r0
    27c2:	0f be       	out	0x3f, r0	; 63
    27c4:	0f 90       	pop	r0
    27c6:	08 95       	ret

000027c8 <vPortYieldFromTick>:
    27c8:	0f 92       	push	r0
    27ca:	0f b6       	in	r0, 0x3f	; 63
    27cc:	f8 94       	cli
    27ce:	0f 92       	push	r0
    27d0:	0b b6       	in	r0, 0x3b	; 59
    27d2:	0f 92       	push	r0
    27d4:	0c b6       	in	r0, 0x3c	; 60
    27d6:	0f 92       	push	r0
    27d8:	1f 92       	push	r1
    27da:	11 24       	eor	r1, r1
    27dc:	2f 92       	push	r2
    27de:	3f 92       	push	r3
    27e0:	4f 92       	push	r4
    27e2:	5f 92       	push	r5
    27e4:	6f 92       	push	r6
    27e6:	7f 92       	push	r7
    27e8:	8f 92       	push	r8
    27ea:	9f 92       	push	r9
    27ec:	af 92       	push	r10
    27ee:	bf 92       	push	r11
    27f0:	cf 92       	push	r12
    27f2:	df 92       	push	r13
    27f4:	ef 92       	push	r14
    27f6:	ff 92       	push	r15
    27f8:	0f 93       	push	r16
    27fa:	1f 93       	push	r17
    27fc:	2f 93       	push	r18
    27fe:	3f 93       	push	r19
    2800:	4f 93       	push	r20
    2802:	5f 93       	push	r21
    2804:	6f 93       	push	r22
    2806:	7f 93       	push	r23
    2808:	8f 93       	push	r24
    280a:	9f 93       	push	r25
    280c:	af 93       	push	r26
    280e:	bf 93       	push	r27
    2810:	cf 93       	push	r28
    2812:	df 93       	push	r29
    2814:	ef 93       	push	r30
    2816:	ff 93       	push	r31
    2818:	a0 91 d0 31 	lds	r26, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    281c:	b0 91 d1 31 	lds	r27, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    2820:	0d b6       	in	r0, 0x3d	; 61
    2822:	0d 92       	st	X+, r0
    2824:	0e b6       	in	r0, 0x3e	; 62
    2826:	0d 92       	st	X+, r0
    2828:	0e 94 88 18 	call	0x3110	; 0x3110 <vTaskIncrementTick>
    282c:	0e 94 a6 1a 	call	0x354c	; 0x354c <vTaskSwitchContext>
    2830:	a0 91 d0 31 	lds	r26, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    2834:	b0 91 d1 31 	lds	r27, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    2838:	cd 91       	ld	r28, X+
    283a:	cd bf       	out	0x3d, r28	; 61
    283c:	dd 91       	ld	r29, X+
    283e:	de bf       	out	0x3e, r29	; 62
    2840:	ff 91       	pop	r31
    2842:	ef 91       	pop	r30
    2844:	df 91       	pop	r29
    2846:	cf 91       	pop	r28
    2848:	bf 91       	pop	r27
    284a:	af 91       	pop	r26
    284c:	9f 91       	pop	r25
    284e:	8f 91       	pop	r24
    2850:	7f 91       	pop	r23
    2852:	6f 91       	pop	r22
    2854:	5f 91       	pop	r21
    2856:	4f 91       	pop	r20
    2858:	3f 91       	pop	r19
    285a:	2f 91       	pop	r18
    285c:	1f 91       	pop	r17
    285e:	0f 91       	pop	r16
    2860:	ff 90       	pop	r15
    2862:	ef 90       	pop	r14
    2864:	df 90       	pop	r13
    2866:	cf 90       	pop	r12
    2868:	bf 90       	pop	r11
    286a:	af 90       	pop	r10
    286c:	9f 90       	pop	r9
    286e:	8f 90       	pop	r8
    2870:	7f 90       	pop	r7
    2872:	6f 90       	pop	r6
    2874:	5f 90       	pop	r5
    2876:	4f 90       	pop	r4
    2878:	3f 90       	pop	r3
    287a:	2f 90       	pop	r2
    287c:	1f 90       	pop	r1
    287e:	0f 90       	pop	r0
    2880:	0c be       	out	0x3c, r0	; 60
    2882:	0f 90       	pop	r0
    2884:	0b be       	out	0x3b, r0	; 59
    2886:	0f 90       	pop	r0
    2888:	0f be       	out	0x3f, r0	; 63
    288a:	0f 90       	pop	r0
    288c:	08 95       	ret

0000288e <__vector_55>:
    288e:	e0 e0       	ldi	r30, 0x00	; 0
    2890:	f9 e0       	ldi	r31, 0x09	; 9
    2892:	80 a5       	ldd	r24, Z+40	; 0x28
    2894:	91 a5       	ldd	r25, Z+41	; 0x29
    2896:	81 50       	subi	r24, 0x01	; 1
    2898:	93 48       	sbci	r25, 0x83	; 131
    289a:	80 a7       	std	Z+40, r24	; 0x28
    289c:	91 a7       	std	Z+41, r25	; 0x29
    289e:	0e 94 e4 13 	call	0x27c8	; 0x27c8 <vPortYieldFromTick>
    28a2:	18 95       	reti

000028a4 <prvCopyDataToQueue>:
    28a4:	cf 93       	push	r28
    28a6:	df 93       	push	r29
    28a8:	ec 01       	movw	r28, r24
    28aa:	88 a1       	ldd	r24, Y+32	; 0x20
    28ac:	81 11       	cpse	r24, r1
    28ae:	0b c0       	rjmp	.+22     	; 0x28c6 <prvCopyDataToQueue+0x22>
    28b0:	88 81       	ld	r24, Y
    28b2:	99 81       	ldd	r25, Y+1	; 0x01
    28b4:	89 2b       	or	r24, r25
    28b6:	e1 f5       	brne	.+120    	; 0x2930 <prvCopyDataToQueue+0x8c>
    28b8:	8a 81       	ldd	r24, Y+2	; 0x02
    28ba:	9b 81       	ldd	r25, Y+3	; 0x03
    28bc:	0e 94 61 1c 	call	0x38c2	; 0x38c2 <vTaskPriorityDisinherit>
    28c0:	1a 82       	std	Y+2, r1	; 0x02
    28c2:	1b 82       	std	Y+3, r1	; 0x03
    28c4:	35 c0       	rjmp	.+106    	; 0x2930 <prvCopyDataToQueue+0x8c>
    28c6:	41 11       	cpse	r20, r1
    28c8:	17 c0       	rjmp	.+46     	; 0x28f8 <prvCopyDataToQueue+0x54>
    28ca:	48 2f       	mov	r20, r24
    28cc:	50 e0       	ldi	r21, 0x00	; 0
    28ce:	8c 81       	ldd	r24, Y+4	; 0x04
    28d0:	9d 81       	ldd	r25, Y+5	; 0x05
    28d2:	0e 94 90 28 	call	0x5120	; 0x5120 <memcpy>
    28d6:	28 a1       	ldd	r18, Y+32	; 0x20
    28d8:	8c 81       	ldd	r24, Y+4	; 0x04
    28da:	9d 81       	ldd	r25, Y+5	; 0x05
    28dc:	82 0f       	add	r24, r18
    28de:	91 1d       	adc	r25, r1
    28e0:	8c 83       	std	Y+4, r24	; 0x04
    28e2:	9d 83       	std	Y+5, r25	; 0x05
    28e4:	2a 81       	ldd	r18, Y+2	; 0x02
    28e6:	3b 81       	ldd	r19, Y+3	; 0x03
    28e8:	82 17       	cp	r24, r18
    28ea:	93 07       	cpc	r25, r19
    28ec:	08 f1       	brcs	.+66     	; 0x2930 <prvCopyDataToQueue+0x8c>
    28ee:	88 81       	ld	r24, Y
    28f0:	99 81       	ldd	r25, Y+1	; 0x01
    28f2:	8c 83       	std	Y+4, r24	; 0x04
    28f4:	9d 83       	std	Y+5, r25	; 0x05
    28f6:	1c c0       	rjmp	.+56     	; 0x2930 <prvCopyDataToQueue+0x8c>
    28f8:	48 2f       	mov	r20, r24
    28fa:	50 e0       	ldi	r21, 0x00	; 0
    28fc:	8e 81       	ldd	r24, Y+6	; 0x06
    28fe:	9f 81       	ldd	r25, Y+7	; 0x07
    2900:	0e 94 90 28 	call	0x5120	; 0x5120 <memcpy>
    2904:	88 a1       	ldd	r24, Y+32	; 0x20
    2906:	90 e0       	ldi	r25, 0x00	; 0
    2908:	91 95       	neg	r25
    290a:	81 95       	neg	r24
    290c:	91 09       	sbc	r25, r1
    290e:	2e 81       	ldd	r18, Y+6	; 0x06
    2910:	3f 81       	ldd	r19, Y+7	; 0x07
    2912:	28 0f       	add	r18, r24
    2914:	39 1f       	adc	r19, r25
    2916:	2e 83       	std	Y+6, r18	; 0x06
    2918:	3f 83       	std	Y+7, r19	; 0x07
    291a:	48 81       	ld	r20, Y
    291c:	59 81       	ldd	r21, Y+1	; 0x01
    291e:	24 17       	cp	r18, r20
    2920:	35 07       	cpc	r19, r21
    2922:	30 f4       	brcc	.+12     	; 0x2930 <prvCopyDataToQueue+0x8c>
    2924:	2a 81       	ldd	r18, Y+2	; 0x02
    2926:	3b 81       	ldd	r19, Y+3	; 0x03
    2928:	82 0f       	add	r24, r18
    292a:	93 1f       	adc	r25, r19
    292c:	8e 83       	std	Y+6, r24	; 0x06
    292e:	9f 83       	std	Y+7, r25	; 0x07
    2930:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2932:	8f 5f       	subi	r24, 0xFF	; 255
    2934:	8e 8f       	std	Y+30, r24	; 0x1e
    2936:	df 91       	pop	r29
    2938:	cf 91       	pop	r28
    293a:	08 95       	ret

0000293c <prvCopyDataFromQueue>:
    293c:	fc 01       	movw	r30, r24
    293e:	80 81       	ld	r24, Z
    2940:	91 81       	ldd	r25, Z+1	; 0x01
    2942:	00 97       	sbiw	r24, 0x00	; 0
    2944:	a1 f0       	breq	.+40     	; 0x296e <prvCopyDataFromQueue+0x32>
    2946:	40 a1       	ldd	r20, Z+32	; 0x20
    2948:	50 e0       	ldi	r21, 0x00	; 0
    294a:	26 81       	ldd	r18, Z+6	; 0x06
    294c:	37 81       	ldd	r19, Z+7	; 0x07
    294e:	24 0f       	add	r18, r20
    2950:	35 1f       	adc	r19, r21
    2952:	26 83       	std	Z+6, r18	; 0x06
    2954:	37 83       	std	Z+7, r19	; 0x07
    2956:	a2 81       	ldd	r26, Z+2	; 0x02
    2958:	b3 81       	ldd	r27, Z+3	; 0x03
    295a:	2a 17       	cp	r18, r26
    295c:	3b 07       	cpc	r19, r27
    295e:	10 f0       	brcs	.+4      	; 0x2964 <prvCopyDataFromQueue+0x28>
    2960:	86 83       	std	Z+6, r24	; 0x06
    2962:	97 83       	std	Z+7, r25	; 0x07
    2964:	cb 01       	movw	r24, r22
    2966:	66 81       	ldd	r22, Z+6	; 0x06
    2968:	77 81       	ldd	r23, Z+7	; 0x07
    296a:	0e 94 90 28 	call	0x5120	; 0x5120 <memcpy>
    296e:	08 95       	ret

00002970 <prvUnlockQueue>:
    2970:	0f 93       	push	r16
    2972:	1f 93       	push	r17
    2974:	cf 93       	push	r28
    2976:	df 93       	push	r29
    2978:	ec 01       	movw	r28, r24
    297a:	0f b6       	in	r0, 0x3f	; 63
    297c:	f8 94       	cli
    297e:	0f 92       	push	r0
    2980:	8a a1       	ldd	r24, Y+34	; 0x22
    2982:	18 16       	cp	r1, r24
    2984:	b4 f4       	brge	.+44     	; 0x29b2 <prvUnlockQueue+0x42>
    2986:	8b 89       	ldd	r24, Y+19	; 0x13
    2988:	81 11       	cpse	r24, r1
    298a:	05 c0       	rjmp	.+10     	; 0x2996 <prvUnlockQueue+0x26>
    298c:	12 c0       	rjmp	.+36     	; 0x29b2 <prvUnlockQueue+0x42>
    298e:	8b 89       	ldd	r24, Y+19	; 0x13
    2990:	81 11       	cpse	r24, r1
    2992:	04 c0       	rjmp	.+8      	; 0x299c <prvUnlockQueue+0x2c>
    2994:	0e c0       	rjmp	.+28     	; 0x29b2 <prvUnlockQueue+0x42>
    2996:	8e 01       	movw	r16, r28
    2998:	0d 5e       	subi	r16, 0xED	; 237
    299a:	1f 4f       	sbci	r17, 0xFF	; 255
    299c:	c8 01       	movw	r24, r16
    299e:	0e 94 2d 1b 	call	0x365a	; 0x365a <xTaskRemoveFromEventList>
    29a2:	81 11       	cpse	r24, r1
    29a4:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <vTaskMissedYield>
    29a8:	8a a1       	ldd	r24, Y+34	; 0x22
    29aa:	81 50       	subi	r24, 0x01	; 1
    29ac:	8a a3       	std	Y+34, r24	; 0x22
    29ae:	18 16       	cp	r1, r24
    29b0:	74 f3       	brlt	.-36     	; 0x298e <prvUnlockQueue+0x1e>
    29b2:	8f ef       	ldi	r24, 0xFF	; 255
    29b4:	8a a3       	std	Y+34, r24	; 0x22
    29b6:	0f 90       	pop	r0
    29b8:	0f be       	out	0x3f, r0	; 63
    29ba:	0f b6       	in	r0, 0x3f	; 63
    29bc:	f8 94       	cli
    29be:	0f 92       	push	r0
    29c0:	89 a1       	ldd	r24, Y+33	; 0x21
    29c2:	18 16       	cp	r1, r24
    29c4:	b4 f4       	brge	.+44     	; 0x29f2 <prvUnlockQueue+0x82>
    29c6:	88 85       	ldd	r24, Y+8	; 0x08
    29c8:	81 11       	cpse	r24, r1
    29ca:	05 c0       	rjmp	.+10     	; 0x29d6 <prvUnlockQueue+0x66>
    29cc:	12 c0       	rjmp	.+36     	; 0x29f2 <prvUnlockQueue+0x82>
    29ce:	88 85       	ldd	r24, Y+8	; 0x08
    29d0:	81 11       	cpse	r24, r1
    29d2:	04 c0       	rjmp	.+8      	; 0x29dc <prvUnlockQueue+0x6c>
    29d4:	0e c0       	rjmp	.+28     	; 0x29f2 <prvUnlockQueue+0x82>
    29d6:	8e 01       	movw	r16, r28
    29d8:	08 5f       	subi	r16, 0xF8	; 248
    29da:	1f 4f       	sbci	r17, 0xFF	; 255
    29dc:	c8 01       	movw	r24, r16
    29de:	0e 94 2d 1b 	call	0x365a	; 0x365a <xTaskRemoveFromEventList>
    29e2:	81 11       	cpse	r24, r1
    29e4:	0e 94 ea 1b 	call	0x37d4	; 0x37d4 <vTaskMissedYield>
    29e8:	89 a1       	ldd	r24, Y+33	; 0x21
    29ea:	81 50       	subi	r24, 0x01	; 1
    29ec:	89 a3       	std	Y+33, r24	; 0x21
    29ee:	18 16       	cp	r1, r24
    29f0:	74 f3       	brlt	.-36     	; 0x29ce <prvUnlockQueue+0x5e>
    29f2:	8f ef       	ldi	r24, 0xFF	; 255
    29f4:	89 a3       	std	Y+33, r24	; 0x21
    29f6:	0f 90       	pop	r0
    29f8:	0f be       	out	0x3f, r0	; 63
    29fa:	df 91       	pop	r29
    29fc:	cf 91       	pop	r28
    29fe:	1f 91       	pop	r17
    2a00:	0f 91       	pop	r16
    2a02:	08 95       	ret

00002a04 <xQueueGenericReset>:
    2a04:	1f 93       	push	r17
    2a06:	cf 93       	push	r28
    2a08:	df 93       	push	r29
    2a0a:	61 30       	cpi	r22, 0x01	; 1
    2a0c:	59 f0       	breq	.+22     	; 0x2a24 <xQueueGenericReset+0x20>
    2a0e:	fc 01       	movw	r30, r24
    2a10:	23 89       	ldd	r18, Z+19	; 0x13
    2a12:	30 85       	ldd	r19, Z+8	; 0x08
    2a14:	31 11       	cpse	r19, r1
    2a16:	2c c0       	rjmp	.+88     	; 0x2a70 <xQueueGenericReset+0x6c>
    2a18:	11 e0       	ldi	r17, 0x01	; 1
    2a1a:	21 11       	cpse	r18, r1
    2a1c:	10 e0       	ldi	r17, 0x00	; 0
    2a1e:	21 11       	cpse	r18, r1
    2a20:	28 c0       	rjmp	.+80     	; 0x2a72 <xQueueGenericReset+0x6e>
    2a22:	01 c0       	rjmp	.+2      	; 0x2a26 <xQueueGenericReset+0x22>
    2a24:	11 e0       	ldi	r17, 0x01	; 1
    2a26:	ec 01       	movw	r28, r24
    2a28:	48 81       	ld	r20, Y
    2a2a:	59 81       	ldd	r21, Y+1	; 0x01
    2a2c:	28 a1       	ldd	r18, Y+32	; 0x20
    2a2e:	30 e0       	ldi	r19, 0x00	; 0
    2a30:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2a32:	62 9f       	mul	r22, r18
    2a34:	c0 01       	movw	r24, r0
    2a36:	63 9f       	mul	r22, r19
    2a38:	90 0d       	add	r25, r0
    2a3a:	11 24       	eor	r1, r1
    2a3c:	ba 01       	movw	r22, r20
    2a3e:	68 0f       	add	r22, r24
    2a40:	79 1f       	adc	r23, r25
    2a42:	6a 83       	std	Y+2, r22	; 0x02
    2a44:	7b 83       	std	Y+3, r23	; 0x03
    2a46:	1e 8e       	std	Y+30, r1	; 0x1e
    2a48:	4c 83       	std	Y+4, r20	; 0x04
    2a4a:	5d 83       	std	Y+5, r21	; 0x05
    2a4c:	82 1b       	sub	r24, r18
    2a4e:	93 0b       	sbc	r25, r19
    2a50:	84 0f       	add	r24, r20
    2a52:	95 1f       	adc	r25, r21
    2a54:	8e 83       	std	Y+6, r24	; 0x06
    2a56:	9f 83       	std	Y+7, r25	; 0x07
    2a58:	8f ef       	ldi	r24, 0xFF	; 255
    2a5a:	89 a3       	std	Y+33, r24	; 0x21
    2a5c:	8a a3       	std	Y+34, r24	; 0x22
    2a5e:	ce 01       	movw	r24, r28
    2a60:	08 96       	adiw	r24, 0x08	; 8
    2a62:	0e 94 22 12 	call	0x2444	; 0x2444 <vListInitialise>
    2a66:	ce 01       	movw	r24, r28
    2a68:	43 96       	adiw	r24, 0x13	; 19
    2a6a:	0e 94 22 12 	call	0x2444	; 0x2444 <vListInitialise>
    2a6e:	01 c0       	rjmp	.+2      	; 0x2a72 <xQueueGenericReset+0x6e>
    2a70:	10 e0       	ldi	r17, 0x00	; 0
    2a72:	81 2f       	mov	r24, r17
    2a74:	df 91       	pop	r29
    2a76:	cf 91       	pop	r28
    2a78:	1f 91       	pop	r17
    2a7a:	08 95       	ret

00002a7c <xQueueGenericCreate>:
    2a7c:	0f 93       	push	r16
    2a7e:	1f 93       	push	r17
    2a80:	cf 93       	push	r28
    2a82:	df 93       	push	r29
    2a84:	88 23       	and	r24, r24
    2a86:	01 f1       	breq	.+64     	; 0x2ac8 <xQueueGenericCreate+0x4c>
    2a88:	06 2f       	mov	r16, r22
    2a8a:	18 2f       	mov	r17, r24
    2a8c:	83 e2       	ldi	r24, 0x23	; 35
    2a8e:	90 e0       	ldi	r25, 0x00	; 0
    2a90:	0e 94 55 11 	call	0x22aa	; 0x22aa <pvPortMalloc>
    2a94:	ec 01       	movw	r28, r24
    2a96:	89 2b       	or	r24, r25
    2a98:	c9 f0       	breq	.+50     	; 0x2acc <xQueueGenericCreate+0x50>
    2a9a:	10 9f       	mul	r17, r16
    2a9c:	c0 01       	movw	r24, r0
    2a9e:	11 24       	eor	r1, r1
    2aa0:	01 96       	adiw	r24, 0x01	; 1
    2aa2:	0e 94 55 11 	call	0x22aa	; 0x22aa <pvPortMalloc>
    2aa6:	88 83       	st	Y, r24
    2aa8:	99 83       	std	Y+1, r25	; 0x01
    2aaa:	89 2b       	or	r24, r25
    2aac:	39 f0       	breq	.+14     	; 0x2abc <xQueueGenericCreate+0x40>
    2aae:	1f 8f       	std	Y+31, r17	; 0x1f
    2ab0:	08 a3       	std	Y+32, r16	; 0x20
    2ab2:	61 e0       	ldi	r22, 0x01	; 1
    2ab4:	ce 01       	movw	r24, r28
    2ab6:	0e 94 02 15 	call	0x2a04	; 0x2a04 <xQueueGenericReset>
    2aba:	08 c0       	rjmp	.+16     	; 0x2acc <xQueueGenericCreate+0x50>
    2abc:	ce 01       	movw	r24, r28
    2abe:	0e 94 ef 11 	call	0x23de	; 0x23de <vPortFree>
    2ac2:	c0 e0       	ldi	r28, 0x00	; 0
    2ac4:	d0 e0       	ldi	r29, 0x00	; 0
    2ac6:	02 c0       	rjmp	.+4      	; 0x2acc <xQueueGenericCreate+0x50>
    2ac8:	c0 e0       	ldi	r28, 0x00	; 0
    2aca:	d0 e0       	ldi	r29, 0x00	; 0
    2acc:	ce 01       	movw	r24, r28
    2ace:	df 91       	pop	r29
    2ad0:	cf 91       	pop	r28
    2ad2:	1f 91       	pop	r17
    2ad4:	0f 91       	pop	r16
    2ad6:	08 95       	ret

00002ad8 <xQueueGenericSend>:
    2ad8:	af 92       	push	r10
    2ada:	bf 92       	push	r11
    2adc:	cf 92       	push	r12
    2ade:	df 92       	push	r13
    2ae0:	ef 92       	push	r14
    2ae2:	ff 92       	push	r15
    2ae4:	0f 93       	push	r16
    2ae6:	1f 93       	push	r17
    2ae8:	cf 93       	push	r28
    2aea:	df 93       	push	r29
    2aec:	cd b7       	in	r28, 0x3d	; 61
    2aee:	de b7       	in	r29, 0x3e	; 62
    2af0:	29 97       	sbiw	r28, 0x09	; 9
    2af2:	cd bf       	out	0x3d, r28	; 61
    2af4:	de bf       	out	0x3e, r29	; 62
    2af6:	7c 01       	movw	r14, r24
    2af8:	5b 01       	movw	r10, r22
    2afa:	2e 83       	std	Y+6, r18	; 0x06
    2afc:	3f 83       	std	Y+7, r19	; 0x07
    2afe:	48 87       	std	Y+8, r20	; 0x08
    2b00:	59 87       	std	Y+9, r21	; 0x09
    2b02:	10 e0       	ldi	r17, 0x00	; 0
    2b04:	6c 01       	movw	r12, r24
    2b06:	88 e0       	ldi	r24, 0x08	; 8
    2b08:	c8 0e       	add	r12, r24
    2b0a:	d1 1c       	adc	r13, r1
    2b0c:	0f b6       	in	r0, 0x3f	; 63
    2b0e:	f8 94       	cli
    2b10:	0f 92       	push	r0
    2b12:	f7 01       	movw	r30, r14
    2b14:	96 8d       	ldd	r25, Z+30	; 0x1e
    2b16:	87 8d       	ldd	r24, Z+31	; 0x1f
    2b18:	98 17       	cp	r25, r24
    2b1a:	a8 f4       	brcc	.+42     	; 0x2b46 <xQueueGenericSend+0x6e>
    2b1c:	40 2f       	mov	r20, r16
    2b1e:	b5 01       	movw	r22, r10
    2b20:	c7 01       	movw	r24, r14
    2b22:	0e 94 52 14 	call	0x28a4	; 0x28a4 <prvCopyDataToQueue>
    2b26:	f7 01       	movw	r30, r14
    2b28:	83 89       	ldd	r24, Z+19	; 0x13
    2b2a:	88 23       	and	r24, r24
    2b2c:	41 f0       	breq	.+16     	; 0x2b3e <xQueueGenericSend+0x66>
    2b2e:	c7 01       	movw	r24, r14
    2b30:	43 96       	adiw	r24, 0x13	; 19
    2b32:	0e 94 2d 1b 	call	0x365a	; 0x365a <xTaskRemoveFromEventList>
    2b36:	81 30       	cpi	r24, 0x01	; 1
    2b38:	11 f4       	brne	.+4      	; 0x2b3e <xQueueGenericSend+0x66>
    2b3a:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    2b3e:	0f 90       	pop	r0
    2b40:	0f be       	out	0x3f, r0	; 63
    2b42:	81 e0       	ldi	r24, 0x01	; 1
    2b44:	56 c0       	rjmp	.+172    	; 0x2bf2 <xQueueGenericSend+0x11a>
    2b46:	8e 81       	ldd	r24, Y+6	; 0x06
    2b48:	9f 81       	ldd	r25, Y+7	; 0x07
    2b4a:	a8 85       	ldd	r26, Y+8	; 0x08
    2b4c:	b9 85       	ldd	r27, Y+9	; 0x09
    2b4e:	89 2b       	or	r24, r25
    2b50:	8a 2b       	or	r24, r26
    2b52:	8b 2b       	or	r24, r27
    2b54:	21 f4       	brne	.+8      	; 0x2b5e <xQueueGenericSend+0x86>
    2b56:	0f 90       	pop	r0
    2b58:	0f be       	out	0x3f, r0	; 63
    2b5a:	80 e0       	ldi	r24, 0x00	; 0
    2b5c:	4a c0       	rjmp	.+148    	; 0x2bf2 <xQueueGenericSend+0x11a>
    2b5e:	11 11       	cpse	r17, r1
    2b60:	05 c0       	rjmp	.+10     	; 0x2b6c <xQueueGenericSend+0x94>
    2b62:	ce 01       	movw	r24, r28
    2b64:	01 96       	adiw	r24, 0x01	; 1
    2b66:	0e 94 6c 1b 	call	0x36d8	; 0x36d8 <vTaskSetTimeOutState>
    2b6a:	11 e0       	ldi	r17, 0x01	; 1
    2b6c:	0f 90       	pop	r0
    2b6e:	0f be       	out	0x3f, r0	; 63
    2b70:	0e 94 6c 18 	call	0x30d8	; 0x30d8 <vTaskSuspendAll>
    2b74:	0f b6       	in	r0, 0x3f	; 63
    2b76:	f8 94       	cli
    2b78:	0f 92       	push	r0
    2b7a:	f7 01       	movw	r30, r14
    2b7c:	81 a1       	ldd	r24, Z+33	; 0x21
    2b7e:	8f 3f       	cpi	r24, 0xFF	; 255
    2b80:	09 f4       	brne	.+2      	; 0x2b84 <xQueueGenericSend+0xac>
    2b82:	11 a2       	std	Z+33, r1	; 0x21
    2b84:	f7 01       	movw	r30, r14
    2b86:	82 a1       	ldd	r24, Z+34	; 0x22
    2b88:	8f 3f       	cpi	r24, 0xFF	; 255
    2b8a:	09 f4       	brne	.+2      	; 0x2b8e <xQueueGenericSend+0xb6>
    2b8c:	12 a2       	std	Z+34, r1	; 0x22
    2b8e:	0f 90       	pop	r0
    2b90:	0f be       	out	0x3f, r0	; 63
    2b92:	be 01       	movw	r22, r28
    2b94:	6a 5f       	subi	r22, 0xFA	; 250
    2b96:	7f 4f       	sbci	r23, 0xFF	; 255
    2b98:	ce 01       	movw	r24, r28
    2b9a:	01 96       	adiw	r24, 0x01	; 1
    2b9c:	0e 94 7d 1b 	call	0x36fa	; 0x36fa <xTaskCheckForTimeOut>
    2ba0:	81 11       	cpse	r24, r1
    2ba2:	21 c0       	rjmp	.+66     	; 0x2be6 <xQueueGenericSend+0x10e>
    2ba4:	0f b6       	in	r0, 0x3f	; 63
    2ba6:	f8 94       	cli
    2ba8:	0f 92       	push	r0
    2baa:	f7 01       	movw	r30, r14
    2bac:	96 8d       	ldd	r25, Z+30	; 0x1e
    2bae:	0f 90       	pop	r0
    2bb0:	0f be       	out	0x3f, r0	; 63
    2bb2:	87 8d       	ldd	r24, Z+31	; 0x1f
    2bb4:	98 13       	cpse	r25, r24
    2bb6:	11 c0       	rjmp	.+34     	; 0x2bda <xQueueGenericSend+0x102>
    2bb8:	4e 81       	ldd	r20, Y+6	; 0x06
    2bba:	5f 81       	ldd	r21, Y+7	; 0x07
    2bbc:	68 85       	ldd	r22, Y+8	; 0x08
    2bbe:	79 85       	ldd	r23, Y+9	; 0x09
    2bc0:	c6 01       	movw	r24, r12
    2bc2:	0e 94 03 1b 	call	0x3606	; 0x3606 <vTaskPlaceOnEventList>
    2bc6:	c7 01       	movw	r24, r14
    2bc8:	0e 94 b8 14 	call	0x2970	; 0x2970 <prvUnlockQueue>
    2bcc:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    2bd0:	81 11       	cpse	r24, r1
    2bd2:	9c cf       	rjmp	.-200    	; 0x2b0c <xQueueGenericSend+0x34>
    2bd4:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    2bd8:	99 cf       	rjmp	.-206    	; 0x2b0c <xQueueGenericSend+0x34>
    2bda:	c7 01       	movw	r24, r14
    2bdc:	0e 94 b8 14 	call	0x2970	; 0x2970 <prvUnlockQueue>
    2be0:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    2be4:	93 cf       	rjmp	.-218    	; 0x2b0c <xQueueGenericSend+0x34>
    2be6:	c7 01       	movw	r24, r14
    2be8:	0e 94 b8 14 	call	0x2970	; 0x2970 <prvUnlockQueue>
    2bec:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    2bf0:	80 e0       	ldi	r24, 0x00	; 0
    2bf2:	29 96       	adiw	r28, 0x09	; 9
    2bf4:	cd bf       	out	0x3d, r28	; 61
    2bf6:	de bf       	out	0x3e, r29	; 62
    2bf8:	df 91       	pop	r29
    2bfa:	cf 91       	pop	r28
    2bfc:	1f 91       	pop	r17
    2bfe:	0f 91       	pop	r16
    2c00:	ff 90       	pop	r15
    2c02:	ef 90       	pop	r14
    2c04:	df 90       	pop	r13
    2c06:	cf 90       	pop	r12
    2c08:	bf 90       	pop	r11
    2c0a:	af 90       	pop	r10
    2c0c:	08 95       	ret

00002c0e <xQueueGenericReceive>:
    2c0e:	af 92       	push	r10
    2c10:	bf 92       	push	r11
    2c12:	cf 92       	push	r12
    2c14:	df 92       	push	r13
    2c16:	ef 92       	push	r14
    2c18:	ff 92       	push	r15
    2c1a:	0f 93       	push	r16
    2c1c:	1f 93       	push	r17
    2c1e:	cf 93       	push	r28
    2c20:	df 93       	push	r29
    2c22:	cd b7       	in	r28, 0x3d	; 61
    2c24:	de b7       	in	r29, 0x3e	; 62
    2c26:	29 97       	sbiw	r28, 0x09	; 9
    2c28:	cd bf       	out	0x3d, r28	; 61
    2c2a:	de bf       	out	0x3e, r29	; 62
    2c2c:	7c 01       	movw	r14, r24
    2c2e:	5b 01       	movw	r10, r22
    2c30:	2e 83       	std	Y+6, r18	; 0x06
    2c32:	3f 83       	std	Y+7, r19	; 0x07
    2c34:	48 87       	std	Y+8, r20	; 0x08
    2c36:	59 87       	std	Y+9, r21	; 0x09
    2c38:	10 e0       	ldi	r17, 0x00	; 0
    2c3a:	6c 01       	movw	r12, r24
    2c3c:	83 e1       	ldi	r24, 0x13	; 19
    2c3e:	c8 0e       	add	r12, r24
    2c40:	d1 1c       	adc	r13, r1
    2c42:	0f b6       	in	r0, 0x3f	; 63
    2c44:	f8 94       	cli
    2c46:	0f 92       	push	r0
    2c48:	f7 01       	movw	r30, r14
    2c4a:	86 8d       	ldd	r24, Z+30	; 0x1e
    2c4c:	88 23       	and	r24, r24
    2c4e:	99 f1       	breq	.+102    	; 0x2cb6 <xQueueGenericReceive+0xa8>
    2c50:	c6 80       	ldd	r12, Z+6	; 0x06
    2c52:	d7 80       	ldd	r13, Z+7	; 0x07
    2c54:	b5 01       	movw	r22, r10
    2c56:	c7 01       	movw	r24, r14
    2c58:	0e 94 9e 14 	call	0x293c	; 0x293c <prvCopyDataFromQueue>
    2c5c:	01 11       	cpse	r16, r1
    2c5e:	1a c0       	rjmp	.+52     	; 0x2c94 <xQueueGenericReceive+0x86>
    2c60:	f7 01       	movw	r30, r14
    2c62:	86 8d       	ldd	r24, Z+30	; 0x1e
    2c64:	81 50       	subi	r24, 0x01	; 1
    2c66:	86 8f       	std	Z+30, r24	; 0x1e
    2c68:	80 81       	ld	r24, Z
    2c6a:	91 81       	ldd	r25, Z+1	; 0x01
    2c6c:	89 2b       	or	r24, r25
    2c6e:	29 f4       	brne	.+10     	; 0x2c7a <xQueueGenericReceive+0x6c>
    2c70:	0e 94 07 1c 	call	0x380e	; 0x380e <xTaskGetCurrentTaskHandle>
    2c74:	f7 01       	movw	r30, r14
    2c76:	82 83       	std	Z+2, r24	; 0x02
    2c78:	93 83       	std	Z+3, r25	; 0x03
    2c7a:	f7 01       	movw	r30, r14
    2c7c:	80 85       	ldd	r24, Z+8	; 0x08
    2c7e:	88 23       	and	r24, r24
    2c80:	b1 f0       	breq	.+44     	; 0x2cae <xQueueGenericReceive+0xa0>
    2c82:	c7 01       	movw	r24, r14
    2c84:	08 96       	adiw	r24, 0x08	; 8
    2c86:	0e 94 2d 1b 	call	0x365a	; 0x365a <xTaskRemoveFromEventList>
    2c8a:	81 30       	cpi	r24, 0x01	; 1
    2c8c:	81 f4       	brne	.+32     	; 0x2cae <xQueueGenericReceive+0xa0>
    2c8e:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    2c92:	0d c0       	rjmp	.+26     	; 0x2cae <xQueueGenericReceive+0xa0>
    2c94:	f7 01       	movw	r30, r14
    2c96:	c6 82       	std	Z+6, r12	; 0x06
    2c98:	d7 82       	std	Z+7, r13	; 0x07
    2c9a:	83 89       	ldd	r24, Z+19	; 0x13
    2c9c:	88 23       	and	r24, r24
    2c9e:	39 f0       	breq	.+14     	; 0x2cae <xQueueGenericReceive+0xa0>
    2ca0:	c7 01       	movw	r24, r14
    2ca2:	43 96       	adiw	r24, 0x13	; 19
    2ca4:	0e 94 2d 1b 	call	0x365a	; 0x365a <xTaskRemoveFromEventList>
    2ca8:	81 11       	cpse	r24, r1
    2caa:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    2cae:	0f 90       	pop	r0
    2cb0:	0f be       	out	0x3f, r0	; 63
    2cb2:	81 e0       	ldi	r24, 0x01	; 1
    2cb4:	62 c0       	rjmp	.+196    	; 0x2d7a <xQueueGenericReceive+0x16c>
    2cb6:	8e 81       	ldd	r24, Y+6	; 0x06
    2cb8:	9f 81       	ldd	r25, Y+7	; 0x07
    2cba:	a8 85       	ldd	r26, Y+8	; 0x08
    2cbc:	b9 85       	ldd	r27, Y+9	; 0x09
    2cbe:	89 2b       	or	r24, r25
    2cc0:	8a 2b       	or	r24, r26
    2cc2:	8b 2b       	or	r24, r27
    2cc4:	21 f4       	brne	.+8      	; 0x2cce <xQueueGenericReceive+0xc0>
    2cc6:	0f 90       	pop	r0
    2cc8:	0f be       	out	0x3f, r0	; 63
    2cca:	80 e0       	ldi	r24, 0x00	; 0
    2ccc:	56 c0       	rjmp	.+172    	; 0x2d7a <xQueueGenericReceive+0x16c>
    2cce:	11 11       	cpse	r17, r1
    2cd0:	05 c0       	rjmp	.+10     	; 0x2cdc <xQueueGenericReceive+0xce>
    2cd2:	ce 01       	movw	r24, r28
    2cd4:	01 96       	adiw	r24, 0x01	; 1
    2cd6:	0e 94 6c 1b 	call	0x36d8	; 0x36d8 <vTaskSetTimeOutState>
    2cda:	11 e0       	ldi	r17, 0x01	; 1
    2cdc:	0f 90       	pop	r0
    2cde:	0f be       	out	0x3f, r0	; 63
    2ce0:	0e 94 6c 18 	call	0x30d8	; 0x30d8 <vTaskSuspendAll>
    2ce4:	0f b6       	in	r0, 0x3f	; 63
    2ce6:	f8 94       	cli
    2ce8:	0f 92       	push	r0
    2cea:	f7 01       	movw	r30, r14
    2cec:	81 a1       	ldd	r24, Z+33	; 0x21
    2cee:	8f 3f       	cpi	r24, 0xFF	; 255
    2cf0:	09 f4       	brne	.+2      	; 0x2cf4 <xQueueGenericReceive+0xe6>
    2cf2:	11 a2       	std	Z+33, r1	; 0x21
    2cf4:	f7 01       	movw	r30, r14
    2cf6:	82 a1       	ldd	r24, Z+34	; 0x22
    2cf8:	8f 3f       	cpi	r24, 0xFF	; 255
    2cfa:	09 f4       	brne	.+2      	; 0x2cfe <xQueueGenericReceive+0xf0>
    2cfc:	12 a2       	std	Z+34, r1	; 0x22
    2cfe:	0f 90       	pop	r0
    2d00:	0f be       	out	0x3f, r0	; 63
    2d02:	be 01       	movw	r22, r28
    2d04:	6a 5f       	subi	r22, 0xFA	; 250
    2d06:	7f 4f       	sbci	r23, 0xFF	; 255
    2d08:	ce 01       	movw	r24, r28
    2d0a:	01 96       	adiw	r24, 0x01	; 1
    2d0c:	0e 94 7d 1b 	call	0x36fa	; 0x36fa <xTaskCheckForTimeOut>
    2d10:	81 11       	cpse	r24, r1
    2d12:	2d c0       	rjmp	.+90     	; 0x2d6e <xQueueGenericReceive+0x160>
    2d14:	0f b6       	in	r0, 0x3f	; 63
    2d16:	f8 94       	cli
    2d18:	0f 92       	push	r0
    2d1a:	f7 01       	movw	r30, r14
    2d1c:	86 8d       	ldd	r24, Z+30	; 0x1e
    2d1e:	0f 90       	pop	r0
    2d20:	0f be       	out	0x3f, r0	; 63
    2d22:	81 11       	cpse	r24, r1
    2d24:	1e c0       	rjmp	.+60     	; 0x2d62 <xQueueGenericReceive+0x154>
    2d26:	80 81       	ld	r24, Z
    2d28:	91 81       	ldd	r25, Z+1	; 0x01
    2d2a:	89 2b       	or	r24, r25
    2d2c:	49 f4       	brne	.+18     	; 0x2d40 <xQueueGenericReceive+0x132>
    2d2e:	0f b6       	in	r0, 0x3f	; 63
    2d30:	f8 94       	cli
    2d32:	0f 92       	push	r0
    2d34:	82 81       	ldd	r24, Z+2	; 0x02
    2d36:	93 81       	ldd	r25, Z+3	; 0x03
    2d38:	0e 94 0c 1c 	call	0x3818	; 0x3818 <vTaskPriorityInherit>
    2d3c:	0f 90       	pop	r0
    2d3e:	0f be       	out	0x3f, r0	; 63
    2d40:	4e 81       	ldd	r20, Y+6	; 0x06
    2d42:	5f 81       	ldd	r21, Y+7	; 0x07
    2d44:	68 85       	ldd	r22, Y+8	; 0x08
    2d46:	79 85       	ldd	r23, Y+9	; 0x09
    2d48:	c6 01       	movw	r24, r12
    2d4a:	0e 94 03 1b 	call	0x3606	; 0x3606 <vTaskPlaceOnEventList>
    2d4e:	c7 01       	movw	r24, r14
    2d50:	0e 94 b8 14 	call	0x2970	; 0x2970 <prvUnlockQueue>
    2d54:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    2d58:	81 11       	cpse	r24, r1
    2d5a:	73 cf       	rjmp	.-282    	; 0x2c42 <xQueueGenericReceive+0x34>
    2d5c:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    2d60:	70 cf       	rjmp	.-288    	; 0x2c42 <xQueueGenericReceive+0x34>
    2d62:	c7 01       	movw	r24, r14
    2d64:	0e 94 b8 14 	call	0x2970	; 0x2970 <prvUnlockQueue>
    2d68:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    2d6c:	6a cf       	rjmp	.-300    	; 0x2c42 <xQueueGenericReceive+0x34>
    2d6e:	c7 01       	movw	r24, r14
    2d70:	0e 94 b8 14 	call	0x2970	; 0x2970 <prvUnlockQueue>
    2d74:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    2d78:	80 e0       	ldi	r24, 0x00	; 0
    2d7a:	29 96       	adiw	r28, 0x09	; 9
    2d7c:	cd bf       	out	0x3d, r28	; 61
    2d7e:	de bf       	out	0x3e, r29	; 62
    2d80:	df 91       	pop	r29
    2d82:	cf 91       	pop	r28
    2d84:	1f 91       	pop	r17
    2d86:	0f 91       	pop	r16
    2d88:	ff 90       	pop	r15
    2d8a:	ef 90       	pop	r14
    2d8c:	df 90       	pop	r13
    2d8e:	cf 90       	pop	r12
    2d90:	bf 90       	pop	r11
    2d92:	af 90       	pop	r10
    2d94:	08 95       	ret

00002d96 <uxQueueMessagesWaiting>:
    2d96:	0f b6       	in	r0, 0x3f	; 63
    2d98:	f8 94       	cli
    2d9a:	0f 92       	push	r0
    2d9c:	fc 01       	movw	r30, r24
    2d9e:	86 8d       	ldd	r24, Z+30	; 0x1e
    2da0:	0f 90       	pop	r0
    2da2:	0f be       	out	0x3f, r0	; 63
    2da4:	08 95       	ret

00002da6 <prvIdleTask>:
    2da6:	c4 ea       	ldi	r28, 0xA4	; 164
    2da8:	d1 e3       	ldi	r29, 0x31	; 49
    2daa:	88 81       	ld	r24, Y
    2dac:	82 30       	cpi	r24, 0x02	; 2
    2dae:	e8 f3       	brcs	.-6      	; 0x2daa <prvIdleTask+0x4>
    2db0:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    2db4:	fa cf       	rjmp	.-12     	; 0x2daa <prvIdleTask+0x4>

00002db6 <prvAddCurrentTaskToDelayedList>:
    2db6:	cf 92       	push	r12
    2db8:	df 92       	push	r13
    2dba:	ef 92       	push	r14
    2dbc:	ff 92       	push	r15
    2dbe:	6b 01       	movw	r12, r22
    2dc0:	7c 01       	movw	r14, r24
    2dc2:	e0 91 d0 31 	lds	r30, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    2dc6:	f0 91 d1 31 	lds	r31, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    2dca:	62 83       	std	Z+2, r22	; 0x02
    2dcc:	73 83       	std	Z+3, r23	; 0x03
    2dce:	84 83       	std	Z+4, r24	; 0x04
    2dd0:	95 83       	std	Z+5, r25	; 0x05
    2dd2:	80 91 78 31 	lds	r24, 0x3178	; 0x803178 <xTickCount>
    2dd6:	90 91 79 31 	lds	r25, 0x3179	; 0x803179 <xTickCount+0x1>
    2dda:	a0 91 7a 31 	lds	r26, 0x317A	; 0x80317a <xTickCount+0x2>
    2dde:	b0 91 7b 31 	lds	r27, 0x317B	; 0x80317b <xTickCount+0x3>
    2de2:	c8 16       	cp	r12, r24
    2de4:	d9 06       	cpc	r13, r25
    2de6:	ea 06       	cpc	r14, r26
    2de8:	fb 06       	cpc	r15, r27
    2dea:	68 f4       	brcc	.+26     	; 0x2e06 <prvAddCurrentTaskToDelayedList+0x50>
    2dec:	60 91 d0 31 	lds	r22, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    2df0:	70 91 d1 31 	lds	r23, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    2df4:	80 91 8a 31 	lds	r24, 0x318A	; 0x80318a <pxOverflowDelayedTaskList>
    2df8:	90 91 8b 31 	lds	r25, 0x318B	; 0x80318b <pxOverflowDelayedTaskList+0x1>
    2dfc:	6e 5f       	subi	r22, 0xFE	; 254
    2dfe:	7f 4f       	sbci	r23, 0xFF	; 255
    2e00:	0e 94 5e 12 	call	0x24bc	; 0x24bc <vListInsert>
    2e04:	21 c0       	rjmp	.+66     	; 0x2e48 <prvAddCurrentTaskToDelayedList+0x92>
    2e06:	60 91 d0 31 	lds	r22, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    2e0a:	70 91 d1 31 	lds	r23, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    2e0e:	80 91 8c 31 	lds	r24, 0x318C	; 0x80318c <pxDelayedTaskList>
    2e12:	90 91 8d 31 	lds	r25, 0x318D	; 0x80318d <pxDelayedTaskList+0x1>
    2e16:	6e 5f       	subi	r22, 0xFE	; 254
    2e18:	7f 4f       	sbci	r23, 0xFF	; 255
    2e1a:	0e 94 5e 12 	call	0x24bc	; 0x24bc <vListInsert>
    2e1e:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <xNextTaskUnblockTime>
    2e22:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <xNextTaskUnblockTime+0x1>
    2e26:	a0 91 08 20 	lds	r26, 0x2008	; 0x802008 <xNextTaskUnblockTime+0x2>
    2e2a:	b0 91 09 20 	lds	r27, 0x2009	; 0x802009 <xNextTaskUnblockTime+0x3>
    2e2e:	c8 16       	cp	r12, r24
    2e30:	d9 06       	cpc	r13, r25
    2e32:	ea 06       	cpc	r14, r26
    2e34:	fb 06       	cpc	r15, r27
    2e36:	40 f4       	brcc	.+16     	; 0x2e48 <prvAddCurrentTaskToDelayedList+0x92>
    2e38:	c0 92 06 20 	sts	0x2006, r12	; 0x802006 <xNextTaskUnblockTime>
    2e3c:	d0 92 07 20 	sts	0x2007, r13	; 0x802007 <xNextTaskUnblockTime+0x1>
    2e40:	e0 92 08 20 	sts	0x2008, r14	; 0x802008 <xNextTaskUnblockTime+0x2>
    2e44:	f0 92 09 20 	sts	0x2009, r15	; 0x802009 <xNextTaskUnblockTime+0x3>
    2e48:	ff 90       	pop	r15
    2e4a:	ef 90       	pop	r14
    2e4c:	df 90       	pop	r13
    2e4e:	cf 90       	pop	r12
    2e50:	08 95       	ret

00002e52 <xTaskGenericCreate>:
    2e52:	4f 92       	push	r4
    2e54:	5f 92       	push	r5
    2e56:	6f 92       	push	r6
    2e58:	7f 92       	push	r7
    2e5a:	8f 92       	push	r8
    2e5c:	9f 92       	push	r9
    2e5e:	af 92       	push	r10
    2e60:	bf 92       	push	r11
    2e62:	cf 92       	push	r12
    2e64:	df 92       	push	r13
    2e66:	ef 92       	push	r14
    2e68:	ff 92       	push	r15
    2e6a:	0f 93       	push	r16
    2e6c:	1f 93       	push	r17
    2e6e:	cf 93       	push	r28
    2e70:	df 93       	push	r29
    2e72:	5c 01       	movw	r10, r24
    2e74:	4b 01       	movw	r8, r22
    2e76:	3a 01       	movw	r6, r20
    2e78:	29 01       	movw	r4, r18
    2e7a:	88 e2       	ldi	r24, 0x28	; 40
    2e7c:	90 e0       	ldi	r25, 0x00	; 0
    2e7e:	0e 94 55 11 	call	0x22aa	; 0x22aa <pvPortMalloc>
    2e82:	ec 01       	movw	r28, r24
    2e84:	89 2b       	or	r24, r25
    2e86:	09 f4       	brne	.+2      	; 0x2e8a <xTaskGenericCreate+0x38>
    2e88:	d4 c0       	rjmp	.+424    	; 0x3032 <xTaskGenericCreate+0x1e0>
    2e8a:	c1 14       	cp	r12, r1
    2e8c:	d1 04       	cpc	r13, r1
    2e8e:	09 f0       	breq	.+2      	; 0x2e92 <xTaskGenericCreate+0x40>
    2e90:	cc c0       	rjmp	.+408    	; 0x302a <xTaskGenericCreate+0x1d8>
    2e92:	c3 01       	movw	r24, r6
    2e94:	0e 94 55 11 	call	0x22aa	; 0x22aa <pvPortMalloc>
    2e98:	8b 8f       	std	Y+27, r24	; 0x1b
    2e9a:	9c 8f       	std	Y+28, r25	; 0x1c
    2e9c:	00 97       	sbiw	r24, 0x00	; 0
    2e9e:	21 f4       	brne	.+8      	; 0x2ea8 <xTaskGenericCreate+0x56>
    2ea0:	ce 01       	movw	r24, r28
    2ea2:	0e 94 ef 11 	call	0x23de	; 0x23de <vPortFree>
    2ea6:	c5 c0       	rjmp	.+394    	; 0x3032 <xTaskGenericCreate+0x1e0>
    2ea8:	a3 01       	movw	r20, r6
    2eaa:	61 e1       	ldi	r22, 0x11	; 17
    2eac:	70 e0       	ldi	r23, 0x00	; 0
    2eae:	0e 94 99 28 	call	0x5132	; 0x5132 <memset>
    2eb2:	93 01       	movw	r18, r6
    2eb4:	21 50       	subi	r18, 0x01	; 1
    2eb6:	31 09       	sbc	r19, r1
    2eb8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2eba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ebc:	3c 01       	movw	r6, r24
    2ebe:	62 0e       	add	r6, r18
    2ec0:	73 1e       	adc	r7, r19
    2ec2:	4a e0       	ldi	r20, 0x0A	; 10
    2ec4:	50 e0       	ldi	r21, 0x00	; 0
    2ec6:	b4 01       	movw	r22, r8
    2ec8:	ce 01       	movw	r24, r28
    2eca:	4d 96       	adiw	r24, 0x1d	; 29
    2ecc:	0e 94 a0 28 	call	0x5140	; 0x5140 <strncpy>
    2ed0:	1e a2       	std	Y+38, r1	; 0x26
    2ed2:	10 2f       	mov	r17, r16
    2ed4:	04 30       	cpi	r16, 0x04	; 4
    2ed6:	08 f0       	brcs	.+2      	; 0x2eda <xTaskGenericCreate+0x88>
    2ed8:	13 e0       	ldi	r17, 0x03	; 3
    2eda:	1a 8f       	std	Y+26, r17	; 0x1a
    2edc:	1f a3       	std	Y+39, r17	; 0x27
    2ede:	6e 01       	movw	r12, r28
    2ee0:	22 e0       	ldi	r18, 0x02	; 2
    2ee2:	c2 0e       	add	r12, r18
    2ee4:	d1 1c       	adc	r13, r1
    2ee6:	c6 01       	movw	r24, r12
    2ee8:	0e 94 33 12 	call	0x2466	; 0x2466 <vListInitialiseItem>
    2eec:	ce 01       	movw	r24, r28
    2eee:	0e 96       	adiw	r24, 0x0e	; 14
    2ef0:	0e 94 33 12 	call	0x2466	; 0x2466 <vListInitialiseItem>
    2ef4:	ca 87       	std	Y+10, r28	; 0x0a
    2ef6:	db 87       	std	Y+11, r29	; 0x0b
    2ef8:	84 e0       	ldi	r24, 0x04	; 4
    2efa:	90 e0       	ldi	r25, 0x00	; 0
    2efc:	a0 e0       	ldi	r26, 0x00	; 0
    2efe:	b0 e0       	ldi	r27, 0x00	; 0
    2f00:	81 1b       	sub	r24, r17
    2f02:	91 09       	sbc	r25, r1
    2f04:	a1 09       	sbc	r26, r1
    2f06:	b1 09       	sbc	r27, r1
    2f08:	8e 87       	std	Y+14, r24	; 0x0e
    2f0a:	9f 87       	std	Y+15, r25	; 0x0f
    2f0c:	a8 8b       	std	Y+16, r26	; 0x10
    2f0e:	b9 8b       	std	Y+17, r27	; 0x11
    2f10:	ce 8b       	std	Y+22, r28	; 0x16
    2f12:	df 8b       	std	Y+23, r29	; 0x17
    2f14:	a2 01       	movw	r20, r4
    2f16:	b5 01       	movw	r22, r10
    2f18:	c3 01       	movw	r24, r6
    2f1a:	0e 94 cf 12 	call	0x259e	; 0x259e <pxPortInitialiseStack>
    2f1e:	88 83       	st	Y, r24
    2f20:	99 83       	std	Y+1, r25	; 0x01
    2f22:	e1 14       	cp	r14, r1
    2f24:	f1 04       	cpc	r15, r1
    2f26:	19 f0       	breq	.+6      	; 0x2f2e <xTaskGenericCreate+0xdc>
    2f28:	f7 01       	movw	r30, r14
    2f2a:	c0 83       	st	Z, r28
    2f2c:	d1 83       	std	Z+1, r29	; 0x01
    2f2e:	0f b6       	in	r0, 0x3f	; 63
    2f30:	f8 94       	cli
    2f32:	0f 92       	push	r0
    2f34:	80 91 7c 31 	lds	r24, 0x317C	; 0x80317c <uxCurrentNumberOfTasks>
    2f38:	8f 5f       	subi	r24, 0xFF	; 255
    2f3a:	80 93 7c 31 	sts	0x317C, r24	; 0x80317c <uxCurrentNumberOfTasks>
    2f3e:	80 91 d0 31 	lds	r24, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    2f42:	90 91 d1 31 	lds	r25, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    2f46:	89 2b       	or	r24, r25
    2f48:	89 f5       	brne	.+98     	; 0x2fac <xTaskGenericCreate+0x15a>
    2f4a:	c0 93 d0 31 	sts	0x31D0, r28	; 0x8031d0 <pxCurrentTCB>
    2f4e:	d0 93 d1 31 	sts	0x31D1, r29	; 0x8031d1 <pxCurrentTCB+0x1>
    2f52:	80 91 7c 31 	lds	r24, 0x317C	; 0x80317c <uxCurrentNumberOfTasks>
    2f56:	81 30       	cpi	r24, 0x01	; 1
    2f58:	c1 f5       	brne	.+112    	; 0x2fca <xTaskGenericCreate+0x178>
    2f5a:	84 ea       	ldi	r24, 0xA4	; 164
    2f5c:	91 e3       	ldi	r25, 0x31	; 49
    2f5e:	0e 94 22 12 	call	0x2444	; 0x2444 <vListInitialise>
    2f62:	8f ea       	ldi	r24, 0xAF	; 175
    2f64:	91 e3       	ldi	r25, 0x31	; 49
    2f66:	0e 94 22 12 	call	0x2444	; 0x2444 <vListInitialise>
    2f6a:	8a eb       	ldi	r24, 0xBA	; 186
    2f6c:	91 e3       	ldi	r25, 0x31	; 49
    2f6e:	0e 94 22 12 	call	0x2444	; 0x2444 <vListInitialise>
    2f72:	85 ec       	ldi	r24, 0xC5	; 197
    2f74:	91 e3       	ldi	r25, 0x31	; 49
    2f76:	0e 94 22 12 	call	0x2444	; 0x2444 <vListInitialise>
    2f7a:	89 e9       	ldi	r24, 0x99	; 153
    2f7c:	91 e3       	ldi	r25, 0x31	; 49
    2f7e:	0e 94 22 12 	call	0x2444	; 0x2444 <vListInitialise>
    2f82:	8e e8       	ldi	r24, 0x8E	; 142
    2f84:	91 e3       	ldi	r25, 0x31	; 49
    2f86:	0e 94 22 12 	call	0x2444	; 0x2444 <vListInitialise>
    2f8a:	8f e7       	ldi	r24, 0x7F	; 127
    2f8c:	91 e3       	ldi	r25, 0x31	; 49
    2f8e:	0e 94 22 12 	call	0x2444	; 0x2444 <vListInitialise>
    2f92:	89 e9       	ldi	r24, 0x99	; 153
    2f94:	91 e3       	ldi	r25, 0x31	; 49
    2f96:	80 93 8c 31 	sts	0x318C, r24	; 0x80318c <pxDelayedTaskList>
    2f9a:	90 93 8d 31 	sts	0x318D, r25	; 0x80318d <pxDelayedTaskList+0x1>
    2f9e:	8e e8       	ldi	r24, 0x8E	; 142
    2fa0:	91 e3       	ldi	r25, 0x31	; 49
    2fa2:	80 93 8a 31 	sts	0x318A, r24	; 0x80318a <pxOverflowDelayedTaskList>
    2fa6:	90 93 8b 31 	sts	0x318B, r25	; 0x80318b <pxOverflowDelayedTaskList+0x1>
    2faa:	0f c0       	rjmp	.+30     	; 0x2fca <xTaskGenericCreate+0x178>
    2fac:	80 91 75 31 	lds	r24, 0x3175	; 0x803175 <xSchedulerRunning>
    2fb0:	81 11       	cpse	r24, r1
    2fb2:	0b c0       	rjmp	.+22     	; 0x2fca <xTaskGenericCreate+0x178>
    2fb4:	e0 91 d0 31 	lds	r30, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    2fb8:	f0 91 d1 31 	lds	r31, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    2fbc:	82 8d       	ldd	r24, Z+26	; 0x1a
    2fbe:	08 17       	cp	r16, r24
    2fc0:	20 f0       	brcs	.+8      	; 0x2fca <xTaskGenericCreate+0x178>
    2fc2:	c0 93 d0 31 	sts	0x31D0, r28	; 0x8031d0 <pxCurrentTCB>
    2fc6:	d0 93 d1 31 	sts	0x31D1, r29	; 0x8031d1 <pxCurrentTCB+0x1>
    2fca:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2fcc:	90 91 77 31 	lds	r25, 0x3177	; 0x803177 <uxTopUsedPriority>
    2fd0:	98 17       	cp	r25, r24
    2fd2:	10 f4       	brcc	.+4      	; 0x2fd8 <xTaskGenericCreate+0x186>
    2fd4:	80 93 77 31 	sts	0x3177, r24	; 0x803177 <uxTopUsedPriority>
    2fd8:	90 91 70 31 	lds	r25, 0x3170	; 0x803170 <uxTaskNumber>
    2fdc:	9f 5f       	subi	r25, 0xFF	; 255
    2fde:	90 93 70 31 	sts	0x3170, r25	; 0x803170 <uxTaskNumber>
    2fe2:	90 91 76 31 	lds	r25, 0x3176	; 0x803176 <uxTopReadyPriority>
    2fe6:	98 17       	cp	r25, r24
    2fe8:	10 f4       	brcc	.+4      	; 0x2fee <xTaskGenericCreate+0x19c>
    2fea:	80 93 76 31 	sts	0x3176, r24	; 0x803176 <uxTopReadyPriority>
    2fee:	fb e0       	ldi	r31, 0x0B	; 11
    2ff0:	8f 9f       	mul	r24, r31
    2ff2:	c0 01       	movw	r24, r0
    2ff4:	11 24       	eor	r1, r1
    2ff6:	b6 01       	movw	r22, r12
    2ff8:	8c 55       	subi	r24, 0x5C	; 92
    2ffa:	9e 4c       	sbci	r25, 0xCE	; 206
    2ffc:	0e 94 37 12 	call	0x246e	; 0x246e <vListInsertEnd>
    3000:	0f 90       	pop	r0
    3002:	0f be       	out	0x3f, r0	; 63
    3004:	80 91 75 31 	lds	r24, 0x3175	; 0x803175 <xSchedulerRunning>
    3008:	88 23       	and	r24, r24
    300a:	59 f0       	breq	.+22     	; 0x3022 <xTaskGenericCreate+0x1d0>
    300c:	e0 91 d0 31 	lds	r30, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3010:	f0 91 d1 31 	lds	r31, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    3014:	82 8d       	ldd	r24, Z+26	; 0x1a
    3016:	80 17       	cp	r24, r16
    3018:	30 f4       	brcc	.+12     	; 0x3026 <xTaskGenericCreate+0x1d4>
    301a:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    301e:	81 e0       	ldi	r24, 0x01	; 1
    3020:	09 c0       	rjmp	.+18     	; 0x3034 <xTaskGenericCreate+0x1e2>
    3022:	81 e0       	ldi	r24, 0x01	; 1
    3024:	07 c0       	rjmp	.+14     	; 0x3034 <xTaskGenericCreate+0x1e2>
    3026:	81 e0       	ldi	r24, 0x01	; 1
    3028:	05 c0       	rjmp	.+10     	; 0x3034 <xTaskGenericCreate+0x1e2>
    302a:	cb 8e       	std	Y+27, r12	; 0x1b
    302c:	dc 8e       	std	Y+28, r13	; 0x1c
    302e:	c6 01       	movw	r24, r12
    3030:	3b cf       	rjmp	.-394    	; 0x2ea8 <xTaskGenericCreate+0x56>
    3032:	8f ef       	ldi	r24, 0xFF	; 255
    3034:	df 91       	pop	r29
    3036:	cf 91       	pop	r28
    3038:	1f 91       	pop	r17
    303a:	0f 91       	pop	r16
    303c:	ff 90       	pop	r15
    303e:	ef 90       	pop	r14
    3040:	df 90       	pop	r13
    3042:	cf 90       	pop	r12
    3044:	bf 90       	pop	r11
    3046:	af 90       	pop	r10
    3048:	9f 90       	pop	r9
    304a:	8f 90       	pop	r8
    304c:	7f 90       	pop	r7
    304e:	6f 90       	pop	r6
    3050:	5f 90       	pop	r5
    3052:	4f 90       	pop	r4
    3054:	08 95       	ret

00003056 <uxTaskPriorityGet>:
    3056:	0f b6       	in	r0, 0x3f	; 63
    3058:	f8 94       	cli
    305a:	0f 92       	push	r0
    305c:	00 97       	sbiw	r24, 0x00	; 0
    305e:	21 f4       	brne	.+8      	; 0x3068 <uxTaskPriorityGet+0x12>
    3060:	80 91 d0 31 	lds	r24, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3064:	90 91 d1 31 	lds	r25, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    3068:	0f 90       	pop	r0
    306a:	0f be       	out	0x3f, r0	; 63
    306c:	fc 01       	movw	r30, r24
    306e:	82 8d       	ldd	r24, Z+26	; 0x1a
    3070:	08 95       	ret

00003072 <vTaskStartScheduler>:
    3072:	af 92       	push	r10
    3074:	bf 92       	push	r11
    3076:	cf 92       	push	r12
    3078:	df 92       	push	r13
    307a:	ef 92       	push	r14
    307c:	ff 92       	push	r15
    307e:	0f 93       	push	r16
    3080:	a1 2c       	mov	r10, r1
    3082:	b1 2c       	mov	r11, r1
    3084:	c1 2c       	mov	r12, r1
    3086:	d1 2c       	mov	r13, r1
    3088:	0f 2e       	mov	r0, r31
    308a:	fd e7       	ldi	r31, 0x7D	; 125
    308c:	ef 2e       	mov	r14, r31
    308e:	f1 e3       	ldi	r31, 0x31	; 49
    3090:	ff 2e       	mov	r15, r31
    3092:	f0 2d       	mov	r31, r0
    3094:	00 e0       	ldi	r16, 0x00	; 0
    3096:	20 e0       	ldi	r18, 0x00	; 0
    3098:	30 e0       	ldi	r19, 0x00	; 0
    309a:	44 e6       	ldi	r20, 0x64	; 100
    309c:	50 e0       	ldi	r21, 0x00	; 0
    309e:	61 e9       	ldi	r22, 0x91	; 145
    30a0:	70 e2       	ldi	r23, 0x20	; 32
    30a2:	83 ed       	ldi	r24, 0xD3	; 211
    30a4:	96 e1       	ldi	r25, 0x16	; 22
    30a6:	0e 94 29 17 	call	0x2e52	; 0x2e52 <xTaskGenericCreate>
    30aa:	81 30       	cpi	r24, 0x01	; 1
    30ac:	69 f4       	brne	.+26     	; 0x30c8 <vTaskStartScheduler+0x56>
    30ae:	f8 94       	cli
    30b0:	80 93 75 31 	sts	0x3175, r24	; 0x803175 <xSchedulerRunning>
    30b4:	10 92 78 31 	sts	0x3178, r1	; 0x803178 <xTickCount>
    30b8:	10 92 79 31 	sts	0x3179, r1	; 0x803179 <xTickCount+0x1>
    30bc:	10 92 7a 31 	sts	0x317A, r1	; 0x80317a <xTickCount+0x2>
    30c0:	10 92 7b 31 	sts	0x317B, r1	; 0x80317b <xTickCount+0x3>
    30c4:	0e 94 45 13 	call	0x268a	; 0x268a <xPortStartScheduler>
    30c8:	0f 91       	pop	r16
    30ca:	ff 90       	pop	r15
    30cc:	ef 90       	pop	r14
    30ce:	df 90       	pop	r13
    30d0:	cf 90       	pop	r12
    30d2:	bf 90       	pop	r11
    30d4:	af 90       	pop	r10
    30d6:	08 95       	ret

000030d8 <vTaskSuspendAll>:
    30d8:	80 91 74 31 	lds	r24, 0x3174	; 0x803174 <uxSchedulerSuspended>
    30dc:	8f 5f       	subi	r24, 0xFF	; 255
    30de:	80 93 74 31 	sts	0x3174, r24	; 0x803174 <uxSchedulerSuspended>
    30e2:	08 95       	ret

000030e4 <xTaskGetTickCount>:
    30e4:	0f b6       	in	r0, 0x3f	; 63
    30e6:	f8 94       	cli
    30e8:	0f 92       	push	r0
    30ea:	60 91 78 31 	lds	r22, 0x3178	; 0x803178 <xTickCount>
    30ee:	70 91 79 31 	lds	r23, 0x3179	; 0x803179 <xTickCount+0x1>
    30f2:	80 91 7a 31 	lds	r24, 0x317A	; 0x80317a <xTickCount+0x2>
    30f6:	90 91 7b 31 	lds	r25, 0x317B	; 0x80317b <xTickCount+0x3>
    30fa:	0f 90       	pop	r0
    30fc:	0f be       	out	0x3f, r0	; 63
    30fe:	08 95       	ret

00003100 <pcTaskGetTaskName>:
    3100:	00 97       	sbiw	r24, 0x00	; 0
    3102:	21 f4       	brne	.+8      	; 0x310c <pcTaskGetTaskName+0xc>
    3104:	80 91 d0 31 	lds	r24, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3108:	90 91 d1 31 	lds	r25, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    310c:	4d 96       	adiw	r24, 0x1d	; 29
    310e:	08 95       	ret

00003110 <vTaskIncrementTick>:
    3110:	ff 92       	push	r15
    3112:	0f 93       	push	r16
    3114:	1f 93       	push	r17
    3116:	cf 93       	push	r28
    3118:	df 93       	push	r29
    311a:	80 91 74 31 	lds	r24, 0x3174	; 0x803174 <uxSchedulerSuspended>
    311e:	81 11       	cpse	r24, r1
    3120:	ed c0       	rjmp	.+474    	; 0x32fc <vTaskIncrementTick+0x1ec>
    3122:	80 91 78 31 	lds	r24, 0x3178	; 0x803178 <xTickCount>
    3126:	90 91 79 31 	lds	r25, 0x3179	; 0x803179 <xTickCount+0x1>
    312a:	a0 91 7a 31 	lds	r26, 0x317A	; 0x80317a <xTickCount+0x2>
    312e:	b0 91 7b 31 	lds	r27, 0x317B	; 0x80317b <xTickCount+0x3>
    3132:	01 96       	adiw	r24, 0x01	; 1
    3134:	a1 1d       	adc	r26, r1
    3136:	b1 1d       	adc	r27, r1
    3138:	80 93 78 31 	sts	0x3178, r24	; 0x803178 <xTickCount>
    313c:	90 93 79 31 	sts	0x3179, r25	; 0x803179 <xTickCount+0x1>
    3140:	a0 93 7a 31 	sts	0x317A, r26	; 0x80317a <xTickCount+0x2>
    3144:	b0 93 7b 31 	sts	0x317B, r27	; 0x80317b <xTickCount+0x3>
    3148:	80 91 78 31 	lds	r24, 0x3178	; 0x803178 <xTickCount>
    314c:	90 91 79 31 	lds	r25, 0x3179	; 0x803179 <xTickCount+0x1>
    3150:	a0 91 7a 31 	lds	r26, 0x317A	; 0x80317a <xTickCount+0x2>
    3154:	b0 91 7b 31 	lds	r27, 0x317B	; 0x80317b <xTickCount+0x3>
    3158:	89 2b       	or	r24, r25
    315a:	8a 2b       	or	r24, r26
    315c:	8b 2b       	or	r24, r27
    315e:	f1 f5       	brne	.+124    	; 0x31dc <vTaskIncrementTick+0xcc>
    3160:	80 91 8c 31 	lds	r24, 0x318C	; 0x80318c <pxDelayedTaskList>
    3164:	90 91 8d 31 	lds	r25, 0x318D	; 0x80318d <pxDelayedTaskList+0x1>
    3168:	20 91 8a 31 	lds	r18, 0x318A	; 0x80318a <pxOverflowDelayedTaskList>
    316c:	30 91 8b 31 	lds	r19, 0x318B	; 0x80318b <pxOverflowDelayedTaskList+0x1>
    3170:	20 93 8c 31 	sts	0x318C, r18	; 0x80318c <pxDelayedTaskList>
    3174:	30 93 8d 31 	sts	0x318D, r19	; 0x80318d <pxDelayedTaskList+0x1>
    3178:	80 93 8a 31 	sts	0x318A, r24	; 0x80318a <pxOverflowDelayedTaskList>
    317c:	90 93 8b 31 	sts	0x318B, r25	; 0x80318b <pxOverflowDelayedTaskList+0x1>
    3180:	80 91 71 31 	lds	r24, 0x3171	; 0x803171 <xNumOfOverflows>
    3184:	8f 5f       	subi	r24, 0xFF	; 255
    3186:	80 93 71 31 	sts	0x3171, r24	; 0x803171 <xNumOfOverflows>
    318a:	e0 91 8c 31 	lds	r30, 0x318C	; 0x80318c <pxDelayedTaskList>
    318e:	f0 91 8d 31 	lds	r31, 0x318D	; 0x80318d <pxDelayedTaskList+0x1>
    3192:	80 81       	ld	r24, Z
    3194:	81 11       	cpse	r24, r1
    3196:	0c c0       	rjmp	.+24     	; 0x31b0 <vTaskIncrementTick+0xa0>
    3198:	8f ef       	ldi	r24, 0xFF	; 255
    319a:	9f ef       	ldi	r25, 0xFF	; 255
    319c:	dc 01       	movw	r26, r24
    319e:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <xNextTaskUnblockTime>
    31a2:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <xNextTaskUnblockTime+0x1>
    31a6:	a0 93 08 20 	sts	0x2008, r26	; 0x802008 <xNextTaskUnblockTime+0x2>
    31aa:	b0 93 09 20 	sts	0x2009, r27	; 0x802009 <xNextTaskUnblockTime+0x3>
    31ae:	16 c0       	rjmp	.+44     	; 0x31dc <vTaskIncrementTick+0xcc>
    31b0:	e0 91 8c 31 	lds	r30, 0x318C	; 0x80318c <pxDelayedTaskList>
    31b4:	f0 91 8d 31 	lds	r31, 0x318D	; 0x80318d <pxDelayedTaskList+0x1>
    31b8:	07 80       	ldd	r0, Z+7	; 0x07
    31ba:	f0 85       	ldd	r31, Z+8	; 0x08
    31bc:	e0 2d       	mov	r30, r0
    31be:	00 84       	ldd	r0, Z+8	; 0x08
    31c0:	f1 85       	ldd	r31, Z+9	; 0x09
    31c2:	e0 2d       	mov	r30, r0
    31c4:	82 81       	ldd	r24, Z+2	; 0x02
    31c6:	93 81       	ldd	r25, Z+3	; 0x03
    31c8:	a4 81       	ldd	r26, Z+4	; 0x04
    31ca:	b5 81       	ldd	r27, Z+5	; 0x05
    31cc:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <xNextTaskUnblockTime>
    31d0:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <xNextTaskUnblockTime+0x1>
    31d4:	a0 93 08 20 	sts	0x2008, r26	; 0x802008 <xNextTaskUnblockTime+0x2>
    31d8:	b0 93 09 20 	sts	0x2009, r27	; 0x802009 <xNextTaskUnblockTime+0x3>
    31dc:	40 91 78 31 	lds	r20, 0x3178	; 0x803178 <xTickCount>
    31e0:	50 91 79 31 	lds	r21, 0x3179	; 0x803179 <xTickCount+0x1>
    31e4:	60 91 7a 31 	lds	r22, 0x317A	; 0x80317a <xTickCount+0x2>
    31e8:	70 91 7b 31 	lds	r23, 0x317B	; 0x80317b <xTickCount+0x3>
    31ec:	80 91 06 20 	lds	r24, 0x2006	; 0x802006 <xNextTaskUnblockTime>
    31f0:	90 91 07 20 	lds	r25, 0x2007	; 0x802007 <xNextTaskUnblockTime+0x1>
    31f4:	a0 91 08 20 	lds	r26, 0x2008	; 0x802008 <xNextTaskUnblockTime+0x2>
    31f8:	b0 91 09 20 	lds	r27, 0x2009	; 0x802009 <xNextTaskUnblockTime+0x3>
    31fc:	48 17       	cp	r20, r24
    31fe:	59 07       	cpc	r21, r25
    3200:	6a 07       	cpc	r22, r26
    3202:	7b 07       	cpc	r23, r27
    3204:	08 f4       	brcc	.+2      	; 0x3208 <vTaskIncrementTick+0xf8>
    3206:	7f c0       	rjmp	.+254    	; 0x3306 <vTaskIncrementTick+0x1f6>
    3208:	e0 91 8c 31 	lds	r30, 0x318C	; 0x80318c <pxDelayedTaskList>
    320c:	f0 91 8d 31 	lds	r31, 0x318D	; 0x80318d <pxDelayedTaskList+0x1>
    3210:	80 81       	ld	r24, Z
    3212:	88 23       	and	r24, r24
    3214:	f9 f0       	breq	.+62     	; 0x3254 <vTaskIncrementTick+0x144>
    3216:	e0 91 8c 31 	lds	r30, 0x318C	; 0x80318c <pxDelayedTaskList>
    321a:	f0 91 8d 31 	lds	r31, 0x318D	; 0x80318d <pxDelayedTaskList+0x1>
    321e:	07 80       	ldd	r0, Z+7	; 0x07
    3220:	f0 85       	ldd	r31, Z+8	; 0x08
    3222:	e0 2d       	mov	r30, r0
    3224:	c0 85       	ldd	r28, Z+8	; 0x08
    3226:	d1 85       	ldd	r29, Z+9	; 0x09
    3228:	8a 81       	ldd	r24, Y+2	; 0x02
    322a:	9b 81       	ldd	r25, Y+3	; 0x03
    322c:	ac 81       	ldd	r26, Y+4	; 0x04
    322e:	bd 81       	ldd	r27, Y+5	; 0x05
    3230:	40 91 78 31 	lds	r20, 0x3178	; 0x803178 <xTickCount>
    3234:	50 91 79 31 	lds	r21, 0x3179	; 0x803179 <xTickCount+0x1>
    3238:	60 91 7a 31 	lds	r22, 0x317A	; 0x80317a <xTickCount+0x2>
    323c:	70 91 7b 31 	lds	r23, 0x317B	; 0x80317b <xTickCount+0x3>
    3240:	48 17       	cp	r20, r24
    3242:	59 07       	cpc	r21, r25
    3244:	6a 07       	cpc	r22, r26
    3246:	7b 07       	cpc	r23, r27
    3248:	58 f1       	brcs	.+86     	; 0x32a0 <vTaskIncrementTick+0x190>
    324a:	0f 2e       	mov	r0, r31
    324c:	fb e0       	ldi	r31, 0x0B	; 11
    324e:	ff 2e       	mov	r15, r31
    3250:	f0 2d       	mov	r31, r0
    3252:	2f c0       	rjmp	.+94     	; 0x32b2 <vTaskIncrementTick+0x1a2>
    3254:	8f ef       	ldi	r24, 0xFF	; 255
    3256:	9f ef       	ldi	r25, 0xFF	; 255
    3258:	dc 01       	movw	r26, r24
    325a:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <xNextTaskUnblockTime>
    325e:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <xNextTaskUnblockTime+0x1>
    3262:	a0 93 08 20 	sts	0x2008, r26	; 0x802008 <xNextTaskUnblockTime+0x2>
    3266:	b0 93 09 20 	sts	0x2009, r27	; 0x802009 <xNextTaskUnblockTime+0x3>
    326a:	4d c0       	rjmp	.+154    	; 0x3306 <vTaskIncrementTick+0x1f6>
    326c:	e0 91 8c 31 	lds	r30, 0x318C	; 0x80318c <pxDelayedTaskList>
    3270:	f0 91 8d 31 	lds	r31, 0x318D	; 0x80318d <pxDelayedTaskList+0x1>
    3274:	07 80       	ldd	r0, Z+7	; 0x07
    3276:	f0 85       	ldd	r31, Z+8	; 0x08
    3278:	e0 2d       	mov	r30, r0
    327a:	c0 85       	ldd	r28, Z+8	; 0x08
    327c:	d1 85       	ldd	r29, Z+9	; 0x09
    327e:	8a 81       	ldd	r24, Y+2	; 0x02
    3280:	9b 81       	ldd	r25, Y+3	; 0x03
    3282:	ac 81       	ldd	r26, Y+4	; 0x04
    3284:	bd 81       	ldd	r27, Y+5	; 0x05
    3286:	40 91 78 31 	lds	r20, 0x3178	; 0x803178 <xTickCount>
    328a:	50 91 79 31 	lds	r21, 0x3179	; 0x803179 <xTickCount+0x1>
    328e:	60 91 7a 31 	lds	r22, 0x317A	; 0x80317a <xTickCount+0x2>
    3292:	70 91 7b 31 	lds	r23, 0x317B	; 0x80317b <xTickCount+0x3>
    3296:	48 17       	cp	r20, r24
    3298:	59 07       	cpc	r21, r25
    329a:	6a 07       	cpc	r22, r26
    329c:	7b 07       	cpc	r23, r27
    329e:	48 f4       	brcc	.+18     	; 0x32b2 <vTaskIncrementTick+0x1a2>
    32a0:	80 93 06 20 	sts	0x2006, r24	; 0x802006 <xNextTaskUnblockTime>
    32a4:	90 93 07 20 	sts	0x2007, r25	; 0x802007 <xNextTaskUnblockTime+0x1>
    32a8:	a0 93 08 20 	sts	0x2008, r26	; 0x802008 <xNextTaskUnblockTime+0x2>
    32ac:	b0 93 09 20 	sts	0x2009, r27	; 0x802009 <xNextTaskUnblockTime+0x3>
    32b0:	2a c0       	rjmp	.+84     	; 0x3306 <vTaskIncrementTick+0x1f6>
    32b2:	8e 01       	movw	r16, r28
    32b4:	0e 5f       	subi	r16, 0xFE	; 254
    32b6:	1f 4f       	sbci	r17, 0xFF	; 255
    32b8:	c8 01       	movw	r24, r16
    32ba:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    32be:	88 8d       	ldd	r24, Y+24	; 0x18
    32c0:	99 8d       	ldd	r25, Y+25	; 0x19
    32c2:	89 2b       	or	r24, r25
    32c4:	21 f0       	breq	.+8      	; 0x32ce <vTaskIncrementTick+0x1be>
    32c6:	ce 01       	movw	r24, r28
    32c8:	0e 96       	adiw	r24, 0x0e	; 14
    32ca:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    32ce:	8a 8d       	ldd	r24, Y+26	; 0x1a
    32d0:	90 91 76 31 	lds	r25, 0x3176	; 0x803176 <uxTopReadyPriority>
    32d4:	98 17       	cp	r25, r24
    32d6:	10 f4       	brcc	.+4      	; 0x32dc <vTaskIncrementTick+0x1cc>
    32d8:	80 93 76 31 	sts	0x3176, r24	; 0x803176 <uxTopReadyPriority>
    32dc:	f8 9e       	mul	r15, r24
    32de:	c0 01       	movw	r24, r0
    32e0:	11 24       	eor	r1, r1
    32e2:	b8 01       	movw	r22, r16
    32e4:	8c 55       	subi	r24, 0x5C	; 92
    32e6:	9e 4c       	sbci	r25, 0xCE	; 206
    32e8:	0e 94 37 12 	call	0x246e	; 0x246e <vListInsertEnd>
    32ec:	e0 91 8c 31 	lds	r30, 0x318C	; 0x80318c <pxDelayedTaskList>
    32f0:	f0 91 8d 31 	lds	r31, 0x318D	; 0x80318d <pxDelayedTaskList+0x1>
    32f4:	80 81       	ld	r24, Z
    32f6:	81 11       	cpse	r24, r1
    32f8:	b9 cf       	rjmp	.-142    	; 0x326c <vTaskIncrementTick+0x15c>
    32fa:	ac cf       	rjmp	.-168    	; 0x3254 <vTaskIncrementTick+0x144>
    32fc:	80 91 73 31 	lds	r24, 0x3173	; 0x803173 <uxMissedTicks>
    3300:	8f 5f       	subi	r24, 0xFF	; 255
    3302:	80 93 73 31 	sts	0x3173, r24	; 0x803173 <uxMissedTicks>
    3306:	df 91       	pop	r29
    3308:	cf 91       	pop	r28
    330a:	1f 91       	pop	r17
    330c:	0f 91       	pop	r16
    330e:	ff 90       	pop	r15
    3310:	08 95       	ret

00003312 <xTaskResumeAll>:
    3312:	cf 92       	push	r12
    3314:	df 92       	push	r13
    3316:	ef 92       	push	r14
    3318:	ff 92       	push	r15
    331a:	0f 93       	push	r16
    331c:	1f 93       	push	r17
    331e:	cf 93       	push	r28
    3320:	df 93       	push	r29
    3322:	0f b6       	in	r0, 0x3f	; 63
    3324:	f8 94       	cli
    3326:	0f 92       	push	r0
    3328:	80 91 74 31 	lds	r24, 0x3174	; 0x803174 <uxSchedulerSuspended>
    332c:	81 50       	subi	r24, 0x01	; 1
    332e:	80 93 74 31 	sts	0x3174, r24	; 0x803174 <uxSchedulerSuspended>
    3332:	80 91 74 31 	lds	r24, 0x3174	; 0x803174 <uxSchedulerSuspended>
    3336:	81 11       	cpse	r24, r1
    3338:	60 c0       	rjmp	.+192    	; 0x33fa <xTaskResumeAll+0xe8>
    333a:	80 91 7c 31 	lds	r24, 0x317C	; 0x80317c <uxCurrentNumberOfTasks>
    333e:	81 11       	cpse	r24, r1
    3340:	2c c0       	rjmp	.+88     	; 0x339a <xTaskResumeAll+0x88>
    3342:	5e c0       	rjmp	.+188    	; 0x3400 <xTaskResumeAll+0xee>
    3344:	d7 01       	movw	r26, r14
    3346:	17 96       	adiw	r26, 0x07	; 7
    3348:	ed 91       	ld	r30, X+
    334a:	fc 91       	ld	r31, X
    334c:	18 97       	sbiw	r26, 0x08	; 8
    334e:	c0 85       	ldd	r28, Z+8	; 0x08
    3350:	d1 85       	ldd	r29, Z+9	; 0x09
    3352:	ce 01       	movw	r24, r28
    3354:	0e 96       	adiw	r24, 0x0e	; 14
    3356:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    335a:	8e 01       	movw	r16, r28
    335c:	0e 5f       	subi	r16, 0xFE	; 254
    335e:	1f 4f       	sbci	r17, 0xFF	; 255
    3360:	c8 01       	movw	r24, r16
    3362:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    3366:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3368:	90 91 76 31 	lds	r25, 0x3176	; 0x803176 <uxTopReadyPriority>
    336c:	98 17       	cp	r25, r24
    336e:	10 f4       	brcc	.+4      	; 0x3374 <xTaskResumeAll+0x62>
    3370:	80 93 76 31 	sts	0x3176, r24	; 0x803176 <uxTopReadyPriority>
    3374:	d8 9e       	mul	r13, r24
    3376:	c0 01       	movw	r24, r0
    3378:	11 24       	eor	r1, r1
    337a:	b8 01       	movw	r22, r16
    337c:	8c 55       	subi	r24, 0x5C	; 92
    337e:	9e 4c       	sbci	r25, 0xCE	; 206
    3380:	0e 94 37 12 	call	0x246e	; 0x246e <vListInsertEnd>
    3384:	e0 91 d0 31 	lds	r30, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3388:	f0 91 d1 31 	lds	r31, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    338c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    338e:	82 8d       	ldd	r24, Z+26	; 0x1a
    3390:	98 17       	cp	r25, r24
    3392:	70 f0       	brcs	.+28     	; 0x33b0 <xTaskResumeAll+0x9e>
    3394:	cc 24       	eor	r12, r12
    3396:	c3 94       	inc	r12
    3398:	0b c0       	rjmp	.+22     	; 0x33b0 <xTaskResumeAll+0x9e>
    339a:	c1 2c       	mov	r12, r1
    339c:	0f 2e       	mov	r0, r31
    339e:	ff e7       	ldi	r31, 0x7F	; 127
    33a0:	ef 2e       	mov	r14, r31
    33a2:	f1 e3       	ldi	r31, 0x31	; 49
    33a4:	ff 2e       	mov	r15, r31
    33a6:	f0 2d       	mov	r31, r0
    33a8:	0f 2e       	mov	r0, r31
    33aa:	fb e0       	ldi	r31, 0x0B	; 11
    33ac:	df 2e       	mov	r13, r31
    33ae:	f0 2d       	mov	r31, r0
    33b0:	f7 01       	movw	r30, r14
    33b2:	80 81       	ld	r24, Z
    33b4:	81 11       	cpse	r24, r1
    33b6:	c6 cf       	rjmp	.-116    	; 0x3344 <xTaskResumeAll+0x32>
    33b8:	80 91 73 31 	lds	r24, 0x3173	; 0x803173 <uxMissedTicks>
    33bc:	88 23       	and	r24, r24
    33be:	81 f0       	breq	.+32     	; 0x33e0 <xTaskResumeAll+0xce>
    33c0:	80 91 73 31 	lds	r24, 0x3173	; 0x803173 <uxMissedTicks>
    33c4:	88 23       	and	r24, r24
    33c6:	99 f0       	breq	.+38     	; 0x33ee <xTaskResumeAll+0xdc>
    33c8:	0e 94 88 18 	call	0x3110	; 0x3110 <vTaskIncrementTick>
    33cc:	80 91 73 31 	lds	r24, 0x3173	; 0x803173 <uxMissedTicks>
    33d0:	81 50       	subi	r24, 0x01	; 1
    33d2:	80 93 73 31 	sts	0x3173, r24	; 0x803173 <uxMissedTicks>
    33d6:	80 91 73 31 	lds	r24, 0x3173	; 0x803173 <uxMissedTicks>
    33da:	81 11       	cpse	r24, r1
    33dc:	f5 cf       	rjmp	.-22     	; 0x33c8 <xTaskResumeAll+0xb6>
    33de:	07 c0       	rjmp	.+14     	; 0x33ee <xTaskResumeAll+0xdc>
    33e0:	f1 e0       	ldi	r31, 0x01	; 1
    33e2:	cf 16       	cp	r12, r31
    33e4:	21 f0       	breq	.+8      	; 0x33ee <xTaskResumeAll+0xdc>
    33e6:	80 91 72 31 	lds	r24, 0x3172	; 0x803172 <xMissedYield>
    33ea:	81 30       	cpi	r24, 0x01	; 1
    33ec:	41 f4       	brne	.+16     	; 0x33fe <xTaskResumeAll+0xec>
    33ee:	10 92 72 31 	sts	0x3172, r1	; 0x803172 <xMissedYield>
    33f2:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    33f6:	81 e0       	ldi	r24, 0x01	; 1
    33f8:	03 c0       	rjmp	.+6      	; 0x3400 <xTaskResumeAll+0xee>
    33fa:	80 e0       	ldi	r24, 0x00	; 0
    33fc:	01 c0       	rjmp	.+2      	; 0x3400 <xTaskResumeAll+0xee>
    33fe:	80 e0       	ldi	r24, 0x00	; 0
    3400:	0f 90       	pop	r0
    3402:	0f be       	out	0x3f, r0	; 63
    3404:	df 91       	pop	r29
    3406:	cf 91       	pop	r28
    3408:	1f 91       	pop	r17
    340a:	0f 91       	pop	r16
    340c:	ff 90       	pop	r15
    340e:	ef 90       	pop	r14
    3410:	df 90       	pop	r13
    3412:	cf 90       	pop	r12
    3414:	08 95       	ret

00003416 <vTaskDelayUntil>:
    3416:	cf 92       	push	r12
    3418:	df 92       	push	r13
    341a:	ef 92       	push	r14
    341c:	ff 92       	push	r15
    341e:	cf 93       	push	r28
    3420:	df 93       	push	r29
    3422:	ec 01       	movw	r28, r24
    3424:	6a 01       	movw	r12, r20
    3426:	7b 01       	movw	r14, r22
    3428:	0e 94 6c 18 	call	0x30d8	; 0x30d8 <vTaskSuspendAll>
    342c:	88 81       	ld	r24, Y
    342e:	99 81       	ldd	r25, Y+1	; 0x01
    3430:	aa 81       	ldd	r26, Y+2	; 0x02
    3432:	bb 81       	ldd	r27, Y+3	; 0x03
    3434:	c8 0e       	add	r12, r24
    3436:	d9 1e       	adc	r13, r25
    3438:	ea 1e       	adc	r14, r26
    343a:	fb 1e       	adc	r15, r27
    343c:	40 91 78 31 	lds	r20, 0x3178	; 0x803178 <xTickCount>
    3440:	50 91 79 31 	lds	r21, 0x3179	; 0x803179 <xTickCount+0x1>
    3444:	60 91 7a 31 	lds	r22, 0x317A	; 0x80317a <xTickCount+0x2>
    3448:	70 91 7b 31 	lds	r23, 0x317B	; 0x80317b <xTickCount+0x3>
    344c:	48 17       	cp	r20, r24
    344e:	59 07       	cpc	r21, r25
    3450:	6a 07       	cpc	r22, r26
    3452:	7b 07       	cpc	r23, r27
    3454:	b8 f4       	brcc	.+46     	; 0x3484 <vTaskDelayUntil+0x6e>
    3456:	c8 16       	cp	r12, r24
    3458:	d9 06       	cpc	r13, r25
    345a:	ea 06       	cpc	r14, r26
    345c:	fb 06       	cpc	r15, r27
    345e:	e0 f5       	brcc	.+120    	; 0x34d8 <vTaskDelayUntil+0xc2>
    3460:	80 91 78 31 	lds	r24, 0x3178	; 0x803178 <xTickCount>
    3464:	90 91 79 31 	lds	r25, 0x3179	; 0x803179 <xTickCount+0x1>
    3468:	a0 91 7a 31 	lds	r26, 0x317A	; 0x80317a <xTickCount+0x2>
    346c:	b0 91 7b 31 	lds	r27, 0x317B	; 0x80317b <xTickCount+0x3>
    3470:	c8 82       	st	Y, r12
    3472:	d9 82       	std	Y+1, r13	; 0x01
    3474:	ea 82       	std	Y+2, r14	; 0x02
    3476:	fb 82       	std	Y+3, r15	; 0x03
    3478:	8c 15       	cp	r24, r12
    347a:	9d 05       	cpc	r25, r13
    347c:	ae 05       	cpc	r26, r14
    347e:	bf 05       	cpc	r27, r15
    3480:	f8 f4       	brcc	.+62     	; 0x34c0 <vTaskDelayUntil+0xaa>
    3482:	13 c0       	rjmp	.+38     	; 0x34aa <vTaskDelayUntil+0x94>
    3484:	c8 16       	cp	r12, r24
    3486:	d9 06       	cpc	r13, r25
    3488:	ea 06       	cpc	r14, r26
    348a:	fb 06       	cpc	r15, r27
    348c:	00 f1       	brcs	.+64     	; 0x34ce <vTaskDelayUntil+0xb8>
    348e:	80 91 78 31 	lds	r24, 0x3178	; 0x803178 <xTickCount>
    3492:	90 91 79 31 	lds	r25, 0x3179	; 0x803179 <xTickCount+0x1>
    3496:	a0 91 7a 31 	lds	r26, 0x317A	; 0x80317a <xTickCount+0x2>
    349a:	b0 91 7b 31 	lds	r27, 0x317B	; 0x80317b <xTickCount+0x3>
    349e:	8c 15       	cp	r24, r12
    34a0:	9d 05       	cpc	r25, r13
    34a2:	ae 05       	cpc	r26, r14
    34a4:	bf 05       	cpc	r27, r15
    34a6:	98 f0       	brcs	.+38     	; 0x34ce <vTaskDelayUntil+0xb8>
    34a8:	17 c0       	rjmp	.+46     	; 0x34d8 <vTaskDelayUntil+0xc2>
    34aa:	80 91 d0 31 	lds	r24, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    34ae:	90 91 d1 31 	lds	r25, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    34b2:	02 96       	adiw	r24, 0x02	; 2
    34b4:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    34b8:	c7 01       	movw	r24, r14
    34ba:	b6 01       	movw	r22, r12
    34bc:	0e 94 db 16 	call	0x2db6	; 0x2db6 <prvAddCurrentTaskToDelayedList>
    34c0:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    34c4:	81 11       	cpse	r24, r1
    34c6:	0d c0       	rjmp	.+26     	; 0x34e2 <vTaskDelayUntil+0xcc>
    34c8:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    34cc:	0a c0       	rjmp	.+20     	; 0x34e2 <vTaskDelayUntil+0xcc>
    34ce:	c8 82       	st	Y, r12
    34d0:	d9 82       	std	Y+1, r13	; 0x01
    34d2:	ea 82       	std	Y+2, r14	; 0x02
    34d4:	fb 82       	std	Y+3, r15	; 0x03
    34d6:	e9 cf       	rjmp	.-46     	; 0x34aa <vTaskDelayUntil+0x94>
    34d8:	c8 82       	st	Y, r12
    34da:	d9 82       	std	Y+1, r13	; 0x01
    34dc:	ea 82       	std	Y+2, r14	; 0x02
    34de:	fb 82       	std	Y+3, r15	; 0x03
    34e0:	ef cf       	rjmp	.-34     	; 0x34c0 <vTaskDelayUntil+0xaa>
    34e2:	df 91       	pop	r29
    34e4:	cf 91       	pop	r28
    34e6:	ff 90       	pop	r15
    34e8:	ef 90       	pop	r14
    34ea:	df 90       	pop	r13
    34ec:	cf 90       	pop	r12
    34ee:	08 95       	ret

000034f0 <vTaskDelay>:
    34f0:	cf 92       	push	r12
    34f2:	df 92       	push	r13
    34f4:	ef 92       	push	r14
    34f6:	ff 92       	push	r15
    34f8:	6b 01       	movw	r12, r22
    34fa:	7c 01       	movw	r14, r24
    34fc:	67 2b       	or	r22, r23
    34fe:	68 2b       	or	r22, r24
    3500:	69 2b       	or	r22, r25
    3502:	e9 f0       	breq	.+58     	; 0x353e <vTaskDelay+0x4e>
    3504:	0e 94 6c 18 	call	0x30d8	; 0x30d8 <vTaskSuspendAll>
    3508:	80 91 78 31 	lds	r24, 0x3178	; 0x803178 <xTickCount>
    350c:	90 91 79 31 	lds	r25, 0x3179	; 0x803179 <xTickCount+0x1>
    3510:	a0 91 7a 31 	lds	r26, 0x317A	; 0x80317a <xTickCount+0x2>
    3514:	b0 91 7b 31 	lds	r27, 0x317B	; 0x80317b <xTickCount+0x3>
    3518:	c8 0e       	add	r12, r24
    351a:	d9 1e       	adc	r13, r25
    351c:	ea 1e       	adc	r14, r26
    351e:	fb 1e       	adc	r15, r27
    3520:	80 91 d0 31 	lds	r24, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3524:	90 91 d1 31 	lds	r25, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    3528:	02 96       	adiw	r24, 0x02	; 2
    352a:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    352e:	c7 01       	movw	r24, r14
    3530:	b6 01       	movw	r22, r12
    3532:	0e 94 db 16 	call	0x2db6	; 0x2db6 <prvAddCurrentTaskToDelayedList>
    3536:	0e 94 89 19 	call	0x3312	; 0x3312 <xTaskResumeAll>
    353a:	81 11       	cpse	r24, r1
    353c:	02 c0       	rjmp	.+4      	; 0x3542 <vTaskDelay+0x52>
    353e:	0e 94 83 13 	call	0x2706	; 0x2706 <vPortYield>
    3542:	ff 90       	pop	r15
    3544:	ef 90       	pop	r14
    3546:	df 90       	pop	r13
    3548:	cf 90       	pop	r12
    354a:	08 95       	ret

0000354c <vTaskSwitchContext>:
    354c:	80 91 74 31 	lds	r24, 0x3174	; 0x803174 <uxSchedulerSuspended>
    3550:	81 11       	cpse	r24, r1
    3552:	0c c0       	rjmp	.+24     	; 0x356c <vTaskSwitchContext+0x20>
    3554:	e0 91 76 31 	lds	r30, 0x3176	; 0x803176 <uxTopReadyPriority>
    3558:	4b e0       	ldi	r20, 0x0B	; 11
    355a:	e4 9f       	mul	r30, r20
    355c:	f0 01       	movw	r30, r0
    355e:	11 24       	eor	r1, r1
    3560:	ec 55       	subi	r30, 0x5C	; 92
    3562:	fe 4c       	sbci	r31, 0xCE	; 206
    3564:	80 81       	ld	r24, Z
    3566:	88 23       	and	r24, r24
    3568:	29 f0       	breq	.+10     	; 0x3574 <vTaskSwitchContext+0x28>
    356a:	14 c0       	rjmp	.+40     	; 0x3594 <vTaskSwitchContext+0x48>
    356c:	81 e0       	ldi	r24, 0x01	; 1
    356e:	80 93 72 31 	sts	0x3172, r24	; 0x803172 <xMissedYield>
    3572:	08 95       	ret
    3574:	9b e0       	ldi	r25, 0x0B	; 11
    3576:	80 91 76 31 	lds	r24, 0x3176	; 0x803176 <uxTopReadyPriority>
    357a:	81 50       	subi	r24, 0x01	; 1
    357c:	80 93 76 31 	sts	0x3176, r24	; 0x803176 <uxTopReadyPriority>
    3580:	e0 91 76 31 	lds	r30, 0x3176	; 0x803176 <uxTopReadyPriority>
    3584:	9e 9f       	mul	r25, r30
    3586:	f0 01       	movw	r30, r0
    3588:	11 24       	eor	r1, r1
    358a:	ec 55       	subi	r30, 0x5C	; 92
    358c:	fe 4c       	sbci	r31, 0xCE	; 206
    358e:	80 81       	ld	r24, Z
    3590:	88 23       	and	r24, r24
    3592:	89 f3       	breq	.-30     	; 0x3576 <vTaskSwitchContext+0x2a>
    3594:	80 91 76 31 	lds	r24, 0x3176	; 0x803176 <uxTopReadyPriority>
    3598:	28 2f       	mov	r18, r24
    359a:	30 e0       	ldi	r19, 0x00	; 0
    359c:	4b e0       	ldi	r20, 0x0B	; 11
    359e:	84 9f       	mul	r24, r20
    35a0:	c0 01       	movw	r24, r0
    35a2:	11 24       	eor	r1, r1
    35a4:	dc 01       	movw	r26, r24
    35a6:	ac 55       	subi	r26, 0x5C	; 92
    35a8:	be 4c       	sbci	r27, 0xCE	; 206
    35aa:	11 96       	adiw	r26, 0x01	; 1
    35ac:	ed 91       	ld	r30, X+
    35ae:	fc 91       	ld	r31, X
    35b0:	12 97       	sbiw	r26, 0x02	; 2
    35b2:	04 80       	ldd	r0, Z+4	; 0x04
    35b4:	f5 81       	ldd	r31, Z+5	; 0x05
    35b6:	e0 2d       	mov	r30, r0
    35b8:	11 96       	adiw	r26, 0x01	; 1
    35ba:	ed 93       	st	X+, r30
    35bc:	fc 93       	st	X, r31
    35be:	12 97       	sbiw	r26, 0x02	; 2
    35c0:	89 55       	subi	r24, 0x59	; 89
    35c2:	9e 4c       	sbci	r25, 0xCE	; 206
    35c4:	e8 17       	cp	r30, r24
    35c6:	f9 07       	cpc	r31, r25
    35c8:	61 f4       	brne	.+24     	; 0x35e2 <vTaskSwitchContext+0x96>
    35ca:	84 81       	ldd	r24, Z+4	; 0x04
    35cc:	95 81       	ldd	r25, Z+5	; 0x05
    35ce:	4b e0       	ldi	r20, 0x0B	; 11
    35d0:	42 9f       	mul	r20, r18
    35d2:	f0 01       	movw	r30, r0
    35d4:	43 9f       	mul	r20, r19
    35d6:	f0 0d       	add	r31, r0
    35d8:	11 24       	eor	r1, r1
    35da:	ec 55       	subi	r30, 0x5C	; 92
    35dc:	fe 4c       	sbci	r31, 0xCE	; 206
    35de:	81 83       	std	Z+1, r24	; 0x01
    35e0:	92 83       	std	Z+2, r25	; 0x02
    35e2:	8b e0       	ldi	r24, 0x0B	; 11
    35e4:	82 9f       	mul	r24, r18
    35e6:	f0 01       	movw	r30, r0
    35e8:	83 9f       	mul	r24, r19
    35ea:	f0 0d       	add	r31, r0
    35ec:	11 24       	eor	r1, r1
    35ee:	ec 55       	subi	r30, 0x5C	; 92
    35f0:	fe 4c       	sbci	r31, 0xCE	; 206
    35f2:	01 80       	ldd	r0, Z+1	; 0x01
    35f4:	f2 81       	ldd	r31, Z+2	; 0x02
    35f6:	e0 2d       	mov	r30, r0
    35f8:	80 85       	ldd	r24, Z+8	; 0x08
    35fa:	91 85       	ldd	r25, Z+9	; 0x09
    35fc:	80 93 d0 31 	sts	0x31D0, r24	; 0x8031d0 <pxCurrentTCB>
    3600:	90 93 d1 31 	sts	0x31D1, r25	; 0x8031d1 <pxCurrentTCB+0x1>
    3604:	08 95       	ret

00003606 <vTaskPlaceOnEventList>:
    3606:	cf 92       	push	r12
    3608:	df 92       	push	r13
    360a:	ef 92       	push	r14
    360c:	ff 92       	push	r15
    360e:	6a 01       	movw	r12, r20
    3610:	7b 01       	movw	r14, r22
    3612:	60 91 d0 31 	lds	r22, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3616:	70 91 d1 31 	lds	r23, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    361a:	62 5f       	subi	r22, 0xF2	; 242
    361c:	7f 4f       	sbci	r23, 0xFF	; 255
    361e:	0e 94 5e 12 	call	0x24bc	; 0x24bc <vListInsert>
    3622:	80 91 d0 31 	lds	r24, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3626:	90 91 d1 31 	lds	r25, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    362a:	02 96       	adiw	r24, 0x02	; 2
    362c:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    3630:	80 91 78 31 	lds	r24, 0x3178	; 0x803178 <xTickCount>
    3634:	90 91 79 31 	lds	r25, 0x3179	; 0x803179 <xTickCount+0x1>
    3638:	a0 91 7a 31 	lds	r26, 0x317A	; 0x80317a <xTickCount+0x2>
    363c:	b0 91 7b 31 	lds	r27, 0x317B	; 0x80317b <xTickCount+0x3>
    3640:	bc 01       	movw	r22, r24
    3642:	cd 01       	movw	r24, r26
    3644:	6c 0d       	add	r22, r12
    3646:	7d 1d       	adc	r23, r13
    3648:	8e 1d       	adc	r24, r14
    364a:	9f 1d       	adc	r25, r15
    364c:	0e 94 db 16 	call	0x2db6	; 0x2db6 <prvAddCurrentTaskToDelayedList>
    3650:	ff 90       	pop	r15
    3652:	ef 90       	pop	r14
    3654:	df 90       	pop	r13
    3656:	cf 90       	pop	r12
    3658:	08 95       	ret

0000365a <xTaskRemoveFromEventList>:
    365a:	0f 93       	push	r16
    365c:	1f 93       	push	r17
    365e:	cf 93       	push	r28
    3660:	df 93       	push	r29
    3662:	dc 01       	movw	r26, r24
    3664:	17 96       	adiw	r26, 0x07	; 7
    3666:	ed 91       	ld	r30, X+
    3668:	fc 91       	ld	r31, X
    366a:	18 97       	sbiw	r26, 0x08	; 8
    366c:	c0 85       	ldd	r28, Z+8	; 0x08
    366e:	d1 85       	ldd	r29, Z+9	; 0x09
    3670:	8e 01       	movw	r16, r28
    3672:	02 5f       	subi	r16, 0xF2	; 242
    3674:	1f 4f       	sbci	r17, 0xFF	; 255
    3676:	c8 01       	movw	r24, r16
    3678:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    367c:	80 91 74 31 	lds	r24, 0x3174	; 0x803174 <uxSchedulerSuspended>
    3680:	81 11       	cpse	r24, r1
    3682:	16 c0       	rjmp	.+44     	; 0x36b0 <xTaskRemoveFromEventList+0x56>
    3684:	0c 50       	subi	r16, 0x0C	; 12
    3686:	11 09       	sbc	r17, r1
    3688:	c8 01       	movw	r24, r16
    368a:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    368e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3690:	90 91 76 31 	lds	r25, 0x3176	; 0x803176 <uxTopReadyPriority>
    3694:	98 17       	cp	r25, r24
    3696:	10 f4       	brcc	.+4      	; 0x369c <xTaskRemoveFromEventList+0x42>
    3698:	80 93 76 31 	sts	0x3176, r24	; 0x803176 <uxTopReadyPriority>
    369c:	bb e0       	ldi	r27, 0x0B	; 11
    369e:	8b 9f       	mul	r24, r27
    36a0:	c0 01       	movw	r24, r0
    36a2:	11 24       	eor	r1, r1
    36a4:	b8 01       	movw	r22, r16
    36a6:	8c 55       	subi	r24, 0x5C	; 92
    36a8:	9e 4c       	sbci	r25, 0xCE	; 206
    36aa:	0e 94 37 12 	call	0x246e	; 0x246e <vListInsertEnd>
    36ae:	05 c0       	rjmp	.+10     	; 0x36ba <xTaskRemoveFromEventList+0x60>
    36b0:	b8 01       	movw	r22, r16
    36b2:	8f e7       	ldi	r24, 0x7F	; 127
    36b4:	91 e3       	ldi	r25, 0x31	; 49
    36b6:	0e 94 37 12 	call	0x246e	; 0x246e <vListInsertEnd>
    36ba:	e0 91 d0 31 	lds	r30, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    36be:	f0 91 d1 31 	lds	r31, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    36c2:	81 e0       	ldi	r24, 0x01	; 1
    36c4:	2a 8d       	ldd	r18, Y+26	; 0x1a
    36c6:	92 8d       	ldd	r25, Z+26	; 0x1a
    36c8:	29 17       	cp	r18, r25
    36ca:	08 f4       	brcc	.+2      	; 0x36ce <xTaskRemoveFromEventList+0x74>
    36cc:	80 e0       	ldi	r24, 0x00	; 0
    36ce:	df 91       	pop	r29
    36d0:	cf 91       	pop	r28
    36d2:	1f 91       	pop	r17
    36d4:	0f 91       	pop	r16
    36d6:	08 95       	ret

000036d8 <vTaskSetTimeOutState>:
    36d8:	20 91 71 31 	lds	r18, 0x3171	; 0x803171 <xNumOfOverflows>
    36dc:	fc 01       	movw	r30, r24
    36de:	20 83       	st	Z, r18
    36e0:	40 91 78 31 	lds	r20, 0x3178	; 0x803178 <xTickCount>
    36e4:	50 91 79 31 	lds	r21, 0x3179	; 0x803179 <xTickCount+0x1>
    36e8:	60 91 7a 31 	lds	r22, 0x317A	; 0x80317a <xTickCount+0x2>
    36ec:	70 91 7b 31 	lds	r23, 0x317B	; 0x80317b <xTickCount+0x3>
    36f0:	41 83       	std	Z+1, r20	; 0x01
    36f2:	52 83       	std	Z+2, r21	; 0x02
    36f4:	63 83       	std	Z+3, r22	; 0x03
    36f6:	74 83       	std	Z+4, r23	; 0x04
    36f8:	08 95       	ret

000036fa <xTaskCheckForTimeOut>:
    36fa:	8f 92       	push	r8
    36fc:	9f 92       	push	r9
    36fe:	af 92       	push	r10
    3700:	bf 92       	push	r11
    3702:	cf 92       	push	r12
    3704:	df 92       	push	r13
    3706:	ef 92       	push	r14
    3708:	ff 92       	push	r15
    370a:	0f 93       	push	r16
    370c:	1f 93       	push	r17
    370e:	cf 93       	push	r28
    3710:	df 93       	push	r29
    3712:	fc 01       	movw	r30, r24
    3714:	0f b6       	in	r0, 0x3f	; 63
    3716:	f8 94       	cli
    3718:	0f 92       	push	r0
    371a:	80 91 71 31 	lds	r24, 0x3171	; 0x803171 <xNumOfOverflows>
    371e:	90 81       	ld	r25, Z
    3720:	98 17       	cp	r25, r24
    3722:	89 f0       	breq	.+34     	; 0x3746 <xTaskCheckForTimeOut+0x4c>
    3724:	80 91 78 31 	lds	r24, 0x3178	; 0x803178 <xTickCount>
    3728:	90 91 79 31 	lds	r25, 0x3179	; 0x803179 <xTickCount+0x1>
    372c:	a0 91 7a 31 	lds	r26, 0x317A	; 0x80317a <xTickCount+0x2>
    3730:	b0 91 7b 31 	lds	r27, 0x317B	; 0x80317b <xTickCount+0x3>
    3734:	01 81       	ldd	r16, Z+1	; 0x01
    3736:	12 81       	ldd	r17, Z+2	; 0x02
    3738:	23 81       	ldd	r18, Z+3	; 0x03
    373a:	34 81       	ldd	r19, Z+4	; 0x04
    373c:	80 17       	cp	r24, r16
    373e:	91 07       	cpc	r25, r17
    3740:	a2 07       	cpc	r26, r18
    3742:	b3 07       	cpc	r27, r19
    3744:	a8 f5       	brcc	.+106    	; 0x37b0 <xTaskCheckForTimeOut+0xb6>
    3746:	80 91 78 31 	lds	r24, 0x3178	; 0x803178 <xTickCount>
    374a:	90 91 79 31 	lds	r25, 0x3179	; 0x803179 <xTickCount+0x1>
    374e:	a0 91 7a 31 	lds	r26, 0x317A	; 0x80317a <xTickCount+0x2>
    3752:	b0 91 7b 31 	lds	r27, 0x317B	; 0x80317b <xTickCount+0x3>
    3756:	c1 80       	ldd	r12, Z+1	; 0x01
    3758:	d2 80       	ldd	r13, Z+2	; 0x02
    375a:	e3 80       	ldd	r14, Z+3	; 0x03
    375c:	f4 80       	ldd	r15, Z+4	; 0x04
    375e:	eb 01       	movw	r28, r22
    3760:	08 81       	ld	r16, Y
    3762:	19 81       	ldd	r17, Y+1	; 0x01
    3764:	2a 81       	ldd	r18, Y+2	; 0x02
    3766:	3b 81       	ldd	r19, Y+3	; 0x03
    3768:	8c 19       	sub	r24, r12
    376a:	9d 09       	sbc	r25, r13
    376c:	ae 09       	sbc	r26, r14
    376e:	bf 09       	sbc	r27, r15
    3770:	80 17       	cp	r24, r16
    3772:	91 07       	cpc	r25, r17
    3774:	a2 07       	cpc	r26, r18
    3776:	b3 07       	cpc	r27, r19
    3778:	e8 f4       	brcc	.+58     	; 0x37b4 <xTaskCheckForTimeOut+0xba>
    377a:	cf 01       	movw	r24, r30
    377c:	80 90 78 31 	lds	r8, 0x3178	; 0x803178 <xTickCount>
    3780:	90 90 79 31 	lds	r9, 0x3179	; 0x803179 <xTickCount+0x1>
    3784:	a0 90 7a 31 	lds	r10, 0x317A	; 0x80317a <xTickCount+0x2>
    3788:	b0 90 7b 31 	lds	r11, 0x317B	; 0x80317b <xTickCount+0x3>
    378c:	b5 01       	movw	r22, r10
    378e:	a4 01       	movw	r20, r8
    3790:	4c 19       	sub	r20, r12
    3792:	5d 09       	sbc	r21, r13
    3794:	6e 09       	sbc	r22, r14
    3796:	7f 09       	sbc	r23, r15
    3798:	04 1b       	sub	r16, r20
    379a:	15 0b       	sbc	r17, r21
    379c:	26 0b       	sbc	r18, r22
    379e:	37 0b       	sbc	r19, r23
    37a0:	08 83       	st	Y, r16
    37a2:	19 83       	std	Y+1, r17	; 0x01
    37a4:	2a 83       	std	Y+2, r18	; 0x02
    37a6:	3b 83       	std	Y+3, r19	; 0x03
    37a8:	0e 94 6c 1b 	call	0x36d8	; 0x36d8 <vTaskSetTimeOutState>
    37ac:	80 e0       	ldi	r24, 0x00	; 0
    37ae:	03 c0       	rjmp	.+6      	; 0x37b6 <xTaskCheckForTimeOut+0xbc>
    37b0:	81 e0       	ldi	r24, 0x01	; 1
    37b2:	01 c0       	rjmp	.+2      	; 0x37b6 <xTaskCheckForTimeOut+0xbc>
    37b4:	81 e0       	ldi	r24, 0x01	; 1
    37b6:	0f 90       	pop	r0
    37b8:	0f be       	out	0x3f, r0	; 63
    37ba:	df 91       	pop	r29
    37bc:	cf 91       	pop	r28
    37be:	1f 91       	pop	r17
    37c0:	0f 91       	pop	r16
    37c2:	ff 90       	pop	r15
    37c4:	ef 90       	pop	r14
    37c6:	df 90       	pop	r13
    37c8:	cf 90       	pop	r12
    37ca:	bf 90       	pop	r11
    37cc:	af 90       	pop	r10
    37ce:	9f 90       	pop	r9
    37d0:	8f 90       	pop	r8
    37d2:	08 95       	ret

000037d4 <vTaskMissedYield>:
    37d4:	81 e0       	ldi	r24, 0x01	; 1
    37d6:	80 93 72 31 	sts	0x3172, r24	; 0x803172 <xMissedYield>
    37da:	08 95       	ret

000037dc <uxTaskGetStackHighWaterMark>:
    37dc:	00 97       	sbiw	r24, 0x00	; 0
    37de:	21 f4       	brne	.+8      	; 0x37e8 <uxTaskGetStackHighWaterMark+0xc>
    37e0:	80 91 d0 31 	lds	r24, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    37e4:	90 91 d1 31 	lds	r25, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    37e8:	dc 01       	movw	r26, r24
    37ea:	5b 96       	adiw	r26, 0x1b	; 27
    37ec:	ed 91       	ld	r30, X+
    37ee:	fc 91       	ld	r31, X
    37f0:	5c 97       	sbiw	r26, 0x1c	; 28
    37f2:	80 81       	ld	r24, Z
    37f4:	81 31       	cpi	r24, 0x11	; 17
    37f6:	41 f4       	brne	.+16     	; 0x3808 <uxTaskGetStackHighWaterMark+0x2c>
    37f8:	31 96       	adiw	r30, 0x01	; 1
    37fa:	80 e0       	ldi	r24, 0x00	; 0
    37fc:	90 e0       	ldi	r25, 0x00	; 0
    37fe:	01 96       	adiw	r24, 0x01	; 1
    3800:	21 91       	ld	r18, Z+
    3802:	21 31       	cpi	r18, 0x11	; 17
    3804:	e1 f3       	breq	.-8      	; 0x37fe <uxTaskGetStackHighWaterMark+0x22>
    3806:	08 95       	ret
    3808:	80 e0       	ldi	r24, 0x00	; 0
    380a:	90 e0       	ldi	r25, 0x00	; 0
    380c:	08 95       	ret

0000380e <xTaskGetCurrentTaskHandle>:
    380e:	80 91 d0 31 	lds	r24, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3812:	90 91 d1 31 	lds	r25, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    3816:	08 95       	ret

00003818 <vTaskPriorityInherit>:
    3818:	0f 93       	push	r16
    381a:	1f 93       	push	r17
    381c:	cf 93       	push	r28
    381e:	df 93       	push	r29
    3820:	fc 01       	movw	r30, r24
    3822:	22 8d       	ldd	r18, Z+26	; 0x1a
    3824:	a0 91 d0 31 	lds	r26, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3828:	b0 91 d1 31 	lds	r27, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    382c:	5a 96       	adiw	r26, 0x1a	; 26
    382e:	8c 91       	ld	r24, X
    3830:	28 17       	cp	r18, r24
    3832:	08 f0       	brcs	.+2      	; 0x3836 <vTaskPriorityInherit+0x1e>
    3834:	41 c0       	rjmp	.+130    	; 0x38b8 <vTaskPriorityInherit+0xa0>
    3836:	a0 91 d0 31 	lds	r26, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    383a:	b0 91 d1 31 	lds	r27, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    383e:	5a 96       	adiw	r26, 0x1a	; 26
    3840:	3c 91       	ld	r19, X
    3842:	84 e0       	ldi	r24, 0x04	; 4
    3844:	90 e0       	ldi	r25, 0x00	; 0
    3846:	a0 e0       	ldi	r26, 0x00	; 0
    3848:	b0 e0       	ldi	r27, 0x00	; 0
    384a:	83 1b       	sub	r24, r19
    384c:	91 09       	sbc	r25, r1
    384e:	a1 09       	sbc	r26, r1
    3850:	b1 09       	sbc	r27, r1
    3852:	86 87       	std	Z+14, r24	; 0x0e
    3854:	97 87       	std	Z+15, r25	; 0x0f
    3856:	a0 8b       	std	Z+16, r26	; 0x10
    3858:	b1 8b       	std	Z+17, r27	; 0x11
    385a:	8b e0       	ldi	r24, 0x0B	; 11
    385c:	28 9f       	mul	r18, r24
    385e:	90 01       	movw	r18, r0
    3860:	11 24       	eor	r1, r1
    3862:	2c 55       	subi	r18, 0x5C	; 92
    3864:	3e 4c       	sbci	r19, 0xCE	; 206
    3866:	84 85       	ldd	r24, Z+12	; 0x0c
    3868:	95 85       	ldd	r25, Z+13	; 0x0d
    386a:	82 17       	cp	r24, r18
    386c:	93 07       	cpc	r25, r19
    386e:	e9 f4       	brne	.+58     	; 0x38aa <vTaskPriorityInherit+0x92>
    3870:	8f 01       	movw	r16, r30
    3872:	ef 01       	movw	r28, r30
    3874:	22 96       	adiw	r28, 0x02	; 2
    3876:	ce 01       	movw	r24, r28
    3878:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    387c:	e0 91 d0 31 	lds	r30, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    3880:	f0 91 d1 31 	lds	r31, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    3884:	82 8d       	ldd	r24, Z+26	; 0x1a
    3886:	f8 01       	movw	r30, r16
    3888:	82 8f       	std	Z+26, r24	; 0x1a
    388a:	90 91 76 31 	lds	r25, 0x3176	; 0x803176 <uxTopReadyPriority>
    388e:	98 17       	cp	r25, r24
    3890:	10 f4       	brcc	.+4      	; 0x3896 <vTaskPriorityInherit+0x7e>
    3892:	80 93 76 31 	sts	0x3176, r24	; 0x803176 <uxTopReadyPriority>
    3896:	fb e0       	ldi	r31, 0x0B	; 11
    3898:	8f 9f       	mul	r24, r31
    389a:	c0 01       	movw	r24, r0
    389c:	11 24       	eor	r1, r1
    389e:	be 01       	movw	r22, r28
    38a0:	8c 55       	subi	r24, 0x5C	; 92
    38a2:	9e 4c       	sbci	r25, 0xCE	; 206
    38a4:	0e 94 37 12 	call	0x246e	; 0x246e <vListInsertEnd>
    38a8:	07 c0       	rjmp	.+14     	; 0x38b8 <vTaskPriorityInherit+0xa0>
    38aa:	a0 91 d0 31 	lds	r26, 0x31D0	; 0x8031d0 <pxCurrentTCB>
    38ae:	b0 91 d1 31 	lds	r27, 0x31D1	; 0x8031d1 <pxCurrentTCB+0x1>
    38b2:	5a 96       	adiw	r26, 0x1a	; 26
    38b4:	8c 91       	ld	r24, X
    38b6:	82 8f       	std	Z+26, r24	; 0x1a
    38b8:	df 91       	pop	r29
    38ba:	cf 91       	pop	r28
    38bc:	1f 91       	pop	r17
    38be:	0f 91       	pop	r16
    38c0:	08 95       	ret

000038c2 <vTaskPriorityDisinherit>:
    38c2:	0f 93       	push	r16
    38c4:	1f 93       	push	r17
    38c6:	cf 93       	push	r28
    38c8:	df 93       	push	r29
    38ca:	00 97       	sbiw	r24, 0x00	; 0
    38cc:	49 f1       	breq	.+82     	; 0x3920 <vTaskPriorityDisinherit+0x5e>
    38ce:	fc 01       	movw	r30, r24
    38d0:	32 8d       	ldd	r19, Z+26	; 0x1a
    38d2:	27 a1       	ldd	r18, Z+39	; 0x27
    38d4:	32 17       	cp	r19, r18
    38d6:	21 f1       	breq	.+72     	; 0x3920 <vTaskPriorityDisinherit+0x5e>
    38d8:	ec 01       	movw	r28, r24
    38da:	8c 01       	movw	r16, r24
    38dc:	0e 5f       	subi	r16, 0xFE	; 254
    38de:	1f 4f       	sbci	r17, 0xFF	; 255
    38e0:	c8 01       	movw	r24, r16
    38e2:	0e 94 a9 12 	call	0x2552	; 0x2552 <vListRemove>
    38e6:	8f a1       	ldd	r24, Y+39	; 0x27
    38e8:	8a 8f       	std	Y+26, r24	; 0x1a
    38ea:	44 e0       	ldi	r20, 0x04	; 4
    38ec:	50 e0       	ldi	r21, 0x00	; 0
    38ee:	60 e0       	ldi	r22, 0x00	; 0
    38f0:	70 e0       	ldi	r23, 0x00	; 0
    38f2:	48 1b       	sub	r20, r24
    38f4:	51 09       	sbc	r21, r1
    38f6:	61 09       	sbc	r22, r1
    38f8:	71 09       	sbc	r23, r1
    38fa:	4e 87       	std	Y+14, r20	; 0x0e
    38fc:	5f 87       	std	Y+15, r21	; 0x0f
    38fe:	68 8b       	std	Y+16, r22	; 0x10
    3900:	79 8b       	std	Y+17, r23	; 0x11
    3902:	90 91 76 31 	lds	r25, 0x3176	; 0x803176 <uxTopReadyPriority>
    3906:	98 17       	cp	r25, r24
    3908:	10 f4       	brcc	.+4      	; 0x390e <vTaskPriorityDisinherit+0x4c>
    390a:	80 93 76 31 	sts	0x3176, r24	; 0x803176 <uxTopReadyPriority>
    390e:	fb e0       	ldi	r31, 0x0B	; 11
    3910:	8f 9f       	mul	r24, r31
    3912:	c0 01       	movw	r24, r0
    3914:	11 24       	eor	r1, r1
    3916:	b8 01       	movw	r22, r16
    3918:	8c 55       	subi	r24, 0x5C	; 92
    391a:	9e 4c       	sbci	r25, 0xCE	; 206
    391c:	0e 94 37 12 	call	0x246e	; 0x246e <vListInsertEnd>
    3920:	df 91       	pop	r29
    3922:	cf 91       	pop	r28
    3924:	1f 91       	pop	r17
    3926:	0f 91       	pop	r16
    3928:	08 95       	ret

0000392a <_ZN8frt_task22_call_users_run_methodEPS_>:
    392a:	ec 01       	movw	r28, r24
    392c:	e8 81       	ld	r30, Y
    392e:	f9 81       	ldd	r31, Y+1	; 0x01
    3930:	01 90       	ld	r0, Z+
    3932:	f0 81       	ld	r31, Z
    3934:	e0 2d       	mov	r30, r0
    3936:	19 95       	eicall
    3938:	1a 82       	std	Y+2, r1	; 0x02
    393a:	1b 82       	std	Y+3, r1	; 0x03
    393c:	6f ef       	ldi	r22, 0xFF	; 255
    393e:	7f ef       	ldi	r23, 0xFF	; 255
    3940:	cb 01       	movw	r24, r22
    3942:	0e 94 78 1a 	call	0x34f0	; 0x34f0 <vTaskDelay>
    3946:	fa cf       	rjmp	.-12     	; 0x393c <_ZN8frt_task22_call_users_run_methodEPS_+0x12>

00003948 <_ZN8frt_task13transition_toEh>:
    3948:	fc 01       	movw	r30, r24
    394a:	64 87       	std	Z+12, r22	; 0x0c
    394c:	65 87       	std	Z+13, r22	; 0x0d
    394e:	08 95       	ret

00003950 <_ZN8frt_taskC1EPKchjP8emstream>:
    3950:	4f 92       	push	r4
    3952:	5f 92       	push	r5
    3954:	6f 92       	push	r6
    3956:	7f 92       	push	r7
    3958:	8f 92       	push	r8
    395a:	9f 92       	push	r9
    395c:	af 92       	push	r10
    395e:	bf 92       	push	r11
    3960:	cf 92       	push	r12
    3962:	df 92       	push	r13
    3964:	ef 92       	push	r14
    3966:	ff 92       	push	r15
    3968:	0f 93       	push	r16
    396a:	1f 93       	push	r17
    396c:	cf 93       	push	r28
    396e:	df 93       	push	r29
    3970:	cd b7       	in	r28, 0x3d	; 61
    3972:	de b7       	in	r29, 0x3e	; 62
    3974:	2a 97       	sbiw	r28, 0x0a	; 10
    3976:	cd bf       	out	0x3d, r28	; 61
    3978:	de bf       	out	0x3e, r29	; 62
    397a:	4c 01       	movw	r8, r24
    397c:	29 01       	movw	r4, r18
    397e:	38 01       	movw	r6, r16
    3980:	8a e9       	ldi	r24, 0x9A	; 154
    3982:	90 e2       	ldi	r25, 0x20	; 32
    3984:	f4 01       	movw	r30, r8
    3986:	80 83       	st	Z, r24
    3988:	91 83       	std	Z+1, r25	; 0x01
    398a:	fb 01       	movw	r30, r22
    398c:	80 81       	ld	r24, Z
    398e:	88 23       	and	r24, r24
    3990:	69 f0       	breq	.+26     	; 0x39ac <_ZN8frt_taskC1EPKchjP8emstream+0x5c>
    3992:	de 01       	movw	r26, r28
    3994:	11 96       	adiw	r26, 0x01	; 1
    3996:	31 96       	adiw	r30, 0x01	; 1
    3998:	90 e0       	ldi	r25, 0x00	; 0
    399a:	02 c0       	rjmp	.+4      	; 0x39a0 <_ZN8frt_taskC1EPKchjP8emstream+0x50>
    399c:	99 30       	cpi	r25, 0x09	; 9
    399e:	39 f0       	breq	.+14     	; 0x39ae <_ZN8frt_taskC1EPKchjP8emstream+0x5e>
    39a0:	9f 5f       	subi	r25, 0xFF	; 255
    39a2:	8d 93       	st	X+, r24
    39a4:	81 91       	ld	r24, Z+
    39a6:	81 11       	cpse	r24, r1
    39a8:	f9 cf       	rjmp	.-14     	; 0x399c <_ZN8frt_taskC1EPKchjP8emstream+0x4c>
    39aa:	01 c0       	rjmp	.+2      	; 0x39ae <_ZN8frt_taskC1EPKchjP8emstream+0x5e>
    39ac:	90 e0       	ldi	r25, 0x00	; 0
    39ae:	e1 e0       	ldi	r30, 0x01	; 1
    39b0:	f0 e0       	ldi	r31, 0x00	; 0
    39b2:	ec 0f       	add	r30, r28
    39b4:	fd 1f       	adc	r31, r29
    39b6:	e9 0f       	add	r30, r25
    39b8:	f1 1d       	adc	r31, r1
    39ba:	10 82       	st	Z, r1
    39bc:	74 01       	movw	r14, r8
    39be:	f2 e0       	ldi	r31, 0x02	; 2
    39c0:	ef 0e       	add	r14, r31
    39c2:	f1 1c       	adc	r15, r1
    39c4:	a1 2c       	mov	r10, r1
    39c6:	b1 2c       	mov	r11, r1
    39c8:	c1 2c       	mov	r12, r1
    39ca:	d1 2c       	mov	r13, r1
    39cc:	04 2f       	mov	r16, r20
    39ce:	94 01       	movw	r18, r8
    39d0:	a2 01       	movw	r20, r4
    39d2:	be 01       	movw	r22, r28
    39d4:	6f 5f       	subi	r22, 0xFF	; 255
    39d6:	7f 4f       	sbci	r23, 0xFF	; 255
    39d8:	8f ed       	ldi	r24, 0xDF	; 223
    39da:	91 e0       	ldi	r25, 0x01	; 1
    39dc:	0e 94 29 17 	call	0x2e52	; 0x2e52 <xTaskGenericCreate>
    39e0:	f4 01       	movw	r30, r8
    39e2:	66 82       	std	Z+6, r6	; 0x06
    39e4:	77 82       	std	Z+7, r7	; 0x07
    39e6:	40 86       	std	Z+8, r4	; 0x08
    39e8:	51 86       	std	Z+9, r5	; 0x09
    39ea:	20 91 d2 31 	lds	r18, 0x31D2	; 0x8031d2 <last_created_task_pointer>
    39ee:	30 91 d3 31 	lds	r19, 0x31D3	; 0x8031d3 <last_created_task_pointer+0x1>
    39f2:	24 83       	std	Z+4, r18	; 0x04
    39f4:	35 83       	std	Z+5, r19	; 0x05
    39f6:	80 92 d2 31 	sts	0x31D2, r8	; 0x8031d2 <last_created_task_pointer>
    39fa:	90 92 d3 31 	sts	0x31D3, r9	; 0x8031d3 <last_created_task_pointer+0x1>
    39fe:	14 86       	std	Z+12, r1	; 0x0c
    3a00:	15 86       	std	Z+13, r1	; 0x0d
    3a02:	40 90 14 32 	lds	r4, 0x3214	; 0x803214 <portStackTopForTask>
    3a06:	50 90 15 32 	lds	r5, 0x3215	; 0x803215 <portStackTopForTask+0x1>
    3a0a:	ff ef       	ldi	r31, 0xFF	; 255
    3a0c:	4f 1a       	sub	r4, r31
    3a0e:	5f 0a       	sbc	r5, r31
    3a10:	40 92 14 32 	sts	0x3214, r4	; 0x803214 <portStackTopForTask>
    3a14:	50 92 15 32 	sts	0x3215, r5	; 0x803215 <portStackTopForTask+0x1>
    3a18:	f4 01       	movw	r30, r8
    3a1a:	42 86       	std	Z+10, r4	; 0x0a
    3a1c:	53 86       	std	Z+11, r5	; 0x0b
    3a1e:	16 86       	std	Z+14, r1	; 0x0e
    3a20:	17 86       	std	Z+15, r1	; 0x0f
    3a22:	10 8a       	std	Z+16, r1	; 0x10
    3a24:	11 8a       	std	Z+17, r1	; 0x11
    3a26:	61 14       	cp	r6, r1
    3a28:	71 04       	cpc	r7, r1
    3a2a:	09 f4       	brne	.+2      	; 0x3a2e <_ZN8frt_taskC1EPKchjP8emstream+0xde>
    3a2c:	44 c0       	rjmp	.+136    	; 0x3ab6 <_ZN8frt_taskC1EPKchjP8emstream+0x166>
    3a2e:	81 30       	cpi	r24, 0x01	; 1
    3a30:	79 f5       	brne	.+94     	; 0x3a90 <_ZN8frt_taskC1EPKchjP8emstream+0x140>
    3a32:	6a e0       	ldi	r22, 0x0A	; 10
    3a34:	c3 01       	movw	r24, r6
    3a36:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3a3a:	7c 01       	movw	r14, r24
    3a3c:	65 e4       	ldi	r22, 0x45	; 69
    3a3e:	73 e0       	ldi	r23, 0x03	; 3
    3a40:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3a44:	be 01       	movw	r22, r28
    3a46:	6f 5f       	subi	r22, 0xFF	; 255
    3a48:	7f 4f       	sbci	r23, 0xFF	; 255
    3a4a:	c7 01       	movw	r24, r14
    3a4c:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3a50:	6a e0       	ldi	r22, 0x0A	; 10
    3a52:	c7 01       	movw	r24, r14
    3a54:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3a58:	7c 01       	movw	r14, r24
    3a5a:	6c e3       	ldi	r22, 0x3C	; 60
    3a5c:	73 e0       	ldi	r23, 0x03	; 3
    3a5e:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3a62:	6a e0       	ldi	r22, 0x0A	; 10
    3a64:	c7 01       	movw	r24, r14
    3a66:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3a6a:	7c 01       	movw	r14, r24
    3a6c:	6e e2       	ldi	r22, 0x2E	; 46
    3a6e:	73 e0       	ldi	r23, 0x03	; 3
    3a70:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3a74:	63 e0       	ldi	r22, 0x03	; 3
    3a76:	c7 01       	movw	r24, r14
    3a78:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3a7c:	b2 01       	movw	r22, r4
    3a7e:	0e 94 ea 1f 	call	0x3fd4	; 0x3fd4 <_ZN8emstreamlsEj>
    3a82:	62 e0       	ldi	r22, 0x02	; 2
    3a84:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3a88:	66 e0       	ldi	r22, 0x06	; 6
    3a8a:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3a8e:	13 c0       	rjmp	.+38     	; 0x3ab6 <_ZN8frt_taskC1EPKchjP8emstream+0x166>
    3a90:	6a e0       	ldi	r22, 0x0A	; 10
    3a92:	c3 01       	movw	r24, r6
    3a94:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3a98:	4c 01       	movw	r8, r24
    3a9a:	69 e1       	ldi	r22, 0x19	; 25
    3a9c:	73 e0       	ldi	r23, 0x03	; 3
    3a9e:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3aa2:	be 01       	movw	r22, r28
    3aa4:	6f 5f       	subi	r22, 0xFF	; 255
    3aa6:	7f 4f       	sbci	r23, 0xFF	; 255
    3aa8:	c4 01       	movw	r24, r8
    3aaa:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3aae:	66 e0       	ldi	r22, 0x06	; 6
    3ab0:	c4 01       	movw	r24, r8
    3ab2:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3ab6:	2a 96       	adiw	r28, 0x0a	; 10
    3ab8:	cd bf       	out	0x3d, r28	; 61
    3aba:	de bf       	out	0x3e, r29	; 62
    3abc:	df 91       	pop	r29
    3abe:	cf 91       	pop	r28
    3ac0:	1f 91       	pop	r17
    3ac2:	0f 91       	pop	r16
    3ac4:	ff 90       	pop	r15
    3ac6:	ef 90       	pop	r14
    3ac8:	df 90       	pop	r13
    3aca:	cf 90       	pop	r12
    3acc:	bf 90       	pop	r11
    3ace:	af 90       	pop	r10
    3ad0:	9f 90       	pop	r9
    3ad2:	8f 90       	pop	r8
    3ad4:	7f 90       	pop	r7
    3ad6:	6f 90       	pop	r6
    3ad8:	5f 90       	pop	r5
    3ada:	4f 90       	pop	r4
    3adc:	08 95       	ret

00003ade <_ZN8frt_task12print_statusER8emstream>:
    3ade:	8f 92       	push	r8
    3ae0:	9f 92       	push	r9
    3ae2:	af 92       	push	r10
    3ae4:	bf 92       	push	r11
    3ae6:	cf 92       	push	r12
    3ae8:	df 92       	push	r13
    3aea:	ef 92       	push	r14
    3aec:	ff 92       	push	r15
    3aee:	0f 93       	push	r16
    3af0:	1f 93       	push	r17
    3af2:	cf 93       	push	r28
    3af4:	df 93       	push	r29
    3af6:	ec 01       	movw	r28, r24
    3af8:	8b 01       	movw	r16, r22
    3afa:	8a 81       	ldd	r24, Y+2	; 0x02
    3afc:	9b 81       	ldd	r25, Y+3	; 0x03
    3afe:	0e 94 80 18 	call	0x3100	; 0x3100 <pcTaskGetTaskName>
    3b02:	bc 01       	movw	r22, r24
    3b04:	c8 01       	movw	r24, r16
    3b06:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3b0a:	d8 01       	movw	r26, r16
    3b0c:	ed 91       	ld	r30, X+
    3b0e:	fc 91       	ld	r31, X
    3b10:	02 80       	ldd	r0, Z+2	; 0x02
    3b12:	f3 81       	ldd	r31, Z+3	; 0x03
    3b14:	e0 2d       	mov	r30, r0
    3b16:	69 e0       	ldi	r22, 0x09	; 9
    3b18:	c8 01       	movw	r24, r16
    3b1a:	19 95       	eicall
    3b1c:	8a 81       	ldd	r24, Y+2	; 0x02
    3b1e:	9b 81       	ldd	r25, Y+3	; 0x03
    3b20:	0e 94 80 18 	call	0x3100	; 0x3100 <pcTaskGetTaskName>
    3b24:	fc 01       	movw	r30, r24
    3b26:	01 90       	ld	r0, Z+
    3b28:	00 20       	and	r0, r0
    3b2a:	e9 f7       	brne	.-6      	; 0x3b26 <_ZN8frt_task12print_statusER8emstream+0x48>
    3b2c:	31 97       	sbiw	r30, 0x01	; 1
    3b2e:	e8 1b       	sub	r30, r24
    3b30:	f9 0b       	sbc	r31, r25
    3b32:	38 97       	sbiw	r30, 0x08	; 8
    3b34:	48 f4       	brcc	.+18     	; 0x3b48 <_ZN8frt_task12print_statusER8emstream+0x6a>
    3b36:	d8 01       	movw	r26, r16
    3b38:	ed 91       	ld	r30, X+
    3b3a:	fc 91       	ld	r31, X
    3b3c:	02 80       	ldd	r0, Z+2	; 0x02
    3b3e:	f3 81       	ldd	r31, Z+3	; 0x03
    3b40:	e0 2d       	mov	r30, r0
    3b42:	69 e0       	ldi	r22, 0x09	; 9
    3b44:	c8 01       	movw	r24, r16
    3b46:	19 95       	eicall
    3b48:	ce 84       	ldd	r12, Y+14	; 0x0e
    3b4a:	df 84       	ldd	r13, Y+15	; 0x0f
    3b4c:	e8 88       	ldd	r14, Y+16	; 0x10
    3b4e:	f9 88       	ldd	r15, Y+17	; 0x11
    3b50:	a8 84       	ldd	r10, Y+8	; 0x08
    3b52:	b9 84       	ldd	r11, Y+9	; 0x09
    3b54:	8a 81       	ldd	r24, Y+2	; 0x02
    3b56:	9b 81       	ldd	r25, Y+3	; 0x03
    3b58:	0e 94 ee 1b 	call	0x37dc	; 0x37dc <uxTaskGetStackHighWaterMark>
    3b5c:	98 2e       	mov	r9, r24
    3b5e:	8c 84       	ldd	r8, Y+12	; 0x0c
    3b60:	8a 81       	ldd	r24, Y+2	; 0x02
    3b62:	9b 81       	ldd	r25, Y+3	; 0x03
    3b64:	0e 94 2b 18 	call	0x3056	; 0x3056 <uxTaskPriorityGet>
    3b68:	68 2f       	mov	r22, r24
    3b6a:	c8 01       	movw	r24, r16
    3b6c:	0e 94 60 20 	call	0x40c0	; 0x40c0 <_ZN8emstreamlsEh>
    3b70:	6a e0       	ldi	r22, 0x0A	; 10
    3b72:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3b76:	ec 01       	movw	r28, r24
    3b78:	6b eb       	ldi	r22, 0xBB	; 187
    3b7a:	73 e0       	ldi	r23, 0x03	; 3
    3b7c:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3b80:	68 2d       	mov	r22, r8
    3b82:	ce 01       	movw	r24, r28
    3b84:	0e 94 60 20 	call	0x40c0	; 0x40c0 <_ZN8emstreamlsEh>
    3b88:	6a e0       	ldi	r22, 0x0A	; 10
    3b8a:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3b8e:	ec 01       	movw	r28, r24
    3b90:	69 eb       	ldi	r22, 0xB9	; 185
    3b92:	73 e0       	ldi	r23, 0x03	; 3
    3b94:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3b98:	69 2d       	mov	r22, r9
    3b9a:	ce 01       	movw	r24, r28
    3b9c:	0e 94 60 20 	call	0x40c0	; 0x40c0 <_ZN8emstreamlsEh>
    3ba0:	6a e0       	ldi	r22, 0x0A	; 10
    3ba2:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3ba6:	ec 01       	movw	r28, r24
    3ba8:	67 eb       	ldi	r22, 0xB7	; 183
    3baa:	73 e0       	ldi	r23, 0x03	; 3
    3bac:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3bb0:	b5 01       	movw	r22, r10
    3bb2:	ce 01       	movw	r24, r28
    3bb4:	0e 94 ea 1f 	call	0x3fd4	; 0x3fd4 <_ZN8emstreamlsEj>
    3bb8:	6a e0       	ldi	r22, 0x0A	; 10
    3bba:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3bbe:	ec 01       	movw	r28, r24
    3bc0:	65 eb       	ldi	r22, 0xB5	; 181
    3bc2:	73 e0       	ldi	r23, 0x03	; 3
    3bc4:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3bc8:	6a e0       	ldi	r22, 0x0A	; 10
    3bca:	ce 01       	movw	r24, r28
    3bcc:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    3bd0:	ec 01       	movw	r28, r24
    3bd2:	63 eb       	ldi	r22, 0xB3	; 179
    3bd4:	73 e0       	ldi	r23, 0x03	; 3
    3bd6:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3bda:	b7 01       	movw	r22, r14
    3bdc:	a6 01       	movw	r20, r12
    3bde:	ce 01       	movw	r24, r28
    3be0:	0e 94 1e 20 	call	0x403c	; 0x403c <_ZN8emstreamlsEm>
    3be4:	df 91       	pop	r29
    3be6:	cf 91       	pop	r28
    3be8:	1f 91       	pop	r17
    3bea:	0f 91       	pop	r16
    3bec:	ff 90       	pop	r15
    3bee:	ef 90       	pop	r14
    3bf0:	df 90       	pop	r13
    3bf2:	cf 90       	pop	r12
    3bf4:	bf 90       	pop	r11
    3bf6:	af 90       	pop	r10
    3bf8:	9f 90       	pop	r9
    3bfa:	8f 90       	pop	r8
    3bfc:	08 95       	ret

00003bfe <_ZN14frt_text_queue7getcharEv>:
    3bfe:	0f 93       	push	r16
    3c00:	cf 93       	push	r28
    3c02:	df 93       	push	r29
    3c04:	1f 92       	push	r1
    3c06:	cd b7       	in	r28, 0x3d	; 61
    3c08:	de b7       	in	r29, 0x3e	; 62
    3c0a:	00 e0       	ldi	r16, 0x00	; 0
    3c0c:	2f ef       	ldi	r18, 0xFF	; 255
    3c0e:	3f ef       	ldi	r19, 0xFF	; 255
    3c10:	a9 01       	movw	r20, r18
    3c12:	be 01       	movw	r22, r28
    3c14:	6f 5f       	subi	r22, 0xFF	; 255
    3c16:	7f 4f       	sbci	r23, 0xFF	; 255
    3c18:	fc 01       	movw	r30, r24
    3c1a:	80 85       	ldd	r24, Z+8	; 0x08
    3c1c:	91 85       	ldd	r25, Z+9	; 0x09
    3c1e:	0e 94 07 16 	call	0x2c0e	; 0x2c0e <xQueueGenericReceive>
    3c22:	81 30       	cpi	r24, 0x01	; 1
    3c24:	19 f4       	brne	.+6      	; 0x3c2c <_ZN14frt_text_queue7getcharEv+0x2e>
    3c26:	89 81       	ldd	r24, Y+1	; 0x01
    3c28:	90 e0       	ldi	r25, 0x00	; 0
    3c2a:	02 c0       	rjmp	.+4      	; 0x3c30 <_ZN14frt_text_queue7getcharEv+0x32>
    3c2c:	8f ef       	ldi	r24, 0xFF	; 255
    3c2e:	9f ef       	ldi	r25, 0xFF	; 255
    3c30:	0f 90       	pop	r0
    3c32:	df 91       	pop	r29
    3c34:	cf 91       	pop	r28
    3c36:	0f 91       	pop	r16
    3c38:	08 95       	ret

00003c3a <_ZN14frt_text_queue14check_for_charEv>:
    3c3a:	fc 01       	movw	r30, r24
    3c3c:	80 85       	ldd	r24, Z+8	; 0x08
    3c3e:	91 85       	ldd	r25, Z+9	; 0x09
    3c40:	0e 94 cb 16 	call	0x2d96	; 0x2d96 <uxQueueMessagesWaiting>
    3c44:	91 e0       	ldi	r25, 0x01	; 1
    3c46:	81 11       	cpse	r24, r1
    3c48:	01 c0       	rjmp	.+2      	; 0x3c4c <_ZN14frt_text_queue14check_for_charEv+0x12>
    3c4a:	90 e0       	ldi	r25, 0x00	; 0
    3c4c:	89 2f       	mov	r24, r25
    3c4e:	08 95       	ret

00003c50 <_ZN14frt_text_queue7putcharEc>:
    3c50:	0f 93       	push	r16
    3c52:	cf 93       	push	r28
    3c54:	df 93       	push	r29
    3c56:	1f 92       	push	r1
    3c58:	cd b7       	in	r28, 0x3d	; 61
    3c5a:	de b7       	in	r29, 0x3e	; 62
    3c5c:	69 83       	std	Y+1, r22	; 0x01
    3c5e:	fc 01       	movw	r30, r24
    3c60:	22 85       	ldd	r18, Z+10	; 0x0a
    3c62:	33 85       	ldd	r19, Z+11	; 0x0b
    3c64:	44 85       	ldd	r20, Z+12	; 0x0c
    3c66:	55 85       	ldd	r21, Z+13	; 0x0d
    3c68:	00 e0       	ldi	r16, 0x00	; 0
    3c6a:	be 01       	movw	r22, r28
    3c6c:	6f 5f       	subi	r22, 0xFF	; 255
    3c6e:	7f 4f       	sbci	r23, 0xFF	; 255
    3c70:	80 85       	ldd	r24, Z+8	; 0x08
    3c72:	91 85       	ldd	r25, Z+9	; 0x09
    3c74:	0e 94 6c 15 	call	0x2ad8	; 0x2ad8 <xQueueGenericSend>
    3c78:	91 e0       	ldi	r25, 0x01	; 1
    3c7a:	81 11       	cpse	r24, r1
    3c7c:	01 c0       	rjmp	.+2      	; 0x3c80 <_ZN14frt_text_queue7putcharEc+0x30>
    3c7e:	90 e0       	ldi	r25, 0x00	; 0
    3c80:	89 2f       	mov	r24, r25
    3c82:	0f 90       	pop	r0
    3c84:	df 91       	pop	r29
    3c86:	cf 91       	pop	r28
    3c88:	0f 91       	pop	r16
    3c8a:	08 95       	ret

00003c8c <_ZN14frt_text_queueC1EjP8emstreamm>:
    3c8c:	8f 92       	push	r8
    3c8e:	9f 92       	push	r9
    3c90:	bf 92       	push	r11
    3c92:	cf 92       	push	r12
    3c94:	df 92       	push	r13
    3c96:	ef 92       	push	r14
    3c98:	ff 92       	push	r15
    3c9a:	0f 93       	push	r16
    3c9c:	1f 93       	push	r17
    3c9e:	cf 93       	push	r28
    3ca0:	df 93       	push	r29
    3ca2:	ec 01       	movw	r28, r24
    3ca4:	b6 2e       	mov	r11, r22
    3ca6:	4a 01       	movw	r8, r20
    3ca8:	68 01       	movw	r12, r16
    3caa:	79 01       	movw	r14, r18
    3cac:	0e 94 35 1f 	call	0x3e6a	; 0x3e6a <_ZN8emstreamC1Ev>
    3cb0:	82 ea       	ldi	r24, 0xA2	; 162
    3cb2:	90 e2       	ldi	r25, 0x20	; 32
    3cb4:	88 83       	st	Y, r24
    3cb6:	99 83       	std	Y+1, r25	; 0x01
    3cb8:	8e 86       	std	Y+14, r8	; 0x0e
    3cba:	9f 86       	std	Y+15, r9	; 0x0f
    3cbc:	40 e0       	ldi	r20, 0x00	; 0
    3cbe:	61 e0       	ldi	r22, 0x01	; 1
    3cc0:	8b 2d       	mov	r24, r11
    3cc2:	0e 94 3e 15 	call	0x2a7c	; 0x2a7c <xQueueGenericCreate>
    3cc6:	88 87       	std	Y+8, r24	; 0x08
    3cc8:	99 87       	std	Y+9, r25	; 0x09
    3cca:	ca 86       	std	Y+10, r12	; 0x0a
    3ccc:	db 86       	std	Y+11, r13	; 0x0b
    3cce:	ec 86       	std	Y+12, r14	; 0x0c
    3cd0:	fd 86       	std	Y+13, r15	; 0x0d
    3cd2:	df 91       	pop	r29
    3cd4:	cf 91       	pop	r28
    3cd6:	1f 91       	pop	r17
    3cd8:	0f 91       	pop	r16
    3cda:	ff 90       	pop	r15
    3cdc:	ef 90       	pop	r14
    3cde:	df 90       	pop	r13
    3ce0:	cf 90       	pop	r12
    3ce2:	bf 90       	pop	r11
    3ce4:	9f 90       	pop	r9
    3ce6:	8f 90       	pop	r8
    3ce8:	08 95       	ret

00003cea <_Znwj>:
    3cea:	0e 94 55 11 	call	0x22aa	; 0x22aa <pvPortMalloc>
    3cee:	08 95       	ret

00003cf0 <_Znaj>:
    3cf0:	0e 94 55 11 	call	0x22aa	; 0x22aa <pvPortMalloc>
    3cf4:	08 95       	ret

00003cf6 <__cxa_pure_virtual>:
    3cf6:	08 95       	ret

00003cf8 <_ZN7base232C1EjP12USART_struct>:
    3cf8:	cf 93       	push	r28
    3cfa:	df 93       	push	r29
    3cfc:	fc 01       	movw	r30, r24
    3cfe:	da 01       	movw	r26, r20
    3d00:	40 3a       	cpi	r20, 0xA0	; 160
    3d02:	68 e0       	ldi	r22, 0x08	; 8
    3d04:	56 07       	cpc	r21, r22
    3d06:	49 f4       	brne	.+18     	; 0x3d1a <_ZN7base232C1EjP12USART_struct+0x22>
    3d08:	80 e4       	ldi	r24, 0x40	; 64
    3d0a:	96 e0       	ldi	r25, 0x06	; 6
    3d0c:	82 83       	std	Z+2, r24	; 0x02
    3d0e:	93 83       	std	Z+3, r25	; 0x03
    3d10:	82 e0       	ldi	r24, 0x02	; 2
    3d12:	84 83       	std	Z+4, r24	; 0x04
    3d14:	83 e0       	ldi	r24, 0x03	; 3
    3d16:	85 83       	std	Z+5, r24	; 0x05
    3d18:	4c c0       	rjmp	.+152    	; 0x3db2 <_ZN7base232C1EjP12USART_struct+0xba>
    3d1a:	40 3b       	cpi	r20, 0xB0	; 176
    3d1c:	78 e0       	ldi	r23, 0x08	; 8
    3d1e:	57 07       	cpc	r21, r23
    3d20:	49 f4       	brne	.+18     	; 0x3d34 <_ZN7base232C1EjP12USART_struct+0x3c>
    3d22:	80 e4       	ldi	r24, 0x40	; 64
    3d24:	96 e0       	ldi	r25, 0x06	; 6
    3d26:	82 83       	std	Z+2, r24	; 0x02
    3d28:	93 83       	std	Z+3, r25	; 0x03
    3d2a:	86 e0       	ldi	r24, 0x06	; 6
    3d2c:	84 83       	std	Z+4, r24	; 0x04
    3d2e:	87 e0       	ldi	r24, 0x07	; 7
    3d30:	85 83       	std	Z+5, r24	; 0x05
    3d32:	3f c0       	rjmp	.+126    	; 0x3db2 <_ZN7base232C1EjP12USART_struct+0xba>
    3d34:	40 3a       	cpi	r20, 0xA0	; 160
    3d36:	89 e0       	ldi	r24, 0x09	; 9
    3d38:	58 07       	cpc	r21, r24
    3d3a:	49 f4       	brne	.+18     	; 0x3d4e <_ZN7base232C1EjP12USART_struct+0x56>
    3d3c:	80 e6       	ldi	r24, 0x60	; 96
    3d3e:	96 e0       	ldi	r25, 0x06	; 6
    3d40:	82 83       	std	Z+2, r24	; 0x02
    3d42:	93 83       	std	Z+3, r25	; 0x03
    3d44:	82 e0       	ldi	r24, 0x02	; 2
    3d46:	84 83       	std	Z+4, r24	; 0x04
    3d48:	83 e0       	ldi	r24, 0x03	; 3
    3d4a:	85 83       	std	Z+5, r24	; 0x05
    3d4c:	32 c0       	rjmp	.+100    	; 0x3db2 <_ZN7base232C1EjP12USART_struct+0xba>
    3d4e:	40 3b       	cpi	r20, 0xB0	; 176
    3d50:	69 e0       	ldi	r22, 0x09	; 9
    3d52:	56 07       	cpc	r21, r22
    3d54:	49 f4       	brne	.+18     	; 0x3d68 <_ZN7base232C1EjP12USART_struct+0x70>
    3d56:	80 e6       	ldi	r24, 0x60	; 96
    3d58:	96 e0       	ldi	r25, 0x06	; 6
    3d5a:	82 83       	std	Z+2, r24	; 0x02
    3d5c:	93 83       	std	Z+3, r25	; 0x03
    3d5e:	86 e0       	ldi	r24, 0x06	; 6
    3d60:	84 83       	std	Z+4, r24	; 0x04
    3d62:	87 e0       	ldi	r24, 0x07	; 7
    3d64:	85 83       	std	Z+5, r24	; 0x05
    3d66:	25 c0       	rjmp	.+74     	; 0x3db2 <_ZN7base232C1EjP12USART_struct+0xba>
    3d68:	40 3a       	cpi	r20, 0xA0	; 160
    3d6a:	7a e0       	ldi	r23, 0x0A	; 10
    3d6c:	57 07       	cpc	r21, r23
    3d6e:	49 f4       	brne	.+18     	; 0x3d82 <_ZN7base232C1EjP12USART_struct+0x8a>
    3d70:	80 e8       	ldi	r24, 0x80	; 128
    3d72:	96 e0       	ldi	r25, 0x06	; 6
    3d74:	82 83       	std	Z+2, r24	; 0x02
    3d76:	93 83       	std	Z+3, r25	; 0x03
    3d78:	82 e0       	ldi	r24, 0x02	; 2
    3d7a:	84 83       	std	Z+4, r24	; 0x04
    3d7c:	83 e0       	ldi	r24, 0x03	; 3
    3d7e:	85 83       	std	Z+5, r24	; 0x05
    3d80:	18 c0       	rjmp	.+48     	; 0x3db2 <_ZN7base232C1EjP12USART_struct+0xba>
    3d82:	40 3b       	cpi	r20, 0xB0	; 176
    3d84:	8a e0       	ldi	r24, 0x0A	; 10
    3d86:	58 07       	cpc	r21, r24
    3d88:	49 f4       	brne	.+18     	; 0x3d9c <_ZN7base232C1EjP12USART_struct+0xa4>
    3d8a:	80 e8       	ldi	r24, 0x80	; 128
    3d8c:	96 e0       	ldi	r25, 0x06	; 6
    3d8e:	82 83       	std	Z+2, r24	; 0x02
    3d90:	93 83       	std	Z+3, r25	; 0x03
    3d92:	86 e0       	ldi	r24, 0x06	; 6
    3d94:	84 83       	std	Z+4, r24	; 0x04
    3d96:	87 e0       	ldi	r24, 0x07	; 7
    3d98:	85 83       	std	Z+5, r24	; 0x05
    3d9a:	0b c0       	rjmp	.+22     	; 0x3db2 <_ZN7base232C1EjP12USART_struct+0xba>
    3d9c:	40 3a       	cpi	r20, 0xA0	; 160
    3d9e:	5b 40       	sbci	r21, 0x0B	; 11
    3da0:	41 f4       	brne	.+16     	; 0x3db2 <_ZN7base232C1EjP12USART_struct+0xba>
    3da2:	80 ea       	ldi	r24, 0xA0	; 160
    3da4:	96 e0       	ldi	r25, 0x06	; 6
    3da6:	82 83       	std	Z+2, r24	; 0x02
    3da8:	93 83       	std	Z+3, r25	; 0x03
    3daa:	82 e0       	ldi	r24, 0x02	; 2
    3dac:	84 83       	std	Z+4, r24	; 0x04
    3dae:	83 e0       	ldi	r24, 0x03	; 3
    3db0:	85 83       	std	Z+5, r24	; 0x05
    3db2:	a6 83       	std	Z+6, r26	; 0x06
    3db4:	b7 83       	std	Z+7, r27	; 0x07
    3db6:	cd 01       	movw	r24, r26
    3db8:	01 96       	adiw	r24, 0x01	; 1
    3dba:	80 87       	std	Z+8, r24	; 0x08
    3dbc:	91 87       	std	Z+9, r25	; 0x09
    3dbe:	03 96       	adiw	r24, 0x03	; 3
    3dc0:	82 87       	std	Z+10, r24	; 0x0a
    3dc2:	93 87       	std	Z+11, r25	; 0x0b
    3dc4:	25 81       	ldd	r18, Z+5	; 0x05
    3dc6:	c2 81       	ldd	r28, Z+2	; 0x02
    3dc8:	d3 81       	ldd	r29, Z+3	; 0x03
    3dca:	4c 81       	ldd	r20, Y+4	; 0x04
    3dcc:	81 e0       	ldi	r24, 0x01	; 1
    3dce:	90 e0       	ldi	r25, 0x00	; 0
    3dd0:	bc 01       	movw	r22, r24
    3dd2:	02 c0       	rjmp	.+4      	; 0x3dd8 <_ZN7base232C1EjP12USART_struct+0xe0>
    3dd4:	66 0f       	add	r22, r22
    3dd6:	77 1f       	adc	r23, r23
    3dd8:	2a 95       	dec	r18
    3dda:	e2 f7       	brpl	.-8      	; 0x3dd4 <_ZN7base232C1EjP12USART_struct+0xdc>
    3ddc:	9b 01       	movw	r18, r22
    3dde:	24 2b       	or	r18, r20
    3de0:	2c 83       	std	Y+4, r18	; 0x04
    3de2:	25 81       	ldd	r18, Z+5	; 0x05
    3de4:	c2 81       	ldd	r28, Z+2	; 0x02
    3de6:	d3 81       	ldd	r29, Z+3	; 0x03
    3de8:	48 81       	ld	r20, Y
    3dea:	bc 01       	movw	r22, r24
    3dec:	02 c0       	rjmp	.+4      	; 0x3df2 <_ZN7base232C1EjP12USART_struct+0xfa>
    3dee:	66 0f       	add	r22, r22
    3df0:	77 1f       	adc	r23, r23
    3df2:	2a 95       	dec	r18
    3df4:	e2 f7       	brpl	.-8      	; 0x3dee <_ZN7base232C1EjP12USART_struct+0xf6>
    3df6:	9b 01       	movw	r18, r22
    3df8:	24 2b       	or	r18, r20
    3dfa:	28 83       	st	Y, r18
    3dfc:	34 81       	ldd	r19, Z+4	; 0x04
    3dfe:	c2 81       	ldd	r28, Z+2	; 0x02
    3e00:	d3 81       	ldd	r29, Z+3	; 0x03
    3e02:	28 81       	ld	r18, Y
    3e04:	02 c0       	rjmp	.+4      	; 0x3e0a <_ZN7base232C1EjP12USART_struct+0x112>
    3e06:	88 0f       	add	r24, r24
    3e08:	99 1f       	adc	r25, r25
    3e0a:	3a 95       	dec	r19
    3e0c:	e2 f7       	brpl	.-8      	; 0x3e06 <_ZN7base232C1EjP12USART_struct+0x10e>
    3e0e:	80 95       	com	r24
    3e10:	90 95       	com	r25
    3e12:	82 23       	and	r24, r18
    3e14:	88 83       	st	Y, r24
    3e16:	80 e1       	ldi	r24, 0x10	; 16
    3e18:	13 96       	adiw	r26, 0x03	; 3
    3e1a:	8c 93       	st	X, r24
    3e1c:	13 97       	sbiw	r26, 0x03	; 3
    3e1e:	83 e0       	ldi	r24, 0x03	; 3
    3e20:	15 96       	adiw	r26, 0x05	; 5
    3e22:	8c 93       	st	X, r24
    3e24:	15 97       	sbiw	r26, 0x05	; 5
    3e26:	80 ef       	ldi	r24, 0xF0	; 240
    3e28:	17 96       	adiw	r26, 0x07	; 7
    3e2a:	8c 93       	st	X, r24
    3e2c:	17 97       	sbiw	r26, 0x07	; 7
    3e2e:	81 e2       	ldi	r24, 0x21	; 33
    3e30:	16 96       	adiw	r26, 0x06	; 6
    3e32:	8c 93       	st	X, r24
    3e34:	16 97       	sbiw	r26, 0x06	; 6
    3e36:	88 e1       	ldi	r24, 0x18	; 24
    3e38:	14 96       	adiw	r26, 0x04	; 4
    3e3a:	8c 93       	st	X, r24
    3e3c:	80 e8       	ldi	r24, 0x80	; 128
    3e3e:	85 87       	std	Z+13, r24	; 0x0d
    3e40:	80 e4       	ldi	r24, 0x40	; 64
    3e42:	86 87       	std	Z+14, r24	; 0x0e
    3e44:	80 e2       	ldi	r24, 0x20	; 32
    3e46:	84 87       	std	Z+12, r24	; 0x0c
    3e48:	06 80       	ldd	r0, Z+6	; 0x06
    3e4a:	f7 81       	ldd	r31, Z+7	; 0x07
    3e4c:	e0 2d       	mov	r30, r0
    3e4e:	80 81       	ld	r24, Z
    3e50:	80 81       	ld	r24, Z
    3e52:	df 91       	pop	r29
    3e54:	cf 91       	pop	r28
    3e56:	08 95       	ret

00003e58 <_ZN8emstream13ready_to_sendEv>:
    3e58:	81 e0       	ldi	r24, 0x01	; 1
    3e5a:	08 95       	ret

00003e5c <_ZN8emstream7getcharEv>:
    3e5c:	80 e0       	ldi	r24, 0x00	; 0
    3e5e:	90 e0       	ldi	r25, 0x00	; 0
    3e60:	08 95       	ret

00003e62 <_ZN8emstream14check_for_charEv>:
    3e62:	80 e0       	ldi	r24, 0x00	; 0
    3e64:	08 95       	ret

00003e66 <_ZN8emstream12transmit_nowEv>:
    3e66:	08 95       	ret

00003e68 <_ZN8emstream12clear_screenEv>:
    3e68:	08 95       	ret

00003e6a <_ZN8emstreamC1Ev>:
    3e6a:	fc 01       	movw	r30, r24
    3e6c:	82 eb       	ldi	r24, 0xB2	; 178
    3e6e:	90 e2       	ldi	r25, 0x20	; 32
    3e70:	80 83       	st	Z, r24
    3e72:	91 83       	std	Z+1, r25	; 0x01
    3e74:	8a e0       	ldi	r24, 0x0A	; 10
    3e76:	82 83       	std	Z+2, r24	; 0x02
    3e78:	13 82       	std	Z+3, r1	; 0x03
    3e7a:	83 e0       	ldi	r24, 0x03	; 3
    3e7c:	85 83       	std	Z+5, r24	; 0x05
    3e7e:	14 82       	std	Z+4, r1	; 0x04
    3e80:	16 82       	std	Z+6, r1	; 0x06
    3e82:	17 82       	std	Z+7, r1	; 0x07
    3e84:	08 95       	ret

00003e86 <_ZN8emstream4putsEPKc>:
    3e86:	0f 93       	push	r16
    3e88:	1f 93       	push	r17
    3e8a:	cf 93       	push	r28
    3e8c:	df 93       	push	r29
    3e8e:	8c 01       	movw	r16, r24
    3e90:	fb 01       	movw	r30, r22
    3e92:	dc 01       	movw	r26, r24
    3e94:	14 96       	adiw	r26, 0x04	; 4
    3e96:	8c 91       	ld	r24, X
    3e98:	81 11       	cpse	r24, r1
    3e9a:	04 c0       	rjmp	.+8      	; 0x3ea4 <_ZN8emstream4putsEPKc+0x1e>
    3e9c:	60 81       	ld	r22, Z
    3e9e:	61 11       	cpse	r22, r1
    3ea0:	17 c0       	rjmp	.+46     	; 0x3ed0 <_ZN8emstream4putsEPKc+0x4a>
    3ea2:	23 c0       	rjmp	.+70     	; 0x3eea <_ZN8emstream4putsEPKc+0x64>
    3ea4:	d8 01       	movw	r26, r16
    3ea6:	14 96       	adiw	r26, 0x04	; 4
    3ea8:	1c 92       	st	X, r1
    3eaa:	eb 01       	movw	r28, r22
    3eac:	21 96       	adiw	r28, 0x01	; 1
    3eae:	64 91       	lpm	r22, Z
    3eb0:	66 23       	and	r22, r22
    3eb2:	d9 f0       	breq	.+54     	; 0x3eea <_ZN8emstream4putsEPKc+0x64>
    3eb4:	d8 01       	movw	r26, r16
    3eb6:	ed 91       	ld	r30, X+
    3eb8:	fc 91       	ld	r31, X
    3eba:	02 80       	ldd	r0, Z+2	; 0x02
    3ebc:	f3 81       	ldd	r31, Z+3	; 0x03
    3ebe:	e0 2d       	mov	r30, r0
    3ec0:	c8 01       	movw	r24, r16
    3ec2:	19 95       	eicall
    3ec4:	fe 01       	movw	r30, r28
    3ec6:	64 91       	lpm	r22, Z
    3ec8:	21 96       	adiw	r28, 0x01	; 1
    3eca:	61 11       	cpse	r22, r1
    3ecc:	f3 cf       	rjmp	.-26     	; 0x3eb4 <_ZN8emstream4putsEPKc+0x2e>
    3ece:	0d c0       	rjmp	.+26     	; 0x3eea <_ZN8emstream4putsEPKc+0x64>
    3ed0:	ef 01       	movw	r28, r30
    3ed2:	21 96       	adiw	r28, 0x01	; 1
    3ed4:	d8 01       	movw	r26, r16
    3ed6:	ed 91       	ld	r30, X+
    3ed8:	fc 91       	ld	r31, X
    3eda:	02 80       	ldd	r0, Z+2	; 0x02
    3edc:	f3 81       	ldd	r31, Z+3	; 0x03
    3ede:	e0 2d       	mov	r30, r0
    3ee0:	c8 01       	movw	r24, r16
    3ee2:	19 95       	eicall
    3ee4:	69 91       	ld	r22, Y+
    3ee6:	61 11       	cpse	r22, r1
    3ee8:	f5 cf       	rjmp	.-22     	; 0x3ed4 <_ZN8emstream4putsEPKc+0x4e>
    3eea:	df 91       	pop	r29
    3eec:	cf 91       	pop	r28
    3eee:	1f 91       	pop	r17
    3ef0:	0f 91       	pop	r16
    3ef2:	08 95       	ret

00003ef4 <_ZN8emstreamlsE15ser_manipulator>:
    3ef4:	cf 93       	push	r28
    3ef6:	df 93       	push	r29
    3ef8:	ec 01       	movw	r28, r24
    3efa:	86 2f       	mov	r24, r22
    3efc:	90 e0       	ldi	r25, 0x00	; 0
    3efe:	8b 30       	cpi	r24, 0x0B	; 11
    3f00:	91 05       	cpc	r25, r1
    3f02:	d8 f5       	brcc	.+118    	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f04:	fc 01       	movw	r30, r24
    3f06:	88 27       	eor	r24, r24
    3f08:	eb 5f       	subi	r30, 0xFB	; 251
    3f0a:	fe 4f       	sbci	r31, 0xFE	; 254
    3f0c:	8f 4f       	sbci	r24, 0xFF	; 255
    3f0e:	0c 94 65 28 	jmp	0x50ca	; 0x50ca <__tablejump2__>
    3f12:	82 e0       	ldi	r24, 0x02	; 2
    3f14:	8a 83       	std	Y+2, r24	; 0x02
    3f16:	31 c0       	rjmp	.+98     	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f18:	88 e0       	ldi	r24, 0x08	; 8
    3f1a:	8a 83       	std	Y+2, r24	; 0x02
    3f1c:	2e c0       	rjmp	.+92     	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f1e:	8a e0       	ldi	r24, 0x0A	; 10
    3f20:	8a 83       	std	Y+2, r24	; 0x02
    3f22:	2b c0       	rjmp	.+86     	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f24:	80 e1       	ldi	r24, 0x10	; 16
    3f26:	8a 83       	std	Y+2, r24	; 0x02
    3f28:	28 c0       	rjmp	.+80     	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f2a:	81 e0       	ldi	r24, 0x01	; 1
    3f2c:	8b 83       	std	Y+3, r24	; 0x03
    3f2e:	25 c0       	rjmp	.+74     	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f30:	1b 82       	std	Y+3, r1	; 0x03
    3f32:	23 c0       	rjmp	.+70     	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f34:	e8 81       	ld	r30, Y
    3f36:	f9 81       	ldd	r31, Y+1	; 0x01
    3f38:	02 80       	ldd	r0, Z+2	; 0x02
    3f3a:	f3 81       	ldd	r31, Z+3	; 0x03
    3f3c:	e0 2d       	mov	r30, r0
    3f3e:	6d e0       	ldi	r22, 0x0D	; 13
    3f40:	ce 01       	movw	r24, r28
    3f42:	19 95       	eicall
    3f44:	e8 81       	ld	r30, Y
    3f46:	f9 81       	ldd	r31, Y+1	; 0x01
    3f48:	02 80       	ldd	r0, Z+2	; 0x02
    3f4a:	f3 81       	ldd	r31, Z+3	; 0x03
    3f4c:	e0 2d       	mov	r30, r0
    3f4e:	6a e0       	ldi	r22, 0x0A	; 10
    3f50:	ce 01       	movw	r24, r28
    3f52:	19 95       	eicall
    3f54:	12 c0       	rjmp	.+36     	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f56:	e8 81       	ld	r30, Y
    3f58:	f9 81       	ldd	r31, Y+1	; 0x01
    3f5a:	02 84       	ldd	r0, Z+10	; 0x0a
    3f5c:	f3 85       	ldd	r31, Z+11	; 0x0b
    3f5e:	e0 2d       	mov	r30, r0
    3f60:	ce 01       	movw	r24, r28
    3f62:	19 95       	eicall
    3f64:	0a c0       	rjmp	.+20     	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f66:	e8 81       	ld	r30, Y
    3f68:	f9 81       	ldd	r31, Y+1	; 0x01
    3f6a:	00 84       	ldd	r0, Z+8	; 0x08
    3f6c:	f1 85       	ldd	r31, Z+9	; 0x09
    3f6e:	e0 2d       	mov	r30, r0
    3f70:	ce 01       	movw	r24, r28
    3f72:	19 95       	eicall
    3f74:	02 c0       	rjmp	.+4      	; 0x3f7a <_ZN8emstreamlsE15ser_manipulator+0x86>
    3f76:	81 e0       	ldi	r24, 0x01	; 1
    3f78:	8c 83       	std	Y+4, r24	; 0x04
    3f7a:	ce 01       	movw	r24, r28
    3f7c:	df 91       	pop	r29
    3f7e:	cf 91       	pop	r28
    3f80:	08 95       	ret

00003f82 <_ZN8emstreamlsEi>:
    3f82:	0f 93       	push	r16
    3f84:	1f 93       	push	r17
    3f86:	cf 93       	push	r28
    3f88:	df 93       	push	r29
    3f8a:	cd b7       	in	r28, 0x3d	; 61
    3f8c:	de b7       	in	r29, 0x3e	; 62
    3f8e:	61 97       	sbiw	r28, 0x11	; 17
    3f90:	cd bf       	out	0x3d, r28	; 61
    3f92:	de bf       	out	0x3e, r29	; 62
    3f94:	8c 01       	movw	r16, r24
    3f96:	9b 01       	movw	r18, r22
    3f98:	fc 01       	movw	r30, r24
    3f9a:	92 81       	ldd	r25, Z+2	; 0x02
    3f9c:	9a 30       	cpi	r25, 0x0A	; 10
    3f9e:	21 f0       	breq	.+8      	; 0x3fa8 <_ZN8emstreamlsEi+0x26>
    3fa0:	c8 01       	movw	r24, r16
    3fa2:	0e 94 ea 1f 	call	0x3fd4	; 0x3fd4 <_ZN8emstreamlsEj>
    3fa6:	0d c0       	rjmp	.+26     	; 0x3fc2 <_ZN8emstreamlsEi+0x40>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    3fa8:	4a e0       	ldi	r20, 0x0A	; 10
    3faa:	be 01       	movw	r22, r28
    3fac:	6f 5f       	subi	r22, 0xFF	; 255
    3fae:	7f 4f       	sbci	r23, 0xFF	; 255
    3fb0:	c9 01       	movw	r24, r18
    3fb2:	0e 94 af 28 	call	0x515e	; 0x515e <__itoa_ncheck>
    3fb6:	be 01       	movw	r22, r28
    3fb8:	6f 5f       	subi	r22, 0xFF	; 255
    3fba:	7f 4f       	sbci	r23, 0xFF	; 255
    3fbc:	c8 01       	movw	r24, r16
    3fbe:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    3fc2:	c8 01       	movw	r24, r16
    3fc4:	61 96       	adiw	r28, 0x11	; 17
    3fc6:	cd bf       	out	0x3d, r28	; 61
    3fc8:	de bf       	out	0x3e, r29	; 62
    3fca:	df 91       	pop	r29
    3fcc:	cf 91       	pop	r28
    3fce:	1f 91       	pop	r17
    3fd0:	0f 91       	pop	r16
    3fd2:	08 95       	ret

00003fd4 <_ZN8emstreamlsEj>:
    3fd4:	ff 92       	push	r15
    3fd6:	0f 93       	push	r16
    3fd8:	1f 93       	push	r17
    3fda:	cf 93       	push	r28
    3fdc:	df 93       	push	r29
    3fde:	cd b7       	in	r28, 0x3d	; 61
    3fe0:	de b7       	in	r29, 0x3e	; 62
    3fe2:	61 97       	sbiw	r28, 0x11	; 17
    3fe4:	cd bf       	out	0x3d, r28	; 61
    3fe6:	de bf       	out	0x3e, r29	; 62
    3fe8:	8c 01       	movw	r16, r24
    3fea:	f6 2e       	mov	r15, r22
    3fec:	97 2f       	mov	r25, r23
    3fee:	f8 01       	movw	r30, r16
    3ff0:	42 81       	ldd	r20, Z+2	; 0x02
    3ff2:	40 31       	cpi	r20, 0x10	; 16
    3ff4:	21 f0       	breq	.+8      	; 0x3ffe <_ZN8emstreamlsEj+0x2a>
    3ff6:	48 30       	cpi	r20, 0x08	; 8
    3ff8:	11 f0       	breq	.+4      	; 0x3ffe <_ZN8emstreamlsEj+0x2a>
    3ffa:	42 30       	cpi	r20, 0x02	; 2
    3ffc:	41 f4       	brne	.+16     	; 0x400e <__stack+0xf>
    3ffe:	69 2f       	mov	r22, r25
    4000:	c8 01       	movw	r24, r16
    4002:	0e 94 60 20 	call	0x40c0	; 0x40c0 <_ZN8emstreamlsEh>
    4006:	6f 2d       	mov	r22, r15
    4008:	0e 94 60 20 	call	0x40c0	; 0x40c0 <_ZN8emstreamlsEh>
    400c:	0d c0       	rjmp	.+26     	; 0x4028 <__stack+0x29>
extern __inline__ __ATTR_GNU_INLINE__
char *utoa (unsigned int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__utoa (unsigned int, char *, int);
	return __utoa (__val, __s, __radix);
    400e:	50 e0       	ldi	r21, 0x00	; 0
    4010:	be 01       	movw	r22, r28
    4012:	6f 5f       	subi	r22, 0xFF	; 255
    4014:	7f 4f       	sbci	r23, 0xFF	; 255
    4016:	8f 2d       	mov	r24, r15
    4018:	0e 94 e7 28 	call	0x51ce	; 0x51ce <utoa>
    401c:	be 01       	movw	r22, r28
    401e:	6f 5f       	subi	r22, 0xFF	; 255
    4020:	7f 4f       	sbci	r23, 0xFF	; 255
    4022:	c8 01       	movw	r24, r16
    4024:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    4028:	c8 01       	movw	r24, r16
    402a:	61 96       	adiw	r28, 0x11	; 17
    402c:	cd bf       	out	0x3d, r28	; 61
    402e:	de bf       	out	0x3e, r29	; 62
    4030:	df 91       	pop	r29
    4032:	cf 91       	pop	r28
    4034:	1f 91       	pop	r17
    4036:	0f 91       	pop	r16
    4038:	ff 90       	pop	r15
    403a:	08 95       	ret

0000403c <_ZN8emstreamlsEm>:
    403c:	df 92       	push	r13
    403e:	ef 92       	push	r14
    4040:	ff 92       	push	r15
    4042:	0f 93       	push	r16
    4044:	1f 93       	push	r17
    4046:	cf 93       	push	r28
    4048:	df 93       	push	r29
    404a:	cd b7       	in	r28, 0x3d	; 61
    404c:	de b7       	in	r29, 0x3e	; 62
    404e:	a1 97       	sbiw	r28, 0x21	; 33
    4050:	cd bf       	out	0x3d, r28	; 61
    4052:	de bf       	out	0x3e, r29	; 62
    4054:	8c 01       	movw	r16, r24
    4056:	d4 2e       	mov	r13, r20
    4058:	e5 2e       	mov	r14, r21
    405a:	f6 2e       	mov	r15, r22
    405c:	97 2f       	mov	r25, r23
    405e:	f8 01       	movw	r30, r16
    4060:	22 81       	ldd	r18, Z+2	; 0x02
    4062:	20 31       	cpi	r18, 0x10	; 16
    4064:	21 f0       	breq	.+8      	; 0x406e <_ZN8emstreamlsEm+0x32>
    4066:	28 30       	cpi	r18, 0x08	; 8
    4068:	11 f0       	breq	.+4      	; 0x406e <_ZN8emstreamlsEm+0x32>
    406a:	22 30       	cpi	r18, 0x02	; 2
    406c:	71 f4       	brne	.+28     	; 0x408a <_ZN8emstreamlsEm+0x4e>
    406e:	69 2f       	mov	r22, r25
    4070:	c8 01       	movw	r24, r16
    4072:	0e 94 60 20 	call	0x40c0	; 0x40c0 <_ZN8emstreamlsEh>
    4076:	6f 2d       	mov	r22, r15
    4078:	0e 94 60 20 	call	0x40c0	; 0x40c0 <_ZN8emstreamlsEh>
    407c:	6e 2d       	mov	r22, r14
    407e:	0e 94 60 20 	call	0x40c0	; 0x40c0 <_ZN8emstreamlsEh>
    4082:	6d 2d       	mov	r22, r13
    4084:	0e 94 60 20 	call	0x40c0	; 0x40c0 <_ZN8emstreamlsEh>
    4088:	0f c0       	rjmp	.+30     	; 0x40a8 <_ZN8emstreamlsEm+0x6c>
extern __inline__ __ATTR_GNU_INLINE__
char *ultoa (unsigned long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__ultoa (unsigned long, char *, int);
	return __ultoa (__val, __s, __radix);
    408a:	30 e0       	ldi	r19, 0x00	; 0
    408c:	ae 01       	movw	r20, r28
    408e:	4f 5f       	subi	r20, 0xFF	; 255
    4090:	5f 4f       	sbci	r21, 0xFF	; 255
    4092:	6d 2d       	mov	r22, r13
    4094:	7e 2d       	mov	r23, r14
    4096:	8f 2d       	mov	r24, r15
    4098:	0e 94 ba 28 	call	0x5174	; 0x5174 <ultoa>
    409c:	be 01       	movw	r22, r28
    409e:	6f 5f       	subi	r22, 0xFF	; 255
    40a0:	7f 4f       	sbci	r23, 0xFF	; 255
    40a2:	c8 01       	movw	r24, r16
    40a4:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    40a8:	c8 01       	movw	r24, r16
    40aa:	a1 96       	adiw	r28, 0x21	; 33
    40ac:	cd bf       	out	0x3d, r28	; 61
    40ae:	de bf       	out	0x3e, r29	; 62
    40b0:	df 91       	pop	r29
    40b2:	cf 91       	pop	r28
    40b4:	1f 91       	pop	r17
    40b6:	0f 91       	pop	r16
    40b8:	ff 90       	pop	r15
    40ba:	ef 90       	pop	r14
    40bc:	df 90       	pop	r13
    40be:	08 95       	ret

000040c0 <_ZN8emstreamlsEh>:
    40c0:	cf 92       	push	r12
    40c2:	df 92       	push	r13
    40c4:	ef 92       	push	r14
    40c6:	ff 92       	push	r15
    40c8:	0f 93       	push	r16
    40ca:	1f 93       	push	r17
    40cc:	cf 93       	push	r28
    40ce:	df 93       	push	r29
    40d0:	cd b7       	in	r28, 0x3d	; 61
    40d2:	de b7       	in	r29, 0x3e	; 62
    40d4:	29 97       	sbiw	r28, 0x09	; 9
    40d6:	cd bf       	out	0x3d, r28	; 61
    40d8:	de bf       	out	0x3e, r29	; 62
    40da:	8c 01       	movw	r16, r24
    40dc:	e6 2e       	mov	r14, r22
    40de:	dc 01       	movw	r26, r24
    40e0:	13 96       	adiw	r26, 0x03	; 3
    40e2:	8c 91       	ld	r24, X
    40e4:	13 97       	sbiw	r26, 0x03	; 3
    40e6:	88 23       	and	r24, r24
    40e8:	41 f0       	breq	.+16     	; 0x40fa <_ZN8emstreamlsEh+0x3a>
    40ea:	ed 91       	ld	r30, X+
    40ec:	fc 91       	ld	r31, X
    40ee:	02 80       	ldd	r0, Z+2	; 0x02
    40f0:	f3 81       	ldd	r31, Z+3	; 0x03
    40f2:	e0 2d       	mov	r30, r0
    40f4:	c8 01       	movw	r24, r16
    40f6:	19 95       	eicall
    40f8:	56 c0       	rjmp	.+172    	; 0x41a6 <_ZN8emstreamlsEh+0xe6>
    40fa:	f8 01       	movw	r30, r16
    40fc:	42 81       	ldd	r20, Z+2	; 0x02
    40fe:	42 30       	cpi	r20, 0x02	; 2
    4100:	19 f5       	brne	.+70     	; 0x4148 <_ZN8emstreamlsEh+0x88>
    4102:	68 94       	set
    4104:	cc 24       	eor	r12, r12
    4106:	c3 f8       	bld	r12, 3
    4108:	d1 2c       	mov	r13, r1
    410a:	68 94       	set
    410c:	ff 24       	eor	r15, r15
    410e:	f7 f8       	bld	r15, 7
    4110:	8e 2d       	mov	r24, r14
    4112:	8f 21       	and	r24, r15
    4114:	51 f0       	breq	.+20     	; 0x412a <_ZN8emstreamlsEh+0x6a>
    4116:	d8 01       	movw	r26, r16
    4118:	ed 91       	ld	r30, X+
    411a:	fc 91       	ld	r31, X
    411c:	02 80       	ldd	r0, Z+2	; 0x02
    411e:	f3 81       	ldd	r31, Z+3	; 0x03
    4120:	e0 2d       	mov	r30, r0
    4122:	61 e3       	ldi	r22, 0x31	; 49
    4124:	c8 01       	movw	r24, r16
    4126:	19 95       	eicall
    4128:	09 c0       	rjmp	.+18     	; 0x413c <_ZN8emstreamlsEh+0x7c>
    412a:	d8 01       	movw	r26, r16
    412c:	ed 91       	ld	r30, X+
    412e:	fc 91       	ld	r31, X
    4130:	02 80       	ldd	r0, Z+2	; 0x02
    4132:	f3 81       	ldd	r31, Z+3	; 0x03
    4134:	e0 2d       	mov	r30, r0
    4136:	60 e3       	ldi	r22, 0x30	; 48
    4138:	c8 01       	movw	r24, r16
    413a:	19 95       	eicall
    413c:	f6 94       	lsr	r15
    413e:	b1 e0       	ldi	r27, 0x01	; 1
    4140:	cb 1a       	sub	r12, r27
    4142:	d1 08       	sbc	r13, r1
    4144:	29 f7       	brne	.-54     	; 0x4110 <_ZN8emstreamlsEh+0x50>
    4146:	2f c0       	rjmp	.+94     	; 0x41a6 <_ZN8emstreamlsEh+0xe6>
    4148:	40 31       	cpi	r20, 0x10	; 16
    414a:	f9 f4       	brne	.+62     	; 0x418a <_ZN8emstreamlsEh+0xca>
    414c:	62 95       	swap	r22
    414e:	6f 70       	andi	r22, 0x0F	; 15
    4150:	01 90       	ld	r0, Z+
    4152:	f0 81       	ld	r31, Z
    4154:	e0 2d       	mov	r30, r0
    4156:	02 80       	ldd	r0, Z+2	; 0x02
    4158:	f3 81       	ldd	r31, Z+3	; 0x03
    415a:	e0 2d       	mov	r30, r0
    415c:	6a 30       	cpi	r22, 0x0A	; 10
    415e:	10 f0       	brcs	.+4      	; 0x4164 <_ZN8emstreamlsEh+0xa4>
    4160:	69 5c       	subi	r22, 0xC9	; 201
    4162:	01 c0       	rjmp	.+2      	; 0x4166 <_ZN8emstreamlsEh+0xa6>
    4164:	60 5d       	subi	r22, 0xD0	; 208
    4166:	c8 01       	movw	r24, r16
    4168:	19 95       	eicall
    416a:	6e 2d       	mov	r22, r14
    416c:	6f 70       	andi	r22, 0x0F	; 15
    416e:	d8 01       	movw	r26, r16
    4170:	ed 91       	ld	r30, X+
    4172:	fc 91       	ld	r31, X
    4174:	02 80       	ldd	r0, Z+2	; 0x02
    4176:	f3 81       	ldd	r31, Z+3	; 0x03
    4178:	e0 2d       	mov	r30, r0
    417a:	6a 30       	cpi	r22, 0x0A	; 10
    417c:	10 f0       	brcs	.+4      	; 0x4182 <_ZN8emstreamlsEh+0xc2>
    417e:	69 5c       	subi	r22, 0xC9	; 201
    4180:	01 c0       	rjmp	.+2      	; 0x4184 <_ZN8emstreamlsEh+0xc4>
    4182:	60 5d       	subi	r22, 0xD0	; 208
    4184:	c8 01       	movw	r24, r16
    4186:	19 95       	eicall
    4188:	0e c0       	rjmp	.+28     	; 0x41a6 <_ZN8emstreamlsEh+0xe6>
extern __inline__ __ATTR_GNU_INLINE__
char *utoa (unsigned int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__utoa (unsigned int, char *, int);
	return __utoa (__val, __s, __radix);
    418a:	50 e0       	ldi	r21, 0x00	; 0
    418c:	be 01       	movw	r22, r28
    418e:	6f 5f       	subi	r22, 0xFF	; 255
    4190:	7f 4f       	sbci	r23, 0xFF	; 255
    4192:	8e 2d       	mov	r24, r14
    4194:	90 e0       	ldi	r25, 0x00	; 0
    4196:	0e 94 e7 28 	call	0x51ce	; 0x51ce <utoa>
    419a:	be 01       	movw	r22, r28
    419c:	6f 5f       	subi	r22, 0xFF	; 255
    419e:	7f 4f       	sbci	r23, 0xFF	; 255
    41a0:	c8 01       	movw	r24, r16
    41a2:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    41a6:	c8 01       	movw	r24, r16
    41a8:	29 96       	adiw	r28, 0x09	; 9
    41aa:	cd bf       	out	0x3d, r28	; 61
    41ac:	de bf       	out	0x3e, r29	; 62
    41ae:	df 91       	pop	r29
    41b0:	cf 91       	pop	r28
    41b2:	1f 91       	pop	r17
    41b4:	0f 91       	pop	r16
    41b6:	ff 90       	pop	r15
    41b8:	ef 90       	pop	r14
    41ba:	df 90       	pop	r13
    41bc:	cf 90       	pop	r12
    41be:	08 95       	ret

000041c0 <_ZN5rs2327putcharEc>:
    41c0:	dc 01       	movw	r26, r24
    41c2:	50 96       	adiw	r26, 0x10	; 16
    41c4:	ed 91       	ld	r30, X+
    41c6:	fc 91       	ld	r31, X
    41c8:	51 97       	sbiw	r26, 0x11	; 17
    41ca:	80 81       	ld	r24, Z
    41cc:	54 96       	adiw	r26, 0x14	; 20
    41ce:	4c 91       	ld	r20, X
    41d0:	54 97       	sbiw	r26, 0x14	; 20
    41d2:	84 23       	and	r24, r20
    41d4:	29 f0       	breq	.+10     	; 0x41e0 <_ZN5rs2327putcharEc+0x20>
    41d6:	09 c0       	rjmp	.+18     	; 0x41ea <_ZN5rs2327putcharEc+0x2a>
    41d8:	21 50       	subi	r18, 0x01	; 1
    41da:	31 09       	sbc	r19, r1
    41dc:	19 f4       	brne	.+6      	; 0x41e4 <_ZN5rs2327putcharEc+0x24>
    41de:	12 c0       	rjmp	.+36     	; 0x4204 <_ZN5rs2327putcharEc+0x44>
    41e0:	21 e2       	ldi	r18, 0x21	; 33
    41e2:	3e e4       	ldi	r19, 0x4E	; 78
    41e4:	90 81       	ld	r25, Z
    41e6:	94 23       	and	r25, r20
    41e8:	b9 f3       	breq	.-18     	; 0x41d8 <_ZN5rs2327putcharEc+0x18>
    41ea:	90 81       	ld	r25, Z
    41ec:	56 96       	adiw	r26, 0x16	; 22
    41ee:	8c 91       	ld	r24, X
    41f0:	56 97       	sbiw	r26, 0x16	; 22
    41f2:	89 2b       	or	r24, r25
    41f4:	80 83       	st	Z, r24
    41f6:	1e 96       	adiw	r26, 0x0e	; 14
    41f8:	ed 91       	ld	r30, X+
    41fa:	fc 91       	ld	r31, X
    41fc:	1f 97       	sbiw	r26, 0x0f	; 15
    41fe:	60 83       	st	Z, r22
    4200:	81 e0       	ldi	r24, 0x01	; 1
    4202:	08 95       	ret
    4204:	80 e0       	ldi	r24, 0x00	; 0
    4206:	08 95       	ret

00004208 <_ZN5rs2327getcharEv>:
    4208:	cf 93       	push	r28
    420a:	df 93       	push	r29
    420c:	fc 01       	movw	r30, r24
    420e:	c1 8d       	ldd	r28, Z+25	; 0x19
    4210:	d2 8d       	ldd	r29, Z+26	; 0x1a
    4212:	28 81       	ld	r18, Y
    4214:	39 81       	ldd	r19, Y+1	; 0x01
    4216:	a3 8d       	ldd	r26, Z+27	; 0x1b
    4218:	b4 8d       	ldd	r27, Z+28	; 0x1c
    421a:	4d 91       	ld	r20, X+
    421c:	5c 91       	ld	r21, X
    421e:	24 17       	cp	r18, r20
    4220:	35 07       	cpc	r19, r21
    4222:	e9 f3       	breq	.-6      	; 0x421e <_ZN5rs2327getcharEv+0x16>
    4224:	a7 89       	ldd	r26, Z+23	; 0x17
    4226:	b0 8d       	ldd	r27, Z+24	; 0x18
    4228:	0d 90       	ld	r0, X+
    422a:	bc 91       	ld	r27, X
    422c:	a0 2d       	mov	r26, r0
    422e:	a2 0f       	add	r26, r18
    4230:	b3 1f       	adc	r27, r19
    4232:	8c 91       	ld	r24, X
    4234:	2f 5f       	subi	r18, 0xFF	; 255
    4236:	3f 4f       	sbci	r19, 0xFF	; 255
    4238:	28 83       	st	Y, r18
    423a:	39 83       	std	Y+1, r19	; 0x01
    423c:	24 36       	cpi	r18, 0x64	; 100
    423e:	31 05       	cpc	r19, r1
    4240:	28 f0       	brcs	.+10     	; 0x424c <_ZN5rs2327getcharEv+0x44>
    4242:	01 8c       	ldd	r0, Z+25	; 0x19
    4244:	f2 8d       	ldd	r31, Z+26	; 0x1a
    4246:	e0 2d       	mov	r30, r0
    4248:	10 82       	st	Z, r1
    424a:	11 82       	std	Z+1, r1	; 0x01
    424c:	90 e0       	ldi	r25, 0x00	; 0
    424e:	df 91       	pop	r29
    4250:	cf 91       	pop	r28
    4252:	08 95       	ret

00004254 <_ZN5rs23214check_for_charEv>:
    4254:	cf 93       	push	r28
    4256:	df 93       	push	r29
    4258:	ec 01       	movw	r28, r24
    425a:	a9 8d       	ldd	r26, Y+25	; 0x19
    425c:	ba 8d       	ldd	r27, Y+26	; 0x1a
    425e:	eb 8d       	ldd	r30, Y+27	; 0x1b
    4260:	fc 8d       	ldd	r31, Y+28	; 0x1c
    4262:	81 e0       	ldi	r24, 0x01	; 1
    4264:	4d 91       	ld	r20, X+
    4266:	5c 91       	ld	r21, X
    4268:	20 81       	ld	r18, Z
    426a:	31 81       	ldd	r19, Z+1	; 0x01
    426c:	42 17       	cp	r20, r18
    426e:	53 07       	cpc	r21, r19
    4270:	09 f4       	brne	.+2      	; 0x4274 <_ZN5rs23214check_for_charEv+0x20>
    4272:	80 e0       	ldi	r24, 0x00	; 0
    4274:	df 91       	pop	r29
    4276:	cf 91       	pop	r28
    4278:	08 95       	ret

0000427a <_ZN5rs23212clear_screenEv>:
    427a:	dc 01       	movw	r26, r24
    427c:	ed 91       	ld	r30, X+
    427e:	fc 91       	ld	r31, X
    4280:	02 80       	ldd	r0, Z+2	; 0x02
    4282:	f3 81       	ldd	r31, Z+3	; 0x03
    4284:	e0 2d       	mov	r30, r0
    4286:	6c e0       	ldi	r22, 0x0C	; 12
    4288:	19 95       	eicall
    428a:	08 95       	ret

0000428c <_ZN5rs232C1EjP12USART_struct>:
    428c:	ef 92       	push	r14
    428e:	ff 92       	push	r15
    4290:	0f 93       	push	r16
    4292:	1f 93       	push	r17
    4294:	cf 93       	push	r28
    4296:	df 93       	push	r29
    4298:	ec 01       	movw	r28, r24
    429a:	7b 01       	movw	r14, r22
    429c:	8a 01       	movw	r16, r20
    429e:	0e 94 35 1f 	call	0x3e6a	; 0x3e6a <_ZN8emstreamC1Ev>
    42a2:	a8 01       	movw	r20, r16
    42a4:	b7 01       	movw	r22, r14
    42a6:	ce 01       	movw	r24, r28
    42a8:	08 96       	adiw	r24, 0x08	; 8
    42aa:	0e 94 7c 1e 	call	0x3cf8	; 0x3cf8 <_ZN7base232C1EjP12USART_struct>
    42ae:	82 ec       	ldi	r24, 0xC2	; 194
    42b0:	90 e2       	ldi	r25, 0x20	; 32
    42b2:	88 83       	st	Y, r24
    42b4:	99 83       	std	Y+1, r25	; 0x01
    42b6:	00 3a       	cpi	r16, 0xA0	; 160
    42b8:	88 e0       	ldi	r24, 0x08	; 8
    42ba:	18 07       	cpc	r17, r24
    42bc:	69 f4       	brne	.+26     	; 0x42d8 <_ZN5rs232C1EjP12USART_struct+0x4c>
    42be:	8c ef       	ldi	r24, 0xFC	; 252
    42c0:	91 e3       	ldi	r25, 0x31	; 49
    42c2:	8f 8b       	std	Y+23, r24	; 0x17
    42c4:	98 8f       	std	Y+24, r25	; 0x18
    42c6:	8e ee       	ldi	r24, 0xEE	; 238
    42c8:	91 e3       	ldi	r25, 0x31	; 49
    42ca:	89 8f       	std	Y+25, r24	; 0x19
    42cc:	9a 8f       	std	Y+26, r25	; 0x1a
    42ce:	80 ee       	ldi	r24, 0xE0	; 224
    42d0:	91 e3       	ldi	r25, 0x31	; 49
    42d2:	8b 8f       	std	Y+27, r24	; 0x1b
    42d4:	9c 8f       	std	Y+28, r25	; 0x1c
    42d6:	64 c0       	rjmp	.+200    	; 0x43a0 <_ZN5rs232C1EjP12USART_struct+0x114>
    42d8:	00 3b       	cpi	r16, 0xB0	; 176
    42da:	e8 e0       	ldi	r30, 0x08	; 8
    42dc:	1e 07       	cpc	r17, r30
    42de:	69 f4       	brne	.+26     	; 0x42fa <_ZN5rs232C1EjP12USART_struct+0x6e>
    42e0:	8a ef       	ldi	r24, 0xFA	; 250
    42e2:	91 e3       	ldi	r25, 0x31	; 49
    42e4:	8f 8b       	std	Y+23, r24	; 0x17
    42e6:	98 8f       	std	Y+24, r25	; 0x18
    42e8:	8c ee       	ldi	r24, 0xEC	; 236
    42ea:	91 e3       	ldi	r25, 0x31	; 49
    42ec:	89 8f       	std	Y+25, r24	; 0x19
    42ee:	9a 8f       	std	Y+26, r25	; 0x1a
    42f0:	8e ed       	ldi	r24, 0xDE	; 222
    42f2:	91 e3       	ldi	r25, 0x31	; 49
    42f4:	8b 8f       	std	Y+27, r24	; 0x1b
    42f6:	9c 8f       	std	Y+28, r25	; 0x1c
    42f8:	53 c0       	rjmp	.+166    	; 0x43a0 <_ZN5rs232C1EjP12USART_struct+0x114>
    42fa:	00 3a       	cpi	r16, 0xA0	; 160
    42fc:	f9 e0       	ldi	r31, 0x09	; 9
    42fe:	1f 07       	cpc	r17, r31
    4300:	69 f4       	brne	.+26     	; 0x431c <_ZN5rs232C1EjP12USART_struct+0x90>
    4302:	88 ef       	ldi	r24, 0xF8	; 248
    4304:	91 e3       	ldi	r25, 0x31	; 49
    4306:	8f 8b       	std	Y+23, r24	; 0x17
    4308:	98 8f       	std	Y+24, r25	; 0x18
    430a:	8a ee       	ldi	r24, 0xEA	; 234
    430c:	91 e3       	ldi	r25, 0x31	; 49
    430e:	89 8f       	std	Y+25, r24	; 0x19
    4310:	9a 8f       	std	Y+26, r25	; 0x1a
    4312:	8c ed       	ldi	r24, 0xDC	; 220
    4314:	91 e3       	ldi	r25, 0x31	; 49
    4316:	8b 8f       	std	Y+27, r24	; 0x1b
    4318:	9c 8f       	std	Y+28, r25	; 0x1c
    431a:	42 c0       	rjmp	.+132    	; 0x43a0 <_ZN5rs232C1EjP12USART_struct+0x114>
    431c:	00 3b       	cpi	r16, 0xB0	; 176
    431e:	89 e0       	ldi	r24, 0x09	; 9
    4320:	18 07       	cpc	r17, r24
    4322:	69 f4       	brne	.+26     	; 0x433e <_ZN5rs232C1EjP12USART_struct+0xb2>
    4324:	86 ef       	ldi	r24, 0xF6	; 246
    4326:	91 e3       	ldi	r25, 0x31	; 49
    4328:	8f 8b       	std	Y+23, r24	; 0x17
    432a:	98 8f       	std	Y+24, r25	; 0x18
    432c:	88 ee       	ldi	r24, 0xE8	; 232
    432e:	91 e3       	ldi	r25, 0x31	; 49
    4330:	89 8f       	std	Y+25, r24	; 0x19
    4332:	9a 8f       	std	Y+26, r25	; 0x1a
    4334:	8a ed       	ldi	r24, 0xDA	; 218
    4336:	91 e3       	ldi	r25, 0x31	; 49
    4338:	8b 8f       	std	Y+27, r24	; 0x1b
    433a:	9c 8f       	std	Y+28, r25	; 0x1c
    433c:	31 c0       	rjmp	.+98     	; 0x43a0 <_ZN5rs232C1EjP12USART_struct+0x114>
    433e:	00 3a       	cpi	r16, 0xA0	; 160
    4340:	ea e0       	ldi	r30, 0x0A	; 10
    4342:	1e 07       	cpc	r17, r30
    4344:	69 f4       	brne	.+26     	; 0x4360 <_ZN5rs232C1EjP12USART_struct+0xd4>
    4346:	84 ef       	ldi	r24, 0xF4	; 244
    4348:	91 e3       	ldi	r25, 0x31	; 49
    434a:	8f 8b       	std	Y+23, r24	; 0x17
    434c:	98 8f       	std	Y+24, r25	; 0x18
    434e:	86 ee       	ldi	r24, 0xE6	; 230
    4350:	91 e3       	ldi	r25, 0x31	; 49
    4352:	89 8f       	std	Y+25, r24	; 0x19
    4354:	9a 8f       	std	Y+26, r25	; 0x1a
    4356:	88 ed       	ldi	r24, 0xD8	; 216
    4358:	91 e3       	ldi	r25, 0x31	; 49
    435a:	8b 8f       	std	Y+27, r24	; 0x1b
    435c:	9c 8f       	std	Y+28, r25	; 0x1c
    435e:	20 c0       	rjmp	.+64     	; 0x43a0 <_ZN5rs232C1EjP12USART_struct+0x114>
    4360:	00 3b       	cpi	r16, 0xB0	; 176
    4362:	fa e0       	ldi	r31, 0x0A	; 10
    4364:	1f 07       	cpc	r17, r31
    4366:	69 f4       	brne	.+26     	; 0x4382 <_ZN5rs232C1EjP12USART_struct+0xf6>
    4368:	82 ef       	ldi	r24, 0xF2	; 242
    436a:	91 e3       	ldi	r25, 0x31	; 49
    436c:	8f 8b       	std	Y+23, r24	; 0x17
    436e:	98 8f       	std	Y+24, r25	; 0x18
    4370:	84 ee       	ldi	r24, 0xE4	; 228
    4372:	91 e3       	ldi	r25, 0x31	; 49
    4374:	89 8f       	std	Y+25, r24	; 0x19
    4376:	9a 8f       	std	Y+26, r25	; 0x1a
    4378:	86 ed       	ldi	r24, 0xD6	; 214
    437a:	91 e3       	ldi	r25, 0x31	; 49
    437c:	8b 8f       	std	Y+27, r24	; 0x1b
    437e:	9c 8f       	std	Y+28, r25	; 0x1c
    4380:	0f c0       	rjmp	.+30     	; 0x43a0 <_ZN5rs232C1EjP12USART_struct+0x114>
    4382:	00 3a       	cpi	r16, 0xA0	; 160
    4384:	1b 40       	sbci	r17, 0x0B	; 11
    4386:	61 f4       	brne	.+24     	; 0x43a0 <_ZN5rs232C1EjP12USART_struct+0x114>
    4388:	80 ef       	ldi	r24, 0xF0	; 240
    438a:	91 e3       	ldi	r25, 0x31	; 49
    438c:	8f 8b       	std	Y+23, r24	; 0x17
    438e:	98 8f       	std	Y+24, r25	; 0x18
    4390:	82 ee       	ldi	r24, 0xE2	; 226
    4392:	91 e3       	ldi	r25, 0x31	; 49
    4394:	89 8f       	std	Y+25, r24	; 0x19
    4396:	9a 8f       	std	Y+26, r25	; 0x1a
    4398:	84 ed       	ldi	r24, 0xD4	; 212
    439a:	91 e3       	ldi	r25, 0x31	; 49
    439c:	8b 8f       	std	Y+27, r24	; 0x1b
    439e:	9c 8f       	std	Y+28, r25	; 0x1c
    43a0:	0f 89       	ldd	r16, Y+23	; 0x17
    43a2:	18 8d       	ldd	r17, Y+24	; 0x18
    43a4:	84 e6       	ldi	r24, 0x64	; 100
    43a6:	90 e0       	ldi	r25, 0x00	; 0
    43a8:	0e 94 78 1e 	call	0x3cf0	; 0x3cf0 <_Znaj>
    43ac:	f8 01       	movw	r30, r16
    43ae:	80 83       	st	Z, r24
    43b0:	91 83       	std	Z+1, r25	; 0x01
    43b2:	e9 8d       	ldd	r30, Y+25	; 0x19
    43b4:	fa 8d       	ldd	r31, Y+26	; 0x1a
    43b6:	10 82       	st	Z, r1
    43b8:	11 82       	std	Z+1, r1	; 0x01
    43ba:	eb 8d       	ldd	r30, Y+27	; 0x1b
    43bc:	fc 8d       	ldd	r31, Y+28	; 0x1c
    43be:	10 82       	st	Z, r1
    43c0:	11 82       	std	Z+1, r1	; 0x01
    43c2:	df 91       	pop	r29
    43c4:	cf 91       	pop	r28
    43c6:	1f 91       	pop	r17
    43c8:	0f 91       	pop	r16
    43ca:	ff 90       	pop	r15
    43cc:	ef 90       	pop	r14
    43ce:	08 95       	ret

000043d0 <__vector_25>:
    43d0:	1f 92       	push	r1
    43d2:	0f 92       	push	r0
    43d4:	0f b6       	in	r0, 0x3f	; 63
    43d6:	0f 92       	push	r0
    43d8:	11 24       	eor	r1, r1
    43da:	0b b6       	in	r0, 0x3b	; 59
    43dc:	0f 92       	push	r0
    43de:	2f 93       	push	r18
    43e0:	3f 93       	push	r19
    43e2:	8f 93       	push	r24
    43e4:	9f 93       	push	r25
    43e6:	ef 93       	push	r30
    43e8:	ff 93       	push	r31
    43ea:	20 91 a0 08 	lds	r18, 0x08A0	; 0x8008a0 <__TEXT_REGION_LENGTH__+0x7008a0>
    43ee:	e0 91 fc 31 	lds	r30, 0x31FC	; 0x8031fc <rcvC0_buffer>
    43f2:	f0 91 fd 31 	lds	r31, 0x31FD	; 0x8031fd <rcvC0_buffer+0x1>
    43f6:	80 91 e0 31 	lds	r24, 0x31E0	; 0x8031e0 <rcvC0_write_index>
    43fa:	90 91 e1 31 	lds	r25, 0x31E1	; 0x8031e1 <rcvC0_write_index+0x1>
    43fe:	e8 0f       	add	r30, r24
    4400:	f9 1f       	adc	r31, r25
    4402:	20 83       	st	Z, r18
    4404:	80 91 e0 31 	lds	r24, 0x31E0	; 0x8031e0 <rcvC0_write_index>
    4408:	90 91 e1 31 	lds	r25, 0x31E1	; 0x8031e1 <rcvC0_write_index+0x1>
    440c:	01 96       	adiw	r24, 0x01	; 1
    440e:	84 36       	cpi	r24, 0x64	; 100
    4410:	91 05       	cpc	r25, r1
    4412:	60 f4       	brcc	.+24     	; 0x442c <__vector_25+0x5c>
    4414:	80 93 e0 31 	sts	0x31E0, r24	; 0x8031e0 <rcvC0_write_index>
    4418:	90 93 e1 31 	sts	0x31E1, r25	; 0x8031e1 <rcvC0_write_index+0x1>
    441c:	20 91 ee 31 	lds	r18, 0x31EE	; 0x8031ee <rcvC0_read_index>
    4420:	30 91 ef 31 	lds	r19, 0x31EF	; 0x8031ef <rcvC0_read_index+0x1>
    4424:	82 17       	cp	r24, r18
    4426:	93 07       	cpc	r25, r19
    4428:	f1 f4       	brne	.+60     	; 0x4466 <__vector_25+0x96>
    442a:	0c c0       	rjmp	.+24     	; 0x4444 <__vector_25+0x74>
    442c:	10 92 e0 31 	sts	0x31E0, r1	; 0x8031e0 <rcvC0_write_index>
    4430:	10 92 e1 31 	sts	0x31E1, r1	; 0x8031e1 <rcvC0_write_index+0x1>
    4434:	80 91 ee 31 	lds	r24, 0x31EE	; 0x8031ee <rcvC0_read_index>
    4438:	90 91 ef 31 	lds	r25, 0x31EF	; 0x8031ef <rcvC0_read_index+0x1>
    443c:	18 16       	cp	r1, r24
    443e:	19 06       	cpc	r1, r25
    4440:	91 f4       	brne	.+36     	; 0x4466 <__vector_25+0x96>
    4442:	0e c0       	rjmp	.+28     	; 0x4460 <__vector_25+0x90>
    4444:	01 96       	adiw	r24, 0x01	; 1
    4446:	84 36       	cpi	r24, 0x64	; 100
    4448:	91 05       	cpc	r25, r1
    444a:	28 f4       	brcc	.+10     	; 0x4456 <__vector_25+0x86>
    444c:	80 93 ee 31 	sts	0x31EE, r24	; 0x8031ee <rcvC0_read_index>
    4450:	90 93 ef 31 	sts	0x31EF, r25	; 0x8031ef <rcvC0_read_index+0x1>
    4454:	08 c0       	rjmp	.+16     	; 0x4466 <__vector_25+0x96>
    4456:	10 92 ee 31 	sts	0x31EE, r1	; 0x8031ee <rcvC0_read_index>
    445a:	10 92 ef 31 	sts	0x31EF, r1	; 0x8031ef <rcvC0_read_index+0x1>
    445e:	03 c0       	rjmp	.+6      	; 0x4466 <__vector_25+0x96>
    4460:	81 e0       	ldi	r24, 0x01	; 1
    4462:	90 e0       	ldi	r25, 0x00	; 0
    4464:	f3 cf       	rjmp	.-26     	; 0x444c <__vector_25+0x7c>
    4466:	ff 91       	pop	r31
    4468:	ef 91       	pop	r30
    446a:	9f 91       	pop	r25
    446c:	8f 91       	pop	r24
    446e:	3f 91       	pop	r19
    4470:	2f 91       	pop	r18
    4472:	0f 90       	pop	r0
    4474:	0b be       	out	0x3b, r0	; 59
    4476:	0f 90       	pop	r0
    4478:	0f be       	out	0x3f, r0	; 63
    447a:	0f 90       	pop	r0
    447c:	1f 90       	pop	r1
    447e:	18 95       	reti

00004480 <__vector_28>:
    4480:	1f 92       	push	r1
    4482:	0f 92       	push	r0
    4484:	0f b6       	in	r0, 0x3f	; 63
    4486:	0f 92       	push	r0
    4488:	11 24       	eor	r1, r1
    448a:	0b b6       	in	r0, 0x3b	; 59
    448c:	0f 92       	push	r0
    448e:	2f 93       	push	r18
    4490:	3f 93       	push	r19
    4492:	8f 93       	push	r24
    4494:	9f 93       	push	r25
    4496:	ef 93       	push	r30
    4498:	ff 93       	push	r31
    449a:	20 91 b0 08 	lds	r18, 0x08B0	; 0x8008b0 <__TEXT_REGION_LENGTH__+0x7008b0>
    449e:	e0 91 fa 31 	lds	r30, 0x31FA	; 0x8031fa <rcvC1_buffer>
    44a2:	f0 91 fb 31 	lds	r31, 0x31FB	; 0x8031fb <rcvC1_buffer+0x1>
    44a6:	80 91 de 31 	lds	r24, 0x31DE	; 0x8031de <rcvC1_write_index>
    44aa:	90 91 df 31 	lds	r25, 0x31DF	; 0x8031df <rcvC1_write_index+0x1>
    44ae:	e8 0f       	add	r30, r24
    44b0:	f9 1f       	adc	r31, r25
    44b2:	20 83       	st	Z, r18
    44b4:	80 91 de 31 	lds	r24, 0x31DE	; 0x8031de <rcvC1_write_index>
    44b8:	90 91 df 31 	lds	r25, 0x31DF	; 0x8031df <rcvC1_write_index+0x1>
    44bc:	01 96       	adiw	r24, 0x01	; 1
    44be:	84 36       	cpi	r24, 0x64	; 100
    44c0:	91 05       	cpc	r25, r1
    44c2:	60 f4       	brcc	.+24     	; 0x44dc <__vector_28+0x5c>
    44c4:	80 93 de 31 	sts	0x31DE, r24	; 0x8031de <rcvC1_write_index>
    44c8:	90 93 df 31 	sts	0x31DF, r25	; 0x8031df <rcvC1_write_index+0x1>
    44cc:	20 91 ec 31 	lds	r18, 0x31EC	; 0x8031ec <rcvC1_read_index>
    44d0:	30 91 ed 31 	lds	r19, 0x31ED	; 0x8031ed <rcvC1_read_index+0x1>
    44d4:	82 17       	cp	r24, r18
    44d6:	93 07       	cpc	r25, r19
    44d8:	f1 f4       	brne	.+60     	; 0x4516 <__vector_28+0x96>
    44da:	0c c0       	rjmp	.+24     	; 0x44f4 <__vector_28+0x74>
    44dc:	10 92 de 31 	sts	0x31DE, r1	; 0x8031de <rcvC1_write_index>
    44e0:	10 92 df 31 	sts	0x31DF, r1	; 0x8031df <rcvC1_write_index+0x1>
    44e4:	80 91 ec 31 	lds	r24, 0x31EC	; 0x8031ec <rcvC1_read_index>
    44e8:	90 91 ed 31 	lds	r25, 0x31ED	; 0x8031ed <rcvC1_read_index+0x1>
    44ec:	18 16       	cp	r1, r24
    44ee:	19 06       	cpc	r1, r25
    44f0:	91 f4       	brne	.+36     	; 0x4516 <__vector_28+0x96>
    44f2:	0e c0       	rjmp	.+28     	; 0x4510 <__vector_28+0x90>
    44f4:	01 96       	adiw	r24, 0x01	; 1
    44f6:	84 36       	cpi	r24, 0x64	; 100
    44f8:	91 05       	cpc	r25, r1
    44fa:	28 f4       	brcc	.+10     	; 0x4506 <__vector_28+0x86>
    44fc:	80 93 ec 31 	sts	0x31EC, r24	; 0x8031ec <rcvC1_read_index>
    4500:	90 93 ed 31 	sts	0x31ED, r25	; 0x8031ed <rcvC1_read_index+0x1>
    4504:	08 c0       	rjmp	.+16     	; 0x4516 <__vector_28+0x96>
    4506:	10 92 ec 31 	sts	0x31EC, r1	; 0x8031ec <rcvC1_read_index>
    450a:	10 92 ed 31 	sts	0x31ED, r1	; 0x8031ed <rcvC1_read_index+0x1>
    450e:	03 c0       	rjmp	.+6      	; 0x4516 <__vector_28+0x96>
    4510:	81 e0       	ldi	r24, 0x01	; 1
    4512:	90 e0       	ldi	r25, 0x00	; 0
    4514:	f3 cf       	rjmp	.-26     	; 0x44fc <__vector_28+0x7c>
    4516:	ff 91       	pop	r31
    4518:	ef 91       	pop	r30
    451a:	9f 91       	pop	r25
    451c:	8f 91       	pop	r24
    451e:	3f 91       	pop	r19
    4520:	2f 91       	pop	r18
    4522:	0f 90       	pop	r0
    4524:	0b be       	out	0x3b, r0	; 59
    4526:	0f 90       	pop	r0
    4528:	0f be       	out	0x3f, r0	; 63
    452a:	0f 90       	pop	r0
    452c:	1f 90       	pop	r1
    452e:	18 95       	reti

00004530 <__vector_88>:
    4530:	1f 92       	push	r1
    4532:	0f 92       	push	r0
    4534:	0f b6       	in	r0, 0x3f	; 63
    4536:	0f 92       	push	r0
    4538:	11 24       	eor	r1, r1
    453a:	0b b6       	in	r0, 0x3b	; 59
    453c:	0f 92       	push	r0
    453e:	2f 93       	push	r18
    4540:	3f 93       	push	r19
    4542:	8f 93       	push	r24
    4544:	9f 93       	push	r25
    4546:	ef 93       	push	r30
    4548:	ff 93       	push	r31
    454a:	20 91 a0 09 	lds	r18, 0x09A0	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
    454e:	e0 91 f8 31 	lds	r30, 0x31F8	; 0x8031f8 <rcvD0_buffer>
    4552:	f0 91 f9 31 	lds	r31, 0x31F9	; 0x8031f9 <rcvD0_buffer+0x1>
    4556:	80 91 dc 31 	lds	r24, 0x31DC	; 0x8031dc <rcvD0_write_index>
    455a:	90 91 dd 31 	lds	r25, 0x31DD	; 0x8031dd <rcvD0_write_index+0x1>
    455e:	e8 0f       	add	r30, r24
    4560:	f9 1f       	adc	r31, r25
    4562:	20 83       	st	Z, r18
    4564:	80 91 dc 31 	lds	r24, 0x31DC	; 0x8031dc <rcvD0_write_index>
    4568:	90 91 dd 31 	lds	r25, 0x31DD	; 0x8031dd <rcvD0_write_index+0x1>
    456c:	01 96       	adiw	r24, 0x01	; 1
    456e:	84 36       	cpi	r24, 0x64	; 100
    4570:	91 05       	cpc	r25, r1
    4572:	60 f4       	brcc	.+24     	; 0x458c <__vector_88+0x5c>
    4574:	80 93 dc 31 	sts	0x31DC, r24	; 0x8031dc <rcvD0_write_index>
    4578:	90 93 dd 31 	sts	0x31DD, r25	; 0x8031dd <rcvD0_write_index+0x1>
    457c:	20 91 ea 31 	lds	r18, 0x31EA	; 0x8031ea <rcvD0_read_index>
    4580:	30 91 eb 31 	lds	r19, 0x31EB	; 0x8031eb <rcvD0_read_index+0x1>
    4584:	82 17       	cp	r24, r18
    4586:	93 07       	cpc	r25, r19
    4588:	f1 f4       	brne	.+60     	; 0x45c6 <__vector_88+0x96>
    458a:	0c c0       	rjmp	.+24     	; 0x45a4 <__vector_88+0x74>
    458c:	10 92 dc 31 	sts	0x31DC, r1	; 0x8031dc <rcvD0_write_index>
    4590:	10 92 dd 31 	sts	0x31DD, r1	; 0x8031dd <rcvD0_write_index+0x1>
    4594:	80 91 ea 31 	lds	r24, 0x31EA	; 0x8031ea <rcvD0_read_index>
    4598:	90 91 eb 31 	lds	r25, 0x31EB	; 0x8031eb <rcvD0_read_index+0x1>
    459c:	18 16       	cp	r1, r24
    459e:	19 06       	cpc	r1, r25
    45a0:	91 f4       	brne	.+36     	; 0x45c6 <__vector_88+0x96>
    45a2:	0e c0       	rjmp	.+28     	; 0x45c0 <__vector_88+0x90>
    45a4:	01 96       	adiw	r24, 0x01	; 1
    45a6:	84 36       	cpi	r24, 0x64	; 100
    45a8:	91 05       	cpc	r25, r1
    45aa:	28 f4       	brcc	.+10     	; 0x45b6 <__vector_88+0x86>
    45ac:	80 93 ea 31 	sts	0x31EA, r24	; 0x8031ea <rcvD0_read_index>
    45b0:	90 93 eb 31 	sts	0x31EB, r25	; 0x8031eb <rcvD0_read_index+0x1>
    45b4:	08 c0       	rjmp	.+16     	; 0x45c6 <__vector_88+0x96>
    45b6:	10 92 ea 31 	sts	0x31EA, r1	; 0x8031ea <rcvD0_read_index>
    45ba:	10 92 eb 31 	sts	0x31EB, r1	; 0x8031eb <rcvD0_read_index+0x1>
    45be:	03 c0       	rjmp	.+6      	; 0x45c6 <__vector_88+0x96>
    45c0:	81 e0       	ldi	r24, 0x01	; 1
    45c2:	90 e0       	ldi	r25, 0x00	; 0
    45c4:	f3 cf       	rjmp	.-26     	; 0x45ac <__vector_88+0x7c>
    45c6:	ff 91       	pop	r31
    45c8:	ef 91       	pop	r30
    45ca:	9f 91       	pop	r25
    45cc:	8f 91       	pop	r24
    45ce:	3f 91       	pop	r19
    45d0:	2f 91       	pop	r18
    45d2:	0f 90       	pop	r0
    45d4:	0b be       	out	0x3b, r0	; 59
    45d6:	0f 90       	pop	r0
    45d8:	0f be       	out	0x3f, r0	; 63
    45da:	0f 90       	pop	r0
    45dc:	1f 90       	pop	r1
    45de:	18 95       	reti

000045e0 <__vector_91>:
    45e0:	1f 92       	push	r1
    45e2:	0f 92       	push	r0
    45e4:	0f b6       	in	r0, 0x3f	; 63
    45e6:	0f 92       	push	r0
    45e8:	11 24       	eor	r1, r1
    45ea:	0b b6       	in	r0, 0x3b	; 59
    45ec:	0f 92       	push	r0
    45ee:	2f 93       	push	r18
    45f0:	3f 93       	push	r19
    45f2:	8f 93       	push	r24
    45f4:	9f 93       	push	r25
    45f6:	ef 93       	push	r30
    45f8:	ff 93       	push	r31
    45fa:	20 91 b0 09 	lds	r18, 0x09B0	; 0x8009b0 <__TEXT_REGION_LENGTH__+0x7009b0>
    45fe:	e0 91 f6 31 	lds	r30, 0x31F6	; 0x8031f6 <rcvD1_buffer>
    4602:	f0 91 f7 31 	lds	r31, 0x31F7	; 0x8031f7 <rcvD1_buffer+0x1>
    4606:	80 91 da 31 	lds	r24, 0x31DA	; 0x8031da <rcvD1_write_index>
    460a:	90 91 db 31 	lds	r25, 0x31DB	; 0x8031db <rcvD1_write_index+0x1>
    460e:	e8 0f       	add	r30, r24
    4610:	f9 1f       	adc	r31, r25
    4612:	20 83       	st	Z, r18
    4614:	80 91 da 31 	lds	r24, 0x31DA	; 0x8031da <rcvD1_write_index>
    4618:	90 91 db 31 	lds	r25, 0x31DB	; 0x8031db <rcvD1_write_index+0x1>
    461c:	01 96       	adiw	r24, 0x01	; 1
    461e:	84 36       	cpi	r24, 0x64	; 100
    4620:	91 05       	cpc	r25, r1
    4622:	60 f4       	brcc	.+24     	; 0x463c <__vector_91+0x5c>
    4624:	80 93 da 31 	sts	0x31DA, r24	; 0x8031da <rcvD1_write_index>
    4628:	90 93 db 31 	sts	0x31DB, r25	; 0x8031db <rcvD1_write_index+0x1>
    462c:	20 91 e8 31 	lds	r18, 0x31E8	; 0x8031e8 <rcvD1_read_index>
    4630:	30 91 e9 31 	lds	r19, 0x31E9	; 0x8031e9 <rcvD1_read_index+0x1>
    4634:	82 17       	cp	r24, r18
    4636:	93 07       	cpc	r25, r19
    4638:	f1 f4       	brne	.+60     	; 0x4676 <__vector_91+0x96>
    463a:	0c c0       	rjmp	.+24     	; 0x4654 <__vector_91+0x74>
    463c:	10 92 da 31 	sts	0x31DA, r1	; 0x8031da <rcvD1_write_index>
    4640:	10 92 db 31 	sts	0x31DB, r1	; 0x8031db <rcvD1_write_index+0x1>
    4644:	80 91 e8 31 	lds	r24, 0x31E8	; 0x8031e8 <rcvD1_read_index>
    4648:	90 91 e9 31 	lds	r25, 0x31E9	; 0x8031e9 <rcvD1_read_index+0x1>
    464c:	18 16       	cp	r1, r24
    464e:	19 06       	cpc	r1, r25
    4650:	91 f4       	brne	.+36     	; 0x4676 <__vector_91+0x96>
    4652:	0e c0       	rjmp	.+28     	; 0x4670 <__vector_91+0x90>
    4654:	01 96       	adiw	r24, 0x01	; 1
    4656:	84 36       	cpi	r24, 0x64	; 100
    4658:	91 05       	cpc	r25, r1
    465a:	28 f4       	brcc	.+10     	; 0x4666 <__vector_91+0x86>
    465c:	80 93 e8 31 	sts	0x31E8, r24	; 0x8031e8 <rcvD1_read_index>
    4660:	90 93 e9 31 	sts	0x31E9, r25	; 0x8031e9 <rcvD1_read_index+0x1>
    4664:	08 c0       	rjmp	.+16     	; 0x4676 <__vector_91+0x96>
    4666:	10 92 e8 31 	sts	0x31E8, r1	; 0x8031e8 <rcvD1_read_index>
    466a:	10 92 e9 31 	sts	0x31E9, r1	; 0x8031e9 <rcvD1_read_index+0x1>
    466e:	03 c0       	rjmp	.+6      	; 0x4676 <__vector_91+0x96>
    4670:	81 e0       	ldi	r24, 0x01	; 1
    4672:	90 e0       	ldi	r25, 0x00	; 0
    4674:	f3 cf       	rjmp	.-26     	; 0x465c <__vector_91+0x7c>
    4676:	ff 91       	pop	r31
    4678:	ef 91       	pop	r30
    467a:	9f 91       	pop	r25
    467c:	8f 91       	pop	r24
    467e:	3f 91       	pop	r19
    4680:	2f 91       	pop	r18
    4682:	0f 90       	pop	r0
    4684:	0b be       	out	0x3b, r0	; 59
    4686:	0f 90       	pop	r0
    4688:	0f be       	out	0x3f, r0	; 63
    468a:	0f 90       	pop	r0
    468c:	1f 90       	pop	r1
    468e:	18 95       	reti

00004690 <__vector_58>:
    4690:	1f 92       	push	r1
    4692:	0f 92       	push	r0
    4694:	0f b6       	in	r0, 0x3f	; 63
    4696:	0f 92       	push	r0
    4698:	11 24       	eor	r1, r1
    469a:	0b b6       	in	r0, 0x3b	; 59
    469c:	0f 92       	push	r0
    469e:	2f 93       	push	r18
    46a0:	3f 93       	push	r19
    46a2:	8f 93       	push	r24
    46a4:	9f 93       	push	r25
    46a6:	ef 93       	push	r30
    46a8:	ff 93       	push	r31
    46aa:	20 91 a0 0a 	lds	r18, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x700aa0>
    46ae:	e0 91 f4 31 	lds	r30, 0x31F4	; 0x8031f4 <rcvE0_buffer>
    46b2:	f0 91 f5 31 	lds	r31, 0x31F5	; 0x8031f5 <rcvE0_buffer+0x1>
    46b6:	80 91 d8 31 	lds	r24, 0x31D8	; 0x8031d8 <rcvE0_write_index>
    46ba:	90 91 d9 31 	lds	r25, 0x31D9	; 0x8031d9 <rcvE0_write_index+0x1>
    46be:	e8 0f       	add	r30, r24
    46c0:	f9 1f       	adc	r31, r25
    46c2:	20 83       	st	Z, r18
    46c4:	80 91 d8 31 	lds	r24, 0x31D8	; 0x8031d8 <rcvE0_write_index>
    46c8:	90 91 d9 31 	lds	r25, 0x31D9	; 0x8031d9 <rcvE0_write_index+0x1>
    46cc:	01 96       	adiw	r24, 0x01	; 1
    46ce:	84 36       	cpi	r24, 0x64	; 100
    46d0:	91 05       	cpc	r25, r1
    46d2:	60 f4       	brcc	.+24     	; 0x46ec <__vector_58+0x5c>
    46d4:	80 93 d8 31 	sts	0x31D8, r24	; 0x8031d8 <rcvE0_write_index>
    46d8:	90 93 d9 31 	sts	0x31D9, r25	; 0x8031d9 <rcvE0_write_index+0x1>
    46dc:	20 91 e6 31 	lds	r18, 0x31E6	; 0x8031e6 <rcvE0_read_index>
    46e0:	30 91 e7 31 	lds	r19, 0x31E7	; 0x8031e7 <rcvE0_read_index+0x1>
    46e4:	82 17       	cp	r24, r18
    46e6:	93 07       	cpc	r25, r19
    46e8:	f1 f4       	brne	.+60     	; 0x4726 <__vector_58+0x96>
    46ea:	0c c0       	rjmp	.+24     	; 0x4704 <__vector_58+0x74>
    46ec:	10 92 d8 31 	sts	0x31D8, r1	; 0x8031d8 <rcvE0_write_index>
    46f0:	10 92 d9 31 	sts	0x31D9, r1	; 0x8031d9 <rcvE0_write_index+0x1>
    46f4:	80 91 e6 31 	lds	r24, 0x31E6	; 0x8031e6 <rcvE0_read_index>
    46f8:	90 91 e7 31 	lds	r25, 0x31E7	; 0x8031e7 <rcvE0_read_index+0x1>
    46fc:	18 16       	cp	r1, r24
    46fe:	19 06       	cpc	r1, r25
    4700:	91 f4       	brne	.+36     	; 0x4726 <__vector_58+0x96>
    4702:	0e c0       	rjmp	.+28     	; 0x4720 <__vector_58+0x90>
    4704:	01 96       	adiw	r24, 0x01	; 1
    4706:	84 36       	cpi	r24, 0x64	; 100
    4708:	91 05       	cpc	r25, r1
    470a:	28 f4       	brcc	.+10     	; 0x4716 <__vector_58+0x86>
    470c:	80 93 e6 31 	sts	0x31E6, r24	; 0x8031e6 <rcvE0_read_index>
    4710:	90 93 e7 31 	sts	0x31E7, r25	; 0x8031e7 <rcvE0_read_index+0x1>
    4714:	08 c0       	rjmp	.+16     	; 0x4726 <__vector_58+0x96>
    4716:	10 92 e6 31 	sts	0x31E6, r1	; 0x8031e6 <rcvE0_read_index>
    471a:	10 92 e7 31 	sts	0x31E7, r1	; 0x8031e7 <rcvE0_read_index+0x1>
    471e:	03 c0       	rjmp	.+6      	; 0x4726 <__vector_58+0x96>
    4720:	81 e0       	ldi	r24, 0x01	; 1
    4722:	90 e0       	ldi	r25, 0x00	; 0
    4724:	f3 cf       	rjmp	.-26     	; 0x470c <__vector_58+0x7c>
    4726:	ff 91       	pop	r31
    4728:	ef 91       	pop	r30
    472a:	9f 91       	pop	r25
    472c:	8f 91       	pop	r24
    472e:	3f 91       	pop	r19
    4730:	2f 91       	pop	r18
    4732:	0f 90       	pop	r0
    4734:	0b be       	out	0x3b, r0	; 59
    4736:	0f 90       	pop	r0
    4738:	0f be       	out	0x3f, r0	; 63
    473a:	0f 90       	pop	r0
    473c:	1f 90       	pop	r1
    473e:	18 95       	reti

00004740 <__vector_61>:
    4740:	1f 92       	push	r1
    4742:	0f 92       	push	r0
    4744:	0f b6       	in	r0, 0x3f	; 63
    4746:	0f 92       	push	r0
    4748:	11 24       	eor	r1, r1
    474a:	0b b6       	in	r0, 0x3b	; 59
    474c:	0f 92       	push	r0
    474e:	2f 93       	push	r18
    4750:	3f 93       	push	r19
    4752:	8f 93       	push	r24
    4754:	9f 93       	push	r25
    4756:	ef 93       	push	r30
    4758:	ff 93       	push	r31
    475a:	20 91 b0 0a 	lds	r18, 0x0AB0	; 0x800ab0 <__TEXT_REGION_LENGTH__+0x700ab0>
    475e:	e0 91 f2 31 	lds	r30, 0x31F2	; 0x8031f2 <rcvE1_buffer>
    4762:	f0 91 f3 31 	lds	r31, 0x31F3	; 0x8031f3 <rcvE1_buffer+0x1>
    4766:	80 91 d6 31 	lds	r24, 0x31D6	; 0x8031d6 <rcvE1_write_index>
    476a:	90 91 d7 31 	lds	r25, 0x31D7	; 0x8031d7 <rcvE1_write_index+0x1>
    476e:	e8 0f       	add	r30, r24
    4770:	f9 1f       	adc	r31, r25
    4772:	20 83       	st	Z, r18
    4774:	80 91 d6 31 	lds	r24, 0x31D6	; 0x8031d6 <rcvE1_write_index>
    4778:	90 91 d7 31 	lds	r25, 0x31D7	; 0x8031d7 <rcvE1_write_index+0x1>
    477c:	01 96       	adiw	r24, 0x01	; 1
    477e:	84 36       	cpi	r24, 0x64	; 100
    4780:	91 05       	cpc	r25, r1
    4782:	60 f4       	brcc	.+24     	; 0x479c <__vector_61+0x5c>
    4784:	80 93 d6 31 	sts	0x31D6, r24	; 0x8031d6 <rcvE1_write_index>
    4788:	90 93 d7 31 	sts	0x31D7, r25	; 0x8031d7 <rcvE1_write_index+0x1>
    478c:	20 91 e4 31 	lds	r18, 0x31E4	; 0x8031e4 <rcvE1_read_index>
    4790:	30 91 e5 31 	lds	r19, 0x31E5	; 0x8031e5 <rcvE1_read_index+0x1>
    4794:	82 17       	cp	r24, r18
    4796:	93 07       	cpc	r25, r19
    4798:	f1 f4       	brne	.+60     	; 0x47d6 <__vector_61+0x96>
    479a:	0c c0       	rjmp	.+24     	; 0x47b4 <__vector_61+0x74>
    479c:	10 92 d6 31 	sts	0x31D6, r1	; 0x8031d6 <rcvE1_write_index>
    47a0:	10 92 d7 31 	sts	0x31D7, r1	; 0x8031d7 <rcvE1_write_index+0x1>
    47a4:	80 91 e4 31 	lds	r24, 0x31E4	; 0x8031e4 <rcvE1_read_index>
    47a8:	90 91 e5 31 	lds	r25, 0x31E5	; 0x8031e5 <rcvE1_read_index+0x1>
    47ac:	18 16       	cp	r1, r24
    47ae:	19 06       	cpc	r1, r25
    47b0:	91 f4       	brne	.+36     	; 0x47d6 <__vector_61+0x96>
    47b2:	0e c0       	rjmp	.+28     	; 0x47d0 <__vector_61+0x90>
    47b4:	01 96       	adiw	r24, 0x01	; 1
    47b6:	84 36       	cpi	r24, 0x64	; 100
    47b8:	91 05       	cpc	r25, r1
    47ba:	28 f4       	brcc	.+10     	; 0x47c6 <__vector_61+0x86>
    47bc:	80 93 e4 31 	sts	0x31E4, r24	; 0x8031e4 <rcvE1_read_index>
    47c0:	90 93 e5 31 	sts	0x31E5, r25	; 0x8031e5 <rcvE1_read_index+0x1>
    47c4:	08 c0       	rjmp	.+16     	; 0x47d6 <__vector_61+0x96>
    47c6:	10 92 e4 31 	sts	0x31E4, r1	; 0x8031e4 <rcvE1_read_index>
    47ca:	10 92 e5 31 	sts	0x31E5, r1	; 0x8031e5 <rcvE1_read_index+0x1>
    47ce:	03 c0       	rjmp	.+6      	; 0x47d6 <__vector_61+0x96>
    47d0:	81 e0       	ldi	r24, 0x01	; 1
    47d2:	90 e0       	ldi	r25, 0x00	; 0
    47d4:	f3 cf       	rjmp	.-26     	; 0x47bc <__vector_61+0x7c>
    47d6:	ff 91       	pop	r31
    47d8:	ef 91       	pop	r30
    47da:	9f 91       	pop	r25
    47dc:	8f 91       	pop	r24
    47de:	3f 91       	pop	r19
    47e0:	2f 91       	pop	r18
    47e2:	0f 90       	pop	r0
    47e4:	0b be       	out	0x3b, r0	; 59
    47e6:	0f 90       	pop	r0
    47e8:	0f be       	out	0x3f, r0	; 63
    47ea:	0f 90       	pop	r0
    47ec:	1f 90       	pop	r1
    47ee:	18 95       	reti

000047f0 <__vector_119>:
    47f0:	1f 92       	push	r1
    47f2:	0f 92       	push	r0
    47f4:	0f b6       	in	r0, 0x3f	; 63
    47f6:	0f 92       	push	r0
    47f8:	11 24       	eor	r1, r1
    47fa:	0b b6       	in	r0, 0x3b	; 59
    47fc:	0f 92       	push	r0
    47fe:	2f 93       	push	r18
    4800:	3f 93       	push	r19
    4802:	8f 93       	push	r24
    4804:	9f 93       	push	r25
    4806:	ef 93       	push	r30
    4808:	ff 93       	push	r31
    480a:	20 91 a0 0b 	lds	r18, 0x0BA0	; 0x800ba0 <__TEXT_REGION_LENGTH__+0x700ba0>
    480e:	e0 91 f0 31 	lds	r30, 0x31F0	; 0x8031f0 <rcvF0_buffer>
    4812:	f0 91 f1 31 	lds	r31, 0x31F1	; 0x8031f1 <rcvF0_buffer+0x1>
    4816:	80 91 d4 31 	lds	r24, 0x31D4	; 0x8031d4 <rcvF0_write_index>
    481a:	90 91 d5 31 	lds	r25, 0x31D5	; 0x8031d5 <rcvF0_write_index+0x1>
    481e:	e8 0f       	add	r30, r24
    4820:	f9 1f       	adc	r31, r25
    4822:	20 83       	st	Z, r18
    4824:	80 91 d4 31 	lds	r24, 0x31D4	; 0x8031d4 <rcvF0_write_index>
    4828:	90 91 d5 31 	lds	r25, 0x31D5	; 0x8031d5 <rcvF0_write_index+0x1>
    482c:	01 96       	adiw	r24, 0x01	; 1
    482e:	84 36       	cpi	r24, 0x64	; 100
    4830:	91 05       	cpc	r25, r1
    4832:	60 f4       	brcc	.+24     	; 0x484c <__vector_119+0x5c>
    4834:	80 93 d4 31 	sts	0x31D4, r24	; 0x8031d4 <rcvF0_write_index>
    4838:	90 93 d5 31 	sts	0x31D5, r25	; 0x8031d5 <rcvF0_write_index+0x1>
    483c:	20 91 e2 31 	lds	r18, 0x31E2	; 0x8031e2 <rcvF0_read_index>
    4840:	30 91 e3 31 	lds	r19, 0x31E3	; 0x8031e3 <rcvF0_read_index+0x1>
    4844:	82 17       	cp	r24, r18
    4846:	93 07       	cpc	r25, r19
    4848:	f1 f4       	brne	.+60     	; 0x4886 <__vector_119+0x96>
    484a:	0c c0       	rjmp	.+24     	; 0x4864 <__vector_119+0x74>
    484c:	10 92 d4 31 	sts	0x31D4, r1	; 0x8031d4 <rcvF0_write_index>
    4850:	10 92 d5 31 	sts	0x31D5, r1	; 0x8031d5 <rcvF0_write_index+0x1>
    4854:	80 91 e2 31 	lds	r24, 0x31E2	; 0x8031e2 <rcvF0_read_index>
    4858:	90 91 e3 31 	lds	r25, 0x31E3	; 0x8031e3 <rcvF0_read_index+0x1>
    485c:	18 16       	cp	r1, r24
    485e:	19 06       	cpc	r1, r25
    4860:	91 f4       	brne	.+36     	; 0x4886 <__vector_119+0x96>
    4862:	0e c0       	rjmp	.+28     	; 0x4880 <__vector_119+0x90>
    4864:	01 96       	adiw	r24, 0x01	; 1
    4866:	84 36       	cpi	r24, 0x64	; 100
    4868:	91 05       	cpc	r25, r1
    486a:	28 f4       	brcc	.+10     	; 0x4876 <__vector_119+0x86>
    486c:	80 93 e2 31 	sts	0x31E2, r24	; 0x8031e2 <rcvF0_read_index>
    4870:	90 93 e3 31 	sts	0x31E3, r25	; 0x8031e3 <rcvF0_read_index+0x1>
    4874:	08 c0       	rjmp	.+16     	; 0x4886 <__vector_119+0x96>
    4876:	10 92 e2 31 	sts	0x31E2, r1	; 0x8031e2 <rcvF0_read_index>
    487a:	10 92 e3 31 	sts	0x31E3, r1	; 0x8031e3 <rcvF0_read_index+0x1>
    487e:	03 c0       	rjmp	.+6      	; 0x4886 <__vector_119+0x96>
    4880:	81 e0       	ldi	r24, 0x01	; 1
    4882:	90 e0       	ldi	r25, 0x00	; 0
    4884:	f3 cf       	rjmp	.-26     	; 0x486c <__vector_119+0x7c>
    4886:	ff 91       	pop	r31
    4888:	ef 91       	pop	r30
    488a:	9f 91       	pop	r25
    488c:	8f 91       	pop	r24
    488e:	3f 91       	pop	r19
    4890:	2f 91       	pop	r18
    4892:	0f 90       	pop	r0
    4894:	0b be       	out	0x3b, r0	; 59
    4896:	0f 90       	pop	r0
    4898:	0f be       	out	0x3f, r0	; 63
    489a:	0f 90       	pop	r0
    489c:	1f 90       	pop	r1
    489e:	18 95       	reti

000048a0 <main>:
 *  reset.
 *  @return This is a real-time microcontroller program which doesn't return. Ever.
 */

int main (void)
{
    48a0:	0f 93       	push	r16
    48a2:	1f 93       	push	r17
    48a4:	cf 93       	push	r28
    48a6:	df 93       	push	r29
    48a8:	cd b7       	in	r28, 0x3d	; 61
    48aa:	de b7       	in	r29, 0x3e	; 62
    48ac:	6d 97       	sbiw	r28, 0x1d	; 29
    48ae:	cd bf       	out	0x3d, r28	; 61
    48b0:	de bf       	out	0x3e, r29	; 62
	cli();
    48b2:	f8 94       	cli
	// Configure the system clock to use internal oscillator at 32 MHz
	config_SYSCLOCK();
    48b4:	0e 94 df 08 	call	0x11be	; 0x11be <_Z15config_SYSCLOCKv>
	
	//check clock output
	PORTD.OUTCLR = PIN7_bm;
    48b8:	e0 e6       	ldi	r30, 0x60	; 96
    48ba:	f6 e0       	ldi	r31, 0x06	; 6
    48bc:	80 e8       	ldi	r24, 0x80	; 128
    48be:	86 83       	std	Z+6, r24	; 0x06
	PORTD.DIRSET = PIN7_bm;						//configure PD7 for output
    48c0:	81 83       	std	Z+1, r24	; 0x01
	PORTCFG.CLKEVOUT = PORTCFG_CLKOUT_PD7_gc; //configure clock to output on PD7
    48c2:	82 e0       	ldi	r24, 0x02	; 2
    48c4:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
	
	// Disable the watchdog timer unless it's needed later. This is important because
	// sometimes the watchdog timer may have been left on...and it tends to stay on	 
	wdt_disable ();
    48c8:	9d ef       	ldi	r25, 0xFD	; 253
    48ca:	88 ed       	ldi	r24, 0xD8	; 216
    48cc:	08 b6       	in	r0, 0x38	; 56
    48ce:	18 be       	out	0x38, r1	; 56
    48d0:	84 bf       	out	0x34, r24	; 52
    48d2:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    48d6:	08 be       	out	0x38, r0	; 56

	// Configure a serial port which can be used by a task to print debugging infor-
	// mation, or to allow user interaction, or for whatever use is appropriate.  The
	// serial port will be used by the user interface task after setup is complete and
	// the task scheduler has been started by the function vTaskStartScheduler()
	rs232 ser_dev(0,&USARTD0); // Create a serial device on USART E0
    48d8:	40 ea       	ldi	r20, 0xA0	; 160
    48da:	59 e0       	ldi	r21, 0x09	; 9
    48dc:	60 e0       	ldi	r22, 0x00	; 0
    48de:	70 e0       	ldi	r23, 0x00	; 0
    48e0:	ce 01       	movw	r24, r28
    48e2:	01 96       	adiw	r24, 0x01	; 1
    48e4:	0e 94 46 21 	call	0x428c	; 0x428c <_ZN5rs232C1EjP12USART_struct>
	ser_dev << clrscr << "FreeRTOS Xmega Testing Program" << endl << endl;
    48e8:	67 e0       	ldi	r22, 0x07	; 7
    48ea:	ce 01       	movw	r24, r28
    48ec:	01 96       	adiw	r24, 0x01	; 1
    48ee:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    48f2:	8c 01       	movw	r16, r24
    48f4:	6e ec       	ldi	r22, 0xCE	; 206
    48f6:	70 e2       	ldi	r23, 0x20	; 32
    48f8:	0e 94 43 1f 	call	0x3e86	; 0x3e86 <_ZN8emstream4putsEPKc>
    48fc:	66 e0       	ldi	r22, 0x06	; 6
    48fe:	c8 01       	movw	r24, r16
    4900:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
    4904:	66 e0       	ldi	r22, 0x06	; 6
    4906:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <_ZN8emstreamlsE15ser_manipulator>
	/*// The LED blinking task is also low priority and is used to test the timing accuracy
	// of the task transitions.
	new task_LED ("LED BLINKER", task_priority (1), 260, &ser_dev);*/

	// Motor Task. Stack size needs to be at least 260 to work.
	new task_motor ("MOTOR TASK", task_priority (1), 1000, &ser_dev);
    490a:	82 e1       	ldi	r24, 0x12	; 18
    490c:	90 e0       	ldi	r25, 0x00	; 0
    490e:	0e 94 75 1e 	call	0x3cea	; 0x3cea <_Znwj>
    4912:	8e 01       	movw	r16, r28
    4914:	0f 5f       	subi	r16, 0xFF	; 255
    4916:	1f 4f       	sbci	r17, 0xFF	; 255
    4918:	28 ee       	ldi	r18, 0xE8	; 232
    491a:	33 e0       	ldi	r19, 0x03	; 3
    491c:	41 e0       	ldi	r20, 0x01	; 1
    491e:	6d ee       	ldi	r22, 0xED	; 237
    4920:	70 e2       	ldi	r23, 0x20	; 32
    4922:	0e 94 c7 06 	call	0xd8e	; 0xd8e <_ZN10task_motorC1EPKchjP8emstream>

	// Robot State task
	new task_Robot_State ("RobotState", task_priority(3),1000, &ser_dev);
    4926:	89 e3       	ldi	r24, 0x39	; 57
    4928:	90 e0       	ldi	r25, 0x00	; 0
    492a:	0e 94 75 1e 	call	0x3cea	; 0x3cea <_Znwj>
    492e:	28 ee       	ldi	r18, 0xE8	; 232
    4930:	33 e0       	ldi	r19, 0x03	; 3
    4932:	43 e0       	ldi	r20, 0x03	; 3
    4934:	68 ef       	ldi	r22, 0xF8	; 248
    4936:	70 e2       	ldi	r23, 0x20	; 32
    4938:	0e 94 ba 08 	call	0x1174	; 0x1174 <_ZN16task_Robot_StateC1EPKchjP8emstream>
	
	//new task_diag("Diagnostic",task_priority(1),200, &ser_dev);
	// Enable high - low level interrupts and enable global interrupts
	PMIC_CTRL = (1 << PMIC_HILVLEN_bp | 1 << PMIC_MEDLVLEN_bp | 1 << PMIC_LOLVLEN_bp);
    493c:	87 e0       	ldi	r24, 0x07	; 7
    493e:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
	sei();
    4942:	78 94       	sei
	
	// Here's where the RTOS scheduler is started up. It should never exit as long as
	// power is on and the microcontroller isn't rebooted
	vTaskStartScheduler ();
    4944:	0e 94 39 18 	call	0x3072	; 0x3072 <vTaskStartScheduler>
    4948:	80 e0       	ldi	r24, 0x00	; 0
    494a:	90 e0       	ldi	r25, 0x00	; 0
    494c:	6d 96       	adiw	r28, 0x1d	; 29
    494e:	cd bf       	out	0x3d, r28	; 61
    4950:	de bf       	out	0x3e, r29	; 62
    4952:	df 91       	pop	r29
    4954:	cf 91       	pop	r28
    4956:	1f 91       	pop	r17
    4958:	0f 91       	pop	r16
    495a:	08 95       	ret

0000495c <_GLOBAL__sub_I_print_ser_queue>:
    495c:	0f 93       	push	r16
    495e:	1f 93       	push	r17
#include "task_LED.h"                       // Header for user interface task
#include "task_motor.h"                     // Header for motor task
#include "task_Robot_State.h"               // Header for motor task
#include "task_diag.h"						// Header for diagnostic task

frt_text_queue print_ser_queue (32, NULL, 10);
    4960:	0a e0       	ldi	r16, 0x0A	; 10
    4962:	10 e0       	ldi	r17, 0x00	; 0
    4964:	20 e0       	ldi	r18, 0x00	; 0
    4966:	30 e0       	ldi	r19, 0x00	; 0
    4968:	40 e0       	ldi	r20, 0x00	; 0
    496a:	50 e0       	ldi	r21, 0x00	; 0
    496c:	60 e2       	ldi	r22, 0x20	; 32
    496e:	70 e0       	ldi	r23, 0x00	; 0
    4970:	8e ef       	ldi	r24, 0xFE	; 254
    4972:	91 e3       	ldi	r25, 0x31	; 49
    4974:	0e 94 46 1e 	call	0x3c8c	; 0x3c8c <_ZN14frt_text_queueC1EjP8emstreamm>
	sei();
	
	// Here's where the RTOS scheduler is started up. It should never exit as long as
	// power is on and the microcontroller isn't rebooted
	vTaskStartScheduler ();
    4978:	1f 91       	pop	r17
    497a:	0f 91       	pop	r16
    497c:	08 95       	ret

0000497e <__subsf3>:
    497e:	50 58       	subi	r21, 0x80	; 128

00004980 <__addsf3>:
    4980:	bb 27       	eor	r27, r27
    4982:	aa 27       	eor	r26, r26
    4984:	0e 94 d7 24 	call	0x49ae	; 0x49ae <__addsf3x>
    4988:	0c 94 f1 26 	jmp	0x4de2	; 0x4de2 <__fp_round>
    498c:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__fp_pscA>
    4990:	38 f0       	brcs	.+14     	; 0x49a0 <__addsf3+0x20>
    4992:	0e 94 bf 26 	call	0x4d7e	; 0x4d7e <__fp_pscB>
    4996:	20 f0       	brcs	.+8      	; 0x49a0 <__addsf3+0x20>
    4998:	39 f4       	brne	.+14     	; 0x49a8 <__addsf3+0x28>
    499a:	9f 3f       	cpi	r25, 0xFF	; 255
    499c:	19 f4       	brne	.+6      	; 0x49a4 <__addsf3+0x24>
    499e:	26 f4       	brtc	.+8      	; 0x49a8 <__addsf3+0x28>
    49a0:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__fp_nan>
    49a4:	0e f4       	brtc	.+2      	; 0x49a8 <__addsf3+0x28>
    49a6:	e0 95       	com	r30
    49a8:	e7 fb       	bst	r30, 7
    49aa:	0c 94 88 26 	jmp	0x4d10	; 0x4d10 <__fp_inf>

000049ae <__addsf3x>:
    49ae:	e9 2f       	mov	r30, r25
    49b0:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__fp_split3>
    49b4:	58 f3       	brcs	.-42     	; 0x498c <__addsf3+0xc>
    49b6:	ba 17       	cp	r27, r26
    49b8:	62 07       	cpc	r22, r18
    49ba:	73 07       	cpc	r23, r19
    49bc:	84 07       	cpc	r24, r20
    49be:	95 07       	cpc	r25, r21
    49c0:	20 f0       	brcs	.+8      	; 0x49ca <__addsf3x+0x1c>
    49c2:	79 f4       	brne	.+30     	; 0x49e2 <__addsf3x+0x34>
    49c4:	a6 f5       	brtc	.+104    	; 0x4a2e <__addsf3x+0x80>
    49c6:	0c 94 38 27 	jmp	0x4e70	; 0x4e70 <__fp_zero>
    49ca:	0e f4       	brtc	.+2      	; 0x49ce <__addsf3x+0x20>
    49cc:	e0 95       	com	r30
    49ce:	0b 2e       	mov	r0, r27
    49d0:	ba 2f       	mov	r27, r26
    49d2:	a0 2d       	mov	r26, r0
    49d4:	0b 01       	movw	r0, r22
    49d6:	b9 01       	movw	r22, r18
    49d8:	90 01       	movw	r18, r0
    49da:	0c 01       	movw	r0, r24
    49dc:	ca 01       	movw	r24, r20
    49de:	a0 01       	movw	r20, r0
    49e0:	11 24       	eor	r1, r1
    49e2:	ff 27       	eor	r31, r31
    49e4:	59 1b       	sub	r21, r25
    49e6:	99 f0       	breq	.+38     	; 0x4a0e <__addsf3x+0x60>
    49e8:	59 3f       	cpi	r21, 0xF9	; 249
    49ea:	50 f4       	brcc	.+20     	; 0x4a00 <__addsf3x+0x52>
    49ec:	50 3e       	cpi	r21, 0xE0	; 224
    49ee:	68 f1       	brcs	.+90     	; 0x4a4a <__addsf3x+0x9c>
    49f0:	1a 16       	cp	r1, r26
    49f2:	f0 40       	sbci	r31, 0x00	; 0
    49f4:	a2 2f       	mov	r26, r18
    49f6:	23 2f       	mov	r18, r19
    49f8:	34 2f       	mov	r19, r20
    49fa:	44 27       	eor	r20, r20
    49fc:	58 5f       	subi	r21, 0xF8	; 248
    49fe:	f3 cf       	rjmp	.-26     	; 0x49e6 <__addsf3x+0x38>
    4a00:	46 95       	lsr	r20
    4a02:	37 95       	ror	r19
    4a04:	27 95       	ror	r18
    4a06:	a7 95       	ror	r26
    4a08:	f0 40       	sbci	r31, 0x00	; 0
    4a0a:	53 95       	inc	r21
    4a0c:	c9 f7       	brne	.-14     	; 0x4a00 <__addsf3x+0x52>
    4a0e:	7e f4       	brtc	.+30     	; 0x4a2e <__addsf3x+0x80>
    4a10:	1f 16       	cp	r1, r31
    4a12:	ba 0b       	sbc	r27, r26
    4a14:	62 0b       	sbc	r22, r18
    4a16:	73 0b       	sbc	r23, r19
    4a18:	84 0b       	sbc	r24, r20
    4a1a:	ba f0       	brmi	.+46     	; 0x4a4a <__addsf3x+0x9c>
    4a1c:	91 50       	subi	r25, 0x01	; 1
    4a1e:	a1 f0       	breq	.+40     	; 0x4a48 <__addsf3x+0x9a>
    4a20:	ff 0f       	add	r31, r31
    4a22:	bb 1f       	adc	r27, r27
    4a24:	66 1f       	adc	r22, r22
    4a26:	77 1f       	adc	r23, r23
    4a28:	88 1f       	adc	r24, r24
    4a2a:	c2 f7       	brpl	.-16     	; 0x4a1c <__addsf3x+0x6e>
    4a2c:	0e c0       	rjmp	.+28     	; 0x4a4a <__addsf3x+0x9c>
    4a2e:	ba 0f       	add	r27, r26
    4a30:	62 1f       	adc	r22, r18
    4a32:	73 1f       	adc	r23, r19
    4a34:	84 1f       	adc	r24, r20
    4a36:	48 f4       	brcc	.+18     	; 0x4a4a <__addsf3x+0x9c>
    4a38:	87 95       	ror	r24
    4a3a:	77 95       	ror	r23
    4a3c:	67 95       	ror	r22
    4a3e:	b7 95       	ror	r27
    4a40:	f7 95       	ror	r31
    4a42:	9e 3f       	cpi	r25, 0xFE	; 254
    4a44:	08 f0       	brcs	.+2      	; 0x4a48 <__addsf3x+0x9a>
    4a46:	b0 cf       	rjmp	.-160    	; 0x49a8 <__addsf3+0x28>
    4a48:	93 95       	inc	r25
    4a4a:	88 0f       	add	r24, r24
    4a4c:	08 f0       	brcs	.+2      	; 0x4a50 <__addsf3x+0xa2>
    4a4e:	99 27       	eor	r25, r25
    4a50:	ee 0f       	add	r30, r30
    4a52:	97 95       	ror	r25
    4a54:	87 95       	ror	r24
    4a56:	08 95       	ret
    4a58:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__fp_pscA>
    4a5c:	60 f0       	brcs	.+24     	; 0x4a76 <__addsf3x+0xc8>
    4a5e:	80 e8       	ldi	r24, 0x80	; 128
    4a60:	91 e0       	ldi	r25, 0x01	; 1
    4a62:	09 f4       	brne	.+2      	; 0x4a66 <__addsf3x+0xb8>
    4a64:	9e ef       	ldi	r25, 0xFE	; 254
    4a66:	0e 94 bf 26 	call	0x4d7e	; 0x4d7e <__fp_pscB>
    4a6a:	28 f0       	brcs	.+10     	; 0x4a76 <__addsf3x+0xc8>
    4a6c:	40 e8       	ldi	r20, 0x80	; 128
    4a6e:	51 e0       	ldi	r21, 0x01	; 1
    4a70:	71 f4       	brne	.+28     	; 0x4a8e <atan2+0x10>
    4a72:	5e ef       	ldi	r21, 0xFE	; 254
    4a74:	0c c0       	rjmp	.+24     	; 0x4a8e <atan2+0x10>
    4a76:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__fp_nan>
    4a7a:	0c 94 38 27 	jmp	0x4e70	; 0x4e70 <__fp_zero>

00004a7e <atan2>:
    4a7e:	e9 2f       	mov	r30, r25
    4a80:	e0 78       	andi	r30, 0x80	; 128
    4a82:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__fp_split3>
    4a86:	40 f3       	brcs	.-48     	; 0x4a58 <__addsf3x+0xaa>
    4a88:	09 2e       	mov	r0, r25
    4a8a:	05 2a       	or	r0, r21
    4a8c:	b1 f3       	breq	.-20     	; 0x4a7a <__addsf3x+0xcc>
    4a8e:	26 17       	cp	r18, r22
    4a90:	37 07       	cpc	r19, r23
    4a92:	48 07       	cpc	r20, r24
    4a94:	59 07       	cpc	r21, r25
    4a96:	38 f0       	brcs	.+14     	; 0x4aa6 <atan2+0x28>
    4a98:	0e 2e       	mov	r0, r30
    4a9a:	07 f8       	bld	r0, 7
    4a9c:	e0 25       	eor	r30, r0
    4a9e:	69 f0       	breq	.+26     	; 0x4aba <atan2+0x3c>
    4aa0:	e0 25       	eor	r30, r0
    4aa2:	e0 64       	ori	r30, 0x40	; 64
    4aa4:	0a c0       	rjmp	.+20     	; 0x4aba <atan2+0x3c>
    4aa6:	ef 63       	ori	r30, 0x3F	; 63
    4aa8:	07 f8       	bld	r0, 7
    4aaa:	00 94       	com	r0
    4aac:	07 fa       	bst	r0, 7
    4aae:	db 01       	movw	r26, r22
    4ab0:	b9 01       	movw	r22, r18
    4ab2:	9d 01       	movw	r18, r26
    4ab4:	dc 01       	movw	r26, r24
    4ab6:	ca 01       	movw	r24, r20
    4ab8:	ad 01       	movw	r20, r26
    4aba:	ef 93       	push	r30
    4abc:	0e 94 ba 25 	call	0x4b74	; 0x4b74 <__divsf3_pse>
    4ac0:	0e 94 f1 26 	call	0x4de2	; 0x4de2 <__fp_round>
    4ac4:	0e 94 6f 25 	call	0x4ade	; 0x4ade <atan>
    4ac8:	5f 91       	pop	r21
    4aca:	55 23       	and	r21, r21
    4acc:	39 f0       	breq	.+14     	; 0x4adc <atan2+0x5e>
    4ace:	2b ed       	ldi	r18, 0xDB	; 219
    4ad0:	3f e0       	ldi	r19, 0x0F	; 15
    4ad2:	49 e4       	ldi	r20, 0x49	; 73
    4ad4:	50 fd       	sbrc	r21, 0
    4ad6:	49 ec       	ldi	r20, 0xC9	; 201
    4ad8:	0c 94 c0 24 	jmp	0x4980	; 0x4980 <__addsf3>
    4adc:	08 95       	ret

00004ade <atan>:
    4ade:	df 93       	push	r29
    4ae0:	dd 27       	eor	r29, r29
    4ae2:	b9 2f       	mov	r27, r25
    4ae4:	bf 77       	andi	r27, 0x7F	; 127
    4ae6:	40 e8       	ldi	r20, 0x80	; 128
    4ae8:	5f e3       	ldi	r21, 0x3F	; 63
    4aea:	16 16       	cp	r1, r22
    4aec:	17 06       	cpc	r1, r23
    4aee:	48 07       	cpc	r20, r24
    4af0:	5b 07       	cpc	r21, r27
    4af2:	18 f4       	brcc	.+6      	; 0x4afa <atan+0x1c>
    4af4:	d9 2f       	mov	r29, r25
    4af6:	0e 94 3f 27 	call	0x4e7e	; 0x4e7e <inverse>
    4afa:	9f 93       	push	r25
    4afc:	8f 93       	push	r24
    4afe:	7f 93       	push	r23
    4b00:	6f 93       	push	r22
    4b02:	0e 94 02 28 	call	0x5004	; 0x5004 <square>
    4b06:	e0 e2       	ldi	r30, 0x20	; 32
    4b08:	f2 e0       	ldi	r31, 0x02	; 2
    4b0a:	0e 94 91 26 	call	0x4d22	; 0x4d22 <__fp_powser>
    4b0e:	0e 94 f1 26 	call	0x4de2	; 0x4de2 <__fp_round>
    4b12:	2f 91       	pop	r18
    4b14:	3f 91       	pop	r19
    4b16:	4f 91       	pop	r20
    4b18:	5f 91       	pop	r21
    4b1a:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <__mulsf3x>
    4b1e:	dd 23       	and	r29, r29
    4b20:	51 f0       	breq	.+20     	; 0x4b36 <atan+0x58>
    4b22:	90 58       	subi	r25, 0x80	; 128
    4b24:	a2 ea       	ldi	r26, 0xA2	; 162
    4b26:	2a ed       	ldi	r18, 0xDA	; 218
    4b28:	3f e0       	ldi	r19, 0x0F	; 15
    4b2a:	49 ec       	ldi	r20, 0xC9	; 201
    4b2c:	5f e3       	ldi	r21, 0x3F	; 63
    4b2e:	d0 78       	andi	r29, 0x80	; 128
    4b30:	5d 27       	eor	r21, r29
    4b32:	0e 94 d7 24 	call	0x49ae	; 0x49ae <__addsf3x>
    4b36:	df 91       	pop	r29
    4b38:	0c 94 f1 26 	jmp	0x4de2	; 0x4de2 <__fp_round>

00004b3c <cos>:
    4b3c:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__fp_rempio2>
    4b40:	e3 95       	inc	r30
    4b42:	0c 94 02 27 	jmp	0x4e04	; 0x4e04 <__fp_sinus>

00004b46 <__divsf3>:
    4b46:	0e 94 b7 25 	call	0x4b6e	; 0x4b6e <__divsf3x>
    4b4a:	0c 94 f1 26 	jmp	0x4de2	; 0x4de2 <__fp_round>
    4b4e:	0e 94 bf 26 	call	0x4d7e	; 0x4d7e <__fp_pscB>
    4b52:	58 f0       	brcs	.+22     	; 0x4b6a <__divsf3+0x24>
    4b54:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__fp_pscA>
    4b58:	40 f0       	brcs	.+16     	; 0x4b6a <__divsf3+0x24>
    4b5a:	29 f4       	brne	.+10     	; 0x4b66 <__divsf3+0x20>
    4b5c:	5f 3f       	cpi	r21, 0xFF	; 255
    4b5e:	29 f0       	breq	.+10     	; 0x4b6a <__divsf3+0x24>
    4b60:	0c 94 88 26 	jmp	0x4d10	; 0x4d10 <__fp_inf>
    4b64:	51 11       	cpse	r21, r1
    4b66:	0c 94 39 27 	jmp	0x4e72	; 0x4e72 <__fp_szero>
    4b6a:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__fp_nan>

00004b6e <__divsf3x>:
    4b6e:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__fp_split3>
    4b72:	68 f3       	brcs	.-38     	; 0x4b4e <__divsf3+0x8>

00004b74 <__divsf3_pse>:
    4b74:	99 23       	and	r25, r25
    4b76:	b1 f3       	breq	.-20     	; 0x4b64 <__divsf3+0x1e>
    4b78:	55 23       	and	r21, r21
    4b7a:	91 f3       	breq	.-28     	; 0x4b60 <__divsf3+0x1a>
    4b7c:	95 1b       	sub	r25, r21
    4b7e:	55 0b       	sbc	r21, r21
    4b80:	bb 27       	eor	r27, r27
    4b82:	aa 27       	eor	r26, r26
    4b84:	62 17       	cp	r22, r18
    4b86:	73 07       	cpc	r23, r19
    4b88:	84 07       	cpc	r24, r20
    4b8a:	38 f0       	brcs	.+14     	; 0x4b9a <__divsf3_pse+0x26>
    4b8c:	9f 5f       	subi	r25, 0xFF	; 255
    4b8e:	5f 4f       	sbci	r21, 0xFF	; 255
    4b90:	22 0f       	add	r18, r18
    4b92:	33 1f       	adc	r19, r19
    4b94:	44 1f       	adc	r20, r20
    4b96:	aa 1f       	adc	r26, r26
    4b98:	a9 f3       	breq	.-22     	; 0x4b84 <__divsf3_pse+0x10>
    4b9a:	35 d0       	rcall	.+106    	; 0x4c06 <__divsf3_pse+0x92>
    4b9c:	0e 2e       	mov	r0, r30
    4b9e:	3a f0       	brmi	.+14     	; 0x4bae <__divsf3_pse+0x3a>
    4ba0:	e0 e8       	ldi	r30, 0x80	; 128
    4ba2:	32 d0       	rcall	.+100    	; 0x4c08 <__divsf3_pse+0x94>
    4ba4:	91 50       	subi	r25, 0x01	; 1
    4ba6:	50 40       	sbci	r21, 0x00	; 0
    4ba8:	e6 95       	lsr	r30
    4baa:	00 1c       	adc	r0, r0
    4bac:	ca f7       	brpl	.-14     	; 0x4ba0 <__divsf3_pse+0x2c>
    4bae:	2b d0       	rcall	.+86     	; 0x4c06 <__divsf3_pse+0x92>
    4bb0:	fe 2f       	mov	r31, r30
    4bb2:	29 d0       	rcall	.+82     	; 0x4c06 <__divsf3_pse+0x92>
    4bb4:	66 0f       	add	r22, r22
    4bb6:	77 1f       	adc	r23, r23
    4bb8:	88 1f       	adc	r24, r24
    4bba:	bb 1f       	adc	r27, r27
    4bbc:	26 17       	cp	r18, r22
    4bbe:	37 07       	cpc	r19, r23
    4bc0:	48 07       	cpc	r20, r24
    4bc2:	ab 07       	cpc	r26, r27
    4bc4:	b0 e8       	ldi	r27, 0x80	; 128
    4bc6:	09 f0       	breq	.+2      	; 0x4bca <__divsf3_pse+0x56>
    4bc8:	bb 0b       	sbc	r27, r27
    4bca:	80 2d       	mov	r24, r0
    4bcc:	bf 01       	movw	r22, r30
    4bce:	ff 27       	eor	r31, r31
    4bd0:	93 58       	subi	r25, 0x83	; 131
    4bd2:	5f 4f       	sbci	r21, 0xFF	; 255
    4bd4:	3a f0       	brmi	.+14     	; 0x4be4 <__divsf3_pse+0x70>
    4bd6:	9e 3f       	cpi	r25, 0xFE	; 254
    4bd8:	51 05       	cpc	r21, r1
    4bda:	78 f0       	brcs	.+30     	; 0x4bfa <__divsf3_pse+0x86>
    4bdc:	0c 94 88 26 	jmp	0x4d10	; 0x4d10 <__fp_inf>
    4be0:	0c 94 39 27 	jmp	0x4e72	; 0x4e72 <__fp_szero>
    4be4:	5f 3f       	cpi	r21, 0xFF	; 255
    4be6:	e4 f3       	brlt	.-8      	; 0x4be0 <__divsf3_pse+0x6c>
    4be8:	98 3e       	cpi	r25, 0xE8	; 232
    4bea:	d4 f3       	brlt	.-12     	; 0x4be0 <__divsf3_pse+0x6c>
    4bec:	86 95       	lsr	r24
    4bee:	77 95       	ror	r23
    4bf0:	67 95       	ror	r22
    4bf2:	b7 95       	ror	r27
    4bf4:	f7 95       	ror	r31
    4bf6:	9f 5f       	subi	r25, 0xFF	; 255
    4bf8:	c9 f7       	brne	.-14     	; 0x4bec <__divsf3_pse+0x78>
    4bfa:	88 0f       	add	r24, r24
    4bfc:	91 1d       	adc	r25, r1
    4bfe:	96 95       	lsr	r25
    4c00:	87 95       	ror	r24
    4c02:	97 f9       	bld	r25, 7
    4c04:	08 95       	ret
    4c06:	e1 e0       	ldi	r30, 0x01	; 1
    4c08:	66 0f       	add	r22, r22
    4c0a:	77 1f       	adc	r23, r23
    4c0c:	88 1f       	adc	r24, r24
    4c0e:	bb 1f       	adc	r27, r27
    4c10:	62 17       	cp	r22, r18
    4c12:	73 07       	cpc	r23, r19
    4c14:	84 07       	cpc	r24, r20
    4c16:	ba 07       	cpc	r27, r26
    4c18:	20 f0       	brcs	.+8      	; 0x4c22 <__divsf3_pse+0xae>
    4c1a:	62 1b       	sub	r22, r18
    4c1c:	73 0b       	sbc	r23, r19
    4c1e:	84 0b       	sbc	r24, r20
    4c20:	ba 0b       	sbc	r27, r26
    4c22:	ee 1f       	adc	r30, r30
    4c24:	88 f7       	brcc	.-30     	; 0x4c08 <__divsf3_pse+0x94>
    4c26:	e0 95       	com	r30
    4c28:	08 95       	ret

00004c2a <__fixsfsi>:
    4c2a:	0e 94 1c 26 	call	0x4c38	; 0x4c38 <__fixunssfsi>
    4c2e:	68 94       	set
    4c30:	b1 11       	cpse	r27, r1
    4c32:	0c 94 39 27 	jmp	0x4e72	; 0x4e72 <__fp_szero>
    4c36:	08 95       	ret

00004c38 <__fixunssfsi>:
    4c38:	0e 94 1e 27 	call	0x4e3c	; 0x4e3c <__fp_splitA>
    4c3c:	88 f0       	brcs	.+34     	; 0x4c60 <__fixunssfsi+0x28>
    4c3e:	9f 57       	subi	r25, 0x7F	; 127
    4c40:	98 f0       	brcs	.+38     	; 0x4c68 <__fixunssfsi+0x30>
    4c42:	b9 2f       	mov	r27, r25
    4c44:	99 27       	eor	r25, r25
    4c46:	b7 51       	subi	r27, 0x17	; 23
    4c48:	b0 f0       	brcs	.+44     	; 0x4c76 <__fixunssfsi+0x3e>
    4c4a:	e1 f0       	breq	.+56     	; 0x4c84 <__fixunssfsi+0x4c>
    4c4c:	66 0f       	add	r22, r22
    4c4e:	77 1f       	adc	r23, r23
    4c50:	88 1f       	adc	r24, r24
    4c52:	99 1f       	adc	r25, r25
    4c54:	1a f0       	brmi	.+6      	; 0x4c5c <__fixunssfsi+0x24>
    4c56:	ba 95       	dec	r27
    4c58:	c9 f7       	brne	.-14     	; 0x4c4c <__fixunssfsi+0x14>
    4c5a:	14 c0       	rjmp	.+40     	; 0x4c84 <__fixunssfsi+0x4c>
    4c5c:	b1 30       	cpi	r27, 0x01	; 1
    4c5e:	91 f0       	breq	.+36     	; 0x4c84 <__fixunssfsi+0x4c>
    4c60:	0e 94 38 27 	call	0x4e70	; 0x4e70 <__fp_zero>
    4c64:	b1 e0       	ldi	r27, 0x01	; 1
    4c66:	08 95       	ret
    4c68:	0c 94 38 27 	jmp	0x4e70	; 0x4e70 <__fp_zero>
    4c6c:	67 2f       	mov	r22, r23
    4c6e:	78 2f       	mov	r23, r24
    4c70:	88 27       	eor	r24, r24
    4c72:	b8 5f       	subi	r27, 0xF8	; 248
    4c74:	39 f0       	breq	.+14     	; 0x4c84 <__fixunssfsi+0x4c>
    4c76:	b9 3f       	cpi	r27, 0xF9	; 249
    4c78:	cc f3       	brlt	.-14     	; 0x4c6c <__fixunssfsi+0x34>
    4c7a:	86 95       	lsr	r24
    4c7c:	77 95       	ror	r23
    4c7e:	67 95       	ror	r22
    4c80:	b3 95       	inc	r27
    4c82:	d9 f7       	brne	.-10     	; 0x4c7a <__fixunssfsi+0x42>
    4c84:	3e f4       	brtc	.+14     	; 0x4c94 <__fixunssfsi+0x5c>
    4c86:	90 95       	com	r25
    4c88:	80 95       	com	r24
    4c8a:	70 95       	com	r23
    4c8c:	61 95       	neg	r22
    4c8e:	7f 4f       	sbci	r23, 0xFF	; 255
    4c90:	8f 4f       	sbci	r24, 0xFF	; 255
    4c92:	9f 4f       	sbci	r25, 0xFF	; 255
    4c94:	08 95       	ret

00004c96 <__floatunsisf>:
    4c96:	e8 94       	clt
    4c98:	09 c0       	rjmp	.+18     	; 0x4cac <__floatsisf+0x12>

00004c9a <__floatsisf>:
    4c9a:	97 fb       	bst	r25, 7
    4c9c:	3e f4       	brtc	.+14     	; 0x4cac <__floatsisf+0x12>
    4c9e:	90 95       	com	r25
    4ca0:	80 95       	com	r24
    4ca2:	70 95       	com	r23
    4ca4:	61 95       	neg	r22
    4ca6:	7f 4f       	sbci	r23, 0xFF	; 255
    4ca8:	8f 4f       	sbci	r24, 0xFF	; 255
    4caa:	9f 4f       	sbci	r25, 0xFF	; 255
    4cac:	99 23       	and	r25, r25
    4cae:	a9 f0       	breq	.+42     	; 0x4cda <__floatsisf+0x40>
    4cb0:	f9 2f       	mov	r31, r25
    4cb2:	96 e9       	ldi	r25, 0x96	; 150
    4cb4:	bb 27       	eor	r27, r27
    4cb6:	93 95       	inc	r25
    4cb8:	f6 95       	lsr	r31
    4cba:	87 95       	ror	r24
    4cbc:	77 95       	ror	r23
    4cbe:	67 95       	ror	r22
    4cc0:	b7 95       	ror	r27
    4cc2:	f1 11       	cpse	r31, r1
    4cc4:	f8 cf       	rjmp	.-16     	; 0x4cb6 <__floatsisf+0x1c>
    4cc6:	fa f4       	brpl	.+62     	; 0x4d06 <__floatsisf+0x6c>
    4cc8:	bb 0f       	add	r27, r27
    4cca:	11 f4       	brne	.+4      	; 0x4cd0 <__floatsisf+0x36>
    4ccc:	60 ff       	sbrs	r22, 0
    4cce:	1b c0       	rjmp	.+54     	; 0x4d06 <__floatsisf+0x6c>
    4cd0:	6f 5f       	subi	r22, 0xFF	; 255
    4cd2:	7f 4f       	sbci	r23, 0xFF	; 255
    4cd4:	8f 4f       	sbci	r24, 0xFF	; 255
    4cd6:	9f 4f       	sbci	r25, 0xFF	; 255
    4cd8:	16 c0       	rjmp	.+44     	; 0x4d06 <__floatsisf+0x6c>
    4cda:	88 23       	and	r24, r24
    4cdc:	11 f0       	breq	.+4      	; 0x4ce2 <__floatsisf+0x48>
    4cde:	96 e9       	ldi	r25, 0x96	; 150
    4ce0:	11 c0       	rjmp	.+34     	; 0x4d04 <__floatsisf+0x6a>
    4ce2:	77 23       	and	r23, r23
    4ce4:	21 f0       	breq	.+8      	; 0x4cee <__floatsisf+0x54>
    4ce6:	9e e8       	ldi	r25, 0x8E	; 142
    4ce8:	87 2f       	mov	r24, r23
    4cea:	76 2f       	mov	r23, r22
    4cec:	05 c0       	rjmp	.+10     	; 0x4cf8 <__floatsisf+0x5e>
    4cee:	66 23       	and	r22, r22
    4cf0:	71 f0       	breq	.+28     	; 0x4d0e <__floatsisf+0x74>
    4cf2:	96 e8       	ldi	r25, 0x86	; 134
    4cf4:	86 2f       	mov	r24, r22
    4cf6:	70 e0       	ldi	r23, 0x00	; 0
    4cf8:	60 e0       	ldi	r22, 0x00	; 0
    4cfa:	2a f0       	brmi	.+10     	; 0x4d06 <__floatsisf+0x6c>
    4cfc:	9a 95       	dec	r25
    4cfe:	66 0f       	add	r22, r22
    4d00:	77 1f       	adc	r23, r23
    4d02:	88 1f       	adc	r24, r24
    4d04:	da f7       	brpl	.-10     	; 0x4cfc <__floatsisf+0x62>
    4d06:	88 0f       	add	r24, r24
    4d08:	96 95       	lsr	r25
    4d0a:	87 95       	ror	r24
    4d0c:	97 f9       	bld	r25, 7
    4d0e:	08 95       	ret

00004d10 <__fp_inf>:
    4d10:	97 f9       	bld	r25, 7
    4d12:	9f 67       	ori	r25, 0x7F	; 127
    4d14:	80 e8       	ldi	r24, 0x80	; 128
    4d16:	70 e0       	ldi	r23, 0x00	; 0
    4d18:	60 e0       	ldi	r22, 0x00	; 0
    4d1a:	08 95       	ret

00004d1c <__fp_nan>:
    4d1c:	9f ef       	ldi	r25, 0xFF	; 255
    4d1e:	80 ec       	ldi	r24, 0xC0	; 192
    4d20:	08 95       	ret

00004d22 <__fp_powser>:
    4d22:	df 93       	push	r29
    4d24:	cf 93       	push	r28
    4d26:	1f 93       	push	r17
    4d28:	0f 93       	push	r16
    4d2a:	ff 92       	push	r15
    4d2c:	ef 92       	push	r14
    4d2e:	df 92       	push	r13
    4d30:	7b 01       	movw	r14, r22
    4d32:	8c 01       	movw	r16, r24
    4d34:	68 94       	set
    4d36:	06 c0       	rjmp	.+12     	; 0x4d44 <__fp_powser+0x22>
    4d38:	da 2e       	mov	r13, r26
    4d3a:	ef 01       	movw	r28, r30
    4d3c:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <__mulsf3x>
    4d40:	fe 01       	movw	r30, r28
    4d42:	e8 94       	clt
    4d44:	a5 91       	lpm	r26, Z+
    4d46:	25 91       	lpm	r18, Z+
    4d48:	35 91       	lpm	r19, Z+
    4d4a:	45 91       	lpm	r20, Z+
    4d4c:	55 91       	lpm	r21, Z+
    4d4e:	a6 f3       	brts	.-24     	; 0x4d38 <__fp_powser+0x16>
    4d50:	ef 01       	movw	r28, r30
    4d52:	0e 94 d7 24 	call	0x49ae	; 0x49ae <__addsf3x>
    4d56:	fe 01       	movw	r30, r28
    4d58:	97 01       	movw	r18, r14
    4d5a:	a8 01       	movw	r20, r16
    4d5c:	da 94       	dec	r13
    4d5e:	69 f7       	brne	.-38     	; 0x4d3a <__fp_powser+0x18>
    4d60:	df 90       	pop	r13
    4d62:	ef 90       	pop	r14
    4d64:	ff 90       	pop	r15
    4d66:	0f 91       	pop	r16
    4d68:	1f 91       	pop	r17
    4d6a:	cf 91       	pop	r28
    4d6c:	df 91       	pop	r29
    4d6e:	08 95       	ret

00004d70 <__fp_pscA>:
    4d70:	00 24       	eor	r0, r0
    4d72:	0a 94       	dec	r0
    4d74:	16 16       	cp	r1, r22
    4d76:	17 06       	cpc	r1, r23
    4d78:	18 06       	cpc	r1, r24
    4d7a:	09 06       	cpc	r0, r25
    4d7c:	08 95       	ret

00004d7e <__fp_pscB>:
    4d7e:	00 24       	eor	r0, r0
    4d80:	0a 94       	dec	r0
    4d82:	12 16       	cp	r1, r18
    4d84:	13 06       	cpc	r1, r19
    4d86:	14 06       	cpc	r1, r20
    4d88:	05 06       	cpc	r0, r21
    4d8a:	08 95       	ret
    4d8c:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__fp_nan>

00004d90 <__fp_rempio2>:
    4d90:	0e 94 1e 27 	call	0x4e3c	; 0x4e3c <__fp_splitA>
    4d94:	d8 f3       	brcs	.-10     	; 0x4d8c <__fp_pscB+0xe>
    4d96:	e8 94       	clt
    4d98:	e0 e0       	ldi	r30, 0x00	; 0
    4d9a:	bb 27       	eor	r27, r27
    4d9c:	9f 57       	subi	r25, 0x7F	; 127
    4d9e:	f0 f0       	brcs	.+60     	; 0x4ddc <__fp_rempio2+0x4c>
    4da0:	2a ed       	ldi	r18, 0xDA	; 218
    4da2:	3f e0       	ldi	r19, 0x0F	; 15
    4da4:	49 ec       	ldi	r20, 0xC9	; 201
    4da6:	06 c0       	rjmp	.+12     	; 0x4db4 <__fp_rempio2+0x24>
    4da8:	ee 0f       	add	r30, r30
    4daa:	bb 0f       	add	r27, r27
    4dac:	66 1f       	adc	r22, r22
    4dae:	77 1f       	adc	r23, r23
    4db0:	88 1f       	adc	r24, r24
    4db2:	28 f0       	brcs	.+10     	; 0x4dbe <__fp_rempio2+0x2e>
    4db4:	b2 3a       	cpi	r27, 0xA2	; 162
    4db6:	62 07       	cpc	r22, r18
    4db8:	73 07       	cpc	r23, r19
    4dba:	84 07       	cpc	r24, r20
    4dbc:	28 f0       	brcs	.+10     	; 0x4dc8 <__fp_rempio2+0x38>
    4dbe:	b2 5a       	subi	r27, 0xA2	; 162
    4dc0:	62 0b       	sbc	r22, r18
    4dc2:	73 0b       	sbc	r23, r19
    4dc4:	84 0b       	sbc	r24, r20
    4dc6:	e3 95       	inc	r30
    4dc8:	9a 95       	dec	r25
    4dca:	72 f7       	brpl	.-36     	; 0x4da8 <__fp_rempio2+0x18>
    4dcc:	80 38       	cpi	r24, 0x80	; 128
    4dce:	30 f4       	brcc	.+12     	; 0x4ddc <__fp_rempio2+0x4c>
    4dd0:	9a 95       	dec	r25
    4dd2:	bb 0f       	add	r27, r27
    4dd4:	66 1f       	adc	r22, r22
    4dd6:	77 1f       	adc	r23, r23
    4dd8:	88 1f       	adc	r24, r24
    4dda:	d2 f7       	brpl	.-12     	; 0x4dd0 <__fp_rempio2+0x40>
    4ddc:	90 48       	sbci	r25, 0x80	; 128
    4dde:	0c 94 08 28 	jmp	0x5010	; 0x5010 <__fp_mpack_finite>

00004de2 <__fp_round>:
    4de2:	09 2e       	mov	r0, r25
    4de4:	03 94       	inc	r0
    4de6:	00 0c       	add	r0, r0
    4de8:	11 f4       	brne	.+4      	; 0x4dee <__fp_round+0xc>
    4dea:	88 23       	and	r24, r24
    4dec:	52 f0       	brmi	.+20     	; 0x4e02 <__fp_round+0x20>
    4dee:	bb 0f       	add	r27, r27
    4df0:	40 f4       	brcc	.+16     	; 0x4e02 <__fp_round+0x20>
    4df2:	bf 2b       	or	r27, r31
    4df4:	11 f4       	brne	.+4      	; 0x4dfa <__fp_round+0x18>
    4df6:	60 ff       	sbrs	r22, 0
    4df8:	04 c0       	rjmp	.+8      	; 0x4e02 <__fp_round+0x20>
    4dfa:	6f 5f       	subi	r22, 0xFF	; 255
    4dfc:	7f 4f       	sbci	r23, 0xFF	; 255
    4dfe:	8f 4f       	sbci	r24, 0xFF	; 255
    4e00:	9f 4f       	sbci	r25, 0xFF	; 255
    4e02:	08 95       	ret

00004e04 <__fp_sinus>:
    4e04:	ef 93       	push	r30
    4e06:	e0 ff       	sbrs	r30, 0
    4e08:	07 c0       	rjmp	.+14     	; 0x4e18 <__fp_sinus+0x14>
    4e0a:	a2 ea       	ldi	r26, 0xA2	; 162
    4e0c:	2a ed       	ldi	r18, 0xDA	; 218
    4e0e:	3f e0       	ldi	r19, 0x0F	; 15
    4e10:	49 ec       	ldi	r20, 0xC9	; 201
    4e12:	5f eb       	ldi	r21, 0xBF	; 191
    4e14:	0e 94 d7 24 	call	0x49ae	; 0x49ae <__addsf3x>
    4e18:	0e 94 f1 26 	call	0x4de2	; 0x4de2 <__fp_round>
    4e1c:	0f 90       	pop	r0
    4e1e:	03 94       	inc	r0
    4e20:	01 fc       	sbrc	r0, 1
    4e22:	90 58       	subi	r25, 0x80	; 128
    4e24:	ed e4       	ldi	r30, 0x4D	; 77
    4e26:	f2 e0       	ldi	r31, 0x02	; 2
    4e28:	0c 94 1b 28 	jmp	0x5036	; 0x5036 <__fp_powsodd>

00004e2c <__fp_split3>:
    4e2c:	57 fd       	sbrc	r21, 7
    4e2e:	90 58       	subi	r25, 0x80	; 128
    4e30:	44 0f       	add	r20, r20
    4e32:	55 1f       	adc	r21, r21
    4e34:	59 f0       	breq	.+22     	; 0x4e4c <__fp_splitA+0x10>
    4e36:	5f 3f       	cpi	r21, 0xFF	; 255
    4e38:	71 f0       	breq	.+28     	; 0x4e56 <__fp_splitA+0x1a>
    4e3a:	47 95       	ror	r20

00004e3c <__fp_splitA>:
    4e3c:	88 0f       	add	r24, r24
    4e3e:	97 fb       	bst	r25, 7
    4e40:	99 1f       	adc	r25, r25
    4e42:	61 f0       	breq	.+24     	; 0x4e5c <__fp_splitA+0x20>
    4e44:	9f 3f       	cpi	r25, 0xFF	; 255
    4e46:	79 f0       	breq	.+30     	; 0x4e66 <__fp_splitA+0x2a>
    4e48:	87 95       	ror	r24
    4e4a:	08 95       	ret
    4e4c:	12 16       	cp	r1, r18
    4e4e:	13 06       	cpc	r1, r19
    4e50:	14 06       	cpc	r1, r20
    4e52:	55 1f       	adc	r21, r21
    4e54:	f2 cf       	rjmp	.-28     	; 0x4e3a <__fp_split3+0xe>
    4e56:	46 95       	lsr	r20
    4e58:	f1 df       	rcall	.-30     	; 0x4e3c <__fp_splitA>
    4e5a:	08 c0       	rjmp	.+16     	; 0x4e6c <__fp_splitA+0x30>
    4e5c:	16 16       	cp	r1, r22
    4e5e:	17 06       	cpc	r1, r23
    4e60:	18 06       	cpc	r1, r24
    4e62:	99 1f       	adc	r25, r25
    4e64:	f1 cf       	rjmp	.-30     	; 0x4e48 <__fp_splitA+0xc>
    4e66:	86 95       	lsr	r24
    4e68:	71 05       	cpc	r23, r1
    4e6a:	61 05       	cpc	r22, r1
    4e6c:	08 94       	sec
    4e6e:	08 95       	ret

00004e70 <__fp_zero>:
    4e70:	e8 94       	clt

00004e72 <__fp_szero>:
    4e72:	bb 27       	eor	r27, r27
    4e74:	66 27       	eor	r22, r22
    4e76:	77 27       	eor	r23, r23
    4e78:	cb 01       	movw	r24, r22
    4e7a:	97 f9       	bld	r25, 7
    4e7c:	08 95       	ret

00004e7e <inverse>:
    4e7e:	9b 01       	movw	r18, r22
    4e80:	ac 01       	movw	r20, r24
    4e82:	60 e0       	ldi	r22, 0x00	; 0
    4e84:	70 e0       	ldi	r23, 0x00	; 0
    4e86:	80 e8       	ldi	r24, 0x80	; 128
    4e88:	9f e3       	ldi	r25, 0x3F	; 63
    4e8a:	0c 94 a3 25 	jmp	0x4b46	; 0x4b46 <__divsf3>

00004e8e <__mulsf3>:
    4e8e:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <__mulsf3x>
    4e92:	0c 94 f1 26 	jmp	0x4de2	; 0x4de2 <__fp_round>
    4e96:	0e 94 b8 26 	call	0x4d70	; 0x4d70 <__fp_pscA>
    4e9a:	38 f0       	brcs	.+14     	; 0x4eaa <__mulsf3+0x1c>
    4e9c:	0e 94 bf 26 	call	0x4d7e	; 0x4d7e <__fp_pscB>
    4ea0:	20 f0       	brcs	.+8      	; 0x4eaa <__mulsf3+0x1c>
    4ea2:	95 23       	and	r25, r21
    4ea4:	11 f0       	breq	.+4      	; 0x4eaa <__mulsf3+0x1c>
    4ea6:	0c 94 88 26 	jmp	0x4d10	; 0x4d10 <__fp_inf>
    4eaa:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__fp_nan>
    4eae:	11 24       	eor	r1, r1
    4eb0:	0c 94 39 27 	jmp	0x4e72	; 0x4e72 <__fp_szero>

00004eb4 <__mulsf3x>:
    4eb4:	0e 94 16 27 	call	0x4e2c	; 0x4e2c <__fp_split3>
    4eb8:	70 f3       	brcs	.-36     	; 0x4e96 <__mulsf3+0x8>

00004eba <__mulsf3_pse>:
    4eba:	95 9f       	mul	r25, r21
    4ebc:	c1 f3       	breq	.-16     	; 0x4eae <__mulsf3+0x20>
    4ebe:	95 0f       	add	r25, r21
    4ec0:	50 e0       	ldi	r21, 0x00	; 0
    4ec2:	55 1f       	adc	r21, r21
    4ec4:	62 9f       	mul	r22, r18
    4ec6:	f0 01       	movw	r30, r0
    4ec8:	72 9f       	mul	r23, r18
    4eca:	bb 27       	eor	r27, r27
    4ecc:	f0 0d       	add	r31, r0
    4ece:	b1 1d       	adc	r27, r1
    4ed0:	63 9f       	mul	r22, r19
    4ed2:	aa 27       	eor	r26, r26
    4ed4:	f0 0d       	add	r31, r0
    4ed6:	b1 1d       	adc	r27, r1
    4ed8:	aa 1f       	adc	r26, r26
    4eda:	64 9f       	mul	r22, r20
    4edc:	66 27       	eor	r22, r22
    4ede:	b0 0d       	add	r27, r0
    4ee0:	a1 1d       	adc	r26, r1
    4ee2:	66 1f       	adc	r22, r22
    4ee4:	82 9f       	mul	r24, r18
    4ee6:	22 27       	eor	r18, r18
    4ee8:	b0 0d       	add	r27, r0
    4eea:	a1 1d       	adc	r26, r1
    4eec:	62 1f       	adc	r22, r18
    4eee:	73 9f       	mul	r23, r19
    4ef0:	b0 0d       	add	r27, r0
    4ef2:	a1 1d       	adc	r26, r1
    4ef4:	62 1f       	adc	r22, r18
    4ef6:	83 9f       	mul	r24, r19
    4ef8:	a0 0d       	add	r26, r0
    4efa:	61 1d       	adc	r22, r1
    4efc:	22 1f       	adc	r18, r18
    4efe:	74 9f       	mul	r23, r20
    4f00:	33 27       	eor	r19, r19
    4f02:	a0 0d       	add	r26, r0
    4f04:	61 1d       	adc	r22, r1
    4f06:	23 1f       	adc	r18, r19
    4f08:	84 9f       	mul	r24, r20
    4f0a:	60 0d       	add	r22, r0
    4f0c:	21 1d       	adc	r18, r1
    4f0e:	82 2f       	mov	r24, r18
    4f10:	76 2f       	mov	r23, r22
    4f12:	6a 2f       	mov	r22, r26
    4f14:	11 24       	eor	r1, r1
    4f16:	9f 57       	subi	r25, 0x7F	; 127
    4f18:	50 40       	sbci	r21, 0x00	; 0
    4f1a:	9a f0       	brmi	.+38     	; 0x4f42 <__mulsf3_pse+0x88>
    4f1c:	f1 f0       	breq	.+60     	; 0x4f5a <__mulsf3_pse+0xa0>
    4f1e:	88 23       	and	r24, r24
    4f20:	4a f0       	brmi	.+18     	; 0x4f34 <__mulsf3_pse+0x7a>
    4f22:	ee 0f       	add	r30, r30
    4f24:	ff 1f       	adc	r31, r31
    4f26:	bb 1f       	adc	r27, r27
    4f28:	66 1f       	adc	r22, r22
    4f2a:	77 1f       	adc	r23, r23
    4f2c:	88 1f       	adc	r24, r24
    4f2e:	91 50       	subi	r25, 0x01	; 1
    4f30:	50 40       	sbci	r21, 0x00	; 0
    4f32:	a9 f7       	brne	.-22     	; 0x4f1e <__mulsf3_pse+0x64>
    4f34:	9e 3f       	cpi	r25, 0xFE	; 254
    4f36:	51 05       	cpc	r21, r1
    4f38:	80 f0       	brcs	.+32     	; 0x4f5a <__mulsf3_pse+0xa0>
    4f3a:	0c 94 88 26 	jmp	0x4d10	; 0x4d10 <__fp_inf>
    4f3e:	0c 94 39 27 	jmp	0x4e72	; 0x4e72 <__fp_szero>
    4f42:	5f 3f       	cpi	r21, 0xFF	; 255
    4f44:	e4 f3       	brlt	.-8      	; 0x4f3e <__mulsf3_pse+0x84>
    4f46:	98 3e       	cpi	r25, 0xE8	; 232
    4f48:	d4 f3       	brlt	.-12     	; 0x4f3e <__mulsf3_pse+0x84>
    4f4a:	86 95       	lsr	r24
    4f4c:	77 95       	ror	r23
    4f4e:	67 95       	ror	r22
    4f50:	b7 95       	ror	r27
    4f52:	f7 95       	ror	r31
    4f54:	e7 95       	ror	r30
    4f56:	9f 5f       	subi	r25, 0xFF	; 255
    4f58:	c1 f7       	brne	.-16     	; 0x4f4a <__mulsf3_pse+0x90>
    4f5a:	fe 2b       	or	r31, r30
    4f5c:	88 0f       	add	r24, r24
    4f5e:	91 1d       	adc	r25, r1
    4f60:	96 95       	lsr	r25
    4f62:	87 95       	ror	r24
    4f64:	97 f9       	bld	r25, 7
    4f66:	08 95       	ret

00004f68 <sin>:
    4f68:	9f 93       	push	r25
    4f6a:	0e 94 c8 26 	call	0x4d90	; 0x4d90 <__fp_rempio2>
    4f6e:	0f 90       	pop	r0
    4f70:	07 fc       	sbrc	r0, 7
    4f72:	ee 5f       	subi	r30, 0xFE	; 254
    4f74:	0c 94 02 27 	jmp	0x4e04	; 0x4e04 <__fp_sinus>
    4f78:	19 f4       	brne	.+6      	; 0x4f80 <sin+0x18>
    4f7a:	16 f4       	brtc	.+4      	; 0x4f80 <sin+0x18>
    4f7c:	0c 94 8e 26 	jmp	0x4d1c	; 0x4d1c <__fp_nan>
    4f80:	0c 94 06 28 	jmp	0x500c	; 0x500c <__fp_mpack>

00004f84 <sqrt>:
    4f84:	0e 94 1e 27 	call	0x4e3c	; 0x4e3c <__fp_splitA>
    4f88:	b8 f3       	brcs	.-18     	; 0x4f78 <sin+0x10>
    4f8a:	99 23       	and	r25, r25
    4f8c:	c9 f3       	breq	.-14     	; 0x4f80 <sin+0x18>
    4f8e:	b6 f3       	brts	.-20     	; 0x4f7c <sin+0x14>
    4f90:	9f 57       	subi	r25, 0x7F	; 127
    4f92:	55 0b       	sbc	r21, r21
    4f94:	87 ff       	sbrs	r24, 7
    4f96:	0e 94 14 28 	call	0x5028	; 0x5028 <__fp_norm2>
    4f9a:	00 24       	eor	r0, r0
    4f9c:	a0 e6       	ldi	r26, 0x60	; 96
    4f9e:	40 ea       	ldi	r20, 0xA0	; 160
    4fa0:	90 01       	movw	r18, r0
    4fa2:	80 58       	subi	r24, 0x80	; 128
    4fa4:	56 95       	lsr	r21
    4fa6:	97 95       	ror	r25
    4fa8:	28 f4       	brcc	.+10     	; 0x4fb4 <sqrt+0x30>
    4faa:	80 5c       	subi	r24, 0xC0	; 192
    4fac:	66 0f       	add	r22, r22
    4fae:	77 1f       	adc	r23, r23
    4fb0:	88 1f       	adc	r24, r24
    4fb2:	20 f0       	brcs	.+8      	; 0x4fbc <sqrt+0x38>
    4fb4:	26 17       	cp	r18, r22
    4fb6:	37 07       	cpc	r19, r23
    4fb8:	48 07       	cpc	r20, r24
    4fba:	30 f4       	brcc	.+12     	; 0x4fc8 <sqrt+0x44>
    4fbc:	62 1b       	sub	r22, r18
    4fbe:	73 0b       	sbc	r23, r19
    4fc0:	84 0b       	sbc	r24, r20
    4fc2:	20 29       	or	r18, r0
    4fc4:	31 29       	or	r19, r1
    4fc6:	4a 2b       	or	r20, r26
    4fc8:	a6 95       	lsr	r26
    4fca:	17 94       	ror	r1
    4fcc:	07 94       	ror	r0
    4fce:	20 25       	eor	r18, r0
    4fd0:	31 25       	eor	r19, r1
    4fd2:	4a 27       	eor	r20, r26
    4fd4:	58 f7       	brcc	.-42     	; 0x4fac <sqrt+0x28>
    4fd6:	66 0f       	add	r22, r22
    4fd8:	77 1f       	adc	r23, r23
    4fda:	88 1f       	adc	r24, r24
    4fdc:	20 f0       	brcs	.+8      	; 0x4fe6 <sqrt+0x62>
    4fde:	26 17       	cp	r18, r22
    4fe0:	37 07       	cpc	r19, r23
    4fe2:	48 07       	cpc	r20, r24
    4fe4:	30 f4       	brcc	.+12     	; 0x4ff2 <sqrt+0x6e>
    4fe6:	62 0b       	sbc	r22, r18
    4fe8:	73 0b       	sbc	r23, r19
    4fea:	84 0b       	sbc	r24, r20
    4fec:	20 0d       	add	r18, r0
    4fee:	31 1d       	adc	r19, r1
    4ff0:	41 1d       	adc	r20, r1
    4ff2:	a0 95       	com	r26
    4ff4:	81 f7       	brne	.-32     	; 0x4fd6 <sqrt+0x52>
    4ff6:	b9 01       	movw	r22, r18
    4ff8:	84 2f       	mov	r24, r20
    4ffa:	91 58       	subi	r25, 0x81	; 129
    4ffc:	88 0f       	add	r24, r24
    4ffe:	96 95       	lsr	r25
    5000:	87 95       	ror	r24
    5002:	08 95       	ret

00005004 <square>:
    5004:	9b 01       	movw	r18, r22
    5006:	ac 01       	movw	r20, r24
    5008:	0c 94 47 27 	jmp	0x4e8e	; 0x4e8e <__mulsf3>

0000500c <__fp_mpack>:
    500c:	9f 3f       	cpi	r25, 0xFF	; 255
    500e:	31 f0       	breq	.+12     	; 0x501c <__fp_mpack_finite+0xc>

00005010 <__fp_mpack_finite>:
    5010:	91 50       	subi	r25, 0x01	; 1
    5012:	20 f4       	brcc	.+8      	; 0x501c <__fp_mpack_finite+0xc>
    5014:	87 95       	ror	r24
    5016:	77 95       	ror	r23
    5018:	67 95       	ror	r22
    501a:	b7 95       	ror	r27
    501c:	88 0f       	add	r24, r24
    501e:	91 1d       	adc	r25, r1
    5020:	96 95       	lsr	r25
    5022:	87 95       	ror	r24
    5024:	97 f9       	bld	r25, 7
    5026:	08 95       	ret

00005028 <__fp_norm2>:
    5028:	91 50       	subi	r25, 0x01	; 1
    502a:	50 40       	sbci	r21, 0x00	; 0
    502c:	66 0f       	add	r22, r22
    502e:	77 1f       	adc	r23, r23
    5030:	88 1f       	adc	r24, r24
    5032:	d2 f7       	brpl	.-12     	; 0x5028 <__fp_norm2>
    5034:	08 95       	ret

00005036 <__fp_powsodd>:
    5036:	9f 93       	push	r25
    5038:	8f 93       	push	r24
    503a:	7f 93       	push	r23
    503c:	6f 93       	push	r22
    503e:	ff 93       	push	r31
    5040:	ef 93       	push	r30
    5042:	9b 01       	movw	r18, r22
    5044:	ac 01       	movw	r20, r24
    5046:	0e 94 47 27 	call	0x4e8e	; 0x4e8e <__mulsf3>
    504a:	ef 91       	pop	r30
    504c:	ff 91       	pop	r31
    504e:	0e 94 91 26 	call	0x4d22	; 0x4d22 <__fp_powser>
    5052:	2f 91       	pop	r18
    5054:	3f 91       	pop	r19
    5056:	4f 91       	pop	r20
    5058:	5f 91       	pop	r21
    505a:	0c 94 47 27 	jmp	0x4e8e	; 0x4e8e <__mulsf3>

0000505e <__divmodhi4>:
    505e:	97 fb       	bst	r25, 7
    5060:	07 2e       	mov	r0, r23
    5062:	16 f4       	brtc	.+4      	; 0x5068 <__divmodhi4+0xa>
    5064:	00 94       	com	r0
    5066:	07 d0       	rcall	.+14     	; 0x5076 <__divmodhi4_neg1>
    5068:	77 fd       	sbrc	r23, 7
    506a:	09 d0       	rcall	.+18     	; 0x507e <__divmodhi4_neg2>
    506c:	0e 94 7c 28 	call	0x50f8	; 0x50f8 <__udivmodhi4>
    5070:	07 fc       	sbrc	r0, 7
    5072:	05 d0       	rcall	.+10     	; 0x507e <__divmodhi4_neg2>
    5074:	3e f4       	brtc	.+14     	; 0x5084 <__divmodhi4_exit>

00005076 <__divmodhi4_neg1>:
    5076:	90 95       	com	r25
    5078:	81 95       	neg	r24
    507a:	9f 4f       	sbci	r25, 0xFF	; 255
    507c:	08 95       	ret

0000507e <__divmodhi4_neg2>:
    507e:	70 95       	com	r23
    5080:	61 95       	neg	r22
    5082:	7f 4f       	sbci	r23, 0xFF	; 255

00005084 <__divmodhi4_exit>:
    5084:	08 95       	ret

00005086 <__udivmodsi4>:
    5086:	a1 e2       	ldi	r26, 0x21	; 33
    5088:	1a 2e       	mov	r1, r26
    508a:	aa 1b       	sub	r26, r26
    508c:	bb 1b       	sub	r27, r27
    508e:	fd 01       	movw	r30, r26
    5090:	0d c0       	rjmp	.+26     	; 0x50ac <__udivmodsi4_ep>

00005092 <__udivmodsi4_loop>:
    5092:	aa 1f       	adc	r26, r26
    5094:	bb 1f       	adc	r27, r27
    5096:	ee 1f       	adc	r30, r30
    5098:	ff 1f       	adc	r31, r31
    509a:	a2 17       	cp	r26, r18
    509c:	b3 07       	cpc	r27, r19
    509e:	e4 07       	cpc	r30, r20
    50a0:	f5 07       	cpc	r31, r21
    50a2:	20 f0       	brcs	.+8      	; 0x50ac <__udivmodsi4_ep>
    50a4:	a2 1b       	sub	r26, r18
    50a6:	b3 0b       	sbc	r27, r19
    50a8:	e4 0b       	sbc	r30, r20
    50aa:	f5 0b       	sbc	r31, r21

000050ac <__udivmodsi4_ep>:
    50ac:	66 1f       	adc	r22, r22
    50ae:	77 1f       	adc	r23, r23
    50b0:	88 1f       	adc	r24, r24
    50b2:	99 1f       	adc	r25, r25
    50b4:	1a 94       	dec	r1
    50b6:	69 f7       	brne	.-38     	; 0x5092 <__udivmodsi4_loop>
    50b8:	60 95       	com	r22
    50ba:	70 95       	com	r23
    50bc:	80 95       	com	r24
    50be:	90 95       	com	r25
    50c0:	9b 01       	movw	r18, r22
    50c2:	ac 01       	movw	r20, r24
    50c4:	bd 01       	movw	r22, r26
    50c6:	cf 01       	movw	r24, r30
    50c8:	08 95       	ret

000050ca <__tablejump2__>:
    50ca:	ee 0f       	add	r30, r30
    50cc:	ff 1f       	adc	r31, r31
    50ce:	88 1f       	adc	r24, r24
    50d0:	8b bf       	out	0x3b, r24	; 59
    50d2:	07 90       	elpm	r0, Z+
    50d4:	f6 91       	elpm	r31, Z
    50d6:	e0 2d       	mov	r30, r0
    50d8:	19 94       	eijmp

000050da <__umulhisi3>:
    50da:	a2 9f       	mul	r26, r18
    50dc:	b0 01       	movw	r22, r0
    50de:	b3 9f       	mul	r27, r19
    50e0:	c0 01       	movw	r24, r0
    50e2:	a3 9f       	mul	r26, r19
    50e4:	70 0d       	add	r23, r0
    50e6:	81 1d       	adc	r24, r1
    50e8:	11 24       	eor	r1, r1
    50ea:	91 1d       	adc	r25, r1
    50ec:	b2 9f       	mul	r27, r18
    50ee:	70 0d       	add	r23, r0
    50f0:	81 1d       	adc	r24, r1
    50f2:	11 24       	eor	r1, r1
    50f4:	91 1d       	adc	r25, r1
    50f6:	08 95       	ret

000050f8 <__udivmodhi4>:
    50f8:	aa 1b       	sub	r26, r26
    50fa:	bb 1b       	sub	r27, r27
    50fc:	51 e1       	ldi	r21, 0x11	; 17
    50fe:	07 c0       	rjmp	.+14     	; 0x510e <__udivmodhi4_ep>

00005100 <__udivmodhi4_loop>:
    5100:	aa 1f       	adc	r26, r26
    5102:	bb 1f       	adc	r27, r27
    5104:	a6 17       	cp	r26, r22
    5106:	b7 07       	cpc	r27, r23
    5108:	10 f0       	brcs	.+4      	; 0x510e <__udivmodhi4_ep>
    510a:	a6 1b       	sub	r26, r22
    510c:	b7 0b       	sbc	r27, r23

0000510e <__udivmodhi4_ep>:
    510e:	88 1f       	adc	r24, r24
    5110:	99 1f       	adc	r25, r25
    5112:	5a 95       	dec	r21
    5114:	a9 f7       	brne	.-22     	; 0x5100 <__udivmodhi4_loop>
    5116:	80 95       	com	r24
    5118:	90 95       	com	r25
    511a:	bc 01       	movw	r22, r24
    511c:	cd 01       	movw	r24, r26
    511e:	08 95       	ret

00005120 <memcpy>:
    5120:	fb 01       	movw	r30, r22
    5122:	dc 01       	movw	r26, r24
    5124:	02 c0       	rjmp	.+4      	; 0x512a <memcpy+0xa>
    5126:	01 90       	ld	r0, Z+
    5128:	0d 92       	st	X+, r0
    512a:	41 50       	subi	r20, 0x01	; 1
    512c:	50 40       	sbci	r21, 0x00	; 0
    512e:	d8 f7       	brcc	.-10     	; 0x5126 <memcpy+0x6>
    5130:	08 95       	ret

00005132 <memset>:
    5132:	dc 01       	movw	r26, r24
    5134:	01 c0       	rjmp	.+2      	; 0x5138 <memset+0x6>
    5136:	6d 93       	st	X+, r22
    5138:	41 50       	subi	r20, 0x01	; 1
    513a:	50 40       	sbci	r21, 0x00	; 0
    513c:	e0 f7       	brcc	.-8      	; 0x5136 <memset+0x4>
    513e:	08 95       	ret

00005140 <strncpy>:
    5140:	fb 01       	movw	r30, r22
    5142:	dc 01       	movw	r26, r24
    5144:	41 50       	subi	r20, 0x01	; 1
    5146:	50 40       	sbci	r21, 0x00	; 0
    5148:	48 f0       	brcs	.+18     	; 0x515c <strncpy+0x1c>
    514a:	01 90       	ld	r0, Z+
    514c:	0d 92       	st	X+, r0
    514e:	00 20       	and	r0, r0
    5150:	c9 f7       	brne	.-14     	; 0x5144 <strncpy+0x4>
    5152:	01 c0       	rjmp	.+2      	; 0x5156 <strncpy+0x16>
    5154:	1d 92       	st	X+, r1
    5156:	41 50       	subi	r20, 0x01	; 1
    5158:	50 40       	sbci	r21, 0x00	; 0
    515a:	e0 f7       	brcc	.-8      	; 0x5154 <strncpy+0x14>
    515c:	08 95       	ret

0000515e <__itoa_ncheck>:
    515e:	bb 27       	eor	r27, r27
    5160:	4a 30       	cpi	r20, 0x0A	; 10
    5162:	31 f4       	brne	.+12     	; 0x5170 <__itoa_ncheck+0x12>
    5164:	99 23       	and	r25, r25
    5166:	22 f4       	brpl	.+8      	; 0x5170 <__itoa_ncheck+0x12>
    5168:	bd e2       	ldi	r27, 0x2D	; 45
    516a:	90 95       	com	r25
    516c:	81 95       	neg	r24
    516e:	9f 4f       	sbci	r25, 0xFF	; 255
    5170:	0c 94 f3 28 	jmp	0x51e6	; 0x51e6 <__utoa_common>

00005174 <ultoa>:
    5174:	25 32       	cpi	r18, 0x25	; 37
    5176:	31 05       	cpc	r19, r1
    5178:	20 f4       	brcc	.+8      	; 0x5182 <ultoa+0xe>
    517a:	22 30       	cpi	r18, 0x02	; 2
    517c:	10 f0       	brcs	.+4      	; 0x5182 <ultoa+0xe>
    517e:	0c 94 c5 28 	jmp	0x518a	; 0x518a <__ultoa_ncheck>
    5182:	fa 01       	movw	r30, r20
    5184:	10 82       	st	Z, r1
    5186:	ca 01       	movw	r24, r20
    5188:	08 95       	ret

0000518a <__ultoa_ncheck>:
    518a:	bb 27       	eor	r27, r27

0000518c <__ultoa_common>:
    518c:	fa 01       	movw	r30, r20
    518e:	a6 2f       	mov	r26, r22
    5190:	62 17       	cp	r22, r18
    5192:	71 05       	cpc	r23, r1
    5194:	81 05       	cpc	r24, r1
    5196:	91 05       	cpc	r25, r1
    5198:	33 0b       	sbc	r19, r19
    519a:	30 fb       	bst	r19, 0
    519c:	66 f0       	brts	.+24     	; 0x51b6 <__ultoa_common+0x2a>
    519e:	aa 27       	eor	r26, r26
    51a0:	66 0f       	add	r22, r22
    51a2:	77 1f       	adc	r23, r23
    51a4:	88 1f       	adc	r24, r24
    51a6:	99 1f       	adc	r25, r25
    51a8:	aa 1f       	adc	r26, r26
    51aa:	a2 17       	cp	r26, r18
    51ac:	10 f0       	brcs	.+4      	; 0x51b2 <__ultoa_common+0x26>
    51ae:	a2 1b       	sub	r26, r18
    51b0:	63 95       	inc	r22
    51b2:	38 50       	subi	r19, 0x08	; 8
    51b4:	a9 f7       	brne	.-22     	; 0x51a0 <__ultoa_common+0x14>
    51b6:	a0 5d       	subi	r26, 0xD0	; 208
    51b8:	aa 33       	cpi	r26, 0x3A	; 58
    51ba:	08 f0       	brcs	.+2      	; 0x51be <__ultoa_common+0x32>
    51bc:	a9 5d       	subi	r26, 0xD9	; 217
    51be:	a1 93       	st	Z+, r26
    51c0:	36 f7       	brtc	.-52     	; 0x518e <__ultoa_common+0x2>
    51c2:	b1 11       	cpse	r27, r1
    51c4:	b1 93       	st	Z+, r27
    51c6:	10 82       	st	Z, r1
    51c8:	ca 01       	movw	r24, r20
    51ca:	0c 94 0c 29 	jmp	0x5218	; 0x5218 <strrev>

000051ce <utoa>:
    51ce:	45 32       	cpi	r20, 0x25	; 37
    51d0:	51 05       	cpc	r21, r1
    51d2:	20 f4       	brcc	.+8      	; 0x51dc <utoa+0xe>
    51d4:	42 30       	cpi	r20, 0x02	; 2
    51d6:	10 f0       	brcs	.+4      	; 0x51dc <utoa+0xe>
    51d8:	0c 94 f2 28 	jmp	0x51e4	; 0x51e4 <__utoa_ncheck>
    51dc:	fb 01       	movw	r30, r22
    51de:	10 82       	st	Z, r1
    51e0:	cb 01       	movw	r24, r22
    51e2:	08 95       	ret

000051e4 <__utoa_ncheck>:
    51e4:	bb 27       	eor	r27, r27

000051e6 <__utoa_common>:
    51e6:	fb 01       	movw	r30, r22
    51e8:	55 27       	eor	r21, r21
    51ea:	aa 27       	eor	r26, r26
    51ec:	88 0f       	add	r24, r24
    51ee:	99 1f       	adc	r25, r25
    51f0:	aa 1f       	adc	r26, r26
    51f2:	a4 17       	cp	r26, r20
    51f4:	10 f0       	brcs	.+4      	; 0x51fa <__utoa_common+0x14>
    51f6:	a4 1b       	sub	r26, r20
    51f8:	83 95       	inc	r24
    51fa:	50 51       	subi	r21, 0x10	; 16
    51fc:	b9 f7       	brne	.-18     	; 0x51ec <__utoa_common+0x6>
    51fe:	a0 5d       	subi	r26, 0xD0	; 208
    5200:	aa 33       	cpi	r26, 0x3A	; 58
    5202:	08 f0       	brcs	.+2      	; 0x5206 <__utoa_common+0x20>
    5204:	a9 5d       	subi	r26, 0xD9	; 217
    5206:	a1 93       	st	Z+, r26
    5208:	00 97       	sbiw	r24, 0x00	; 0
    520a:	79 f7       	brne	.-34     	; 0x51ea <__utoa_common+0x4>
    520c:	b1 11       	cpse	r27, r1
    520e:	b1 93       	st	Z+, r27
    5210:	11 92       	st	Z+, r1
    5212:	cb 01       	movw	r24, r22
    5214:	0c 94 0c 29 	jmp	0x5218	; 0x5218 <strrev>

00005218 <strrev>:
    5218:	dc 01       	movw	r26, r24
    521a:	fc 01       	movw	r30, r24
    521c:	67 2f       	mov	r22, r23
    521e:	71 91       	ld	r23, Z+
    5220:	77 23       	and	r23, r23
    5222:	e1 f7       	brne	.-8      	; 0x521c <strrev+0x4>
    5224:	32 97       	sbiw	r30, 0x02	; 2
    5226:	04 c0       	rjmp	.+8      	; 0x5230 <strrev+0x18>
    5228:	7c 91       	ld	r23, X
    522a:	6d 93       	st	X+, r22
    522c:	70 83       	st	Z, r23
    522e:	62 91       	ld	r22, -Z
    5230:	ae 17       	cp	r26, r30
    5232:	bf 07       	cpc	r27, r31
    5234:	c8 f3       	brcs	.-14     	; 0x5228 <strrev+0x10>
    5236:	08 95       	ret

00005238 <_exit>:
    5238:	f8 94       	cli

0000523a <__stop_program>:
    523a:	ff cf       	rjmp	.-2      	; 0x523a <__stop_program>
