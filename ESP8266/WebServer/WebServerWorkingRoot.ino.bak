/* Create a WiFi access point and provide a web server on it.
 *
 * Code is modified from
 * https://42bots.com/tutorials/esp8266-example-wi-fi-access-point-web-server-static-ip-remote-control/
 */

#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <FS.h>   // Include the SPIFFS library

#define HTTP_SEND_CHARS 1000

// Configuration
IPAddress    apIP(192, 168, 4, 1);
const char *ssid = "ALEC'S MASTER";
const char *password = "";

// Define a web server at port 80 for HTTP
ESP8266WebServer server(80);

void handleRoot() {

  //const char html[] = "<html> <head><meta name='viewport' content='width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0'><title>SwarmBot Manual Control</title><style>body { overflow:hidden; padding:0; margin:0; background-color:#BBB;}#info {position:absolute; top:0px; width:100%; padding:5px; text-align:center;}#info a {color:#66F; text-decoration:none;}#container {width:100%; height:100%; overflow:hidden; padding:0; margin:0; -webkit-user-select:none; -moz-user-select:none;}</style> </head> <body> <div id='container'></div> <div id='info'><h1>SWARM BOT MANUAL CONTROL</h1>Your screen is the joystick. Have at it.<br/>Speed: <span id='showSpeed'>100</span><div class='slidecontainer'> <input type='range' min='1' max='100' value='100' class='slider' id='speed'> <script>var slider = document.getElementById('speed'); var disp = document.getElementById('showSpeed');slider.oninput = function(){showSpeed.innerHTML = this.value;} </script></div><span id='result'></span> </div> <script src='http://jeromeetienne.github.io/virtualjoystick.js/virtualjoystick.js'></script> <!-- SOURCE: http://jeromeetienne.github.io/virtualjoystick.js/examples/basic.html --> <script>console.log('touchscreen is', VirtualJoystick.touchScreenAvailable() ? 'available' : 'not available');var joystick = new VirtualJoystick({ container : document.getElementById('container'), mouseSupport : true,});setInterval(function(){ var outputEl = document.getElementById('result'); outputEl.innerHTML = '<b>Direction:</b> ' + ' dx:'+joystick.deltaX() + ' dy:'+joystick.deltaY() + (joystick.right() ? ' right' : '') + (joystick.up() ? ' up' : '') + (joystick.left() ? ' left' : '') + (joystick.down() ? ' down' : '') }, 1/30 * 1000); </script> </body></html>";
  int sec = millis() / 1000;
  int min = sec / 60;
  int hr = min / 60;

// Build an HTML page to display on the web-server root address
  //server.send( 200, "text/html", "" );
  File file = SPIFFS.open("/manCtrl.html", "r");
  server.streamFile(file, "text/html");
}

void handleNotFound() {

  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += ( server.method() == HTTP_GET ) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";

  for ( uint8_t i = 0; i < server.args(); i++ ) {
    message += " " + server.argName ( i ) + ": " + server.arg ( i ) + "\n";
  }

  server.send ( 404, "text/plain", message );
}

void setup() {
  delay(1500);

  Serial.begin(115200);
  Serial.println();
  Serial.println("Configuring access point...");

  SPIFFS.begin(); 

  //set-up the custom IP address
  WiFi.mode(WIFI_AP_STA);
  WiFi.softAPConfig(apIP, apIP, IPAddress(255, 255, 255, 0));   // subnet FF FF FF 00  
  
  /* You can remove the password parameter if you want the AP to be open. */
  WiFi.softAP(ssid, password);

  IPAddress myIP = WiFi.softAPIP();
  Serial.print("AP IP address: ");
  Serial.println(myIP);
 
  server.on ( "/", handleRoot );
  server.on ( "/inline", []() {
    server.send ( 200, "text/plain", "this works as well" );
  } );
  server.onNotFound ( handleNotFound );
  
  server.begin();
  Serial.println("HTTP server started");
}

void loop() {
  
  server.handleClient();
}
