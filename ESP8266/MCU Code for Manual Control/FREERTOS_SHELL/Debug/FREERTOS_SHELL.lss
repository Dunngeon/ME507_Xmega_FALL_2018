
FREERTOS_SHELL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000045e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ee  00802000  000045e0  00004674  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000010fc  008020ee  008020ee  00004762  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00004762  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004794  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000808  00000000  00000000  000047d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00011112  00000000  00000000  00004fdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00006649  00000000  00000000  000160ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00006f89  00000000  00000000  0001c737  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001f00  00000000  00000000  000236c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000330b3  00000000  00000000  000255c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000074b7  00000000  00000000  00058673  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000006d0  00000000  00000000  0005fb2a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00001872  00000000  00000000  000601fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 bc 01 	jmp	0x378	; 0x378 <__ctors_end>
       4:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
       8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
       c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      10:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      14:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      18:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      1c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      20:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      24:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      28:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      2c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      30:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      34:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      38:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__vector_14>
      3c:	0c 94 91 06 	jmp	0xd22	; 0xd22 <__vector_15>
      40:	0c 94 be 06 	jmp	0xd7c	; 0xd7c <__vector_16>
      44:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__vector_17>
      48:	0c 94 18 07 	jmp	0xe30	; 0xe30 <__vector_18>
      4c:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <__vector_19>
      50:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__vector_20>
      54:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__vector_21>
      58:	0c 94 cc 07 	jmp	0xf98	; 0xf98 <__vector_22>
      5c:	0c 94 f9 07 	jmp	0xff2	; 0xff2 <__vector_23>
      60:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      64:	0c 94 20 1f 	jmp	0x3e40	; 0x3e40 <__vector_25>
      68:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      6c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      70:	0c 94 78 1f 	jmp	0x3ef0	; 0x3ef0 <__vector_28>
      74:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      78:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      7c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      80:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      84:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      88:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      8c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      90:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      94:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      98:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      9c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      a0:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      a4:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      a8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      ac:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      b0:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      b4:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      b8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      bc:	0c 94 e8 09 	jmp	0x13d0	; 0x13d0 <__vector_47>
      c0:	0c 94 15 0a 	jmp	0x142a	; 0x142a <__vector_48>
      c4:	0c 94 42 0a 	jmp	0x1484	; 0x1484 <__vector_49>
      c8:	0c 94 6f 0a 	jmp	0x14de	; 0x14de <__vector_50>
      cc:	0c 94 9c 0a 	jmp	0x1538	; 0x1538 <__vector_51>
      d0:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <__vector_52>
      d4:	0c 94 f6 0a 	jmp	0x15ec	; 0x15ec <__vector_53>
      d8:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__vector_54>
      dc:	0c 94 83 11 	jmp	0x2306	; 0x2306 <__vector_55>
      e0:	0c 94 50 0b 	jmp	0x16a0	; 0x16a0 <__vector_56>
      e4:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      e8:	0c 94 80 20 	jmp	0x4100	; 0x4100 <__vector_58>
      ec:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      f0:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      f4:	0c 94 d8 20 	jmp	0x41b0	; 0x41b0 <__vector_61>
      f8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      fc:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     100:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     104:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     108:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     10c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     110:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     114:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     118:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     11c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     120:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     124:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     128:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     12c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     130:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     134:	0c 94 26 08 	jmp	0x104c	; 0x104c <__vector_77>
     138:	0c 94 53 08 	jmp	0x10a6	; 0x10a6 <__vector_78>
     13c:	0c 94 80 08 	jmp	0x1100	; 0x1100 <__vector_79>
     140:	0c 94 ad 08 	jmp	0x115a	; 0x115a <__vector_80>
     144:	0c 94 da 08 	jmp	0x11b4	; 0x11b4 <__vector_81>
     148:	0c 94 07 09 	jmp	0x120e	; 0x120e <__vector_82>
     14c:	0c 94 34 09 	jmp	0x1268	; 0x1268 <__vector_83>
     150:	0c 94 61 09 	jmp	0x12c2	; 0x12c2 <__vector_84>
     154:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__vector_85>
     158:	0c 94 bb 09 	jmp	0x1376	; 0x1376 <__vector_86>
     15c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     160:	0c 94 d0 1f 	jmp	0x3fa0	; 0x3fa0 <__vector_88>
     164:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     168:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     16c:	0c 94 28 20 	jmp	0x4050	; 0x4050 <__vector_91>
     170:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     174:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     178:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     17c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     180:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     184:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     188:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     18c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     190:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     194:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     198:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     19c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1a0:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1a4:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1a8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1ac:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1b0:	0c 94 7d 0b 	jmp	0x16fa	; 0x16fa <__vector_108>
     1b4:	0c 94 aa 0b 	jmp	0x1754	; 0x1754 <__vector_109>
     1b8:	0c 94 d7 0b 	jmp	0x17ae	; 0x17ae <__vector_110>
     1bc:	0c 94 04 0c 	jmp	0x1808	; 0x1808 <__vector_111>
     1c0:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__vector_112>
     1c4:	0c 94 5e 0c 	jmp	0x18bc	; 0x18bc <__vector_113>
     1c8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1cc:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1d0:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1d4:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1d8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1dc:	0c 94 30 21 	jmp	0x4260	; 0x4260 <__vector_119>
     1e0:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1e4:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1e8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1ec:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1f0:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1f4:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1f8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
     1fc:	89 0d       	add	r24, r9
     1fe:	9c 0d       	add	r25, r12
     200:	af 0d       	add	r26, r15
     202:	c2 0d       	add	r28, r2
     204:	d5 0d       	add	r29, r5
     206:	e8 0d       	add	r30, r8
     208:	fb 0d       	add	r31, r11
     20a:	c1 1c       	adc	r12, r1
     20c:	c4 1c       	adc	r12, r4
     20e:	c7 1c       	adc	r12, r7
     210:	ca 1c       	adc	r12, r10
     212:	cd 1c       	adc	r12, r13
     214:	d0 1c       	adc	r13, r0
     216:	d2 1c       	adc	r13, r2
     218:	e3 1c       	adc	r14, r3
     21a:	eb 1c       	adc	r14, r11
     21c:	f5 1c       	adc	r15, r5
     21e:	f3 1c       	adc	r15, r3

00000220 <__trampolines_start>:
     220:	0c 94 64 1c 	jmp	0x38c8	; 0x38c8 <_ZN8emstream13ready_to_sendEv>
     224:	0c 94 da 04 	jmp	0x9b4	; 0x9b4 <_ZN10task_motor3runEv>
     228:	0c 94 e3 1c 	jmp	0x39c6	; 0x39c6 <_ZN8emstreamlsE15ser_manipulator+0x62>
     22c:	0c 94 eb 1c 	jmp	0x39d6	; 0x39d6 <_ZN8emstreamlsE15ser_manipulator+0x72>
     230:	0c 94 b3 1b 	jmp	0x3766	; 0x3766 <__cxa_pure_virtual>
     234:	0c 94 ca 1c 	jmp	0x3994	; 0x3994 <_ZN8emstreamlsE15ser_manipulator+0x30>
     238:	0c 94 c4 1c 	jmp	0x3988	; 0x3988 <_ZN8emstreamlsE15ser_manipulator+0x24>
     23c:	0c 94 6b 1c 	jmp	0x38d6	; 0x38d6 <_ZN8emstream12transmit_nowEv>
     240:	0c 94 af 0d 	jmp	0x1b5e	; 0x1b5e <pwm_init+0x72>
     244:	0c 94 d0 1c 	jmp	0x39a0	; 0x39a0 <_ZN8emstreamlsE15ser_manipulator+0x3c>
     248:	0c 94 6c 1c 	jmp	0x38d8	; 0x38d8 <_ZN8emstream12clear_screenEv>
     24c:	0c 94 75 1e 	jmp	0x3cea	; 0x3cea <_ZN5rs23212clear_screenEv>
     250:	0c 94 0f 14 	jmp	0x281e	; 0x281e <prvIdleTask>
     254:	0c 94 62 1e 	jmp	0x3cc4	; 0x3cc4 <_ZN5rs23214check_for_charEv>
     258:	0c 94 66 1c 	jmp	0x38cc	; 0x38cc <_ZN8emstream7getcharEv>
     25c:	0c 94 fb 0d 	jmp	0x1bf6	; 0x1bf6 <pwm_init+0x10a>
     260:	0c 94 f0 21 	jmp	0x43e0	; 0x43e0 <_GLOBAL__sub_I_print_ser_queue>
     264:	0c 94 9c 0d 	jmp	0x1b38	; 0x1b38 <pwm_init+0x4c>
     268:	0c 94 f5 1c 	jmp	0x39ea	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
     26c:	0c 94 89 0d 	jmp	0x1b12	; 0x1b12 <pwm_init+0x26>
     270:	0c 94 cd 1c 	jmp	0x399a	; 0x399a <_ZN8emstreamlsE15ser_manipulator+0x36>
     274:	0c 94 60 1b 	jmp	0x36c0	; 0x36c0 <_ZN14frt_text_queue7putcharEc>
     278:	0c 94 b9 01 	jmp	0x372	; 0x372 <_call_static_run_method>
     27c:	0c 94 37 1b 	jmp	0x366e	; 0x366e <_ZN14frt_text_queue7getcharEv>
     280:	0c 94 3c 1e 	jmp	0x3c78	; 0x3c78 <_ZN5rs2327getcharEv>
     284:	0c 94 d5 0d 	jmp	0x1baa	; 0x1baa <pwm_init+0xbe>
     288:	0c 94 c7 1c 	jmp	0x398e	; 0x398e <_ZN8emstreamlsE15ser_manipulator+0x2a>
     28c:	0c 94 a7 1a 	jmp	0x354e	; 0x354e <_ZN8frt_task12print_statusER8emstream>
     290:	0c 94 c2 0d 	jmp	0x1b84	; 0x1b84 <pwm_init+0x98>
     294:	0c 94 55 1b 	jmp	0x36aa	; 0x36aa <_ZN14frt_text_queue14check_for_charEv>
     298:	0c 94 ef 01 	jmp	0x3de	; 0x3de <_ZN18FollowInstructions3runEv>
     29c:	0c 94 18 1e 	jmp	0x3c30	; 0x3c30 <_ZN5rs2327putcharEc>
     2a0:	0c 94 69 1c 	jmp	0x38d2	; 0x38d2 <_ZN8emstream14check_for_charEv>
     2a4:	0c 94 c1 1c 	jmp	0x3982	; 0x3982 <_ZN8emstreamlsE15ser_manipulator+0x1e>
     2a8:	0c 94 d2 1c 	jmp	0x39a4	; 0x39a4 <_ZN8emstreamlsE15ser_manipulator+0x40>
     2ac:	0c 94 e8 0d 	jmp	0x1bd0	; 0x1bd0 <pwm_init+0xe4>
     2b0:	0c 94 f3 1c 	jmp	0x39e6	; 0x39e6 <_ZN8emstreamlsE15ser_manipulator+0x82>

000002b4 <__trampolines_end>:
     2b4:	52 65       	ori	r21, 0x52	; 82
     2b6:	73 65       	ori	r23, 0x53	; 83
     2b8:	74 74       	andi	r23, 0x44	; 68
     2ba:	69 6e       	ori	r22, 0xE9	; 233
     2bc:	67 00       	.word	0x0067	; ????

000002be <_ZZN8frt_task15emergency_resetEvE3__c>:
     2be:	45 52 52 4f 52 20 69 6e 20 74 61 73 6b 20 00        ERROR in task .

000002cd <_ZZN8frt_taskC4EPKchjP8emstreamE3__c_2>:
     2cd:	45 52 52 4f 52 20 63 72 65 61 74 69 6e 67 20 74     ERROR creating t
     2dd:	61 73 6b 20 00                                      ask .

000002e2 <_ZZN8frt_taskC4EPKchjP8emstreamE3__c_1>:
     2e2:	2c 20 73 74 61 63 6b 20 61 74 20 30 78 00           , stack at 0x.

000002f0 <_ZZN8frt_taskC4EPKchjP8emstreamE3__c_0>:
     2f0:	20 63 72 65 61 74 65 64 00                           created.

000002f9 <_ZZN8frt_taskC4EPKchjP8emstreamE3__c>:
     2f9:	54 61 73 6b 20 00                                   Task .

000002ff <_ZZ15print_task_listP8emstreamE3__c_9>:
     2ff:	09 09 00                                            ...

00000302 <_ZZ15print_task_listP8emstreamE3__c_8>:
     302:	2f 00                                               /.

00000304 <_ZZ15print_task_listP8emstreamE3__c_7>:
     304:	49 44 4c 45 09 09 30 09 2d 09 00                    IDLE..0.-..

0000030f <_ZZ15print_task_listP8emstreamE3__c_6>:
     30f:	09 2d 2d 2d 2d 00                                   .----.

00000315 <_ZZ15print_task_listP8emstreamE3__c_5>:
     315:	09 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 00                 .----------.

00000321 <_ZZ15print_task_listP8emstreamE3__c_4>:
     321:	2d 2d 2d 2d 09 09 2d 2d 2d 2d 09 2d 2d 2d 2d 2d     ----..----.-----
	...

00000332 <_ZZ15print_task_listP8emstreamE3__c_3>:
     332:	09 52 75 6e 73 00                                   .Runs.

00000338 <_ZZ15print_task_listP8emstreamE3__c_2>:
     338:	09 46 72 65 65 2f 54 6f 74 61 6c 00                 .Free/Total.

00000344 <_ZZ15print_task_listP8emstreamE3__c_1>:
     344:	4e 61 6d 65 09 09 50 72 69 2e 09 53 74 61 74 65     Name..Pri..State
	...

00000355 <_ZZ15print_task_listP8emstreamE3__c_0>:
     355:	09 53 74 61 63 6b 00                                .Stack.

0000035c <_ZZ15print_task_listP8emstreamE3__c>:
     35c:	54 61 73 6b 09 09 20 20 09 20 00                    Task..  . .

00000367 <_ZZN8frt_task12print_statusER8emstreamE3__c_3>:
     367:	09 00                                               ..

00000369 <_ZZN8frt_task12print_statusER8emstreamE3__c_2>:
     369:	09 00                                               ..

0000036b <_ZZN8frt_task12print_statusER8emstreamE3__c_1>:
     36b:	2f 00                                               /.

0000036d <_ZZN8frt_task12print_statusER8emstreamE3__c_0>:
     36d:	09 00                                               ..

0000036f <_ZZN8frt_task12print_statusER8emstreamE3__c>:
     36f:	09 00 00                                            ...

00000372 <_call_static_run_method>:
     372:	0e 94 d1 19 	call	0x33a2	; 0x33a2 <_ZN8frt_task22_call_users_run_methodEPS_>

00000376 <__ctors_start>:
     376:	f0 21       	and	r31, r0

00000378 <__ctors_end>:
     378:	11 24       	eor	r1, r1
     37a:	1f be       	out	0x3f, r1	; 63
     37c:	cf ef       	ldi	r28, 0xFF	; 255
     37e:	cd bf       	out	0x3d, r28	; 61
     380:	df e3       	ldi	r29, 0x3F	; 63
     382:	de bf       	out	0x3e, r29	; 62
     384:	00 e0       	ldi	r16, 0x00	; 0
     386:	0c bf       	out	0x3c, r16	; 60

00000388 <__do_copy_data>:
     388:	10 e2       	ldi	r17, 0x20	; 32
     38a:	a0 e0       	ldi	r26, 0x00	; 0
     38c:	b0 e2       	ldi	r27, 0x20	; 32
     38e:	e0 ee       	ldi	r30, 0xE0	; 224
     390:	f5 e4       	ldi	r31, 0x45	; 69
     392:	00 e0       	ldi	r16, 0x00	; 0
     394:	0b bf       	out	0x3b, r16	; 59
     396:	02 c0       	rjmp	.+4      	; 0x39c <__do_copy_data+0x14>
     398:	07 90       	elpm	r0, Z+
     39a:	0d 92       	st	X+, r0
     39c:	ae 3e       	cpi	r26, 0xEE	; 238
     39e:	b1 07       	cpc	r27, r17
     3a0:	d9 f7       	brne	.-10     	; 0x398 <__do_copy_data+0x10>

000003a2 <__do_clear_bss>:
     3a2:	21 e3       	ldi	r18, 0x31	; 49
     3a4:	ae ee       	ldi	r26, 0xEE	; 238
     3a6:	b0 e2       	ldi	r27, 0x20	; 32
     3a8:	01 c0       	rjmp	.+2      	; 0x3ac <.do_clear_bss_start>

000003aa <.do_clear_bss_loop>:
     3aa:	1d 92       	st	X+, r1

000003ac <.do_clear_bss_start>:
     3ac:	aa 3e       	cpi	r26, 0xEA	; 234
     3ae:	b2 07       	cpc	r27, r18
     3b0:	e1 f7       	brne	.-8      	; 0x3aa <.do_clear_bss_loop>

000003b2 <__do_global_ctors>:
     3b2:	11 e0       	ldi	r17, 0x01	; 1
     3b4:	cc eb       	ldi	r28, 0xBC	; 188
     3b6:	d1 e0       	ldi	r29, 0x01	; 1
     3b8:	00 e0       	ldi	r16, 0x00	; 0
     3ba:	06 c0       	rjmp	.+12     	; 0x3c8 <__do_global_ctors+0x16>
     3bc:	21 97       	sbiw	r28, 0x01	; 1
     3be:	01 09       	sbc	r16, r1
     3c0:	80 2f       	mov	r24, r16
     3c2:	fe 01       	movw	r30, r28
     3c4:	0e 94 37 22 	call	0x446e	; 0x446e <__tablejump2__>
     3c8:	cb 3b       	cpi	r28, 0xBB	; 187
     3ca:	d1 07       	cpc	r29, r17
     3cc:	80 e0       	ldi	r24, 0x00	; 0
     3ce:	08 07       	cpc	r16, r24
     3d0:	a9 f7       	brne	.-22     	; 0x3bc <__do_global_ctors+0xa>
     3d2:	0e 94 88 21 	call	0x4310	; 0x4310 <main>
     3d6:	0c 94 ee 22 	jmp	0x45dc	; 0x45dc <_exit>

000003da <__bad_interrupt>:
     3da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003de <_ZN18FollowInstructions3runEv>:
	// call to the frt_task constructor on the line just above this one
}
	


void FollowInstructions::run (){
     3de:	cf 93       	push	r28
     3e0:	df 93       	push	r29
     3e2:	00 d0       	rcall	.+0      	; 0x3e4 <_ZN18FollowInstructions3runEv+0x6>
     3e4:	1f 92       	push	r1
     3e6:	cd b7       	in	r28, 0x3d	; 61
     3e8:	de b7       	in	r29, 0x3e	; 62
     3ea:	8c 01       	movw	r16, r24
	
	int val = 0;
	this->curChar = '\0';
     3ec:	dc 01       	movw	r26, r24
     3ee:	52 96       	adiw	r26, 0x12	; 18
     3f0:	1c 92       	st	X, r1
				
				this->prevChar = this->curChar;
				this->curChar = p_serial->getchar();
				
					if(this->prevChar == 's'){
						curSpeed = 48-this->curChar;
     3f2:	0f 2e       	mov	r0, r31
     3f4:	f0 e3       	ldi	r31, 0x30	; 48
     3f6:	ef 2e       	mov	r14, r31
     3f8:	f1 2c       	mov	r15, r1
     3fa:	f0 2d       	mov	r31, r0
						setpoint_l_1 = curSpeed*100;
     3fc:	0f 2e       	mov	r0, r31
     3fe:	f4 e6       	ldi	r31, 0x64	; 100
     400:	cf 2e       	mov	r12, r31
     402:	f0 2d       	mov	r31, r0
						setpoint_l_2 = curSpeed*200;
     404:	0f 2e       	mov	r0, r31
     406:	f8 ec       	ldi	r31, 0xC8	; 200
     408:	df 2e       	mov	r13, r31
     40a:	f0 2d       	mov	r31, r0
	this->curChar = '\0';
	
	
	while (1){
			
			if (p_serial->check_for_char ()){
     40c:	f8 01       	movw	r30, r16
     40e:	86 81       	ldd	r24, Z+6	; 0x06
     410:	97 81       	ldd	r25, Z+7	; 0x07
     412:	dc 01       	movw	r26, r24
     414:	ed 91       	ld	r30, X+
     416:	fc 91       	ld	r31, X
     418:	04 80       	ldd	r0, Z+4	; 0x04
     41a:	f5 81       	ldd	r31, Z+5	; 0x05
     41c:	e0 2d       	mov	r30, r0
     41e:	19 95       	eicall
     420:	88 23       	and	r24, r24
     422:	49 f1       	breq	.+82     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
				
				this->prevChar = this->curChar;
     424:	f8 01       	movw	r30, r16
     426:	82 89       	ldd	r24, Z+18	; 0x12
     428:	83 8b       	std	Z+19, r24	; 0x13
				this->curChar = p_serial->getchar();
     42a:	86 81       	ldd	r24, Z+6	; 0x06
     42c:	97 81       	ldd	r25, Z+7	; 0x07
     42e:	dc 01       	movw	r26, r24
     430:	ed 91       	ld	r30, X+
     432:	fc 91       	ld	r31, X
     434:	06 80       	ldd	r0, Z+6	; 0x06
     436:	f7 81       	ldd	r31, Z+7	; 0x07
     438:	e0 2d       	mov	r30, r0
     43a:	19 95       	eicall
     43c:	f8 01       	movw	r30, r16
     43e:	82 8b       	std	Z+18, r24	; 0x12
				
					if(this->prevChar == 's'){
     440:	93 89       	ldd	r25, Z+19	; 0x13
     442:	93 37       	cpi	r25, 0x73	; 115
     444:	c1 f4       	brne	.+48     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
						curSpeed = 48-this->curChar;
     446:	97 01       	movw	r18, r14
     448:	28 1b       	sub	r18, r24
     44a:	31 09       	sbc	r19, r1
     44c:	c9 01       	movw	r24, r18
     44e:	24 8b       	std	Z+20, r18	; 0x14
     450:	35 8b       	std	Z+21, r19	; 0x15
						setpoint_l_1 = curSpeed*100;
     452:	c8 9e       	mul	r12, r24
     454:	90 01       	movw	r18, r0
     456:	c9 9e       	mul	r12, r25
     458:	30 0d       	add	r19, r0
     45a:	11 24       	eor	r1, r1
     45c:	20 93 f0 20 	sts	0x20F0, r18	; 0x8020f0 <setpoint_l_1>
     460:	30 93 f1 20 	sts	0x20F1, r19	; 0x8020f1 <setpoint_l_1+0x1>
						setpoint_l_2 = curSpeed*200;
     464:	d8 9e       	mul	r13, r24
     466:	90 01       	movw	r18, r0
     468:	d9 9e       	mul	r13, r25
     46a:	30 0d       	add	r19, r0
     46c:	11 24       	eor	r1, r1
     46e:	20 93 ee 20 	sts	0x20EE, r18	; 0x8020ee <__data_end>
     472:	30 93 ef 20 	sts	0x20EF, r19	; 0x8020ef <__data_end+0x1>
						
					}
			}
		
			// Delaying (don't touch this)
			portTickType previousTicks = xTaskGetTickCount();
     476:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <xTaskGetTickCount>
     47a:	69 83       	std	Y+1, r22	; 0x01
     47c:	7a 83       	std	Y+2, r23	; 0x02
     47e:	8b 83       	std	Y+3, r24	; 0x03
     480:	9c 83       	std	Y+4, r25	; 0x04
		 *  @param milliseconds The duration of the delay interval in milliseconds
		 */
		void delay_from_to_ms (portTickType& from_ticks, portTickType milliseconds)
		{
			portTickType interval = configMS_TO_TICKS (milliseconds);
			vTaskDelayUntil (&from_ticks, interval);
     482:	45 e0       	ldi	r20, 0x05	; 5
     484:	50 e0       	ldi	r21, 0x00	; 0
     486:	60 e0       	ldi	r22, 0x00	; 0
     488:	70 e0       	ldi	r23, 0x00	; 0
     48a:	ce 01       	movw	r24, r28
     48c:	01 96       	adiw	r24, 0x01	; 1
     48e:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <vTaskDelayUntil>
	
	int val = 0;
	this->curChar = '\0';
	
	
	while (1){
     492:	bc cf       	rjmp	.-136    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>

00000494 <_ZN18FollowInstructionsC1EPKchjP8emstream>:
int16_t angle_2 = 0;			// Contains current angle of motor 2
int16_t setpoint_a_1 = 0;		// Contains current angular setpoint of motor 1
int16_t setpoint_a_2 = 0;		// Contains current angular setpoint of motor 2


FollowInstructions::FollowInstructions (const char* a_name,
     494:	0f 93       	push	r16
     496:	1f 93       	push	r17
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	ec 01       	movw	r28, r24
unsigned portBASE_TYPE a_priority,
size_t a_stack_size,
emstream* p_ser_dev
)
: frt_task (a_name, a_priority, a_stack_size, p_ser_dev)
     49e:	0e 94 e0 19 	call	0x33c0	; 0x33c0 <_ZN8frt_taskC1EPKchjP8emstream>
     4a2:	8a e0       	ldi	r24, 0x0A	; 10
     4a4:	90 e2       	ldi	r25, 0x20	; 32
     4a6:	88 83       	st	Y, r24
     4a8:	99 83       	std	Y+1, r25	; 0x01
{
	
	// Nothing is done in the body of this constructor. All the work is done in the
	// call to the frt_task constructor on the line just above this one
}
     4aa:	df 91       	pop	r29
     4ac:	cf 91       	pop	r28
     4ae:	1f 91       	pop	r17
     4b0:	0f 91       	pop	r16
     4b2:	08 95       	ret

000004b4 <_ZN11motorDriver7set_k_lEiii>:
 */

void motorDriver::zero_esum_a(void)
 {
	 // Resetting esum_a
	 esum_a = 0;
     4b4:	fc 01       	movw	r30, r24
     4b6:	61 8b       	std	Z+17, r22	; 0x11
     4b8:	72 8b       	std	Z+18, r23	; 0x12
     4ba:	43 8b       	std	Z+19, r20	; 0x13
     4bc:	54 8b       	std	Z+20, r21	; 0x14
     4be:	25 8b       	std	Z+21, r18	; 0x15
     4c0:	36 8b       	std	Z+22, r19	; 0x16
     4c2:	08 95       	ret

000004c4 <_ZN11motorDriver7set_k_aEiii>:
     4c4:	fc 01       	movw	r30, r24
     4c6:	67 8b       	std	Z+23, r22	; 0x17
     4c8:	70 8f       	std	Z+24, r23	; 0x18
     4ca:	41 8f       	std	Z+25, r20	; 0x19
     4cc:	52 8f       	std	Z+26, r21	; 0x1a
     4ce:	23 8f       	std	Z+27, r18	; 0x1b
     4d0:	34 8f       	std	Z+28, r19	; 0x1c
     4d2:	08 95       	ret

000004d4 <_ZN11motorDriver15set_pwm_scalingEi>:
     4d4:	fc 01       	movw	r30, r24
     4d6:	65 8f       	std	Z+29, r22	; 0x1d
     4d8:	76 8f       	std	Z+30, r23	; 0x1e
     4da:	08 95       	ret

000004dc <_ZN11motorDriver11set_pwm_limEi>:
     4dc:	65 36       	cpi	r22, 0x65	; 101
     4de:	71 05       	cpc	r23, r1
     4e0:	34 f0       	brlt	.+12     	; 0x4ee <_ZN11motorDriver11set_pwm_limEi+0x12>
     4e2:	24 e6       	ldi	r18, 0x64	; 100
     4e4:	30 e0       	ldi	r19, 0x00	; 0
     4e6:	fc 01       	movw	r30, r24
     4e8:	25 ab       	std	Z+53, r18	; 0x35
     4ea:	36 ab       	std	Z+54, r19	; 0x36
     4ec:	08 95       	ret
     4ee:	fc 01       	movw	r30, r24
     4f0:	65 ab       	std	Z+53, r22	; 0x35
     4f2:	76 ab       	std	Z+54, r23	; 0x36
     4f4:	08 95       	ret

000004f6 <_ZN11motorDriver18set_pwm_lim_linearEi>:
     4f6:	fc 01       	movw	r30, r24
     4f8:	25 a9       	ldd	r18, Z+53	; 0x35
     4fa:	36 a9       	ldd	r19, Z+54	; 0x36
     4fc:	26 17       	cp	r18, r22
     4fe:	37 07       	cpc	r19, r23
     500:	1c f4       	brge	.+6      	; 0x508 <_ZN11motorDriver18set_pwm_lim_linearEi+0x12>
     502:	27 ab       	std	Z+55, r18	; 0x37
     504:	30 af       	std	Z+56, r19	; 0x38
     506:	08 95       	ret
     508:	fc 01       	movw	r30, r24
     50a:	67 ab       	std	Z+55, r22	; 0x37
     50c:	70 af       	std	Z+56, r23	; 0x38
     50e:	08 95       	ret

00000510 <_ZN11motorDriverC1EcP8emstream>:
     510:	cf 93       	push	r28
     512:	df 93       	push	r29
     514:	ec 01       	movw	r28, r24
     516:	4e 87       	std	Y+14, r20	; 0x0e
     518:	5f 87       	std	Y+15, r21	; 0x0f
     51a:	68 8b       	std	Y+16, r22	; 0x10
     51c:	61 33       	cpi	r22, 0x31	; 49
     51e:	99 f4       	brne	.+38     	; 0x546 <_ZN11motorDriverC1EcP8emstream+0x36>
     520:	24 ef       	ldi	r18, 0xF4	; 244
     522:	31 e0       	ldi	r19, 0x01	; 1
     524:	41 e0       	ldi	r20, 0x01	; 1
     526:	60 e0       	ldi	r22, 0x00	; 0
     528:	0e 94 76 0d 	call	0x1aec	; 0x1aec <pwm_init>
     52c:	24 ef       	ldi	r18, 0xF4	; 244
     52e:	31 e0       	ldi	r19, 0x01	; 1
     530:	42 e0       	ldi	r20, 0x02	; 2
     532:	60 e0       	ldi	r22, 0x00	; 0
     534:	ce 01       	movw	r24, r28
     536:	07 96       	adiw	r24, 0x07	; 7
     538:	0e 94 76 0d 	call	0x1aec	; 0x1aec <pwm_init>
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	8f a3       	std	Y+39, r24	; 0x27
     542:	98 a7       	std	Y+40, r25	; 0x28
     544:	14 c0       	rjmp	.+40     	; 0x56e <_ZN11motorDriverC1EcP8emstream+0x5e>
     546:	62 33       	cpi	r22, 0x32	; 50
     548:	91 f4       	brne	.+36     	; 0x56e <_ZN11motorDriverC1EcP8emstream+0x5e>
     54a:	24 ef       	ldi	r18, 0xF4	; 244
     54c:	31 e0       	ldi	r19, 0x01	; 1
     54e:	43 e0       	ldi	r20, 0x03	; 3
     550:	60 e0       	ldi	r22, 0x00	; 0
     552:	0e 94 76 0d 	call	0x1aec	; 0x1aec <pwm_init>
     556:	24 ef       	ldi	r18, 0xF4	; 244
     558:	31 e0       	ldi	r19, 0x01	; 1
     55a:	44 e0       	ldi	r20, 0x04	; 4
     55c:	60 e0       	ldi	r22, 0x00	; 0
     55e:	ce 01       	movw	r24, r28
     560:	07 96       	adiw	r24, 0x07	; 7
     562:	0e 94 76 0d 	call	0x1aec	; 0x1aec <pwm_init>
     566:	8f ef       	ldi	r24, 0xFF	; 255
     568:	9f ef       	ldi	r25, 0xFF	; 255
     56a:	8f a3       	std	Y+39, r24	; 0x27
     56c:	98 a7       	std	Y+40, r25	; 0x28
     56e:	1b a6       	std	Y+43, r1	; 0x2b
     570:	1c a6       	std	Y+44, r1	; 0x2c
     572:	1f a6       	std	Y+47, r1	; 0x2f
     574:	18 aa       	std	Y+48, r1	; 0x30
     576:	19 8a       	std	Y+17, r1	; 0x11
     578:	1a 8a       	std	Y+18, r1	; 0x12
     57a:	1b 8a       	std	Y+19, r1	; 0x13
     57c:	1c 8a       	std	Y+20, r1	; 0x14
     57e:	1d 8a       	std	Y+21, r1	; 0x15
     580:	1e 8a       	std	Y+22, r1	; 0x16
     582:	1f 8a       	std	Y+23, r1	; 0x17
     584:	18 8e       	std	Y+24, r1	; 0x18
     586:	19 8e       	std	Y+25, r1	; 0x19
     588:	1a 8e       	std	Y+26, r1	; 0x1a
     58a:	1b 8e       	std	Y+27, r1	; 0x1b
     58c:	1c 8e       	std	Y+28, r1	; 0x1c
     58e:	1d aa       	std	Y+53, r1	; 0x35
     590:	1e aa       	std	Y+54, r1	; 0x36
     592:	60 e0       	ldi	r22, 0x00	; 0
     594:	70 e0       	ldi	r23, 0x00	; 0
     596:	ce 01       	movw	r24, r28
     598:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <_ZN11motorDriver18set_pwm_lim_linearEi>
     59c:	19 ae       	std	Y+57, r1	; 0x39
     59e:	1a ae       	std	Y+58, r1	; 0x3a
     5a0:	1b ae       	std	Y+59, r1	; 0x3b
     5a2:	1c ae       	std	Y+60, r1	; 0x3c
     5a4:	1f 8e       	std	Y+31, r1	; 0x1f
     5a6:	18 a2       	std	Y+32, r1	; 0x20
     5a8:	1d a2       	std	Y+37, r1	; 0x25
     5aa:	1e a2       	std	Y+38, r1	; 0x26
     5ac:	19 a2       	std	Y+33, r1	; 0x21
     5ae:	1a a2       	std	Y+34, r1	; 0x22
     5b0:	1b a2       	std	Y+35, r1	; 0x23
     5b2:	1c a2       	std	Y+36, r1	; 0x24
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	8d 8f       	std	Y+29, r24	; 0x1d
     5ba:	9e 8f       	std	Y+30, r25	; 0x1e
     5bc:	df 91       	pop	r29
     5be:	cf 91       	pop	r28
     5c0:	08 95       	ret

000005c2 <_ZN11motorDriver14set_esum_l_limEi>:
     5c2:	fc 01       	movw	r30, r24
     5c4:	61 af       	std	Z+57, r22	; 0x39
     5c6:	72 af       	std	Z+58, r23	; 0x3a
     5c8:	08 95       	ret

000005ca <_ZN11motorDriver14set_esum_a_limEi>:
     5ca:	fc 01       	movw	r30, r24
     5cc:	63 af       	std	Z+59, r22	; 0x3b
     5ce:	74 af       	std	Z+60, r23	; 0x3c
     5d0:	08 95       	ret

000005d2 <_ZN11motorDriver14set_setpoint_lEi>:
     5d2:	fc 01       	movw	r30, r24
     5d4:	67 8f       	std	Z+31, r22	; 0x1f
     5d6:	70 a3       	std	Z+32, r23	; 0x20
     5d8:	08 95       	ret

000005da <_ZN11motorDriver14set_setpoint_aEi>:
     5da:	fc 01       	movw	r30, r24
     5dc:	65 a3       	std	Z+37, r22	; 0x25
     5de:	76 a3       	std	Z+38, r23	; 0x26
     5e0:	08 95       	ret

000005e2 <_ZN11motorDriver12set_positionEi>:
     5e2:	fc 01       	movw	r30, r24
     5e4:	61 a3       	std	Z+33, r22	; 0x21
     5e6:	72 a3       	std	Z+34, r23	; 0x22
     5e8:	08 95       	ret

000005ea <_ZN11motorDriver9set_angleEi>:
     5ea:	fc 01       	movw	r30, r24
     5ec:	63 a3       	std	Z+35, r22	; 0x23
     5ee:	74 a3       	std	Z+36, r23	; 0x24
     5f0:	08 95       	ret

000005f2 <_ZN11motorDriver3runEbbbb>:
 *  @param   en_d Enable derivative action input.
 *	@param	 op_type Whether operation is drive-coast or drive-brake
 */

int16_t motorDriver::run(bool en_p = 0, bool en_i = 0, bool en_d = 0, bool op_type = 0)
 {
     5f2:	2f 92       	push	r2
     5f4:	3f 92       	push	r3
     5f6:	4f 92       	push	r4
     5f8:	5f 92       	push	r5
     5fa:	6f 92       	push	r6
     5fc:	7f 92       	push	r7
     5fe:	8f 92       	push	r8
     600:	9f 92       	push	r9
     602:	af 92       	push	r10
     604:	bf 92       	push	r11
     606:	cf 92       	push	r12
     608:	df 92       	push	r13
     60a:	ef 92       	push	r14
     60c:	ff 92       	push	r15
     60e:	0f 93       	push	r16
     610:	1f 93       	push	r17
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
     616:	00 d0       	rcall	.+0      	; 0x618 <_ZN11motorDriver3runEbbbb+0x26>
     618:	cd b7       	in	r28, 0x3d	; 61
     61a:	de b7       	in	r29, 0x3e	; 62
     61c:	8a 83       	std	Y+2, r24	; 0x02
     61e:	9b 83       	std	Y+3, r25	; 0x03
     620:	09 83       	std	Y+1, r16	; 0x01
	// Calculating error terms
   error_l = setpoint_l - position;
     622:	dc 01       	movw	r26, r24
     624:	5f 96       	adiw	r26, 0x1f	; 31
     626:	8d 91       	ld	r24, X+
     628:	9c 91       	ld	r25, X
     62a:	90 97       	sbiw	r26, 0x20	; 32
     62c:	91 96       	adiw	r26, 0x21	; 33
     62e:	2d 91       	ld	r18, X+
     630:	3c 91       	ld	r19, X
     632:	92 97       	sbiw	r26, 0x22	; 34
     634:	82 1b       	sub	r24, r18
     636:	93 0b       	sbc	r25, r19
     638:	99 96       	adiw	r26, 0x29	; 41
     63a:	8d 93       	st	X+, r24
     63c:	9c 93       	st	X, r25
     63e:	9a 97       	sbiw	r26, 0x2a	; 42
   error_a = setpoint_a - angle;
     640:	95 96       	adiw	r26, 0x25	; 37
     642:	2d 91       	ld	r18, X+
     644:	3c 91       	ld	r19, X
     646:	96 97       	sbiw	r26, 0x26	; 38
     648:	93 96       	adiw	r26, 0x23	; 35
     64a:	ed 91       	ld	r30, X+
     64c:	fc 91       	ld	r31, X
     64e:	94 97       	sbiw	r26, 0x24	; 36
     650:	2e 1b       	sub	r18, r30
     652:	3f 0b       	sbc	r19, r31
     654:	9d 96       	adiw	r26, 0x2d	; 45
     656:	2d 93       	st	X+, r18
     658:	3c 93       	st	X, r19
     65a:	9e 97       	sbiw	r26, 0x2e	; 46
   esum_l += error_l;
     65c:	9b 96       	adiw	r26, 0x2b	; 43
     65e:	ed 91       	ld	r30, X+
     660:	fc 91       	ld	r31, X
     662:	9c 97       	sbiw	r26, 0x2c	; 44
     664:	e8 0f       	add	r30, r24
     666:	f9 1f       	adc	r31, r25
     668:	9b 96       	adiw	r26, 0x2b	; 43
     66a:	ed 93       	st	X+, r30
     66c:	fc 93       	st	X, r31
     66e:	9c 97       	sbiw	r26, 0x2c	; 44
   if (esum_l > esum_l_lim) // Rounding esum_l to esum_l_lim on either end
     670:	d9 96       	adiw	r26, 0x39	; 57
     672:	0d 91       	ld	r16, X+
     674:	1c 91       	ld	r17, X
     676:	da 97       	sbiw	r26, 0x3a	; 58
     678:	0e 17       	cp	r16, r30
     67a:	1f 07       	cpc	r17, r31
     67c:	2c f4       	brge	.+10     	; 0x688 <_ZN11motorDriver3runEbbbb+0x96>
   {
       esum_l = esum_l_lim;
     67e:	9b 96       	adiw	r26, 0x2b	; 43
     680:	0d 93       	st	X+, r16
     682:	1c 93       	st	X, r17
     684:	9c 97       	sbiw	r26, 0x2c	; 44
     686:	0b c0       	rjmp	.+22     	; 0x69e <_ZN11motorDriver3runEbbbb+0xac>
   } else if (esum_l < -esum_l_lim)
     688:	aa 27       	eor	r26, r26
     68a:	bb 27       	eor	r27, r27
     68c:	a0 1b       	sub	r26, r16
     68e:	b1 0b       	sbc	r27, r17
     690:	ea 17       	cp	r30, r26
     692:	fb 07       	cpc	r31, r27
     694:	24 f4       	brge	.+8      	; 0x69e <_ZN11motorDriver3runEbbbb+0xac>
   {
       esum_l = -esum_l_lim;
     696:	ea 81       	ldd	r30, Y+2	; 0x02
     698:	fb 81       	ldd	r31, Y+3	; 0x03
     69a:	a3 a7       	std	Z+43, r26	; 0x2b
     69c:	b4 a7       	std	Z+44, r27	; 0x2c
   }
   esum_a += error_a;
     69e:	aa 81       	ldd	r26, Y+2	; 0x02
     6a0:	bb 81       	ldd	r27, Y+3	; 0x03
     6a2:	9f 96       	adiw	r26, 0x2f	; 47
     6a4:	ed 91       	ld	r30, X+
     6a6:	fc 91       	ld	r31, X
     6a8:	d0 97       	sbiw	r26, 0x30	; 48
     6aa:	e2 0f       	add	r30, r18
     6ac:	f3 1f       	adc	r31, r19
     6ae:	9f 96       	adiw	r26, 0x2f	; 47
     6b0:	ed 93       	st	X+, r30
     6b2:	fc 93       	st	X, r31
     6b4:	d0 97       	sbiw	r26, 0x30	; 48
   if (esum_a > esum_a_lim) // Rounding esum_a to esum_a_lim on either end
     6b6:	db 96       	adiw	r26, 0x3b	; 59
     6b8:	0d 91       	ld	r16, X+
     6ba:	1c 91       	ld	r17, X
     6bc:	dc 97       	sbiw	r26, 0x3c	; 60
     6be:	0e 17       	cp	r16, r30
     6c0:	1f 07       	cpc	r17, r31
     6c2:	2c f4       	brge	.+10     	; 0x6ce <_ZN11motorDriver3runEbbbb+0xdc>
   {
	   esum_a = esum_a_lim;
     6c4:	9f 96       	adiw	r26, 0x2f	; 47
     6c6:	0d 93       	st	X+, r16
     6c8:	1c 93       	st	X, r17
     6ca:	d0 97       	sbiw	r26, 0x30	; 48
     6cc:	0b c0       	rjmp	.+22     	; 0x6e4 <_ZN11motorDriver3runEbbbb+0xf2>
   } else if (esum_a < -esum_a_lim)
     6ce:	aa 27       	eor	r26, r26
     6d0:	bb 27       	eor	r27, r27
     6d2:	a0 1b       	sub	r26, r16
     6d4:	b1 0b       	sbc	r27, r17
     6d6:	ea 17       	cp	r30, r26
     6d8:	fb 07       	cpc	r31, r27
     6da:	24 f4       	brge	.+8      	; 0x6e4 <_ZN11motorDriver3runEbbbb+0xf2>
   {
	   esum_a = -esum_a_lim;
     6dc:	ea 81       	ldd	r30, Y+2	; 0x02
     6de:	fb 81       	ldd	r31, Y+3	; 0x03
     6e0:	a7 a7       	std	Z+47, r26	; 0x2f
     6e2:	b0 ab       	std	Z+48, r27	; 0x30
   }
   eder_l = 0;  // Placeholder
     6e4:	aa 81       	ldd	r26, Y+2	; 0x02
     6e6:	bb 81       	ldd	r27, Y+3	; 0x03
     6e8:	d1 96       	adiw	r26, 0x31	; 49
     6ea:	1d 92       	st	X+, r1
     6ec:	1c 92       	st	X, r1
     6ee:	d2 97       	sbiw	r26, 0x32	; 50
   eder_a = 0;  // Placeholder
     6f0:	d3 96       	adiw	r26, 0x33	; 51
     6f2:	1d 92       	st	X+, r1
     6f4:	1c 92       	st	X, r1
     6f6:	d4 97       	sbiw	r26, 0x34	; 52

   // Calculating linear signal components
   int16_t signal_l_p = kp_l*error_l;
     6f8:	51 96       	adiw	r26, 0x11	; 17
     6fa:	ed 91       	ld	r30, X+
     6fc:	fc 91       	ld	r31, X
     6fe:	52 97       	sbiw	r26, 0x12	; 18
     700:	8e 9f       	mul	r24, r30
     702:	60 01       	movw	r12, r0
     704:	8f 9f       	mul	r24, r31
     706:	d0 0c       	add	r13, r0
     708:	9e 9f       	mul	r25, r30
     70a:	d0 0c       	add	r13, r0
     70c:	11 24       	eor	r1, r1
   int16_t signal_l_i = ki_l*esum_l;
     70e:	9b 96       	adiw	r26, 0x2b	; 43
     710:	0d 91       	ld	r16, X+
     712:	1c 91       	ld	r17, X
     714:	9c 97       	sbiw	r26, 0x2c	; 44
     716:	53 96       	adiw	r26, 0x13	; 19
     718:	8d 91       	ld	r24, X+
     71a:	9c 91       	ld	r25, X
     71c:	54 97       	sbiw	r26, 0x14	; 20
     71e:	08 9f       	mul	r16, r24
     720:	70 01       	movw	r14, r0
     722:	09 9f       	mul	r16, r25
     724:	f0 0c       	add	r15, r0
     726:	18 9f       	mul	r17, r24
     728:	f0 0c       	add	r15, r0
     72a:	11 24       	eor	r1, r1
   int16_t signal_l_d = kd_l*eder_l;
   int16_t pwm_percent_linear = (((int16_t) en_p)*signal_l_p + ((int16_t) en_i)*signal_l_i + ((int16_t) en_d)*signal_l_d)/pwm_scale;
     72c:	86 2e       	mov	r8, r22
     72e:	91 2c       	mov	r9, r1
     730:	a4 2e       	mov	r10, r20
     732:	b1 2c       	mov	r11, r1
     734:	5d 96       	adiw	r26, 0x1d	; 29
     736:	6d 90       	ld	r6, X+
     738:	7c 90       	ld	r7, X
     73a:	5e 97       	sbiw	r26, 0x1e	; 30
     73c:	c8 9c       	mul	r12, r8
     73e:	a0 01       	movw	r20, r0
     740:	c9 9c       	mul	r12, r9
     742:	50 0d       	add	r21, r0
     744:	d8 9c       	mul	r13, r8
     746:	50 0d       	add	r21, r0
     748:	11 24       	eor	r1, r1
     74a:	ea 9c       	mul	r14, r10
     74c:	c0 01       	movw	r24, r0
     74e:	eb 9c       	mul	r14, r11
     750:	90 0d       	add	r25, r0
     752:	fa 9c       	mul	r15, r10
     754:	90 0d       	add	r25, r0
     756:	11 24       	eor	r1, r1
     758:	84 0f       	add	r24, r20
     75a:	95 1f       	adc	r25, r21
     75c:	b3 01       	movw	r22, r6
     75e:	0e 94 01 22 	call	0x4402	; 0x4402 <__divmodhi4>
   if (pwm_percent_linear > pwm_lim_linear)	// Saturating linear component of pwm_percent
     762:	aa 81       	ldd	r26, Y+2	; 0x02
     764:	bb 81       	ldd	r27, Y+3	; 0x03
     766:	d7 96       	adiw	r26, 0x37	; 55
     768:	ed 91       	ld	r30, X+
     76a:	fc 91       	ld	r31, X
     76c:	d8 97       	sbiw	r26, 0x38	; 56
     76e:	e6 17       	cp	r30, r22
     770:	f7 07       	cpc	r31, r23
     772:	54 f0       	brlt	.+20     	; 0x788 <_ZN11motorDriver3runEbbbb+0x196>
   {
	   pwm_percent_linear = pwm_lim_linear;
   }
   else if (pwm_percent_linear < -pwm_lim_linear)
     774:	88 27       	eor	r24, r24
     776:	99 27       	eor	r25, r25
     778:	8e 1b       	sub	r24, r30
     77a:	9f 0b       	sbc	r25, r31
     77c:	1b 01       	movw	r2, r22
     77e:	68 17       	cp	r22, r24
     780:	79 07       	cpc	r23, r25
     782:	1c f4       	brge	.+6      	; 0x78a <_ZN11motorDriver3runEbbbb+0x198>
     784:	1c 01       	movw	r2, r24
     786:	01 c0       	rjmp	.+2      	; 0x78a <_ZN11motorDriver3runEbbbb+0x198>
   int16_t signal_l_i = ki_l*esum_l;
   int16_t signal_l_d = kd_l*eder_l;
   int16_t pwm_percent_linear = (((int16_t) en_p)*signal_l_p + ((int16_t) en_i)*signal_l_i + ((int16_t) en_d)*signal_l_d)/pwm_scale;
   if (pwm_percent_linear > pwm_lim_linear)	// Saturating linear component of pwm_percent
   {
	   pwm_percent_linear = pwm_lim_linear;
     788:	1f 01       	movw	r2, r30

   // Calculating angular signal components
   int16_t signal_a_p = kp_a*error_a;
   int16_t signal_a_i = ki_a*esum_a;
   int16_t signal_a_d = kd_a*eder_a;
   int16_t pwm_percent_angular = (((int16_t) en_p)*signal_a_p + ((int16_t) en_i)*signal_a_i + ((int16_t) en_d)*signal_a_d)/pwm_scale*motor_dir;	// This entire term needs to be either positive or negative depending on how we define the angle externally
     78a:	aa 81       	ldd	r26, Y+2	; 0x02
     78c:	bb 81       	ldd	r27, Y+3	; 0x03
     78e:	97 96       	adiw	r26, 0x27	; 39
     790:	4d 90       	ld	r4, X+
     792:	5c 90       	ld	r5, X
     794:	98 97       	sbiw	r26, 0x28	; 40
     796:	59 96       	adiw	r26, 0x19	; 25
     798:	6d 91       	ld	r22, X+
     79a:	7c 91       	ld	r23, X
     79c:	5a 97       	sbiw	r26, 0x1a	; 26
     79e:	9f 96       	adiw	r26, 0x2f	; 47
     7a0:	4d 91       	ld	r20, X+
     7a2:	5c 91       	ld	r21, X
     7a4:	d0 97       	sbiw	r26, 0x30	; 48
     7a6:	64 9f       	mul	r22, r20
     7a8:	c0 01       	movw	r24, r0
     7aa:	65 9f       	mul	r22, r21
     7ac:	90 0d       	add	r25, r0
     7ae:	74 9f       	mul	r23, r20
     7b0:	90 0d       	add	r25, r0
     7b2:	11 24       	eor	r1, r1
     7b4:	8a 9d       	mul	r24, r10
     7b6:	b0 01       	movw	r22, r0
     7b8:	8b 9d       	mul	r24, r11
     7ba:	70 0d       	add	r23, r0
     7bc:	9a 9d       	mul	r25, r10
     7be:	70 0d       	add	r23, r0
     7c0:	11 24       	eor	r1, r1
     7c2:	57 96       	adiw	r26, 0x17	; 23
     7c4:	8d 91       	ld	r24, X+
     7c6:	9c 91       	ld	r25, X
     7c8:	58 97       	sbiw	r26, 0x18	; 24
     7ca:	28 9f       	mul	r18, r24
     7cc:	a0 01       	movw	r20, r0
     7ce:	29 9f       	mul	r18, r25
     7d0:	50 0d       	add	r21, r0
     7d2:	38 9f       	mul	r19, r24
     7d4:	50 0d       	add	r21, r0
     7d6:	11 24       	eor	r1, r1
     7d8:	48 9d       	mul	r20, r8
     7da:	c0 01       	movw	r24, r0
     7dc:	49 9d       	mul	r20, r9
     7de:	90 0d       	add	r25, r0
     7e0:	58 9d       	mul	r21, r8
     7e2:	90 0d       	add	r25, r0
     7e4:	11 24       	eor	r1, r1
     7e6:	86 0f       	add	r24, r22
     7e8:	97 1f       	adc	r25, r23
     7ea:	b3 01       	movw	r22, r6
     7ec:	0e 94 01 22 	call	0x4402	; 0x4402 <__divmodhi4>
     7f0:	64 9d       	mul	r22, r4
     7f2:	c0 01       	movw	r24, r0
     7f4:	65 9d       	mul	r22, r5
     7f6:	90 0d       	add	r25, r0
     7f8:	74 9d       	mul	r23, r4
     7fa:	90 0d       	add	r25, r0
     7fc:	11 24       	eor	r1, r1
   if (pwm_percent_angular > (pwm_lim - pwm_lim_linear))	// Saturating angular component of pwm_percent
     7fe:	aa 81       	ldd	r26, Y+2	; 0x02
     800:	bb 81       	ldd	r27, Y+3	; 0x03
     802:	d5 96       	adiw	r26, 0x35	; 53
     804:	2d 91       	ld	r18, X+
     806:	3c 91       	ld	r19, X
     808:	d6 97       	sbiw	r26, 0x36	; 54
     80a:	b9 01       	movw	r22, r18
     80c:	6e 1b       	sub	r22, r30
     80e:	7f 0b       	sbc	r23, r31
     810:	68 17       	cp	r22, r24
     812:	79 07       	cpc	r23, r25
     814:	3c f0       	brlt	.+14     	; 0x824 <_ZN11motorDriver3runEbbbb+0x232>
   {
	   pwm_percent_angular = pwm_lim - pwm_lim_linear;
   }
   else if (pwm_percent_angular < -(pwm_lim - pwm_lim_linear))
     816:	e2 1b       	sub	r30, r18
     818:	f3 0b       	sbc	r31, r19
     81a:	bc 01       	movw	r22, r24
     81c:	8e 17       	cp	r24, r30
     81e:	9f 07       	cpc	r25, r31
     820:	0c f4       	brge	.+2      	; 0x824 <_ZN11motorDriver3runEbbbb+0x232>
     822:	bf 01       	movw	r22, r30
   {
	   pwm_percent_angular = -(pwm_lim - pwm_lim_linear);
   }
   
   // Calculating total signal to motors
   int16_t pwm_percent = (pwm_percent_linear + pwm_percent_angular)*motor_dir;
     824:	62 0d       	add	r22, r2
     826:	73 1d       	adc	r23, r3
     828:	64 9d       	mul	r22, r4
     82a:	50 01       	movw	r10, r0
     82c:	65 9d       	mul	r22, r5
     82e:	b0 0c       	add	r11, r0
     830:	74 9d       	mul	r23, r4
     832:	b0 0c       	add	r11, r0
     834:	11 24       	eor	r1, r1
   
   // Serial diagnostics
   *ser_out << "Motor " << motor_ID << " Signal P " << signal_l_p << " I " << signal_l_i << " esum " << esum_l << " D " << signal_l_d << " PWM % " << pwm_percent << endl;
     836:	ea 81       	ldd	r30, Y+2	; 0x02
     838:	fb 81       	ldd	r31, Y+3	; 0x03
     83a:	70 88       	ldd	r7, Z+16	; 0x10
     83c:	86 84       	ldd	r8, Z+14	; 0x0e
     83e:	97 84       	ldd	r9, Z+15	; 0x0f
		 *          reference is used to string (bad pun) printable items together with 
		 *          many "<<" operators
		 */
		emstream& operator<< (const char* p_string)
		{
			puts (p_string);
     840:	6e e0       	ldi	r22, 0x0E	; 14
     842:	70 e2       	ldi	r23, 0x20	; 32
     844:	c4 01       	movw	r24, r8
     846:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
		 *  @param ch The character to be printed
		 *  @return A reference to the serial device on which the printing is done
		 */
		emstream& operator<< (char ch)
		{
			putchar (ch); 
     84a:	d4 01       	movw	r26, r8
     84c:	ed 91       	ld	r30, X+
     84e:	fc 91       	ld	r31, X
     850:	02 80       	ldd	r0, Z+2	; 0x02
     852:	f3 81       	ldd	r31, Z+3	; 0x03
     854:	e0 2d       	mov	r30, r0
     856:	67 2d       	mov	r22, r7
     858:	c4 01       	movw	r24, r8
     85a:	19 95       	eicall
		 *          reference is used to string (bad pun) printable items together with 
		 *          many "<<" operators
		 */
		emstream& operator<< (const char* p_string)
		{
			puts (p_string);
     85c:	65 e1       	ldi	r22, 0x15	; 21
     85e:	70 e2       	ldi	r23, 0x20	; 32
     860:	c4 01       	movw	r24, r8
     862:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
     866:	b6 01       	movw	r22, r12
     868:	c4 01       	movw	r24, r8
     86a:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN8emstreamlsEi>
     86e:	6c 01       	movw	r12, r24
     870:	60 e2       	ldi	r22, 0x20	; 32
     872:	70 e2       	ldi	r23, 0x20	; 32
     874:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
     878:	b7 01       	movw	r22, r14
     87a:	c6 01       	movw	r24, r12
     87c:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN8emstreamlsEi>
     880:	7c 01       	movw	r14, r24
     882:	64 e2       	ldi	r22, 0x24	; 36
     884:	70 e2       	ldi	r23, 0x20	; 32
     886:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
     88a:	b8 01       	movw	r22, r16
     88c:	c7 01       	movw	r24, r14
     88e:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN8emstreamlsEi>
     892:	8c 01       	movw	r16, r24
     894:	6b e2       	ldi	r22, 0x2B	; 43
     896:	70 e2       	ldi	r23, 0x20	; 32
     898:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
     89c:	60 e0       	ldi	r22, 0x00	; 0
     89e:	70 e0       	ldi	r23, 0x00	; 0
     8a0:	c8 01       	movw	r24, r16
     8a2:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN8emstreamlsEi>
     8a6:	8c 01       	movw	r16, r24
     8a8:	6f e2       	ldi	r22, 0x2F	; 47
     8aa:	70 e2       	ldi	r23, 0x20	; 32
     8ac:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
     8b0:	b5 01       	movw	r22, r10
     8b2:	c8 01       	movw	r24, r16
     8b4:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN8emstreamlsEi>
     8b8:	66 e0       	ldi	r22, 0x06	; 6
     8ba:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
   
   // Limiting total pwm percentage 
   if (pwm_percent > pwm_lim)	
     8be:	ea 81       	ldd	r30, Y+2	; 0x02
     8c0:	fb 81       	ldd	r31, Y+3	; 0x03
     8c2:	05 a9       	ldd	r16, Z+53	; 0x35
     8c4:	16 a9       	ldd	r17, Z+54	; 0x36
     8c6:	0a 15       	cp	r16, r10
     8c8:	1b 05       	cpc	r17, r11
     8ca:	4c f0       	brlt	.+18     	; 0x8de <_ZN11motorDriver3runEbbbb+0x2ec>
   {
	   pwm_percent = pwm_lim;
   } 
   else if (pwm_percent < -pwm_lim)
     8cc:	88 27       	eor	r24, r24
     8ce:	99 27       	eor	r25, r25
     8d0:	80 1b       	sub	r24, r16
     8d2:	91 0b       	sbc	r25, r17
     8d4:	85 01       	movw	r16, r10
     8d6:	a8 16       	cp	r10, r24
     8d8:	b9 06       	cpc	r11, r25
     8da:	0c f4       	brge	.+2      	; 0x8de <_ZN11motorDriver3runEbbbb+0x2ec>
     8dc:	8c 01       	movw	r16, r24
   {
	   pwm_percent = -pwm_lim;
   }

   // Operating motor
   if (op_type)	// Drive-brake mode. Modulates brake pin instead of drive pin, higher performance (?).
     8de:	f9 81       	ldd	r31, Y+1	; 0x01
     8e0:	ff 23       	and	r31, r31
     8e2:	59 f1       	breq	.+86     	; 0x93a <_ZN11motorDriver3runEbbbb+0x348>
   {
	   if (pwm_percent > 0)
     8e4:	10 16       	cp	r1, r16
     8e6:	11 06       	cpc	r1, r17
     8e8:	a4 f4       	brge	.+40     	; 0x912 <_ZN11motorDriver3runEbbbb+0x320>
	   {
		   pwm_start(&pwm_1, 100);	// Setting IN1 high 
     8ea:	64 e6       	ldi	r22, 0x64	; 100
     8ec:	8a 81       	ldd	r24, Y+2	; 0x02
     8ee:	9b 81       	ldd	r25, Y+3	; 0x03
     8f0:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <pwm_start>
		   pwm_start(&pwm_2, 100 - abs(pwm_percent));	// Modulating IN2 low
     8f4:	c8 01       	movw	r24, r16
     8f6:	11 23       	and	r17, r17
     8f8:	24 f4       	brge	.+8      	; 0x902 <_ZN11motorDriver3runEbbbb+0x310>
     8fa:	88 27       	eor	r24, r24
     8fc:	99 27       	eor	r25, r25
     8fe:	80 1b       	sub	r24, r16
     900:	91 0b       	sbc	r25, r17
     902:	64 e6       	ldi	r22, 0x64	; 100
     904:	68 1b       	sub	r22, r24
     906:	8a 81       	ldd	r24, Y+2	; 0x02
     908:	9b 81       	ldd	r25, Y+3	; 0x03
     90a:	07 96       	adiw	r24, 0x07	; 7
     90c:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <pwm_start>
     910:	3a c0       	rjmp	.+116    	; 0x986 <_ZN11motorDriver3runEbbbb+0x394>
	   } else {
		   pwm_start(&pwm_1, 100 - abs(pwm_percent));	// Modulating IN1 low
     912:	c8 01       	movw	r24, r16
     914:	11 23       	and	r17, r17
     916:	24 f4       	brge	.+8      	; 0x920 <_ZN11motorDriver3runEbbbb+0x32e>
     918:	88 27       	eor	r24, r24
     91a:	99 27       	eor	r25, r25
     91c:	80 1b       	sub	r24, r16
     91e:	91 0b       	sbc	r25, r17
     920:	64 e6       	ldi	r22, 0x64	; 100
     922:	68 1b       	sub	r22, r24
     924:	8a 81       	ldd	r24, Y+2	; 0x02
     926:	9b 81       	ldd	r25, Y+3	; 0x03
     928:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <pwm_start>
		   pwm_start(&pwm_2, 100);	// Setting IN2 high
     92c:	64 e6       	ldi	r22, 0x64	; 100
     92e:	8a 81       	ldd	r24, Y+2	; 0x02
     930:	9b 81       	ldd	r25, Y+3	; 0x03
     932:	07 96       	adiw	r24, 0x07	; 7
     934:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <pwm_start>
     938:	26 c0       	rjmp	.+76     	; 0x986 <_ZN11motorDriver3runEbbbb+0x394>
	   }
   } 
   else // Drive-coast mode. Modulates drive pin, higher current decay
   { 
	   if (pwm_percent > 0)
     93a:	10 16       	cp	r1, r16
     93c:	11 06       	cpc	r1, r17
     93e:	94 f4       	brge	.+36     	; 0x964 <_ZN11motorDriver3runEbbbb+0x372>
	   {
		   pwm_start(&pwm_1, abs(pwm_percent));	// Modulating IN1 high 
     940:	b8 01       	movw	r22, r16
     942:	11 23       	and	r17, r17
     944:	24 f4       	brge	.+8      	; 0x94e <_ZN11motorDriver3runEbbbb+0x35c>
     946:	66 27       	eor	r22, r22
     948:	77 27       	eor	r23, r23
     94a:	60 1b       	sub	r22, r16
     94c:	71 0b       	sbc	r23, r17
     94e:	8a 81       	ldd	r24, Y+2	; 0x02
     950:	9b 81       	ldd	r25, Y+3	; 0x03
     952:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <pwm_start>
		   pwm_start(&pwm_2, 0);	// Setting IN2 low
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	8a 81       	ldd	r24, Y+2	; 0x02
     95a:	9b 81       	ldd	r25, Y+3	; 0x03
     95c:	07 96       	adiw	r24, 0x07	; 7
     95e:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <pwm_start>
     962:	11 c0       	rjmp	.+34     	; 0x986 <_ZN11motorDriver3runEbbbb+0x394>
	   } else {
		   pwm_start(&pwm_1, 0);	// Setting IN1 low
     964:	60 e0       	ldi	r22, 0x00	; 0
     966:	8a 81       	ldd	r24, Y+2	; 0x02
     968:	9b 81       	ldd	r25, Y+3	; 0x03
     96a:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <pwm_start>
		   pwm_start(&pwm_2, abs(pwm_percent));	// Modulating IN2 high
     96e:	b8 01       	movw	r22, r16
     970:	11 23       	and	r17, r17
     972:	24 f4       	brge	.+8      	; 0x97c <_ZN11motorDriver3runEbbbb+0x38a>
     974:	66 27       	eor	r22, r22
     976:	77 27       	eor	r23, r23
     978:	60 1b       	sub	r22, r16
     97a:	71 0b       	sbc	r23, r17
     97c:	8a 81       	ldd	r24, Y+2	; 0x02
     97e:	9b 81       	ldd	r25, Y+3	; 0x03
     980:	07 96       	adiw	r24, 0x07	; 7
     982:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <pwm_start>
	   }
   }
   return pwm_percent;
 }
     986:	c8 01       	movw	r24, r16
     988:	23 96       	adiw	r28, 0x03	; 3
     98a:	cd bf       	out	0x3d, r28	; 61
     98c:	de bf       	out	0x3e, r29	; 62
     98e:	df 91       	pop	r29
     990:	cf 91       	pop	r28
     992:	1f 91       	pop	r17
     994:	0f 91       	pop	r16
     996:	ff 90       	pop	r15
     998:	ef 90       	pop	r14
     99a:	df 90       	pop	r13
     99c:	cf 90       	pop	r12
     99e:	bf 90       	pop	r11
     9a0:	af 90       	pop	r10
     9a2:	9f 90       	pop	r9
     9a4:	8f 90       	pop	r8
     9a6:	7f 90       	pop	r7
     9a8:	6f 90       	pop	r6
     9aa:	5f 90       	pop	r5
     9ac:	4f 90       	pop	r4
     9ae:	3f 90       	pop	r3
     9b0:	2f 90       	pop	r2
     9b2:	08 95       	ret

000009b4 <_ZN10task_motor3runEv>:
/** This task updates the motors with their current position and setpoints (intertask
*	variables) and adjusts the output pwm signals.
*/

void task_motor::run (void)
{
     9b4:	cf 93       	push	r28
     9b6:	df 93       	push	r29
     9b8:	cd b7       	in	r28, 0x3d	; 61
     9ba:	de b7       	in	r29, 0x3e	; 62
     9bc:	ce 57       	subi	r28, 0x7E	; 126
     9be:	d1 09       	sbc	r29, r1
     9c0:	cd bf       	out	0x3d, r28	; 61
     9c2:	de bf       	out	0x3e, r29	; 62
     9c4:	3c 01       	movw	r6, r24
	// Initializing objects driver
		// All gains, limits, and positions are initialized to zero.
	motorDriver motor1 ('1', p_serial);
     9c6:	fc 01       	movw	r30, r24
     9c8:	46 81       	ldd	r20, Z+6	; 0x06
     9ca:	57 81       	ldd	r21, Z+7	; 0x07
     9cc:	61 e3       	ldi	r22, 0x31	; 49
     9ce:	ce 01       	movw	r24, r28
     9d0:	01 96       	adiw	r24, 0x01	; 1
     9d2:	0e 94 88 02 	call	0x510	; 0x510 <_ZN11motorDriverC1EcP8emstream>
	motorDriver motor2 ('2', p_serial);
     9d6:	f3 01       	movw	r30, r6
     9d8:	46 81       	ldd	r20, Z+6	; 0x06
     9da:	57 81       	ldd	r21, Z+7	; 0x07
     9dc:	62 e3       	ldi	r22, 0x32	; 50
     9de:	ce 01       	movw	r24, r28
     9e0:	ce 96       	adiw	r24, 0x3e	; 62
     9e2:	0e 94 88 02 	call	0x510	; 0x510 <_ZN11motorDriverC1EcP8emstream>
	
	// Setting gain scaling
		// Gain scaling is the factor by which signals are divided. Allows for gains
		// to be scaled appropriately for int limits. Currently set to 1 (no scaling).
	int16_t pwm_scale = 10;
	motor1.set_pwm_scaling(pwm_scale);
     9e6:	6a e0       	ldi	r22, 0x0A	; 10
     9e8:	70 e0       	ldi	r23, 0x00	; 0
     9ea:	ce 01       	movw	r24, r28
     9ec:	01 96       	adiw	r24, 0x01	; 1
     9ee:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN11motorDriver15set_pwm_scalingEi>
	motor2.set_pwm_scaling(pwm_scale);
     9f2:	6a e0       	ldi	r22, 0x0A	; 10
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	ce 01       	movw	r24, r28
     9f8:	ce 96       	adiw	r24, 0x3e	; 62
     9fa:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_ZN11motorDriver15set_pwm_scalingEi>

	// Setting linear gains
	int16_t kp_l = 1;
	int16_t ki_l = 1;
	int16_t kd_l = 0;
	motor1.set_k_l(kp_l,ki_l,kd_l);
     9fe:	20 e0       	ldi	r18, 0x00	; 0
     a00:	30 e0       	ldi	r19, 0x00	; 0
     a02:	41 e0       	ldi	r20, 0x01	; 1
     a04:	50 e0       	ldi	r21, 0x00	; 0
     a06:	61 e0       	ldi	r22, 0x01	; 1
     a08:	70 e0       	ldi	r23, 0x00	; 0
     a0a:	ce 01       	movw	r24, r28
     a0c:	01 96       	adiw	r24, 0x01	; 1
     a0e:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <_ZN11motorDriver7set_k_lEiii>
	motor2.set_k_l(kp_l,ki_l,kd_l);
     a12:	20 e0       	ldi	r18, 0x00	; 0
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	41 e0       	ldi	r20, 0x01	; 1
     a18:	50 e0       	ldi	r21, 0x00	; 0
     a1a:	61 e0       	ldi	r22, 0x01	; 1
     a1c:	70 e0       	ldi	r23, 0x00	; 0
     a1e:	ce 01       	movw	r24, r28
     a20:	ce 96       	adiw	r24, 0x3e	; 62
     a22:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <_ZN11motorDriver7set_k_lEiii>

	// Setting angular gains
	int16_t kp_a = 1;
	int16_t ki_a = 1;
	int16_t kd_a = 0;
	motor1.set_k_a(kp_a,ki_a,kd_a);
     a26:	20 e0       	ldi	r18, 0x00	; 0
     a28:	30 e0       	ldi	r19, 0x00	; 0
     a2a:	41 e0       	ldi	r20, 0x01	; 1
     a2c:	50 e0       	ldi	r21, 0x00	; 0
     a2e:	61 e0       	ldi	r22, 0x01	; 1
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	ce 01       	movw	r24, r28
     a34:	01 96       	adiw	r24, 0x01	; 1
     a36:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_ZN11motorDriver7set_k_aEiii>
	motor2.set_k_a(kp_a,ki_a,kd_a);
     a3a:	20 e0       	ldi	r18, 0x00	; 0
     a3c:	30 e0       	ldi	r19, 0x00	; 0
     a3e:	41 e0       	ldi	r20, 0x01	; 1
     a40:	50 e0       	ldi	r21, 0x00	; 0
     a42:	61 e0       	ldi	r22, 0x01	; 1
     a44:	70 e0       	ldi	r23, 0x00	; 0
     a46:	ce 01       	movw	r24, r28
     a48:	ce 96       	adiw	r24, 0x3e	; 62
     a4a:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_ZN11motorDriver7set_k_aEiii>
		// esum_lim is the limit for the accumulation of errors for integral gain.
	int16_t pwm_lim = 100;	// Max percentage pwm output
	int16_t pwm_lim_linear = 80;	// Portion of pwm_lim used for linear driving. Rest is for angular
	int16_t esum_l_lim = 80*pwm_scale;	// Note: esum_lim is used prior to the pwm being scaled
	int16_t esum_a_lim = 20*pwm_scale;
	motor1.set_pwm_lim(pwm_lim); // Needs to be performed prior to set_pwm_lim_linear
     a4e:	64 e6       	ldi	r22, 0x64	; 100
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	ce 01       	movw	r24, r28
     a54:	01 96       	adiw	r24, 0x01	; 1
     a56:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN11motorDriver11set_pwm_limEi>
	motor2.set_pwm_lim(pwm_lim);
     a5a:	64 e6       	ldi	r22, 0x64	; 100
     a5c:	70 e0       	ldi	r23, 0x00	; 0
     a5e:	ce 01       	movw	r24, r28
     a60:	ce 96       	adiw	r24, 0x3e	; 62
     a62:	0e 94 6e 02 	call	0x4dc	; 0x4dc <_ZN11motorDriver11set_pwm_limEi>
	motor1.set_pwm_lim_linear(pwm_lim_linear);
     a66:	60 e5       	ldi	r22, 0x50	; 80
     a68:	70 e0       	ldi	r23, 0x00	; 0
     a6a:	ce 01       	movw	r24, r28
     a6c:	01 96       	adiw	r24, 0x01	; 1
     a6e:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <_ZN11motorDriver18set_pwm_lim_linearEi>
	motor2.set_pwm_lim_linear(pwm_lim_linear);
     a72:	60 e5       	ldi	r22, 0x50	; 80
     a74:	70 e0       	ldi	r23, 0x00	; 0
     a76:	ce 01       	movw	r24, r28
     a78:	ce 96       	adiw	r24, 0x3e	; 62
     a7a:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <_ZN11motorDriver18set_pwm_lim_linearEi>
	motor1.set_esum_l_lim(esum_l_lim);
     a7e:	60 e2       	ldi	r22, 0x20	; 32
     a80:	73 e0       	ldi	r23, 0x03	; 3
     a82:	ce 01       	movw	r24, r28
     a84:	01 96       	adiw	r24, 0x01	; 1
     a86:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <_ZN11motorDriver14set_esum_l_limEi>
	motor2.set_esum_l_lim(esum_l_lim);
     a8a:	60 e2       	ldi	r22, 0x20	; 32
     a8c:	73 e0       	ldi	r23, 0x03	; 3
     a8e:	ce 01       	movw	r24, r28
     a90:	ce 96       	adiw	r24, 0x3e	; 62
     a92:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <_ZN11motorDriver14set_esum_l_limEi>
	motor1.set_esum_a_lim(esum_a_lim);
     a96:	68 ec       	ldi	r22, 0xC8	; 200
     a98:	70 e0       	ldi	r23, 0x00	; 0
     a9a:	ce 01       	movw	r24, r28
     a9c:	01 96       	adiw	r24, 0x01	; 1
     a9e:	0e 94 e5 02 	call	0x5ca	; 0x5ca <_ZN11motorDriver14set_esum_a_limEi>
	motor2.set_esum_a_lim(esum_a_lim);
     aa2:	68 ec       	ldi	r22, 0xC8	; 200
     aa4:	70 e0       	ldi	r23, 0x00	; 0
     aa6:	ce 01       	movw	r24, r28
     aa8:	ce 96       	adiw	r24, 0x3e	; 62
     aaa:	0e 94 e5 02 	call	0x5ca	; 0x5ca <_ZN11motorDriver14set_esum_a_limEi>
	int16_t pwm_1;
	int16_t pwm_2;

	// This is an infinite loop; it runs until the power is turned off. This loop
	// continually updates motor position, setpoint, and pwm output.
	portTickType previousTicks = xTaskGetTickCount ();
     aae:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <xTaskGetTickCount>
     ab2:	ef 96       	adiw	r28, 0x3f	; 63
     ab4:	6c af       	std	Y+60, r22	; 0x3c
     ab6:	7d af       	std	Y+61, r23	; 0x3d
     ab8:	8e af       	std	Y+62, r24	; 0x3e
     aba:	9f af       	std	Y+63, r25	; 0x3f
     abc:	ef 97       	sbiw	r28, 0x3f	; 63
	*p_serial << "this should only appear once" << endl;
     abe:	f3 01       	movw	r30, r6
     ac0:	06 81       	ldd	r16, Z+6	; 0x06
     ac2:	17 81       	ldd	r17, Z+7	; 0x07
     ac4:	67 e3       	ldi	r22, 0x37	; 55
     ac6:	70 e2       	ldi	r23, 0x20	; 32
     ac8:	c8 01       	movw	r24, r16
     aca:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
     ace:	66 e0       	ldi	r22, 0x06	; 6
     ad0:	c8 01       	movw	r24, r16
     ad2:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
	while(1)
	{
		// Updating positions
		motor1.set_position(position_1);
     ad6:	60 91 f4 20 	lds	r22, 0x20F4	; 0x8020f4 <position_1>
     ada:	70 91 f5 20 	lds	r23, 0x20F5	; 0x8020f5 <position_1+0x1>
     ade:	ce 01       	movw	r24, r28
     ae0:	01 96       	adiw	r24, 0x01	; 1
     ae2:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <_ZN11motorDriver12set_positionEi>
		motor2.set_position(position_2);
     ae6:	60 91 f2 20 	lds	r22, 0x20F2	; 0x8020f2 <position_2>
     aea:	70 91 f3 20 	lds	r23, 0x20F3	; 0x8020f3 <position_2+0x1>
     aee:	ce 01       	movw	r24, r28
     af0:	ce 96       	adiw	r24, 0x3e	; 62
     af2:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <_ZN11motorDriver12set_positionEi>
		
		// Updating linear setpoints
		motor1.set_setpoint_l(setpoint_l_1);
     af6:	60 91 f0 20 	lds	r22, 0x20F0	; 0x8020f0 <setpoint_l_1>
     afa:	70 91 f1 20 	lds	r23, 0x20F1	; 0x8020f1 <setpoint_l_1+0x1>
     afe:	ce 01       	movw	r24, r28
     b00:	01 96       	adiw	r24, 0x01	; 1
     b02:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZN11motorDriver14set_setpoint_lEi>
		motor2.set_setpoint_l(setpoint_l_2);
     b06:	60 91 ee 20 	lds	r22, 0x20EE	; 0x8020ee <__data_end>
     b0a:	70 91 ef 20 	lds	r23, 0x20EF	; 0x8020ef <__data_end+0x1>
     b0e:	ce 01       	movw	r24, r28
     b10:	ce 96       	adiw	r24, 0x3e	; 62
     b12:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <_ZN11motorDriver14set_setpoint_lEi>

		// Updating angles
		motor1.set_angle(position_1);
     b16:	60 91 f4 20 	lds	r22, 0x20F4	; 0x8020f4 <position_1>
     b1a:	70 91 f5 20 	lds	r23, 0x20F5	; 0x8020f5 <position_1+0x1>
     b1e:	ce 01       	movw	r24, r28
     b20:	01 96       	adiw	r24, 0x01	; 1
     b22:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN11motorDriver9set_angleEi>
		motor2.set_angle(position_2);
     b26:	60 91 f2 20 	lds	r22, 0x20F2	; 0x8020f2 <position_2>
     b2a:	70 91 f3 20 	lds	r23, 0x20F3	; 0x8020f3 <position_2+0x1>
     b2e:	ce 01       	movw	r24, r28
     b30:	ce 96       	adiw	r24, 0x3e	; 62
     b32:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN11motorDriver9set_angleEi>
		
		// Updating angular setpoints
		motor1.set_setpoint_a(setpoint_l_1);
     b36:	60 91 f0 20 	lds	r22, 0x20F0	; 0x8020f0 <setpoint_l_1>
     b3a:	70 91 f1 20 	lds	r23, 0x20F1	; 0x8020f1 <setpoint_l_1+0x1>
     b3e:	ce 01       	movw	r24, r28
     b40:	01 96       	adiw	r24, 0x01	; 1
     b42:	0e 94 ed 02 	call	0x5da	; 0x5da <_ZN11motorDriver14set_setpoint_aEi>
		motor2.set_setpoint_a(setpoint_l_2);
     b46:	60 91 ee 20 	lds	r22, 0x20EE	; 0x8020ee <__data_end>
     b4a:	70 91 ef 20 	lds	r23, 0x20EF	; 0x8020ef <__data_end+0x1>
     b4e:	ce 01       	movw	r24, r28
     b50:	ce 96       	adiw	r24, 0x3e	; 62
     b52:	0e 94 ed 02 	call	0x5da	; 0x5da <_ZN11motorDriver14set_setpoint_aEi>
			// PWM signal is calculated using the sum of each action that is
			// enabled (the first three arguments). The pins are modulated
			// according to the drive mode. True means higher performance,
			// false means lower current (ish). Higher performance is recommended,
			// especially for lower pwm's.
		pwm_1 = motor1.run(true,false,false,true);
     b56:	01 e0       	ldi	r16, 0x01	; 1
     b58:	20 e0       	ldi	r18, 0x00	; 0
     b5a:	40 e0       	ldi	r20, 0x00	; 0
     b5c:	61 e0       	ldi	r22, 0x01	; 1
     b5e:	ce 01       	movw	r24, r28
     b60:	01 96       	adiw	r24, 0x01	; 1
     b62:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <_ZN11motorDriver3runEbbbb>
     b66:	6c 01       	movw	r12, r24
		pwm_2 = motor2.run(true,false,false,true);	// Currently is set to run in PI mode
     b68:	20 e0       	ldi	r18, 0x00	; 0
     b6a:	40 e0       	ldi	r20, 0x00	; 0
     b6c:	61 e0       	ldi	r22, 0x01	; 1
     b6e:	ce 01       	movw	r24, r28
     b70:	ce 96       	adiw	r24, 0x3e	; 62
     b72:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <_ZN11motorDriver3runEbbbb>
     b76:	7c 01       	movw	r14, r24

		// Sending serial diagnostics
		*p_serial << "PWM setting (M1)" << pwm_1 << " (M2) " << pwm_2 << " time " << previousTicks << endl;
     b78:	ef 96       	adiw	r28, 0x3f	; 63
     b7a:	8c ac       	ldd	r8, Y+60	; 0x3c
     b7c:	9d ac       	ldd	r9, Y+61	; 0x3d
     b7e:	ae ac       	ldd	r10, Y+62	; 0x3e
     b80:	bf ac       	ldd	r11, Y+63	; 0x3f
     b82:	ef 97       	sbiw	r28, 0x3f	; 63
     b84:	f3 01       	movw	r30, r6
     b86:	06 81       	ldd	r16, Z+6	; 0x06
     b88:	17 81       	ldd	r17, Z+7	; 0x07
     b8a:	64 e5       	ldi	r22, 0x54	; 84
     b8c:	70 e2       	ldi	r23, 0x20	; 32
     b8e:	c8 01       	movw	r24, r16
     b90:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
     b94:	b6 01       	movw	r22, r12
     b96:	c8 01       	movw	r24, r16
     b98:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN8emstreamlsEi>
     b9c:	8c 01       	movw	r16, r24
     b9e:	65 e6       	ldi	r22, 0x65	; 101
     ba0:	70 e2       	ldi	r23, 0x20	; 32
     ba2:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
     ba6:	b7 01       	movw	r22, r14
     ba8:	c8 01       	movw	r24, r16
     baa:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <_ZN8emstreamlsEi>
     bae:	8c 01       	movw	r16, r24
     bb0:	6c e6       	ldi	r22, 0x6C	; 108
     bb2:	70 e2       	ldi	r23, 0x20	; 32
     bb4:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
     bb8:	b5 01       	movw	r22, r10
     bba:	a4 01       	movw	r20, r8
     bbc:	c8 01       	movw	r24, r16
     bbe:	0e 94 56 1d 	call	0x3aac	; 0x3aac <_ZN8emstreamlsEm>
     bc2:	66 e0       	ldi	r22, 0x06	; 6
     bc4:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>

		// Delaying
		previousTicks = xTaskGetTickCount();
     bc8:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <xTaskGetTickCount>
     bcc:	ef 96       	adiw	r28, 0x3f	; 63
     bce:	6c af       	std	Y+60, r22	; 0x3c
     bd0:	7d af       	std	Y+61, r23	; 0x3d
     bd2:	8e af       	std	Y+62, r24	; 0x3e
     bd4:	9f af       	std	Y+63, r25	; 0x3f
     bd6:	ef 97       	sbiw	r28, 0x3f	; 63
     bd8:	45 e0       	ldi	r20, 0x05	; 5
     bda:	50 e0       	ldi	r21, 0x00	; 0
     bdc:	60 e0       	ldi	r22, 0x00	; 0
     bde:	70 e0       	ldi	r23, 0x00	; 0
     be0:	ce 01       	movw	r24, r28
     be2:	85 58       	subi	r24, 0x85	; 133
     be4:	9f 4f       	sbci	r25, 0xFF	; 255
     be6:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <vTaskDelayUntil>
     bea:	75 cf       	rjmp	.-278    	; 0xad6 <_ZN10task_motor3runEv+0x122>

00000bec <_ZN10task_motorC1EPKchjP8emstream>:
 *                      (default: configMINIMAL_STACK_SIZE)
 *  @param p_ser_dev Pointer to a serial device (port, radio, SD card, etc.) which can
 *                   be used by this task to communicate (default: NULL)
 */

task_motor::task_motor (const char* a_name, 
     bec:	0f 93       	push	r16
     bee:	1f 93       	push	r17
     bf0:	cf 93       	push	r28
     bf2:	df 93       	push	r29
     bf4:	ec 01       	movw	r28, r24
					  unsigned portBASE_TYPE a_priority, 
					  size_t a_stack_size,
					  emstream* p_ser_dev
					 )
	: frt_task (a_name, a_priority, a_stack_size, p_ser_dev)
     bf6:	0e 94 e0 19 	call	0x33c0	; 0x33c0 <_ZN8frt_taskC1EPKchjP8emstream>
     bfa:	87 e7       	ldi	r24, 0x77	; 119
     bfc:	90 e2       	ldi	r25, 0x20	; 32
     bfe:	88 83       	st	Y, r24
     c00:	99 83       	std	Y+1, r25	; 0x01
{
	
	// Nothing is done in the body of this constructor. All the work is done in the
	// call to the frt_task constructor on the line just above this one
}
     c02:	df 91       	pop	r29
     c04:	cf 91       	pop	r28
     c06:	1f 91       	pop	r17
     c08:	0f 91       	pop	r16
     c0a:	08 95       	ret

00000c0c <_Z8CCPWritePVhh>:
     c0c:	0f 93       	push	r16
     c0e:	cf 93       	push	r28
     c10:	df 93       	push	r29
     c12:	1f 92       	push	r1
     c14:	cd b7       	in	r28, 0x3d	; 61
     c16:	de b7       	in	r29, 0x3e	; 62
     c18:	2f b7       	in	r18, 0x3f	; 63
     c1a:	29 83       	std	Y+1, r18	; 0x01
     c1c:	f8 94       	cli
     c1e:	1b be       	out	0x3b, r1	; 59
     c20:	fc 01       	movw	r30, r24
     c22:	08 ed       	ldi	r16, 0xD8	; 216
     c24:	04 bf       	out	0x34, r16	; 52
     c26:	60 83       	st	Z, r22
     c28:	89 81       	ldd	r24, Y+1	; 0x01
     c2a:	8f bf       	out	0x3f, r24	; 63
     c2c:	0f 90       	pop	r0
     c2e:	df 91       	pop	r29
     c30:	cf 91       	pop	r28
     c32:	0f 91       	pop	r16
     c34:	08 95       	ret

00000c36 <_Z15config_SYSCLOCKv>:
     c36:	cf 93       	push	r28
     c38:	df 93       	push	r29
     c3a:	1f 92       	push	r1
     c3c:	cd b7       	in	r28, 0x3d	; 61
     c3e:	de b7       	in	r29, 0x3e	; 62
     c40:	8f b7       	in	r24, 0x3f	; 63
     c42:	89 83       	std	Y+1, r24	; 0x01
     c44:	f8 94       	cli
     c46:	e0 e5       	ldi	r30, 0x50	; 80
     c48:	f0 e0       	ldi	r31, 0x00	; 0
     c4a:	8b ec       	ldi	r24, 0xCB	; 203
     c4c:	82 83       	std	Z+2, r24	; 0x02
     c4e:	80 81       	ld	r24, Z
     c50:	88 60       	ori	r24, 0x08	; 8
     c52:	80 83       	st	Z, r24
     c54:	81 81       	ldd	r24, Z+1	; 0x01
     c56:	83 ff       	sbrs	r24, 3
     c58:	fd cf       	rjmp	.-6      	; 0xc54 <_Z15config_SYSCLOCKv+0x1e>
     c5a:	e0 e5       	ldi	r30, 0x50	; 80
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	82 ec       	ldi	r24, 0xC2	; 194
     c60:	85 83       	std	Z+5, r24	; 0x05
     c62:	80 81       	ld	r24, Z
     c64:	80 61       	ori	r24, 0x10	; 16
     c66:	80 83       	st	Z, r24
     c68:	81 81       	ldd	r24, Z+1	; 0x01
     c6a:	84 ff       	sbrs	r24, 4
     c6c:	fd cf       	rjmp	.-6      	; 0xc68 <_Z15config_SYSCLOCKv+0x32>
     c6e:	e0 e4       	ldi	r30, 0x40	; 64
     c70:	f0 e0       	ldi	r31, 0x00	; 0
     c72:	60 81       	ld	r22, Z
     c74:	68 7f       	andi	r22, 0xF8	; 248
     c76:	64 60       	ori	r22, 0x04	; 4
     c78:	60 83       	st	Z, r22
     c7a:	88 ed       	ldi	r24, 0xD8	; 216
     c7c:	84 bf       	out	0x34, r24	; 52
     c7e:	80 e4       	ldi	r24, 0x40	; 64
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	0e 94 06 06 	call	0xc0c	; 0xc0c <_Z8CCPWritePVhh>
     c86:	e0 e5       	ldi	r30, 0x50	; 80
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	80 81       	ld	r24, Z
     c8c:	8b 7f       	andi	r24, 0xFB	; 251
     c8e:	80 83       	st	Z, r24
     c90:	89 81       	ldd	r24, Y+1	; 0x01
     c92:	8f bf       	out	0x3f, r24	; 63
     c94:	0f 90       	pop	r0
     c96:	df 91       	pop	r29
     c98:	cf 91       	pop	r28
     c9a:	08 95       	ret

00000c9c <sysclk_enable_module>:
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
     ca0:	1f 92       	push	r1
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	9f b7       	in	r25, 0x3f	; 63
     ca8:	99 83       	std	Y+1, r25	; 0x01
     caa:	f8 94       	cli
     cac:	99 81       	ldd	r25, Y+1	; 0x01
     cae:	e8 2f       	mov	r30, r24
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	e0 59       	subi	r30, 0x90	; 144
     cb4:	ff 4f       	sbci	r31, 0xFF	; 255
     cb6:	60 95       	com	r22
     cb8:	80 81       	ld	r24, Z
     cba:	68 23       	and	r22, r24
     cbc:	60 83       	st	Z, r22
     cbe:	9f bf       	out	0x3f, r25	; 63
     cc0:	0f 90       	pop	r0
     cc2:	df 91       	pop	r29
     cc4:	cf 91       	pop	r28
     cc6:	08 95       	ret

00000cc8 <__vector_14>:
     cc8:	1f 92       	push	r1
     cca:	0f 92       	push	r0
     ccc:	0f b6       	in	r0, 0x3f	; 63
     cce:	0f 92       	push	r0
     cd0:	11 24       	eor	r1, r1
     cd2:	0b b6       	in	r0, 0x3b	; 59
     cd4:	0f 92       	push	r0
     cd6:	2f 93       	push	r18
     cd8:	3f 93       	push	r19
     cda:	4f 93       	push	r20
     cdc:	5f 93       	push	r21
     cde:	6f 93       	push	r22
     ce0:	7f 93       	push	r23
     ce2:	8f 93       	push	r24
     ce4:	9f 93       	push	r25
     ce6:	af 93       	push	r26
     ce8:	bf 93       	push	r27
     cea:	ef 93       	push	r30
     cec:	ff 93       	push	r31
     cee:	e0 91 3a 21 	lds	r30, 0x213A	; 0x80213a <tc_tcc0_ovf_callback>
     cf2:	f0 91 3b 21 	lds	r31, 0x213B	; 0x80213b <tc_tcc0_ovf_callback+0x1>
     cf6:	30 97       	sbiw	r30, 0x00	; 0
     cf8:	09 f0       	breq	.+2      	; 0xcfc <__vector_14+0x34>
     cfa:	19 95       	eicall
     cfc:	ff 91       	pop	r31
     cfe:	ef 91       	pop	r30
     d00:	bf 91       	pop	r27
     d02:	af 91       	pop	r26
     d04:	9f 91       	pop	r25
     d06:	8f 91       	pop	r24
     d08:	7f 91       	pop	r23
     d0a:	6f 91       	pop	r22
     d0c:	5f 91       	pop	r21
     d0e:	4f 91       	pop	r20
     d10:	3f 91       	pop	r19
     d12:	2f 91       	pop	r18
     d14:	0f 90       	pop	r0
     d16:	0b be       	out	0x3b, r0	; 59
     d18:	0f 90       	pop	r0
     d1a:	0f be       	out	0x3f, r0	; 63
     d1c:	0f 90       	pop	r0
     d1e:	1f 90       	pop	r1
     d20:	18 95       	reti

00000d22 <__vector_15>:
     d22:	1f 92       	push	r1
     d24:	0f 92       	push	r0
     d26:	0f b6       	in	r0, 0x3f	; 63
     d28:	0f 92       	push	r0
     d2a:	11 24       	eor	r1, r1
     d2c:	0b b6       	in	r0, 0x3b	; 59
     d2e:	0f 92       	push	r0
     d30:	2f 93       	push	r18
     d32:	3f 93       	push	r19
     d34:	4f 93       	push	r20
     d36:	5f 93       	push	r21
     d38:	6f 93       	push	r22
     d3a:	7f 93       	push	r23
     d3c:	8f 93       	push	r24
     d3e:	9f 93       	push	r25
     d40:	af 93       	push	r26
     d42:	bf 93       	push	r27
     d44:	ef 93       	push	r30
     d46:	ff 93       	push	r31
     d48:	e0 91 38 21 	lds	r30, 0x2138	; 0x802138 <tc_tcc0_err_callback>
     d4c:	f0 91 39 21 	lds	r31, 0x2139	; 0x802139 <tc_tcc0_err_callback+0x1>
     d50:	30 97       	sbiw	r30, 0x00	; 0
     d52:	09 f0       	breq	.+2      	; 0xd56 <__vector_15+0x34>
     d54:	19 95       	eicall
     d56:	ff 91       	pop	r31
     d58:	ef 91       	pop	r30
     d5a:	bf 91       	pop	r27
     d5c:	af 91       	pop	r26
     d5e:	9f 91       	pop	r25
     d60:	8f 91       	pop	r24
     d62:	7f 91       	pop	r23
     d64:	6f 91       	pop	r22
     d66:	5f 91       	pop	r21
     d68:	4f 91       	pop	r20
     d6a:	3f 91       	pop	r19
     d6c:	2f 91       	pop	r18
     d6e:	0f 90       	pop	r0
     d70:	0b be       	out	0x3b, r0	; 59
     d72:	0f 90       	pop	r0
     d74:	0f be       	out	0x3f, r0	; 63
     d76:	0f 90       	pop	r0
     d78:	1f 90       	pop	r1
     d7a:	18 95       	reti

00000d7c <__vector_16>:
     d7c:	1f 92       	push	r1
     d7e:	0f 92       	push	r0
     d80:	0f b6       	in	r0, 0x3f	; 63
     d82:	0f 92       	push	r0
     d84:	11 24       	eor	r1, r1
     d86:	0b b6       	in	r0, 0x3b	; 59
     d88:	0f 92       	push	r0
     d8a:	2f 93       	push	r18
     d8c:	3f 93       	push	r19
     d8e:	4f 93       	push	r20
     d90:	5f 93       	push	r21
     d92:	6f 93       	push	r22
     d94:	7f 93       	push	r23
     d96:	8f 93       	push	r24
     d98:	9f 93       	push	r25
     d9a:	af 93       	push	r26
     d9c:	bf 93       	push	r27
     d9e:	ef 93       	push	r30
     da0:	ff 93       	push	r31
     da2:	e0 91 36 21 	lds	r30, 0x2136	; 0x802136 <tc_tcc0_cca_callback>
     da6:	f0 91 37 21 	lds	r31, 0x2137	; 0x802137 <tc_tcc0_cca_callback+0x1>
     daa:	30 97       	sbiw	r30, 0x00	; 0
     dac:	09 f0       	breq	.+2      	; 0xdb0 <__vector_16+0x34>
     dae:	19 95       	eicall
     db0:	ff 91       	pop	r31
     db2:	ef 91       	pop	r30
     db4:	bf 91       	pop	r27
     db6:	af 91       	pop	r26
     db8:	9f 91       	pop	r25
     dba:	8f 91       	pop	r24
     dbc:	7f 91       	pop	r23
     dbe:	6f 91       	pop	r22
     dc0:	5f 91       	pop	r21
     dc2:	4f 91       	pop	r20
     dc4:	3f 91       	pop	r19
     dc6:	2f 91       	pop	r18
     dc8:	0f 90       	pop	r0
     dca:	0b be       	out	0x3b, r0	; 59
     dcc:	0f 90       	pop	r0
     dce:	0f be       	out	0x3f, r0	; 63
     dd0:	0f 90       	pop	r0
     dd2:	1f 90       	pop	r1
     dd4:	18 95       	reti

00000dd6 <__vector_17>:
     dd6:	1f 92       	push	r1
     dd8:	0f 92       	push	r0
     dda:	0f b6       	in	r0, 0x3f	; 63
     ddc:	0f 92       	push	r0
     dde:	11 24       	eor	r1, r1
     de0:	0b b6       	in	r0, 0x3b	; 59
     de2:	0f 92       	push	r0
     de4:	2f 93       	push	r18
     de6:	3f 93       	push	r19
     de8:	4f 93       	push	r20
     dea:	5f 93       	push	r21
     dec:	6f 93       	push	r22
     dee:	7f 93       	push	r23
     df0:	8f 93       	push	r24
     df2:	9f 93       	push	r25
     df4:	af 93       	push	r26
     df6:	bf 93       	push	r27
     df8:	ef 93       	push	r30
     dfa:	ff 93       	push	r31
     dfc:	e0 91 34 21 	lds	r30, 0x2134	; 0x802134 <tc_tcc0_ccb_callback>
     e00:	f0 91 35 21 	lds	r31, 0x2135	; 0x802135 <tc_tcc0_ccb_callback+0x1>
     e04:	30 97       	sbiw	r30, 0x00	; 0
     e06:	09 f0       	breq	.+2      	; 0xe0a <__vector_17+0x34>
     e08:	19 95       	eicall
     e0a:	ff 91       	pop	r31
     e0c:	ef 91       	pop	r30
     e0e:	bf 91       	pop	r27
     e10:	af 91       	pop	r26
     e12:	9f 91       	pop	r25
     e14:	8f 91       	pop	r24
     e16:	7f 91       	pop	r23
     e18:	6f 91       	pop	r22
     e1a:	5f 91       	pop	r21
     e1c:	4f 91       	pop	r20
     e1e:	3f 91       	pop	r19
     e20:	2f 91       	pop	r18
     e22:	0f 90       	pop	r0
     e24:	0b be       	out	0x3b, r0	; 59
     e26:	0f 90       	pop	r0
     e28:	0f be       	out	0x3f, r0	; 63
     e2a:	0f 90       	pop	r0
     e2c:	1f 90       	pop	r1
     e2e:	18 95       	reti

00000e30 <__vector_18>:
     e30:	1f 92       	push	r1
     e32:	0f 92       	push	r0
     e34:	0f b6       	in	r0, 0x3f	; 63
     e36:	0f 92       	push	r0
     e38:	11 24       	eor	r1, r1
     e3a:	0b b6       	in	r0, 0x3b	; 59
     e3c:	0f 92       	push	r0
     e3e:	2f 93       	push	r18
     e40:	3f 93       	push	r19
     e42:	4f 93       	push	r20
     e44:	5f 93       	push	r21
     e46:	6f 93       	push	r22
     e48:	7f 93       	push	r23
     e4a:	8f 93       	push	r24
     e4c:	9f 93       	push	r25
     e4e:	af 93       	push	r26
     e50:	bf 93       	push	r27
     e52:	ef 93       	push	r30
     e54:	ff 93       	push	r31
     e56:	e0 91 32 21 	lds	r30, 0x2132	; 0x802132 <tc_tcc0_ccc_callback>
     e5a:	f0 91 33 21 	lds	r31, 0x2133	; 0x802133 <tc_tcc0_ccc_callback+0x1>
     e5e:	30 97       	sbiw	r30, 0x00	; 0
     e60:	09 f0       	breq	.+2      	; 0xe64 <__vector_18+0x34>
     e62:	19 95       	eicall
     e64:	ff 91       	pop	r31
     e66:	ef 91       	pop	r30
     e68:	bf 91       	pop	r27
     e6a:	af 91       	pop	r26
     e6c:	9f 91       	pop	r25
     e6e:	8f 91       	pop	r24
     e70:	7f 91       	pop	r23
     e72:	6f 91       	pop	r22
     e74:	5f 91       	pop	r21
     e76:	4f 91       	pop	r20
     e78:	3f 91       	pop	r19
     e7a:	2f 91       	pop	r18
     e7c:	0f 90       	pop	r0
     e7e:	0b be       	out	0x3b, r0	; 59
     e80:	0f 90       	pop	r0
     e82:	0f be       	out	0x3f, r0	; 63
     e84:	0f 90       	pop	r0
     e86:	1f 90       	pop	r1
     e88:	18 95       	reti

00000e8a <__vector_19>:
     e8a:	1f 92       	push	r1
     e8c:	0f 92       	push	r0
     e8e:	0f b6       	in	r0, 0x3f	; 63
     e90:	0f 92       	push	r0
     e92:	11 24       	eor	r1, r1
     e94:	0b b6       	in	r0, 0x3b	; 59
     e96:	0f 92       	push	r0
     e98:	2f 93       	push	r18
     e9a:	3f 93       	push	r19
     e9c:	4f 93       	push	r20
     e9e:	5f 93       	push	r21
     ea0:	6f 93       	push	r22
     ea2:	7f 93       	push	r23
     ea4:	8f 93       	push	r24
     ea6:	9f 93       	push	r25
     ea8:	af 93       	push	r26
     eaa:	bf 93       	push	r27
     eac:	ef 93       	push	r30
     eae:	ff 93       	push	r31
     eb0:	e0 91 30 21 	lds	r30, 0x2130	; 0x802130 <tc_tcc0_ccd_callback>
     eb4:	f0 91 31 21 	lds	r31, 0x2131	; 0x802131 <tc_tcc0_ccd_callback+0x1>
     eb8:	30 97       	sbiw	r30, 0x00	; 0
     eba:	09 f0       	breq	.+2      	; 0xebe <__vector_19+0x34>
     ebc:	19 95       	eicall
     ebe:	ff 91       	pop	r31
     ec0:	ef 91       	pop	r30
     ec2:	bf 91       	pop	r27
     ec4:	af 91       	pop	r26
     ec6:	9f 91       	pop	r25
     ec8:	8f 91       	pop	r24
     eca:	7f 91       	pop	r23
     ecc:	6f 91       	pop	r22
     ece:	5f 91       	pop	r21
     ed0:	4f 91       	pop	r20
     ed2:	3f 91       	pop	r19
     ed4:	2f 91       	pop	r18
     ed6:	0f 90       	pop	r0
     ed8:	0b be       	out	0x3b, r0	; 59
     eda:	0f 90       	pop	r0
     edc:	0f be       	out	0x3f, r0	; 63
     ede:	0f 90       	pop	r0
     ee0:	1f 90       	pop	r1
     ee2:	18 95       	reti

00000ee4 <__vector_20>:
     ee4:	1f 92       	push	r1
     ee6:	0f 92       	push	r0
     ee8:	0f b6       	in	r0, 0x3f	; 63
     eea:	0f 92       	push	r0
     eec:	11 24       	eor	r1, r1
     eee:	0b b6       	in	r0, 0x3b	; 59
     ef0:	0f 92       	push	r0
     ef2:	2f 93       	push	r18
     ef4:	3f 93       	push	r19
     ef6:	4f 93       	push	r20
     ef8:	5f 93       	push	r21
     efa:	6f 93       	push	r22
     efc:	7f 93       	push	r23
     efe:	8f 93       	push	r24
     f00:	9f 93       	push	r25
     f02:	af 93       	push	r26
     f04:	bf 93       	push	r27
     f06:	ef 93       	push	r30
     f08:	ff 93       	push	r31
     f0a:	e0 91 2e 21 	lds	r30, 0x212E	; 0x80212e <tc_tcc1_ovf_callback>
     f0e:	f0 91 2f 21 	lds	r31, 0x212F	; 0x80212f <tc_tcc1_ovf_callback+0x1>
     f12:	30 97       	sbiw	r30, 0x00	; 0
     f14:	09 f0       	breq	.+2      	; 0xf18 <__vector_20+0x34>
     f16:	19 95       	eicall
     f18:	ff 91       	pop	r31
     f1a:	ef 91       	pop	r30
     f1c:	bf 91       	pop	r27
     f1e:	af 91       	pop	r26
     f20:	9f 91       	pop	r25
     f22:	8f 91       	pop	r24
     f24:	7f 91       	pop	r23
     f26:	6f 91       	pop	r22
     f28:	5f 91       	pop	r21
     f2a:	4f 91       	pop	r20
     f2c:	3f 91       	pop	r19
     f2e:	2f 91       	pop	r18
     f30:	0f 90       	pop	r0
     f32:	0b be       	out	0x3b, r0	; 59
     f34:	0f 90       	pop	r0
     f36:	0f be       	out	0x3f, r0	; 63
     f38:	0f 90       	pop	r0
     f3a:	1f 90       	pop	r1
     f3c:	18 95       	reti

00000f3e <__vector_21>:
     f3e:	1f 92       	push	r1
     f40:	0f 92       	push	r0
     f42:	0f b6       	in	r0, 0x3f	; 63
     f44:	0f 92       	push	r0
     f46:	11 24       	eor	r1, r1
     f48:	0b b6       	in	r0, 0x3b	; 59
     f4a:	0f 92       	push	r0
     f4c:	2f 93       	push	r18
     f4e:	3f 93       	push	r19
     f50:	4f 93       	push	r20
     f52:	5f 93       	push	r21
     f54:	6f 93       	push	r22
     f56:	7f 93       	push	r23
     f58:	8f 93       	push	r24
     f5a:	9f 93       	push	r25
     f5c:	af 93       	push	r26
     f5e:	bf 93       	push	r27
     f60:	ef 93       	push	r30
     f62:	ff 93       	push	r31
     f64:	e0 91 2c 21 	lds	r30, 0x212C	; 0x80212c <tc_tcc1_err_callback>
     f68:	f0 91 2d 21 	lds	r31, 0x212D	; 0x80212d <tc_tcc1_err_callback+0x1>
     f6c:	30 97       	sbiw	r30, 0x00	; 0
     f6e:	09 f0       	breq	.+2      	; 0xf72 <__vector_21+0x34>
     f70:	19 95       	eicall
     f72:	ff 91       	pop	r31
     f74:	ef 91       	pop	r30
     f76:	bf 91       	pop	r27
     f78:	af 91       	pop	r26
     f7a:	9f 91       	pop	r25
     f7c:	8f 91       	pop	r24
     f7e:	7f 91       	pop	r23
     f80:	6f 91       	pop	r22
     f82:	5f 91       	pop	r21
     f84:	4f 91       	pop	r20
     f86:	3f 91       	pop	r19
     f88:	2f 91       	pop	r18
     f8a:	0f 90       	pop	r0
     f8c:	0b be       	out	0x3b, r0	; 59
     f8e:	0f 90       	pop	r0
     f90:	0f be       	out	0x3f, r0	; 63
     f92:	0f 90       	pop	r0
     f94:	1f 90       	pop	r1
     f96:	18 95       	reti

00000f98 <__vector_22>:
     f98:	1f 92       	push	r1
     f9a:	0f 92       	push	r0
     f9c:	0f b6       	in	r0, 0x3f	; 63
     f9e:	0f 92       	push	r0
     fa0:	11 24       	eor	r1, r1
     fa2:	0b b6       	in	r0, 0x3b	; 59
     fa4:	0f 92       	push	r0
     fa6:	2f 93       	push	r18
     fa8:	3f 93       	push	r19
     faa:	4f 93       	push	r20
     fac:	5f 93       	push	r21
     fae:	6f 93       	push	r22
     fb0:	7f 93       	push	r23
     fb2:	8f 93       	push	r24
     fb4:	9f 93       	push	r25
     fb6:	af 93       	push	r26
     fb8:	bf 93       	push	r27
     fba:	ef 93       	push	r30
     fbc:	ff 93       	push	r31
     fbe:	e0 91 2a 21 	lds	r30, 0x212A	; 0x80212a <tc_tcc1_cca_callback>
     fc2:	f0 91 2b 21 	lds	r31, 0x212B	; 0x80212b <tc_tcc1_cca_callback+0x1>
     fc6:	30 97       	sbiw	r30, 0x00	; 0
     fc8:	09 f0       	breq	.+2      	; 0xfcc <__vector_22+0x34>
     fca:	19 95       	eicall
     fcc:	ff 91       	pop	r31
     fce:	ef 91       	pop	r30
     fd0:	bf 91       	pop	r27
     fd2:	af 91       	pop	r26
     fd4:	9f 91       	pop	r25
     fd6:	8f 91       	pop	r24
     fd8:	7f 91       	pop	r23
     fda:	6f 91       	pop	r22
     fdc:	5f 91       	pop	r21
     fde:	4f 91       	pop	r20
     fe0:	3f 91       	pop	r19
     fe2:	2f 91       	pop	r18
     fe4:	0f 90       	pop	r0
     fe6:	0b be       	out	0x3b, r0	; 59
     fe8:	0f 90       	pop	r0
     fea:	0f be       	out	0x3f, r0	; 63
     fec:	0f 90       	pop	r0
     fee:	1f 90       	pop	r1
     ff0:	18 95       	reti

00000ff2 <__vector_23>:
     ff2:	1f 92       	push	r1
     ff4:	0f 92       	push	r0
     ff6:	0f b6       	in	r0, 0x3f	; 63
     ff8:	0f 92       	push	r0
     ffa:	11 24       	eor	r1, r1
     ffc:	0b b6       	in	r0, 0x3b	; 59
     ffe:	0f 92       	push	r0
    1000:	2f 93       	push	r18
    1002:	3f 93       	push	r19
    1004:	4f 93       	push	r20
    1006:	5f 93       	push	r21
    1008:	6f 93       	push	r22
    100a:	7f 93       	push	r23
    100c:	8f 93       	push	r24
    100e:	9f 93       	push	r25
    1010:	af 93       	push	r26
    1012:	bf 93       	push	r27
    1014:	ef 93       	push	r30
    1016:	ff 93       	push	r31
    1018:	e0 91 28 21 	lds	r30, 0x2128	; 0x802128 <tc_tcc1_ccb_callback>
    101c:	f0 91 29 21 	lds	r31, 0x2129	; 0x802129 <tc_tcc1_ccb_callback+0x1>
    1020:	30 97       	sbiw	r30, 0x00	; 0
    1022:	09 f0       	breq	.+2      	; 0x1026 <__vector_23+0x34>
    1024:	19 95       	eicall
    1026:	ff 91       	pop	r31
    1028:	ef 91       	pop	r30
    102a:	bf 91       	pop	r27
    102c:	af 91       	pop	r26
    102e:	9f 91       	pop	r25
    1030:	8f 91       	pop	r24
    1032:	7f 91       	pop	r23
    1034:	6f 91       	pop	r22
    1036:	5f 91       	pop	r21
    1038:	4f 91       	pop	r20
    103a:	3f 91       	pop	r19
    103c:	2f 91       	pop	r18
    103e:	0f 90       	pop	r0
    1040:	0b be       	out	0x3b, r0	; 59
    1042:	0f 90       	pop	r0
    1044:	0f be       	out	0x3f, r0	; 63
    1046:	0f 90       	pop	r0
    1048:	1f 90       	pop	r1
    104a:	18 95       	reti

0000104c <__vector_77>:
    104c:	1f 92       	push	r1
    104e:	0f 92       	push	r0
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	0f 92       	push	r0
    1054:	11 24       	eor	r1, r1
    1056:	0b b6       	in	r0, 0x3b	; 59
    1058:	0f 92       	push	r0
    105a:	2f 93       	push	r18
    105c:	3f 93       	push	r19
    105e:	4f 93       	push	r20
    1060:	5f 93       	push	r21
    1062:	6f 93       	push	r22
    1064:	7f 93       	push	r23
    1066:	8f 93       	push	r24
    1068:	9f 93       	push	r25
    106a:	af 93       	push	r26
    106c:	bf 93       	push	r27
    106e:	ef 93       	push	r30
    1070:	ff 93       	push	r31
    1072:	e0 91 26 21 	lds	r30, 0x2126	; 0x802126 <tc_tcd0_ovf_callback>
    1076:	f0 91 27 21 	lds	r31, 0x2127	; 0x802127 <tc_tcd0_ovf_callback+0x1>
    107a:	30 97       	sbiw	r30, 0x00	; 0
    107c:	09 f0       	breq	.+2      	; 0x1080 <__vector_77+0x34>
    107e:	19 95       	eicall
    1080:	ff 91       	pop	r31
    1082:	ef 91       	pop	r30
    1084:	bf 91       	pop	r27
    1086:	af 91       	pop	r26
    1088:	9f 91       	pop	r25
    108a:	8f 91       	pop	r24
    108c:	7f 91       	pop	r23
    108e:	6f 91       	pop	r22
    1090:	5f 91       	pop	r21
    1092:	4f 91       	pop	r20
    1094:	3f 91       	pop	r19
    1096:	2f 91       	pop	r18
    1098:	0f 90       	pop	r0
    109a:	0b be       	out	0x3b, r0	; 59
    109c:	0f 90       	pop	r0
    109e:	0f be       	out	0x3f, r0	; 63
    10a0:	0f 90       	pop	r0
    10a2:	1f 90       	pop	r1
    10a4:	18 95       	reti

000010a6 <__vector_78>:
    10a6:	1f 92       	push	r1
    10a8:	0f 92       	push	r0
    10aa:	0f b6       	in	r0, 0x3f	; 63
    10ac:	0f 92       	push	r0
    10ae:	11 24       	eor	r1, r1
    10b0:	0b b6       	in	r0, 0x3b	; 59
    10b2:	0f 92       	push	r0
    10b4:	2f 93       	push	r18
    10b6:	3f 93       	push	r19
    10b8:	4f 93       	push	r20
    10ba:	5f 93       	push	r21
    10bc:	6f 93       	push	r22
    10be:	7f 93       	push	r23
    10c0:	8f 93       	push	r24
    10c2:	9f 93       	push	r25
    10c4:	af 93       	push	r26
    10c6:	bf 93       	push	r27
    10c8:	ef 93       	push	r30
    10ca:	ff 93       	push	r31
    10cc:	e0 91 24 21 	lds	r30, 0x2124	; 0x802124 <tc_tcd0_err_callback>
    10d0:	f0 91 25 21 	lds	r31, 0x2125	; 0x802125 <tc_tcd0_err_callback+0x1>
    10d4:	30 97       	sbiw	r30, 0x00	; 0
    10d6:	09 f0       	breq	.+2      	; 0x10da <__vector_78+0x34>
    10d8:	19 95       	eicall
    10da:	ff 91       	pop	r31
    10dc:	ef 91       	pop	r30
    10de:	bf 91       	pop	r27
    10e0:	af 91       	pop	r26
    10e2:	9f 91       	pop	r25
    10e4:	8f 91       	pop	r24
    10e6:	7f 91       	pop	r23
    10e8:	6f 91       	pop	r22
    10ea:	5f 91       	pop	r21
    10ec:	4f 91       	pop	r20
    10ee:	3f 91       	pop	r19
    10f0:	2f 91       	pop	r18
    10f2:	0f 90       	pop	r0
    10f4:	0b be       	out	0x3b, r0	; 59
    10f6:	0f 90       	pop	r0
    10f8:	0f be       	out	0x3f, r0	; 63
    10fa:	0f 90       	pop	r0
    10fc:	1f 90       	pop	r1
    10fe:	18 95       	reti

00001100 <__vector_79>:
    1100:	1f 92       	push	r1
    1102:	0f 92       	push	r0
    1104:	0f b6       	in	r0, 0x3f	; 63
    1106:	0f 92       	push	r0
    1108:	11 24       	eor	r1, r1
    110a:	0b b6       	in	r0, 0x3b	; 59
    110c:	0f 92       	push	r0
    110e:	2f 93       	push	r18
    1110:	3f 93       	push	r19
    1112:	4f 93       	push	r20
    1114:	5f 93       	push	r21
    1116:	6f 93       	push	r22
    1118:	7f 93       	push	r23
    111a:	8f 93       	push	r24
    111c:	9f 93       	push	r25
    111e:	af 93       	push	r26
    1120:	bf 93       	push	r27
    1122:	ef 93       	push	r30
    1124:	ff 93       	push	r31
    1126:	e0 91 22 21 	lds	r30, 0x2122	; 0x802122 <tc_tcd0_cca_callback>
    112a:	f0 91 23 21 	lds	r31, 0x2123	; 0x802123 <tc_tcd0_cca_callback+0x1>
    112e:	30 97       	sbiw	r30, 0x00	; 0
    1130:	09 f0       	breq	.+2      	; 0x1134 <__vector_79+0x34>
    1132:	19 95       	eicall
    1134:	ff 91       	pop	r31
    1136:	ef 91       	pop	r30
    1138:	bf 91       	pop	r27
    113a:	af 91       	pop	r26
    113c:	9f 91       	pop	r25
    113e:	8f 91       	pop	r24
    1140:	7f 91       	pop	r23
    1142:	6f 91       	pop	r22
    1144:	5f 91       	pop	r21
    1146:	4f 91       	pop	r20
    1148:	3f 91       	pop	r19
    114a:	2f 91       	pop	r18
    114c:	0f 90       	pop	r0
    114e:	0b be       	out	0x3b, r0	; 59
    1150:	0f 90       	pop	r0
    1152:	0f be       	out	0x3f, r0	; 63
    1154:	0f 90       	pop	r0
    1156:	1f 90       	pop	r1
    1158:	18 95       	reti

0000115a <__vector_80>:
    115a:	1f 92       	push	r1
    115c:	0f 92       	push	r0
    115e:	0f b6       	in	r0, 0x3f	; 63
    1160:	0f 92       	push	r0
    1162:	11 24       	eor	r1, r1
    1164:	0b b6       	in	r0, 0x3b	; 59
    1166:	0f 92       	push	r0
    1168:	2f 93       	push	r18
    116a:	3f 93       	push	r19
    116c:	4f 93       	push	r20
    116e:	5f 93       	push	r21
    1170:	6f 93       	push	r22
    1172:	7f 93       	push	r23
    1174:	8f 93       	push	r24
    1176:	9f 93       	push	r25
    1178:	af 93       	push	r26
    117a:	bf 93       	push	r27
    117c:	ef 93       	push	r30
    117e:	ff 93       	push	r31
    1180:	e0 91 20 21 	lds	r30, 0x2120	; 0x802120 <tc_tcd0_ccb_callback>
    1184:	f0 91 21 21 	lds	r31, 0x2121	; 0x802121 <tc_tcd0_ccb_callback+0x1>
    1188:	30 97       	sbiw	r30, 0x00	; 0
    118a:	09 f0       	breq	.+2      	; 0x118e <__vector_80+0x34>
    118c:	19 95       	eicall
    118e:	ff 91       	pop	r31
    1190:	ef 91       	pop	r30
    1192:	bf 91       	pop	r27
    1194:	af 91       	pop	r26
    1196:	9f 91       	pop	r25
    1198:	8f 91       	pop	r24
    119a:	7f 91       	pop	r23
    119c:	6f 91       	pop	r22
    119e:	5f 91       	pop	r21
    11a0:	4f 91       	pop	r20
    11a2:	3f 91       	pop	r19
    11a4:	2f 91       	pop	r18
    11a6:	0f 90       	pop	r0
    11a8:	0b be       	out	0x3b, r0	; 59
    11aa:	0f 90       	pop	r0
    11ac:	0f be       	out	0x3f, r0	; 63
    11ae:	0f 90       	pop	r0
    11b0:	1f 90       	pop	r1
    11b2:	18 95       	reti

000011b4 <__vector_81>:
    11b4:	1f 92       	push	r1
    11b6:	0f 92       	push	r0
    11b8:	0f b6       	in	r0, 0x3f	; 63
    11ba:	0f 92       	push	r0
    11bc:	11 24       	eor	r1, r1
    11be:	0b b6       	in	r0, 0x3b	; 59
    11c0:	0f 92       	push	r0
    11c2:	2f 93       	push	r18
    11c4:	3f 93       	push	r19
    11c6:	4f 93       	push	r20
    11c8:	5f 93       	push	r21
    11ca:	6f 93       	push	r22
    11cc:	7f 93       	push	r23
    11ce:	8f 93       	push	r24
    11d0:	9f 93       	push	r25
    11d2:	af 93       	push	r26
    11d4:	bf 93       	push	r27
    11d6:	ef 93       	push	r30
    11d8:	ff 93       	push	r31
    11da:	e0 91 1e 21 	lds	r30, 0x211E	; 0x80211e <tc_tcd0_ccc_callback>
    11de:	f0 91 1f 21 	lds	r31, 0x211F	; 0x80211f <tc_tcd0_ccc_callback+0x1>
    11e2:	30 97       	sbiw	r30, 0x00	; 0
    11e4:	09 f0       	breq	.+2      	; 0x11e8 <__vector_81+0x34>
    11e6:	19 95       	eicall
    11e8:	ff 91       	pop	r31
    11ea:	ef 91       	pop	r30
    11ec:	bf 91       	pop	r27
    11ee:	af 91       	pop	r26
    11f0:	9f 91       	pop	r25
    11f2:	8f 91       	pop	r24
    11f4:	7f 91       	pop	r23
    11f6:	6f 91       	pop	r22
    11f8:	5f 91       	pop	r21
    11fa:	4f 91       	pop	r20
    11fc:	3f 91       	pop	r19
    11fe:	2f 91       	pop	r18
    1200:	0f 90       	pop	r0
    1202:	0b be       	out	0x3b, r0	; 59
    1204:	0f 90       	pop	r0
    1206:	0f be       	out	0x3f, r0	; 63
    1208:	0f 90       	pop	r0
    120a:	1f 90       	pop	r1
    120c:	18 95       	reti

0000120e <__vector_82>:
    120e:	1f 92       	push	r1
    1210:	0f 92       	push	r0
    1212:	0f b6       	in	r0, 0x3f	; 63
    1214:	0f 92       	push	r0
    1216:	11 24       	eor	r1, r1
    1218:	0b b6       	in	r0, 0x3b	; 59
    121a:	0f 92       	push	r0
    121c:	2f 93       	push	r18
    121e:	3f 93       	push	r19
    1220:	4f 93       	push	r20
    1222:	5f 93       	push	r21
    1224:	6f 93       	push	r22
    1226:	7f 93       	push	r23
    1228:	8f 93       	push	r24
    122a:	9f 93       	push	r25
    122c:	af 93       	push	r26
    122e:	bf 93       	push	r27
    1230:	ef 93       	push	r30
    1232:	ff 93       	push	r31
    1234:	e0 91 1c 21 	lds	r30, 0x211C	; 0x80211c <tc_tcd0_ccd_callback>
    1238:	f0 91 1d 21 	lds	r31, 0x211D	; 0x80211d <tc_tcd0_ccd_callback+0x1>
    123c:	30 97       	sbiw	r30, 0x00	; 0
    123e:	09 f0       	breq	.+2      	; 0x1242 <__vector_82+0x34>
    1240:	19 95       	eicall
    1242:	ff 91       	pop	r31
    1244:	ef 91       	pop	r30
    1246:	bf 91       	pop	r27
    1248:	af 91       	pop	r26
    124a:	9f 91       	pop	r25
    124c:	8f 91       	pop	r24
    124e:	7f 91       	pop	r23
    1250:	6f 91       	pop	r22
    1252:	5f 91       	pop	r21
    1254:	4f 91       	pop	r20
    1256:	3f 91       	pop	r19
    1258:	2f 91       	pop	r18
    125a:	0f 90       	pop	r0
    125c:	0b be       	out	0x3b, r0	; 59
    125e:	0f 90       	pop	r0
    1260:	0f be       	out	0x3f, r0	; 63
    1262:	0f 90       	pop	r0
    1264:	1f 90       	pop	r1
    1266:	18 95       	reti

00001268 <__vector_83>:
    1268:	1f 92       	push	r1
    126a:	0f 92       	push	r0
    126c:	0f b6       	in	r0, 0x3f	; 63
    126e:	0f 92       	push	r0
    1270:	11 24       	eor	r1, r1
    1272:	0b b6       	in	r0, 0x3b	; 59
    1274:	0f 92       	push	r0
    1276:	2f 93       	push	r18
    1278:	3f 93       	push	r19
    127a:	4f 93       	push	r20
    127c:	5f 93       	push	r21
    127e:	6f 93       	push	r22
    1280:	7f 93       	push	r23
    1282:	8f 93       	push	r24
    1284:	9f 93       	push	r25
    1286:	af 93       	push	r26
    1288:	bf 93       	push	r27
    128a:	ef 93       	push	r30
    128c:	ff 93       	push	r31
    128e:	e0 91 1a 21 	lds	r30, 0x211A	; 0x80211a <tc_tcd1_ovf_callback>
    1292:	f0 91 1b 21 	lds	r31, 0x211B	; 0x80211b <tc_tcd1_ovf_callback+0x1>
    1296:	30 97       	sbiw	r30, 0x00	; 0
    1298:	09 f0       	breq	.+2      	; 0x129c <__vector_83+0x34>
    129a:	19 95       	eicall
    129c:	ff 91       	pop	r31
    129e:	ef 91       	pop	r30
    12a0:	bf 91       	pop	r27
    12a2:	af 91       	pop	r26
    12a4:	9f 91       	pop	r25
    12a6:	8f 91       	pop	r24
    12a8:	7f 91       	pop	r23
    12aa:	6f 91       	pop	r22
    12ac:	5f 91       	pop	r21
    12ae:	4f 91       	pop	r20
    12b0:	3f 91       	pop	r19
    12b2:	2f 91       	pop	r18
    12b4:	0f 90       	pop	r0
    12b6:	0b be       	out	0x3b, r0	; 59
    12b8:	0f 90       	pop	r0
    12ba:	0f be       	out	0x3f, r0	; 63
    12bc:	0f 90       	pop	r0
    12be:	1f 90       	pop	r1
    12c0:	18 95       	reti

000012c2 <__vector_84>:
    12c2:	1f 92       	push	r1
    12c4:	0f 92       	push	r0
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	0f 92       	push	r0
    12ca:	11 24       	eor	r1, r1
    12cc:	0b b6       	in	r0, 0x3b	; 59
    12ce:	0f 92       	push	r0
    12d0:	2f 93       	push	r18
    12d2:	3f 93       	push	r19
    12d4:	4f 93       	push	r20
    12d6:	5f 93       	push	r21
    12d8:	6f 93       	push	r22
    12da:	7f 93       	push	r23
    12dc:	8f 93       	push	r24
    12de:	9f 93       	push	r25
    12e0:	af 93       	push	r26
    12e2:	bf 93       	push	r27
    12e4:	ef 93       	push	r30
    12e6:	ff 93       	push	r31
    12e8:	e0 91 18 21 	lds	r30, 0x2118	; 0x802118 <tc_tcd1_err_callback>
    12ec:	f0 91 19 21 	lds	r31, 0x2119	; 0x802119 <tc_tcd1_err_callback+0x1>
    12f0:	30 97       	sbiw	r30, 0x00	; 0
    12f2:	09 f0       	breq	.+2      	; 0x12f6 <__vector_84+0x34>
    12f4:	19 95       	eicall
    12f6:	ff 91       	pop	r31
    12f8:	ef 91       	pop	r30
    12fa:	bf 91       	pop	r27
    12fc:	af 91       	pop	r26
    12fe:	9f 91       	pop	r25
    1300:	8f 91       	pop	r24
    1302:	7f 91       	pop	r23
    1304:	6f 91       	pop	r22
    1306:	5f 91       	pop	r21
    1308:	4f 91       	pop	r20
    130a:	3f 91       	pop	r19
    130c:	2f 91       	pop	r18
    130e:	0f 90       	pop	r0
    1310:	0b be       	out	0x3b, r0	; 59
    1312:	0f 90       	pop	r0
    1314:	0f be       	out	0x3f, r0	; 63
    1316:	0f 90       	pop	r0
    1318:	1f 90       	pop	r1
    131a:	18 95       	reti

0000131c <__vector_85>:
    131c:	1f 92       	push	r1
    131e:	0f 92       	push	r0
    1320:	0f b6       	in	r0, 0x3f	; 63
    1322:	0f 92       	push	r0
    1324:	11 24       	eor	r1, r1
    1326:	0b b6       	in	r0, 0x3b	; 59
    1328:	0f 92       	push	r0
    132a:	2f 93       	push	r18
    132c:	3f 93       	push	r19
    132e:	4f 93       	push	r20
    1330:	5f 93       	push	r21
    1332:	6f 93       	push	r22
    1334:	7f 93       	push	r23
    1336:	8f 93       	push	r24
    1338:	9f 93       	push	r25
    133a:	af 93       	push	r26
    133c:	bf 93       	push	r27
    133e:	ef 93       	push	r30
    1340:	ff 93       	push	r31
    1342:	e0 91 16 21 	lds	r30, 0x2116	; 0x802116 <tc_tcd1_cca_callback>
    1346:	f0 91 17 21 	lds	r31, 0x2117	; 0x802117 <tc_tcd1_cca_callback+0x1>
    134a:	30 97       	sbiw	r30, 0x00	; 0
    134c:	09 f0       	breq	.+2      	; 0x1350 <__vector_85+0x34>
    134e:	19 95       	eicall
    1350:	ff 91       	pop	r31
    1352:	ef 91       	pop	r30
    1354:	bf 91       	pop	r27
    1356:	af 91       	pop	r26
    1358:	9f 91       	pop	r25
    135a:	8f 91       	pop	r24
    135c:	7f 91       	pop	r23
    135e:	6f 91       	pop	r22
    1360:	5f 91       	pop	r21
    1362:	4f 91       	pop	r20
    1364:	3f 91       	pop	r19
    1366:	2f 91       	pop	r18
    1368:	0f 90       	pop	r0
    136a:	0b be       	out	0x3b, r0	; 59
    136c:	0f 90       	pop	r0
    136e:	0f be       	out	0x3f, r0	; 63
    1370:	0f 90       	pop	r0
    1372:	1f 90       	pop	r1
    1374:	18 95       	reti

00001376 <__vector_86>:
    1376:	1f 92       	push	r1
    1378:	0f 92       	push	r0
    137a:	0f b6       	in	r0, 0x3f	; 63
    137c:	0f 92       	push	r0
    137e:	11 24       	eor	r1, r1
    1380:	0b b6       	in	r0, 0x3b	; 59
    1382:	0f 92       	push	r0
    1384:	2f 93       	push	r18
    1386:	3f 93       	push	r19
    1388:	4f 93       	push	r20
    138a:	5f 93       	push	r21
    138c:	6f 93       	push	r22
    138e:	7f 93       	push	r23
    1390:	8f 93       	push	r24
    1392:	9f 93       	push	r25
    1394:	af 93       	push	r26
    1396:	bf 93       	push	r27
    1398:	ef 93       	push	r30
    139a:	ff 93       	push	r31
    139c:	e0 91 14 21 	lds	r30, 0x2114	; 0x802114 <tc_tcd1_ccb_callback>
    13a0:	f0 91 15 21 	lds	r31, 0x2115	; 0x802115 <tc_tcd1_ccb_callback+0x1>
    13a4:	30 97       	sbiw	r30, 0x00	; 0
    13a6:	09 f0       	breq	.+2      	; 0x13aa <__vector_86+0x34>
    13a8:	19 95       	eicall
    13aa:	ff 91       	pop	r31
    13ac:	ef 91       	pop	r30
    13ae:	bf 91       	pop	r27
    13b0:	af 91       	pop	r26
    13b2:	9f 91       	pop	r25
    13b4:	8f 91       	pop	r24
    13b6:	7f 91       	pop	r23
    13b8:	6f 91       	pop	r22
    13ba:	5f 91       	pop	r21
    13bc:	4f 91       	pop	r20
    13be:	3f 91       	pop	r19
    13c0:	2f 91       	pop	r18
    13c2:	0f 90       	pop	r0
    13c4:	0b be       	out	0x3b, r0	; 59
    13c6:	0f 90       	pop	r0
    13c8:	0f be       	out	0x3f, r0	; 63
    13ca:	0f 90       	pop	r0
    13cc:	1f 90       	pop	r1
    13ce:	18 95       	reti

000013d0 <__vector_47>:
    13d0:	1f 92       	push	r1
    13d2:	0f 92       	push	r0
    13d4:	0f b6       	in	r0, 0x3f	; 63
    13d6:	0f 92       	push	r0
    13d8:	11 24       	eor	r1, r1
    13da:	0b b6       	in	r0, 0x3b	; 59
    13dc:	0f 92       	push	r0
    13de:	2f 93       	push	r18
    13e0:	3f 93       	push	r19
    13e2:	4f 93       	push	r20
    13e4:	5f 93       	push	r21
    13e6:	6f 93       	push	r22
    13e8:	7f 93       	push	r23
    13ea:	8f 93       	push	r24
    13ec:	9f 93       	push	r25
    13ee:	af 93       	push	r26
    13f0:	bf 93       	push	r27
    13f2:	ef 93       	push	r30
    13f4:	ff 93       	push	r31
    13f6:	e0 91 12 21 	lds	r30, 0x2112	; 0x802112 <tc_tce0_ovf_callback>
    13fa:	f0 91 13 21 	lds	r31, 0x2113	; 0x802113 <tc_tce0_ovf_callback+0x1>
    13fe:	30 97       	sbiw	r30, 0x00	; 0
    1400:	09 f0       	breq	.+2      	; 0x1404 <__vector_47+0x34>
    1402:	19 95       	eicall
    1404:	ff 91       	pop	r31
    1406:	ef 91       	pop	r30
    1408:	bf 91       	pop	r27
    140a:	af 91       	pop	r26
    140c:	9f 91       	pop	r25
    140e:	8f 91       	pop	r24
    1410:	7f 91       	pop	r23
    1412:	6f 91       	pop	r22
    1414:	5f 91       	pop	r21
    1416:	4f 91       	pop	r20
    1418:	3f 91       	pop	r19
    141a:	2f 91       	pop	r18
    141c:	0f 90       	pop	r0
    141e:	0b be       	out	0x3b, r0	; 59
    1420:	0f 90       	pop	r0
    1422:	0f be       	out	0x3f, r0	; 63
    1424:	0f 90       	pop	r0
    1426:	1f 90       	pop	r1
    1428:	18 95       	reti

0000142a <__vector_48>:
    142a:	1f 92       	push	r1
    142c:	0f 92       	push	r0
    142e:	0f b6       	in	r0, 0x3f	; 63
    1430:	0f 92       	push	r0
    1432:	11 24       	eor	r1, r1
    1434:	0b b6       	in	r0, 0x3b	; 59
    1436:	0f 92       	push	r0
    1438:	2f 93       	push	r18
    143a:	3f 93       	push	r19
    143c:	4f 93       	push	r20
    143e:	5f 93       	push	r21
    1440:	6f 93       	push	r22
    1442:	7f 93       	push	r23
    1444:	8f 93       	push	r24
    1446:	9f 93       	push	r25
    1448:	af 93       	push	r26
    144a:	bf 93       	push	r27
    144c:	ef 93       	push	r30
    144e:	ff 93       	push	r31
    1450:	e0 91 10 21 	lds	r30, 0x2110	; 0x802110 <tc_tce0_err_callback>
    1454:	f0 91 11 21 	lds	r31, 0x2111	; 0x802111 <tc_tce0_err_callback+0x1>
    1458:	30 97       	sbiw	r30, 0x00	; 0
    145a:	09 f0       	breq	.+2      	; 0x145e <__vector_48+0x34>
    145c:	19 95       	eicall
    145e:	ff 91       	pop	r31
    1460:	ef 91       	pop	r30
    1462:	bf 91       	pop	r27
    1464:	af 91       	pop	r26
    1466:	9f 91       	pop	r25
    1468:	8f 91       	pop	r24
    146a:	7f 91       	pop	r23
    146c:	6f 91       	pop	r22
    146e:	5f 91       	pop	r21
    1470:	4f 91       	pop	r20
    1472:	3f 91       	pop	r19
    1474:	2f 91       	pop	r18
    1476:	0f 90       	pop	r0
    1478:	0b be       	out	0x3b, r0	; 59
    147a:	0f 90       	pop	r0
    147c:	0f be       	out	0x3f, r0	; 63
    147e:	0f 90       	pop	r0
    1480:	1f 90       	pop	r1
    1482:	18 95       	reti

00001484 <__vector_49>:
    1484:	1f 92       	push	r1
    1486:	0f 92       	push	r0
    1488:	0f b6       	in	r0, 0x3f	; 63
    148a:	0f 92       	push	r0
    148c:	11 24       	eor	r1, r1
    148e:	0b b6       	in	r0, 0x3b	; 59
    1490:	0f 92       	push	r0
    1492:	2f 93       	push	r18
    1494:	3f 93       	push	r19
    1496:	4f 93       	push	r20
    1498:	5f 93       	push	r21
    149a:	6f 93       	push	r22
    149c:	7f 93       	push	r23
    149e:	8f 93       	push	r24
    14a0:	9f 93       	push	r25
    14a2:	af 93       	push	r26
    14a4:	bf 93       	push	r27
    14a6:	ef 93       	push	r30
    14a8:	ff 93       	push	r31
    14aa:	e0 91 0e 21 	lds	r30, 0x210E	; 0x80210e <tc_tce0_cca_callback>
    14ae:	f0 91 0f 21 	lds	r31, 0x210F	; 0x80210f <tc_tce0_cca_callback+0x1>
    14b2:	30 97       	sbiw	r30, 0x00	; 0
    14b4:	09 f0       	breq	.+2      	; 0x14b8 <__vector_49+0x34>
    14b6:	19 95       	eicall
    14b8:	ff 91       	pop	r31
    14ba:	ef 91       	pop	r30
    14bc:	bf 91       	pop	r27
    14be:	af 91       	pop	r26
    14c0:	9f 91       	pop	r25
    14c2:	8f 91       	pop	r24
    14c4:	7f 91       	pop	r23
    14c6:	6f 91       	pop	r22
    14c8:	5f 91       	pop	r21
    14ca:	4f 91       	pop	r20
    14cc:	3f 91       	pop	r19
    14ce:	2f 91       	pop	r18
    14d0:	0f 90       	pop	r0
    14d2:	0b be       	out	0x3b, r0	; 59
    14d4:	0f 90       	pop	r0
    14d6:	0f be       	out	0x3f, r0	; 63
    14d8:	0f 90       	pop	r0
    14da:	1f 90       	pop	r1
    14dc:	18 95       	reti

000014de <__vector_50>:
    14de:	1f 92       	push	r1
    14e0:	0f 92       	push	r0
    14e2:	0f b6       	in	r0, 0x3f	; 63
    14e4:	0f 92       	push	r0
    14e6:	11 24       	eor	r1, r1
    14e8:	0b b6       	in	r0, 0x3b	; 59
    14ea:	0f 92       	push	r0
    14ec:	2f 93       	push	r18
    14ee:	3f 93       	push	r19
    14f0:	4f 93       	push	r20
    14f2:	5f 93       	push	r21
    14f4:	6f 93       	push	r22
    14f6:	7f 93       	push	r23
    14f8:	8f 93       	push	r24
    14fa:	9f 93       	push	r25
    14fc:	af 93       	push	r26
    14fe:	bf 93       	push	r27
    1500:	ef 93       	push	r30
    1502:	ff 93       	push	r31
    1504:	e0 91 0c 21 	lds	r30, 0x210C	; 0x80210c <tc_tce0_ccb_callback>
    1508:	f0 91 0d 21 	lds	r31, 0x210D	; 0x80210d <tc_tce0_ccb_callback+0x1>
    150c:	30 97       	sbiw	r30, 0x00	; 0
    150e:	09 f0       	breq	.+2      	; 0x1512 <__vector_50+0x34>
    1510:	19 95       	eicall
    1512:	ff 91       	pop	r31
    1514:	ef 91       	pop	r30
    1516:	bf 91       	pop	r27
    1518:	af 91       	pop	r26
    151a:	9f 91       	pop	r25
    151c:	8f 91       	pop	r24
    151e:	7f 91       	pop	r23
    1520:	6f 91       	pop	r22
    1522:	5f 91       	pop	r21
    1524:	4f 91       	pop	r20
    1526:	3f 91       	pop	r19
    1528:	2f 91       	pop	r18
    152a:	0f 90       	pop	r0
    152c:	0b be       	out	0x3b, r0	; 59
    152e:	0f 90       	pop	r0
    1530:	0f be       	out	0x3f, r0	; 63
    1532:	0f 90       	pop	r0
    1534:	1f 90       	pop	r1
    1536:	18 95       	reti

00001538 <__vector_51>:
    1538:	1f 92       	push	r1
    153a:	0f 92       	push	r0
    153c:	0f b6       	in	r0, 0x3f	; 63
    153e:	0f 92       	push	r0
    1540:	11 24       	eor	r1, r1
    1542:	0b b6       	in	r0, 0x3b	; 59
    1544:	0f 92       	push	r0
    1546:	2f 93       	push	r18
    1548:	3f 93       	push	r19
    154a:	4f 93       	push	r20
    154c:	5f 93       	push	r21
    154e:	6f 93       	push	r22
    1550:	7f 93       	push	r23
    1552:	8f 93       	push	r24
    1554:	9f 93       	push	r25
    1556:	af 93       	push	r26
    1558:	bf 93       	push	r27
    155a:	ef 93       	push	r30
    155c:	ff 93       	push	r31
    155e:	e0 91 0a 21 	lds	r30, 0x210A	; 0x80210a <tc_tce0_ccc_callback>
    1562:	f0 91 0b 21 	lds	r31, 0x210B	; 0x80210b <tc_tce0_ccc_callback+0x1>
    1566:	30 97       	sbiw	r30, 0x00	; 0
    1568:	09 f0       	breq	.+2      	; 0x156c <__vector_51+0x34>
    156a:	19 95       	eicall
    156c:	ff 91       	pop	r31
    156e:	ef 91       	pop	r30
    1570:	bf 91       	pop	r27
    1572:	af 91       	pop	r26
    1574:	9f 91       	pop	r25
    1576:	8f 91       	pop	r24
    1578:	7f 91       	pop	r23
    157a:	6f 91       	pop	r22
    157c:	5f 91       	pop	r21
    157e:	4f 91       	pop	r20
    1580:	3f 91       	pop	r19
    1582:	2f 91       	pop	r18
    1584:	0f 90       	pop	r0
    1586:	0b be       	out	0x3b, r0	; 59
    1588:	0f 90       	pop	r0
    158a:	0f be       	out	0x3f, r0	; 63
    158c:	0f 90       	pop	r0
    158e:	1f 90       	pop	r1
    1590:	18 95       	reti

00001592 <__vector_52>:
    1592:	1f 92       	push	r1
    1594:	0f 92       	push	r0
    1596:	0f b6       	in	r0, 0x3f	; 63
    1598:	0f 92       	push	r0
    159a:	11 24       	eor	r1, r1
    159c:	0b b6       	in	r0, 0x3b	; 59
    159e:	0f 92       	push	r0
    15a0:	2f 93       	push	r18
    15a2:	3f 93       	push	r19
    15a4:	4f 93       	push	r20
    15a6:	5f 93       	push	r21
    15a8:	6f 93       	push	r22
    15aa:	7f 93       	push	r23
    15ac:	8f 93       	push	r24
    15ae:	9f 93       	push	r25
    15b0:	af 93       	push	r26
    15b2:	bf 93       	push	r27
    15b4:	ef 93       	push	r30
    15b6:	ff 93       	push	r31
    15b8:	e0 91 08 21 	lds	r30, 0x2108	; 0x802108 <tc_tce0_ccd_callback>
    15bc:	f0 91 09 21 	lds	r31, 0x2109	; 0x802109 <tc_tce0_ccd_callback+0x1>
    15c0:	30 97       	sbiw	r30, 0x00	; 0
    15c2:	09 f0       	breq	.+2      	; 0x15c6 <__vector_52+0x34>
    15c4:	19 95       	eicall
    15c6:	ff 91       	pop	r31
    15c8:	ef 91       	pop	r30
    15ca:	bf 91       	pop	r27
    15cc:	af 91       	pop	r26
    15ce:	9f 91       	pop	r25
    15d0:	8f 91       	pop	r24
    15d2:	7f 91       	pop	r23
    15d4:	6f 91       	pop	r22
    15d6:	5f 91       	pop	r21
    15d8:	4f 91       	pop	r20
    15da:	3f 91       	pop	r19
    15dc:	2f 91       	pop	r18
    15de:	0f 90       	pop	r0
    15e0:	0b be       	out	0x3b, r0	; 59
    15e2:	0f 90       	pop	r0
    15e4:	0f be       	out	0x3f, r0	; 63
    15e6:	0f 90       	pop	r0
    15e8:	1f 90       	pop	r1
    15ea:	18 95       	reti

000015ec <__vector_53>:
    15ec:	1f 92       	push	r1
    15ee:	0f 92       	push	r0
    15f0:	0f b6       	in	r0, 0x3f	; 63
    15f2:	0f 92       	push	r0
    15f4:	11 24       	eor	r1, r1
    15f6:	0b b6       	in	r0, 0x3b	; 59
    15f8:	0f 92       	push	r0
    15fa:	2f 93       	push	r18
    15fc:	3f 93       	push	r19
    15fe:	4f 93       	push	r20
    1600:	5f 93       	push	r21
    1602:	6f 93       	push	r22
    1604:	7f 93       	push	r23
    1606:	8f 93       	push	r24
    1608:	9f 93       	push	r25
    160a:	af 93       	push	r26
    160c:	bf 93       	push	r27
    160e:	ef 93       	push	r30
    1610:	ff 93       	push	r31
    1612:	e0 91 06 21 	lds	r30, 0x2106	; 0x802106 <tc_tce1_ovf_callback>
    1616:	f0 91 07 21 	lds	r31, 0x2107	; 0x802107 <tc_tce1_ovf_callback+0x1>
    161a:	30 97       	sbiw	r30, 0x00	; 0
    161c:	09 f0       	breq	.+2      	; 0x1620 <__vector_53+0x34>
    161e:	19 95       	eicall
    1620:	ff 91       	pop	r31
    1622:	ef 91       	pop	r30
    1624:	bf 91       	pop	r27
    1626:	af 91       	pop	r26
    1628:	9f 91       	pop	r25
    162a:	8f 91       	pop	r24
    162c:	7f 91       	pop	r23
    162e:	6f 91       	pop	r22
    1630:	5f 91       	pop	r21
    1632:	4f 91       	pop	r20
    1634:	3f 91       	pop	r19
    1636:	2f 91       	pop	r18
    1638:	0f 90       	pop	r0
    163a:	0b be       	out	0x3b, r0	; 59
    163c:	0f 90       	pop	r0
    163e:	0f be       	out	0x3f, r0	; 63
    1640:	0f 90       	pop	r0
    1642:	1f 90       	pop	r1
    1644:	18 95       	reti

00001646 <__vector_54>:
    1646:	1f 92       	push	r1
    1648:	0f 92       	push	r0
    164a:	0f b6       	in	r0, 0x3f	; 63
    164c:	0f 92       	push	r0
    164e:	11 24       	eor	r1, r1
    1650:	0b b6       	in	r0, 0x3b	; 59
    1652:	0f 92       	push	r0
    1654:	2f 93       	push	r18
    1656:	3f 93       	push	r19
    1658:	4f 93       	push	r20
    165a:	5f 93       	push	r21
    165c:	6f 93       	push	r22
    165e:	7f 93       	push	r23
    1660:	8f 93       	push	r24
    1662:	9f 93       	push	r25
    1664:	af 93       	push	r26
    1666:	bf 93       	push	r27
    1668:	ef 93       	push	r30
    166a:	ff 93       	push	r31
    166c:	e0 91 04 21 	lds	r30, 0x2104	; 0x802104 <tc_tce1_err_callback>
    1670:	f0 91 05 21 	lds	r31, 0x2105	; 0x802105 <tc_tce1_err_callback+0x1>
    1674:	30 97       	sbiw	r30, 0x00	; 0
    1676:	09 f0       	breq	.+2      	; 0x167a <__vector_54+0x34>
    1678:	19 95       	eicall
    167a:	ff 91       	pop	r31
    167c:	ef 91       	pop	r30
    167e:	bf 91       	pop	r27
    1680:	af 91       	pop	r26
    1682:	9f 91       	pop	r25
    1684:	8f 91       	pop	r24
    1686:	7f 91       	pop	r23
    1688:	6f 91       	pop	r22
    168a:	5f 91       	pop	r21
    168c:	4f 91       	pop	r20
    168e:	3f 91       	pop	r19
    1690:	2f 91       	pop	r18
    1692:	0f 90       	pop	r0
    1694:	0b be       	out	0x3b, r0	; 59
    1696:	0f 90       	pop	r0
    1698:	0f be       	out	0x3f, r0	; 63
    169a:	0f 90       	pop	r0
    169c:	1f 90       	pop	r1
    169e:	18 95       	reti

000016a0 <__vector_56>:
    16a0:	1f 92       	push	r1
    16a2:	0f 92       	push	r0
    16a4:	0f b6       	in	r0, 0x3f	; 63
    16a6:	0f 92       	push	r0
    16a8:	11 24       	eor	r1, r1
    16aa:	0b b6       	in	r0, 0x3b	; 59
    16ac:	0f 92       	push	r0
    16ae:	2f 93       	push	r18
    16b0:	3f 93       	push	r19
    16b2:	4f 93       	push	r20
    16b4:	5f 93       	push	r21
    16b6:	6f 93       	push	r22
    16b8:	7f 93       	push	r23
    16ba:	8f 93       	push	r24
    16bc:	9f 93       	push	r25
    16be:	af 93       	push	r26
    16c0:	bf 93       	push	r27
    16c2:	ef 93       	push	r30
    16c4:	ff 93       	push	r31
    16c6:	e0 91 02 21 	lds	r30, 0x2102	; 0x802102 <tc_tce1_ccb_callback>
    16ca:	f0 91 03 21 	lds	r31, 0x2103	; 0x802103 <tc_tce1_ccb_callback+0x1>
    16ce:	30 97       	sbiw	r30, 0x00	; 0
    16d0:	09 f0       	breq	.+2      	; 0x16d4 <__vector_56+0x34>
    16d2:	19 95       	eicall
    16d4:	ff 91       	pop	r31
    16d6:	ef 91       	pop	r30
    16d8:	bf 91       	pop	r27
    16da:	af 91       	pop	r26
    16dc:	9f 91       	pop	r25
    16de:	8f 91       	pop	r24
    16e0:	7f 91       	pop	r23
    16e2:	6f 91       	pop	r22
    16e4:	5f 91       	pop	r21
    16e6:	4f 91       	pop	r20
    16e8:	3f 91       	pop	r19
    16ea:	2f 91       	pop	r18
    16ec:	0f 90       	pop	r0
    16ee:	0b be       	out	0x3b, r0	; 59
    16f0:	0f 90       	pop	r0
    16f2:	0f be       	out	0x3f, r0	; 63
    16f4:	0f 90       	pop	r0
    16f6:	1f 90       	pop	r1
    16f8:	18 95       	reti

000016fa <__vector_108>:
    16fa:	1f 92       	push	r1
    16fc:	0f 92       	push	r0
    16fe:	0f b6       	in	r0, 0x3f	; 63
    1700:	0f 92       	push	r0
    1702:	11 24       	eor	r1, r1
    1704:	0b b6       	in	r0, 0x3b	; 59
    1706:	0f 92       	push	r0
    1708:	2f 93       	push	r18
    170a:	3f 93       	push	r19
    170c:	4f 93       	push	r20
    170e:	5f 93       	push	r21
    1710:	6f 93       	push	r22
    1712:	7f 93       	push	r23
    1714:	8f 93       	push	r24
    1716:	9f 93       	push	r25
    1718:	af 93       	push	r26
    171a:	bf 93       	push	r27
    171c:	ef 93       	push	r30
    171e:	ff 93       	push	r31
    1720:	e0 91 00 21 	lds	r30, 0x2100	; 0x802100 <tc_tcf0_ovf_callback>
    1724:	f0 91 01 21 	lds	r31, 0x2101	; 0x802101 <tc_tcf0_ovf_callback+0x1>
    1728:	30 97       	sbiw	r30, 0x00	; 0
    172a:	09 f0       	breq	.+2      	; 0x172e <__vector_108+0x34>
    172c:	19 95       	eicall
    172e:	ff 91       	pop	r31
    1730:	ef 91       	pop	r30
    1732:	bf 91       	pop	r27
    1734:	af 91       	pop	r26
    1736:	9f 91       	pop	r25
    1738:	8f 91       	pop	r24
    173a:	7f 91       	pop	r23
    173c:	6f 91       	pop	r22
    173e:	5f 91       	pop	r21
    1740:	4f 91       	pop	r20
    1742:	3f 91       	pop	r19
    1744:	2f 91       	pop	r18
    1746:	0f 90       	pop	r0
    1748:	0b be       	out	0x3b, r0	; 59
    174a:	0f 90       	pop	r0
    174c:	0f be       	out	0x3f, r0	; 63
    174e:	0f 90       	pop	r0
    1750:	1f 90       	pop	r1
    1752:	18 95       	reti

00001754 <__vector_109>:
    1754:	1f 92       	push	r1
    1756:	0f 92       	push	r0
    1758:	0f b6       	in	r0, 0x3f	; 63
    175a:	0f 92       	push	r0
    175c:	11 24       	eor	r1, r1
    175e:	0b b6       	in	r0, 0x3b	; 59
    1760:	0f 92       	push	r0
    1762:	2f 93       	push	r18
    1764:	3f 93       	push	r19
    1766:	4f 93       	push	r20
    1768:	5f 93       	push	r21
    176a:	6f 93       	push	r22
    176c:	7f 93       	push	r23
    176e:	8f 93       	push	r24
    1770:	9f 93       	push	r25
    1772:	af 93       	push	r26
    1774:	bf 93       	push	r27
    1776:	ef 93       	push	r30
    1778:	ff 93       	push	r31
    177a:	e0 91 fe 20 	lds	r30, 0x20FE	; 0x8020fe <tc_tcf0_err_callback>
    177e:	f0 91 ff 20 	lds	r31, 0x20FF	; 0x8020ff <tc_tcf0_err_callback+0x1>
    1782:	30 97       	sbiw	r30, 0x00	; 0
    1784:	09 f0       	breq	.+2      	; 0x1788 <__vector_109+0x34>
    1786:	19 95       	eicall
    1788:	ff 91       	pop	r31
    178a:	ef 91       	pop	r30
    178c:	bf 91       	pop	r27
    178e:	af 91       	pop	r26
    1790:	9f 91       	pop	r25
    1792:	8f 91       	pop	r24
    1794:	7f 91       	pop	r23
    1796:	6f 91       	pop	r22
    1798:	5f 91       	pop	r21
    179a:	4f 91       	pop	r20
    179c:	3f 91       	pop	r19
    179e:	2f 91       	pop	r18
    17a0:	0f 90       	pop	r0
    17a2:	0b be       	out	0x3b, r0	; 59
    17a4:	0f 90       	pop	r0
    17a6:	0f be       	out	0x3f, r0	; 63
    17a8:	0f 90       	pop	r0
    17aa:	1f 90       	pop	r1
    17ac:	18 95       	reti

000017ae <__vector_110>:
    17ae:	1f 92       	push	r1
    17b0:	0f 92       	push	r0
    17b2:	0f b6       	in	r0, 0x3f	; 63
    17b4:	0f 92       	push	r0
    17b6:	11 24       	eor	r1, r1
    17b8:	0b b6       	in	r0, 0x3b	; 59
    17ba:	0f 92       	push	r0
    17bc:	2f 93       	push	r18
    17be:	3f 93       	push	r19
    17c0:	4f 93       	push	r20
    17c2:	5f 93       	push	r21
    17c4:	6f 93       	push	r22
    17c6:	7f 93       	push	r23
    17c8:	8f 93       	push	r24
    17ca:	9f 93       	push	r25
    17cc:	af 93       	push	r26
    17ce:	bf 93       	push	r27
    17d0:	ef 93       	push	r30
    17d2:	ff 93       	push	r31
    17d4:	e0 91 fc 20 	lds	r30, 0x20FC	; 0x8020fc <tc_tcf0_cca_callback>
    17d8:	f0 91 fd 20 	lds	r31, 0x20FD	; 0x8020fd <tc_tcf0_cca_callback+0x1>
    17dc:	30 97       	sbiw	r30, 0x00	; 0
    17de:	09 f0       	breq	.+2      	; 0x17e2 <__vector_110+0x34>
    17e0:	19 95       	eicall
    17e2:	ff 91       	pop	r31
    17e4:	ef 91       	pop	r30
    17e6:	bf 91       	pop	r27
    17e8:	af 91       	pop	r26
    17ea:	9f 91       	pop	r25
    17ec:	8f 91       	pop	r24
    17ee:	7f 91       	pop	r23
    17f0:	6f 91       	pop	r22
    17f2:	5f 91       	pop	r21
    17f4:	4f 91       	pop	r20
    17f6:	3f 91       	pop	r19
    17f8:	2f 91       	pop	r18
    17fa:	0f 90       	pop	r0
    17fc:	0b be       	out	0x3b, r0	; 59
    17fe:	0f 90       	pop	r0
    1800:	0f be       	out	0x3f, r0	; 63
    1802:	0f 90       	pop	r0
    1804:	1f 90       	pop	r1
    1806:	18 95       	reti

00001808 <__vector_111>:
    1808:	1f 92       	push	r1
    180a:	0f 92       	push	r0
    180c:	0f b6       	in	r0, 0x3f	; 63
    180e:	0f 92       	push	r0
    1810:	11 24       	eor	r1, r1
    1812:	0b b6       	in	r0, 0x3b	; 59
    1814:	0f 92       	push	r0
    1816:	2f 93       	push	r18
    1818:	3f 93       	push	r19
    181a:	4f 93       	push	r20
    181c:	5f 93       	push	r21
    181e:	6f 93       	push	r22
    1820:	7f 93       	push	r23
    1822:	8f 93       	push	r24
    1824:	9f 93       	push	r25
    1826:	af 93       	push	r26
    1828:	bf 93       	push	r27
    182a:	ef 93       	push	r30
    182c:	ff 93       	push	r31
    182e:	e0 91 fa 20 	lds	r30, 0x20FA	; 0x8020fa <tc_tcf0_ccb_callback>
    1832:	f0 91 fb 20 	lds	r31, 0x20FB	; 0x8020fb <tc_tcf0_ccb_callback+0x1>
    1836:	30 97       	sbiw	r30, 0x00	; 0
    1838:	09 f0       	breq	.+2      	; 0x183c <__vector_111+0x34>
    183a:	19 95       	eicall
    183c:	ff 91       	pop	r31
    183e:	ef 91       	pop	r30
    1840:	bf 91       	pop	r27
    1842:	af 91       	pop	r26
    1844:	9f 91       	pop	r25
    1846:	8f 91       	pop	r24
    1848:	7f 91       	pop	r23
    184a:	6f 91       	pop	r22
    184c:	5f 91       	pop	r21
    184e:	4f 91       	pop	r20
    1850:	3f 91       	pop	r19
    1852:	2f 91       	pop	r18
    1854:	0f 90       	pop	r0
    1856:	0b be       	out	0x3b, r0	; 59
    1858:	0f 90       	pop	r0
    185a:	0f be       	out	0x3f, r0	; 63
    185c:	0f 90       	pop	r0
    185e:	1f 90       	pop	r1
    1860:	18 95       	reti

00001862 <__vector_112>:
    1862:	1f 92       	push	r1
    1864:	0f 92       	push	r0
    1866:	0f b6       	in	r0, 0x3f	; 63
    1868:	0f 92       	push	r0
    186a:	11 24       	eor	r1, r1
    186c:	0b b6       	in	r0, 0x3b	; 59
    186e:	0f 92       	push	r0
    1870:	2f 93       	push	r18
    1872:	3f 93       	push	r19
    1874:	4f 93       	push	r20
    1876:	5f 93       	push	r21
    1878:	6f 93       	push	r22
    187a:	7f 93       	push	r23
    187c:	8f 93       	push	r24
    187e:	9f 93       	push	r25
    1880:	af 93       	push	r26
    1882:	bf 93       	push	r27
    1884:	ef 93       	push	r30
    1886:	ff 93       	push	r31
    1888:	e0 91 f8 20 	lds	r30, 0x20F8	; 0x8020f8 <tc_tcf0_ccc_callback>
    188c:	f0 91 f9 20 	lds	r31, 0x20F9	; 0x8020f9 <tc_tcf0_ccc_callback+0x1>
    1890:	30 97       	sbiw	r30, 0x00	; 0
    1892:	09 f0       	breq	.+2      	; 0x1896 <__vector_112+0x34>
    1894:	19 95       	eicall
    1896:	ff 91       	pop	r31
    1898:	ef 91       	pop	r30
    189a:	bf 91       	pop	r27
    189c:	af 91       	pop	r26
    189e:	9f 91       	pop	r25
    18a0:	8f 91       	pop	r24
    18a2:	7f 91       	pop	r23
    18a4:	6f 91       	pop	r22
    18a6:	5f 91       	pop	r21
    18a8:	4f 91       	pop	r20
    18aa:	3f 91       	pop	r19
    18ac:	2f 91       	pop	r18
    18ae:	0f 90       	pop	r0
    18b0:	0b be       	out	0x3b, r0	; 59
    18b2:	0f 90       	pop	r0
    18b4:	0f be       	out	0x3f, r0	; 63
    18b6:	0f 90       	pop	r0
    18b8:	1f 90       	pop	r1
    18ba:	18 95       	reti

000018bc <__vector_113>:
    18bc:	1f 92       	push	r1
    18be:	0f 92       	push	r0
    18c0:	0f b6       	in	r0, 0x3f	; 63
    18c2:	0f 92       	push	r0
    18c4:	11 24       	eor	r1, r1
    18c6:	0b b6       	in	r0, 0x3b	; 59
    18c8:	0f 92       	push	r0
    18ca:	2f 93       	push	r18
    18cc:	3f 93       	push	r19
    18ce:	4f 93       	push	r20
    18d0:	5f 93       	push	r21
    18d2:	6f 93       	push	r22
    18d4:	7f 93       	push	r23
    18d6:	8f 93       	push	r24
    18d8:	9f 93       	push	r25
    18da:	af 93       	push	r26
    18dc:	bf 93       	push	r27
    18de:	ef 93       	push	r30
    18e0:	ff 93       	push	r31
    18e2:	e0 91 f6 20 	lds	r30, 0x20F6	; 0x8020f6 <tc_tcf0_ccd_callback>
    18e6:	f0 91 f7 20 	lds	r31, 0x20F7	; 0x8020f7 <tc_tcf0_ccd_callback+0x1>
    18ea:	30 97       	sbiw	r30, 0x00	; 0
    18ec:	09 f0       	breq	.+2      	; 0x18f0 <__vector_113+0x34>
    18ee:	19 95       	eicall
    18f0:	ff 91       	pop	r31
    18f2:	ef 91       	pop	r30
    18f4:	bf 91       	pop	r27
    18f6:	af 91       	pop	r26
    18f8:	9f 91       	pop	r25
    18fa:	8f 91       	pop	r24
    18fc:	7f 91       	pop	r23
    18fe:	6f 91       	pop	r22
    1900:	5f 91       	pop	r21
    1902:	4f 91       	pop	r20
    1904:	3f 91       	pop	r19
    1906:	2f 91       	pop	r18
    1908:	0f 90       	pop	r0
    190a:	0b be       	out	0x3b, r0	; 59
    190c:	0f 90       	pop	r0
    190e:	0f be       	out	0x3f, r0	; 63
    1910:	0f 90       	pop	r0
    1912:	1f 90       	pop	r1
    1914:	18 95       	reti

00001916 <tc_enable>:
    1916:	1f 93       	push	r17
    1918:	cf 93       	push	r28
    191a:	df 93       	push	r29
    191c:	1f 92       	push	r1
    191e:	1f 92       	push	r1
    1920:	cd b7       	in	r28, 0x3d	; 61
    1922:	de b7       	in	r29, 0x3e	; 62
    1924:	2f b7       	in	r18, 0x3f	; 63
    1926:	2a 83       	std	Y+2, r18	; 0x02
    1928:	f8 94       	cli
    192a:	1a 81       	ldd	r17, Y+2	; 0x02
    192c:	28 2f       	mov	r18, r24
    192e:	39 2f       	mov	r19, r25
    1930:	21 15       	cp	r18, r1
    1932:	88 e0       	ldi	r24, 0x08	; 8
    1934:	38 07       	cpc	r19, r24
    1936:	49 f4       	brne	.+18     	; 0x194a <tc_enable+0x34>
    1938:	61 e0       	ldi	r22, 0x01	; 1
    193a:	83 e0       	ldi	r24, 0x03	; 3
    193c:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    1940:	64 e0       	ldi	r22, 0x04	; 4
    1942:	83 e0       	ldi	r24, 0x03	; 3
    1944:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    1948:	4f c0       	rjmp	.+158    	; 0x19e8 <tc_enable+0xd2>
    194a:	20 34       	cpi	r18, 0x40	; 64
    194c:	88 e0       	ldi	r24, 0x08	; 8
    194e:	38 07       	cpc	r19, r24
    1950:	49 f4       	brne	.+18     	; 0x1964 <tc_enable+0x4e>
    1952:	62 e0       	ldi	r22, 0x02	; 2
    1954:	83 e0       	ldi	r24, 0x03	; 3
    1956:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    195a:	64 e0       	ldi	r22, 0x04	; 4
    195c:	83 e0       	ldi	r24, 0x03	; 3
    195e:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    1962:	42 c0       	rjmp	.+132    	; 0x19e8 <tc_enable+0xd2>
    1964:	21 15       	cp	r18, r1
    1966:	89 e0       	ldi	r24, 0x09	; 9
    1968:	38 07       	cpc	r19, r24
    196a:	49 f4       	brne	.+18     	; 0x197e <tc_enable+0x68>
    196c:	61 e0       	ldi	r22, 0x01	; 1
    196e:	84 e0       	ldi	r24, 0x04	; 4
    1970:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    1974:	64 e0       	ldi	r22, 0x04	; 4
    1976:	84 e0       	ldi	r24, 0x04	; 4
    1978:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    197c:	35 c0       	rjmp	.+106    	; 0x19e8 <tc_enable+0xd2>
    197e:	20 34       	cpi	r18, 0x40	; 64
    1980:	89 e0       	ldi	r24, 0x09	; 9
    1982:	38 07       	cpc	r19, r24
    1984:	49 f4       	brne	.+18     	; 0x1998 <tc_enable+0x82>
    1986:	62 e0       	ldi	r22, 0x02	; 2
    1988:	84 e0       	ldi	r24, 0x04	; 4
    198a:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    198e:	64 e0       	ldi	r22, 0x04	; 4
    1990:	84 e0       	ldi	r24, 0x04	; 4
    1992:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    1996:	28 c0       	rjmp	.+80     	; 0x19e8 <tc_enable+0xd2>
    1998:	21 15       	cp	r18, r1
    199a:	8a e0       	ldi	r24, 0x0A	; 10
    199c:	38 07       	cpc	r19, r24
    199e:	49 f4       	brne	.+18     	; 0x19b2 <tc_enable+0x9c>
    19a0:	61 e0       	ldi	r22, 0x01	; 1
    19a2:	85 e0       	ldi	r24, 0x05	; 5
    19a4:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    19a8:	64 e0       	ldi	r22, 0x04	; 4
    19aa:	85 e0       	ldi	r24, 0x05	; 5
    19ac:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    19b0:	1b c0       	rjmp	.+54     	; 0x19e8 <tc_enable+0xd2>
    19b2:	20 34       	cpi	r18, 0x40	; 64
    19b4:	8a e0       	ldi	r24, 0x0A	; 10
    19b6:	38 07       	cpc	r19, r24
    19b8:	49 f4       	brne	.+18     	; 0x19cc <tc_enable+0xb6>
    19ba:	62 e0       	ldi	r22, 0x02	; 2
    19bc:	85 e0       	ldi	r24, 0x05	; 5
    19be:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    19c2:	64 e0       	ldi	r22, 0x04	; 4
    19c4:	85 e0       	ldi	r24, 0x05	; 5
    19c6:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    19ca:	0e c0       	rjmp	.+28     	; 0x19e8 <tc_enable+0xd2>
    19cc:	21 15       	cp	r18, r1
    19ce:	3b 40       	sbci	r19, 0x0B	; 11
    19d0:	49 f4       	brne	.+18     	; 0x19e4 <tc_enable+0xce>
    19d2:	61 e0       	ldi	r22, 0x01	; 1
    19d4:	86 e0       	ldi	r24, 0x06	; 6
    19d6:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    19da:	64 e0       	ldi	r22, 0x04	; 4
    19dc:	86 e0       	ldi	r24, 0x06	; 6
    19de:	0e 94 4e 06 	call	0xc9c	; 0xc9c <sysclk_enable_module>
    19e2:	02 c0       	rjmp	.+4      	; 0x19e8 <tc_enable+0xd2>
    19e4:	1f bf       	out	0x3f, r17	; 63
    19e6:	10 c0       	rjmp	.+32     	; 0x1a08 <tc_enable+0xf2>
    19e8:	80 91 e3 31 	lds	r24, 0x31E3	; 0x8031e3 <sleepmgr_locks+0x1>
    19ec:	8f 3f       	cpi	r24, 0xFF	; 255
    19ee:	09 f4       	brne	.+2      	; 0x19f2 <tc_enable+0xdc>
    19f0:	ff cf       	rjmp	.-2      	; 0x19f0 <tc_enable+0xda>
    19f2:	8f b7       	in	r24, 0x3f	; 63
    19f4:	89 83       	std	Y+1, r24	; 0x01
    19f6:	f8 94       	cli
    19f8:	99 81       	ldd	r25, Y+1	; 0x01
    19fa:	e2 ee       	ldi	r30, 0xE2	; 226
    19fc:	f1 e3       	ldi	r31, 0x31	; 49
    19fe:	81 81       	ldd	r24, Z+1	; 0x01
    1a00:	8f 5f       	subi	r24, 0xFF	; 255
    1a02:	81 83       	std	Z+1, r24	; 0x01
    1a04:	9f bf       	out	0x3f, r25	; 63
    1a06:	1f bf       	out	0x3f, r17	; 63
    1a08:	0f 90       	pop	r0
    1a0a:	0f 90       	pop	r0
    1a0c:	df 91       	pop	r29
    1a0e:	cf 91       	pop	r28
    1a10:	1f 91       	pop	r17
    1a12:	08 95       	ret

00001a14 <pwm_set_frequency>:
    1a14:	cf 92       	push	r12
    1a16:	df 92       	push	r13
    1a18:	ef 92       	push	r14
    1a1a:	ff 92       	push	r15
    1a1c:	cf 93       	push	r28
    1a1e:	df 93       	push	r29
    1a20:	ec 01       	movw	r28, r24
    1a22:	6b 01       	movw	r12, r22
    1a24:	e1 2c       	mov	r14, r1
    1a26:	f1 2c       	mov	r15, r1
    1a28:	60 e8       	ldi	r22, 0x80	; 128
    1a2a:	74 e8       	ldi	r23, 0x84	; 132
    1a2c:	8e e1       	ldi	r24, 0x1E	; 30
    1a2e:	90 e0       	ldi	r25, 0x00	; 0
    1a30:	a7 01       	movw	r20, r14
    1a32:	96 01       	movw	r18, r12
    1a34:	0e 94 15 22 	call	0x442a	; 0x442a <__udivmodsi4>
    1a38:	ca 01       	movw	r24, r20
    1a3a:	b9 01       	movw	r22, r18
    1a3c:	2f ef       	ldi	r18, 0xFF	; 255
    1a3e:	3f ef       	ldi	r19, 0xFF	; 255
    1a40:	40 e0       	ldi	r20, 0x00	; 0
    1a42:	50 e0       	ldi	r21, 0x00	; 0
    1a44:	0e 94 15 22 	call	0x442a	; 0x442a <__udivmodsi4>
    1a48:	21 15       	cp	r18, r1
    1a4a:	31 05       	cpc	r19, r1
    1a4c:	29 f4       	brne	.+10     	; 0x1a58 <pwm_set_frequency+0x44>
    1a4e:	81 e0       	ldi	r24, 0x01	; 1
    1a50:	8c 83       	std	Y+4, r24	; 0x04
    1a52:	21 e0       	ldi	r18, 0x01	; 1
    1a54:	30 e0       	ldi	r19, 0x00	; 0
    1a56:	2d c0       	rjmp	.+90     	; 0x1ab2 <pwm_set_frequency+0x9e>
    1a58:	22 30       	cpi	r18, 0x02	; 2
    1a5a:	31 05       	cpc	r19, r1
    1a5c:	28 f4       	brcc	.+10     	; 0x1a68 <pwm_set_frequency+0x54>
    1a5e:	82 e0       	ldi	r24, 0x02	; 2
    1a60:	8c 83       	std	Y+4, r24	; 0x04
    1a62:	22 e0       	ldi	r18, 0x02	; 2
    1a64:	30 e0       	ldi	r19, 0x00	; 0
    1a66:	25 c0       	rjmp	.+74     	; 0x1ab2 <pwm_set_frequency+0x9e>
    1a68:	24 30       	cpi	r18, 0x04	; 4
    1a6a:	31 05       	cpc	r19, r1
    1a6c:	28 f4       	brcc	.+10     	; 0x1a78 <pwm_set_frequency+0x64>
    1a6e:	83 e0       	ldi	r24, 0x03	; 3
    1a70:	8c 83       	std	Y+4, r24	; 0x04
    1a72:	24 e0       	ldi	r18, 0x04	; 4
    1a74:	30 e0       	ldi	r19, 0x00	; 0
    1a76:	1d c0       	rjmp	.+58     	; 0x1ab2 <pwm_set_frequency+0x9e>
    1a78:	28 30       	cpi	r18, 0x08	; 8
    1a7a:	31 05       	cpc	r19, r1
    1a7c:	28 f4       	brcc	.+10     	; 0x1a88 <pwm_set_frequency+0x74>
    1a7e:	84 e0       	ldi	r24, 0x04	; 4
    1a80:	8c 83       	std	Y+4, r24	; 0x04
    1a82:	28 e0       	ldi	r18, 0x08	; 8
    1a84:	30 e0       	ldi	r19, 0x00	; 0
    1a86:	15 c0       	rjmp	.+42     	; 0x1ab2 <pwm_set_frequency+0x9e>
    1a88:	20 34       	cpi	r18, 0x40	; 64
    1a8a:	31 05       	cpc	r19, r1
    1a8c:	28 f4       	brcc	.+10     	; 0x1a98 <pwm_set_frequency+0x84>
    1a8e:	85 e0       	ldi	r24, 0x05	; 5
    1a90:	8c 83       	std	Y+4, r24	; 0x04
    1a92:	20 e4       	ldi	r18, 0x40	; 64
    1a94:	30 e0       	ldi	r19, 0x00	; 0
    1a96:	0d c0       	rjmp	.+26     	; 0x1ab2 <pwm_set_frequency+0x9e>
    1a98:	2f 3f       	cpi	r18, 0xFF	; 255
    1a9a:	31 05       	cpc	r19, r1
    1a9c:	09 f0       	breq	.+2      	; 0x1aa0 <pwm_set_frequency+0x8c>
    1a9e:	28 f4       	brcc	.+10     	; 0x1aaa <pwm_set_frequency+0x96>
    1aa0:	86 e0       	ldi	r24, 0x06	; 6
    1aa2:	8c 83       	std	Y+4, r24	; 0x04
    1aa4:	20 e0       	ldi	r18, 0x00	; 0
    1aa6:	31 e0       	ldi	r19, 0x01	; 1
    1aa8:	04 c0       	rjmp	.+8      	; 0x1ab2 <pwm_set_frequency+0x9e>
    1aaa:	87 e0       	ldi	r24, 0x07	; 7
    1aac:	8c 83       	std	Y+4, r24	; 0x04
    1aae:	20 e0       	ldi	r18, 0x00	; 0
    1ab0:	34 e0       	ldi	r19, 0x04	; 4
    1ab2:	40 e0       	ldi	r20, 0x00	; 0
    1ab4:	50 e0       	ldi	r21, 0x00	; 0
    1ab6:	60 e8       	ldi	r22, 0x80	; 128
    1ab8:	74 e8       	ldi	r23, 0x84	; 132
    1aba:	8e e1       	ldi	r24, 0x1E	; 30
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	0e 94 15 22 	call	0x442a	; 0x442a <__udivmodsi4>
    1ac2:	ca 01       	movw	r24, r20
    1ac4:	b9 01       	movw	r22, r18
    1ac6:	a7 01       	movw	r20, r14
    1ac8:	96 01       	movw	r18, r12
    1aca:	0e 94 15 22 	call	0x442a	; 0x442a <__udivmodsi4>
    1ace:	2d 83       	std	Y+5, r18	; 0x05
    1ad0:	3e 83       	std	Y+6, r19	; 0x06
    1ad2:	24 36       	cpi	r18, 0x64	; 100
    1ad4:	31 05       	cpc	r19, r1
    1ad6:	18 f4       	brcc	.+6      	; 0x1ade <pwm_set_frequency+0xca>
    1ad8:	1c 82       	std	Y+4, r1	; 0x04
    1ada:	1d 82       	std	Y+5, r1	; 0x05
    1adc:	1e 82       	std	Y+6, r1	; 0x06
    1ade:	df 91       	pop	r29
    1ae0:	cf 91       	pop	r28
    1ae2:	ff 90       	pop	r15
    1ae4:	ef 90       	pop	r14
    1ae6:	df 90       	pop	r13
    1ae8:	cf 90       	pop	r12
    1aea:	08 95       	ret

00001aec <pwm_init>:
    1aec:	0f 93       	push	r16
    1aee:	1f 93       	push	r17
    1af0:	cf 93       	push	r28
    1af2:	df 93       	push	r29
    1af4:	ec 01       	movw	r28, r24
    1af6:	89 01       	movw	r16, r18
    1af8:	86 2f       	mov	r24, r22
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	87 30       	cpi	r24, 0x07	; 7
    1afe:	91 05       	cpc	r25, r1
    1b00:	08 f0       	brcs	.+2      	; 0x1b04 <pwm_init+0x18>
    1b02:	8b c0       	rjmp	.+278    	; 0x1c1a <pwm_init+0x12e>
    1b04:	fc 01       	movw	r30, r24
    1b06:	88 27       	eor	r24, r24
    1b08:	e2 50       	subi	r30, 0x02	; 2
    1b0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b0c:	8f 4f       	sbci	r24, 0xFF	; 255
    1b0e:	0c 94 37 22 	jmp	0x446e	; 0x446e <__tablejump2__>
    1b12:	80 e0       	ldi	r24, 0x00	; 0
    1b14:	98 e0       	ldi	r25, 0x08	; 8
    1b16:	88 83       	st	Y, r24
    1b18:	99 83       	std	Y+1, r25	; 0x01
    1b1a:	e0 e4       	ldi	r30, 0x40	; 64
    1b1c:	f6 e0       	ldi	r31, 0x06	; 6
    1b1e:	30 81       	ld	r19, Z
    1b20:	81 e0       	ldi	r24, 0x01	; 1
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	2f ef       	ldi	r18, 0xFF	; 255
    1b26:	24 0f       	add	r18, r20
    1b28:	02 c0       	rjmp	.+4      	; 0x1b2e <pwm_init+0x42>
    1b2a:	88 0f       	add	r24, r24
    1b2c:	99 1f       	adc	r25, r25
    1b2e:	2a 95       	dec	r18
    1b30:	e2 f7       	brpl	.-8      	; 0x1b2a <pwm_init+0x3e>
    1b32:	83 2b       	or	r24, r19
    1b34:	80 83       	st	Z, r24
    1b36:	71 c0       	rjmp	.+226    	; 0x1c1a <pwm_init+0x12e>
    1b38:	80 e4       	ldi	r24, 0x40	; 64
    1b3a:	98 e0       	ldi	r25, 0x08	; 8
    1b3c:	88 83       	st	Y, r24
    1b3e:	99 83       	std	Y+1, r25	; 0x01
    1b40:	e0 e4       	ldi	r30, 0x40	; 64
    1b42:	f6 e0       	ldi	r31, 0x06	; 6
    1b44:	30 81       	ld	r19, Z
    1b46:	81 e0       	ldi	r24, 0x01	; 1
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	23 e0       	ldi	r18, 0x03	; 3
    1b4c:	24 0f       	add	r18, r20
    1b4e:	02 c0       	rjmp	.+4      	; 0x1b54 <pwm_init+0x68>
    1b50:	88 0f       	add	r24, r24
    1b52:	99 1f       	adc	r25, r25
    1b54:	2a 95       	dec	r18
    1b56:	e2 f7       	brpl	.-8      	; 0x1b50 <pwm_init+0x64>
    1b58:	83 2b       	or	r24, r19
    1b5a:	80 83       	st	Z, r24
    1b5c:	5e c0       	rjmp	.+188    	; 0x1c1a <pwm_init+0x12e>
    1b5e:	80 e0       	ldi	r24, 0x00	; 0
    1b60:	99 e0       	ldi	r25, 0x09	; 9
    1b62:	88 83       	st	Y, r24
    1b64:	99 83       	std	Y+1, r25	; 0x01
    1b66:	e0 e6       	ldi	r30, 0x60	; 96
    1b68:	f6 e0       	ldi	r31, 0x06	; 6
    1b6a:	30 81       	ld	r19, Z
    1b6c:	81 e0       	ldi	r24, 0x01	; 1
    1b6e:	90 e0       	ldi	r25, 0x00	; 0
    1b70:	2f ef       	ldi	r18, 0xFF	; 255
    1b72:	24 0f       	add	r18, r20
    1b74:	02 c0       	rjmp	.+4      	; 0x1b7a <pwm_init+0x8e>
    1b76:	88 0f       	add	r24, r24
    1b78:	99 1f       	adc	r25, r25
    1b7a:	2a 95       	dec	r18
    1b7c:	e2 f7       	brpl	.-8      	; 0x1b76 <pwm_init+0x8a>
    1b7e:	83 2b       	or	r24, r19
    1b80:	80 83       	st	Z, r24
    1b82:	4b c0       	rjmp	.+150    	; 0x1c1a <pwm_init+0x12e>
    1b84:	80 e4       	ldi	r24, 0x40	; 64
    1b86:	99 e0       	ldi	r25, 0x09	; 9
    1b88:	88 83       	st	Y, r24
    1b8a:	99 83       	std	Y+1, r25	; 0x01
    1b8c:	e0 e6       	ldi	r30, 0x60	; 96
    1b8e:	f6 e0       	ldi	r31, 0x06	; 6
    1b90:	30 81       	ld	r19, Z
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	90 e0       	ldi	r25, 0x00	; 0
    1b96:	23 e0       	ldi	r18, 0x03	; 3
    1b98:	24 0f       	add	r18, r20
    1b9a:	02 c0       	rjmp	.+4      	; 0x1ba0 <pwm_init+0xb4>
    1b9c:	88 0f       	add	r24, r24
    1b9e:	99 1f       	adc	r25, r25
    1ba0:	2a 95       	dec	r18
    1ba2:	e2 f7       	brpl	.-8      	; 0x1b9c <pwm_init+0xb0>
    1ba4:	83 2b       	or	r24, r19
    1ba6:	80 83       	st	Z, r24
    1ba8:	38 c0       	rjmp	.+112    	; 0x1c1a <pwm_init+0x12e>
    1baa:	80 e0       	ldi	r24, 0x00	; 0
    1bac:	9a e0       	ldi	r25, 0x0A	; 10
    1bae:	88 83       	st	Y, r24
    1bb0:	99 83       	std	Y+1, r25	; 0x01
    1bb2:	e0 e8       	ldi	r30, 0x80	; 128
    1bb4:	f6 e0       	ldi	r31, 0x06	; 6
    1bb6:	30 81       	ld	r19, Z
    1bb8:	81 e0       	ldi	r24, 0x01	; 1
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	2f ef       	ldi	r18, 0xFF	; 255
    1bbe:	24 0f       	add	r18, r20
    1bc0:	02 c0       	rjmp	.+4      	; 0x1bc6 <pwm_init+0xda>
    1bc2:	88 0f       	add	r24, r24
    1bc4:	99 1f       	adc	r25, r25
    1bc6:	2a 95       	dec	r18
    1bc8:	e2 f7       	brpl	.-8      	; 0x1bc2 <pwm_init+0xd6>
    1bca:	83 2b       	or	r24, r19
    1bcc:	80 83       	st	Z, r24
    1bce:	25 c0       	rjmp	.+74     	; 0x1c1a <pwm_init+0x12e>
    1bd0:	80 e4       	ldi	r24, 0x40	; 64
    1bd2:	9a e0       	ldi	r25, 0x0A	; 10
    1bd4:	88 83       	st	Y, r24
    1bd6:	99 83       	std	Y+1, r25	; 0x01
    1bd8:	e0 e8       	ldi	r30, 0x80	; 128
    1bda:	f6 e0       	ldi	r31, 0x06	; 6
    1bdc:	30 81       	ld	r19, Z
    1bde:	81 e0       	ldi	r24, 0x01	; 1
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	23 e0       	ldi	r18, 0x03	; 3
    1be4:	24 0f       	add	r18, r20
    1be6:	02 c0       	rjmp	.+4      	; 0x1bec <pwm_init+0x100>
    1be8:	88 0f       	add	r24, r24
    1bea:	99 1f       	adc	r25, r25
    1bec:	2a 95       	dec	r18
    1bee:	e2 f7       	brpl	.-8      	; 0x1be8 <pwm_init+0xfc>
    1bf0:	83 2b       	or	r24, r19
    1bf2:	80 83       	st	Z, r24
    1bf4:	12 c0       	rjmp	.+36     	; 0x1c1a <pwm_init+0x12e>
    1bf6:	80 e0       	ldi	r24, 0x00	; 0
    1bf8:	9b e0       	ldi	r25, 0x0B	; 11
    1bfa:	88 83       	st	Y, r24
    1bfc:	99 83       	std	Y+1, r25	; 0x01
    1bfe:	e0 ea       	ldi	r30, 0xA0	; 160
    1c00:	f6 e0       	ldi	r31, 0x06	; 6
    1c02:	30 81       	ld	r19, Z
    1c04:	81 e0       	ldi	r24, 0x01	; 1
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	2f ef       	ldi	r18, 0xFF	; 255
    1c0a:	24 0f       	add	r18, r20
    1c0c:	02 c0       	rjmp	.+4      	; 0x1c12 <pwm_init+0x126>
    1c0e:	88 0f       	add	r24, r24
    1c10:	99 1f       	adc	r25, r25
    1c12:	2a 95       	dec	r18
    1c14:	e2 f7       	brpl	.-8      	; 0x1c0e <pwm_init+0x122>
    1c16:	83 2b       	or	r24, r19
    1c18:	80 83       	st	Z, r24
    1c1a:	4a 83       	std	Y+2, r20	; 0x02
    1c1c:	42 30       	cpi	r20, 0x02	; 2
    1c1e:	61 f0       	breq	.+24     	; 0x1c38 <pwm_init+0x14c>
    1c20:	18 f4       	brcc	.+6      	; 0x1c28 <pwm_init+0x13c>
    1c22:	41 30       	cpi	r20, 0x01	; 1
    1c24:	31 f0       	breq	.+12     	; 0x1c32 <pwm_init+0x146>
    1c26:	10 c0       	rjmp	.+32     	; 0x1c48 <pwm_init+0x15c>
    1c28:	43 30       	cpi	r20, 0x03	; 3
    1c2a:	49 f0       	breq	.+18     	; 0x1c3e <pwm_init+0x152>
    1c2c:	44 30       	cpi	r20, 0x04	; 4
    1c2e:	51 f0       	breq	.+20     	; 0x1c44 <pwm_init+0x158>
    1c30:	0b c0       	rjmp	.+22     	; 0x1c48 <pwm_init+0x15c>
    1c32:	80 e1       	ldi	r24, 0x10	; 16
    1c34:	8b 83       	std	Y+3, r24	; 0x03
    1c36:	08 c0       	rjmp	.+16     	; 0x1c48 <pwm_init+0x15c>
    1c38:	80 e2       	ldi	r24, 0x20	; 32
    1c3a:	8b 83       	std	Y+3, r24	; 0x03
    1c3c:	05 c0       	rjmp	.+10     	; 0x1c48 <pwm_init+0x15c>
    1c3e:	80 e4       	ldi	r24, 0x40	; 64
    1c40:	8b 83       	std	Y+3, r24	; 0x03
    1c42:	02 c0       	rjmp	.+4      	; 0x1c48 <pwm_init+0x15c>
    1c44:	80 e8       	ldi	r24, 0x80	; 128
    1c46:	8b 83       	std	Y+3, r24	; 0x03
    1c48:	88 81       	ld	r24, Y
    1c4a:	99 81       	ldd	r25, Y+1	; 0x01
    1c4c:	0e 94 8b 0c 	call	0x1916	; 0x1916 <tc_enable>
    1c50:	e8 81       	ld	r30, Y
    1c52:	f9 81       	ldd	r31, Y+1	; 0x01
    1c54:	81 81       	ldd	r24, Z+1	; 0x01
    1c56:	88 7f       	andi	r24, 0xF8	; 248
    1c58:	83 60       	ori	r24, 0x03	; 3
    1c5a:	81 83       	std	Z+1, r24	; 0x01
    1c5c:	1d 82       	std	Y+5, r1	; 0x05
    1c5e:	1e 82       	std	Y+6, r1	; 0x06
    1c60:	1c 82       	std	Y+4, r1	; 0x04
    1c62:	e8 81       	ld	r30, Y
    1c64:	f9 81       	ldd	r31, Y+1	; 0x01
    1c66:	80 81       	ld	r24, Z
    1c68:	80 7f       	andi	r24, 0xF0	; 240
    1c6a:	80 83       	st	Z, r24
    1c6c:	b8 01       	movw	r22, r16
    1c6e:	ce 01       	movw	r24, r28
    1c70:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <pwm_set_frequency>
    1c74:	df 91       	pop	r29
    1c76:	cf 91       	pop	r28
    1c78:	1f 91       	pop	r17
    1c7a:	0f 91       	pop	r16
    1c7c:	08 95       	ret

00001c7e <pwm_start>:
    1c7e:	cf 93       	push	r28
    1c80:	df 93       	push	r29
    1c82:	ec 01       	movw	r28, r24
    1c84:	2d 81       	ldd	r18, Y+5	; 0x05
    1c86:	3e 81       	ldd	r19, Y+6	; 0x06
    1c88:	a6 2f       	mov	r26, r22
    1c8a:	b0 e0       	ldi	r27, 0x00	; 0
    1c8c:	0e 94 3f 22 	call	0x447e	; 0x447e <__umulhisi3>
    1c90:	24 e6       	ldi	r18, 0x64	; 100
    1c92:	30 e0       	ldi	r19, 0x00	; 0
    1c94:	40 e0       	ldi	r20, 0x00	; 0
    1c96:	50 e0       	ldi	r21, 0x00	; 0
    1c98:	0e 94 15 22 	call	0x442a	; 0x442a <__udivmodsi4>
    1c9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c9e:	e8 81       	ld	r30, Y
    1ca0:	f9 81       	ldd	r31, Y+1	; 0x01
    1ca2:	e6 fd       	sbrc	r30, 6
    1ca4:	17 c0       	rjmp	.+46     	; 0x1cd4 <pwm_start+0x56>
    1ca6:	82 30       	cpi	r24, 0x02	; 2
    1ca8:	61 f0       	breq	.+24     	; 0x1cc2 <pwm_start+0x44>
    1caa:	18 f4       	brcc	.+6      	; 0x1cb2 <pwm_start+0x34>
    1cac:	81 30       	cpi	r24, 0x01	; 1
    1cae:	31 f0       	breq	.+12     	; 0x1cbc <pwm_start+0x3e>
    1cb0:	1b c0       	rjmp	.+54     	; 0x1ce8 <pwm_start+0x6a>
    1cb2:	83 30       	cpi	r24, 0x03	; 3
    1cb4:	49 f0       	breq	.+18     	; 0x1cc8 <pwm_start+0x4a>
    1cb6:	84 30       	cpi	r24, 0x04	; 4
    1cb8:	51 f0       	breq	.+20     	; 0x1cce <pwm_start+0x50>
    1cba:	16 c0       	rjmp	.+44     	; 0x1ce8 <pwm_start+0x6a>
    1cbc:	20 af       	std	Z+56, r18	; 0x38
    1cbe:	31 af       	std	Z+57, r19	; 0x39
    1cc0:	13 c0       	rjmp	.+38     	; 0x1ce8 <pwm_start+0x6a>
    1cc2:	22 af       	std	Z+58, r18	; 0x3a
    1cc4:	33 af       	std	Z+59, r19	; 0x3b
    1cc6:	10 c0       	rjmp	.+32     	; 0x1ce8 <pwm_start+0x6a>
    1cc8:	24 af       	std	Z+60, r18	; 0x3c
    1cca:	35 af       	std	Z+61, r19	; 0x3d
    1ccc:	0d c0       	rjmp	.+26     	; 0x1ce8 <pwm_start+0x6a>
    1cce:	26 af       	std	Z+62, r18	; 0x3e
    1cd0:	37 af       	std	Z+63, r19	; 0x3f
    1cd2:	0a c0       	rjmp	.+20     	; 0x1ce8 <pwm_start+0x6a>
    1cd4:	81 30       	cpi	r24, 0x01	; 1
    1cd6:	19 f0       	breq	.+6      	; 0x1cde <pwm_start+0x60>
    1cd8:	82 30       	cpi	r24, 0x02	; 2
    1cda:	21 f0       	breq	.+8      	; 0x1ce4 <pwm_start+0x66>
    1cdc:	05 c0       	rjmp	.+10     	; 0x1ce8 <pwm_start+0x6a>
    1cde:	20 af       	std	Z+56, r18	; 0x38
    1ce0:	31 af       	std	Z+57, r19	; 0x39
    1ce2:	02 c0       	rjmp	.+4      	; 0x1ce8 <pwm_start+0x6a>
    1ce4:	22 af       	std	Z+58, r18	; 0x3a
    1ce6:	33 af       	std	Z+59, r19	; 0x3b
    1ce8:	8d 81       	ldd	r24, Y+5	; 0x05
    1cea:	9e 81       	ldd	r25, Y+6	; 0x06
    1cec:	e8 81       	ld	r30, Y
    1cee:	f9 81       	ldd	r31, Y+1	; 0x01
    1cf0:	86 a3       	std	Z+38, r24	; 0x26
    1cf2:	97 a3       	std	Z+39, r25	; 0x27
    1cf4:	8b 81       	ldd	r24, Y+3	; 0x03
    1cf6:	e8 81       	ld	r30, Y
    1cf8:	f9 81       	ldd	r31, Y+1	; 0x01
    1cfa:	e6 fd       	sbrc	r30, 6
    1cfc:	04 c0       	rjmp	.+8      	; 0x1d06 <pwm_start+0x88>
    1cfe:	91 81       	ldd	r25, Z+1	; 0x01
    1d00:	89 2b       	or	r24, r25
    1d02:	81 83       	std	Z+1, r24	; 0x01
    1d04:	04 c0       	rjmp	.+8      	; 0x1d0e <pwm_start+0x90>
    1d06:	91 81       	ldd	r25, Z+1	; 0x01
    1d08:	80 73       	andi	r24, 0x30	; 48
    1d0a:	89 2b       	or	r24, r25
    1d0c:	81 83       	std	Z+1, r24	; 0x01
    1d0e:	e8 81       	ld	r30, Y
    1d10:	f9 81       	ldd	r31, Y+1	; 0x01
    1d12:	80 81       	ld	r24, Z
    1d14:	80 7f       	andi	r24, 0xF0	; 240
    1d16:	9c 81       	ldd	r25, Y+4	; 0x04
    1d18:	89 2b       	or	r24, r25
    1d1a:	80 83       	st	Z, r24
    1d1c:	df 91       	pop	r29
    1d1e:	cf 91       	pop	r28
    1d20:	08 95       	ret

00001d22 <pvPortMalloc>:
    1d22:	0f 93       	push	r16
    1d24:	1f 93       	push	r17
    1d26:	cf 93       	push	r28
    1d28:	df 93       	push	r29
    1d2a:	ec 01       	movw	r28, r24
    1d2c:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <vTaskSuspendAll>
    1d30:	80 91 3c 21 	lds	r24, 0x213C	; 0x80213c <xHeapHasBeenInitialised.4150>
    1d34:	81 11       	cpse	r24, r1
    1d36:	1d c0       	rjmp	.+58     	; 0x1d72 <pvPortMalloc+0x50>
    1d38:	a1 e4       	ldi	r26, 0x41	; 65
    1d3a:	b1 e2       	ldi	r27, 0x21	; 33
    1d3c:	e5 e4       	ldi	r30, 0x45	; 69
    1d3e:	f1 e2       	ldi	r31, 0x21	; 33
    1d40:	ed 93       	st	X+, r30
    1d42:	fc 93       	st	X, r31
    1d44:	11 97       	sbiw	r26, 0x01	; 1
    1d46:	12 96       	adiw	r26, 0x02	; 2
    1d48:	1d 92       	st	X+, r1
    1d4a:	1c 92       	st	X, r1
    1d4c:	13 97       	sbiw	r26, 0x03	; 3
    1d4e:	ad e3       	ldi	r26, 0x3D	; 61
    1d50:	b1 e2       	ldi	r27, 0x21	; 33
    1d52:	8f ef       	ldi	r24, 0xFF	; 255
    1d54:	9f e0       	ldi	r25, 0x0F	; 15
    1d56:	12 96       	adiw	r26, 0x02	; 2
    1d58:	8d 93       	st	X+, r24
    1d5a:	9c 93       	st	X, r25
    1d5c:	13 97       	sbiw	r26, 0x03	; 3
    1d5e:	1d 92       	st	X+, r1
    1d60:	1c 92       	st	X, r1
    1d62:	11 97       	sbiw	r26, 0x01	; 1
    1d64:	82 83       	std	Z+2, r24	; 0x02
    1d66:	93 83       	std	Z+3, r25	; 0x03
    1d68:	a0 83       	st	Z, r26
    1d6a:	b1 83       	std	Z+1, r27	; 0x01
    1d6c:	81 e0       	ldi	r24, 0x01	; 1
    1d6e:	80 93 3c 21 	sts	0x213C, r24	; 0x80213c <xHeapHasBeenInitialised.4150>
    1d72:	20 97       	sbiw	r28, 0x00	; 0
    1d74:	09 f4       	brne	.+2      	; 0x1d78 <pvPortMalloc+0x56>
    1d76:	5f c0       	rjmp	.+190    	; 0x1e36 <pvPortMalloc+0x114>
    1d78:	9e 01       	movw	r18, r28
    1d7a:	2b 5f       	subi	r18, 0xFB	; 251
    1d7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1d7e:	24 96       	adiw	r28, 0x04	; 4
    1d80:	ce 3f       	cpi	r28, 0xFE	; 254
    1d82:	df 40       	sbci	r29, 0x0F	; 15
    1d84:	08 f0       	brcs	.+2      	; 0x1d88 <pvPortMalloc+0x66>
    1d86:	5a c0       	rjmp	.+180    	; 0x1e3c <pvPortMalloc+0x11a>
    1d88:	e0 91 41 21 	lds	r30, 0x2141	; 0x802141 <xStart>
    1d8c:	f0 91 42 21 	lds	r31, 0x2142	; 0x802142 <xStart+0x1>
    1d90:	a1 e4       	ldi	r26, 0x41	; 65
    1d92:	b1 e2       	ldi	r27, 0x21	; 33
    1d94:	02 c0       	rjmp	.+4      	; 0x1d9a <pvPortMalloc+0x78>
    1d96:	df 01       	movw	r26, r30
    1d98:	fc 01       	movw	r30, r24
    1d9a:	82 81       	ldd	r24, Z+2	; 0x02
    1d9c:	93 81       	ldd	r25, Z+3	; 0x03
    1d9e:	82 17       	cp	r24, r18
    1da0:	93 07       	cpc	r25, r19
    1da2:	20 f4       	brcc	.+8      	; 0x1dac <pvPortMalloc+0x8a>
    1da4:	80 81       	ld	r24, Z
    1da6:	91 81       	ldd	r25, Z+1	; 0x01
    1da8:	00 97       	sbiw	r24, 0x00	; 0
    1daa:	a9 f7       	brne	.-22     	; 0x1d96 <pvPortMalloc+0x74>
    1dac:	c1 e2       	ldi	r28, 0x21	; 33
    1dae:	ed 33       	cpi	r30, 0x3D	; 61
    1db0:	fc 07       	cpc	r31, r28
    1db2:	09 f4       	brne	.+2      	; 0x1db6 <pvPortMalloc+0x94>
    1db4:	46 c0       	rjmp	.+140    	; 0x1e42 <pvPortMalloc+0x120>
    1db6:	cd 91       	ld	r28, X+
    1db8:	dc 91       	ld	r29, X
    1dba:	11 97       	sbiw	r26, 0x01	; 1
    1dbc:	8e 01       	movw	r16, r28
    1dbe:	0b 5f       	subi	r16, 0xFB	; 251
    1dc0:	1f 4f       	sbci	r17, 0xFF	; 255
    1dc2:	80 81       	ld	r24, Z
    1dc4:	91 81       	ldd	r25, Z+1	; 0x01
    1dc6:	8d 93       	st	X+, r24
    1dc8:	9c 93       	st	X, r25
    1dca:	82 81       	ldd	r24, Z+2	; 0x02
    1dcc:	93 81       	ldd	r25, Z+3	; 0x03
    1dce:	82 1b       	sub	r24, r18
    1dd0:	93 0b       	sbc	r25, r19
    1dd2:	8b 30       	cpi	r24, 0x0B	; 11
    1dd4:	91 05       	cpc	r25, r1
    1dd6:	10 f1       	brcs	.+68     	; 0x1e1c <pvPortMalloc+0xfa>
    1dd8:	bf 01       	movw	r22, r30
    1dda:	62 0f       	add	r22, r18
    1ddc:	73 1f       	adc	r23, r19
    1dde:	db 01       	movw	r26, r22
    1de0:	12 96       	adiw	r26, 0x02	; 2
    1de2:	8d 93       	st	X+, r24
    1de4:	9c 93       	st	X, r25
    1de6:	13 97       	sbiw	r26, 0x03	; 3
    1de8:	22 83       	std	Z+2, r18	; 0x02
    1dea:	33 83       	std	Z+3, r19	; 0x03
    1dec:	12 96       	adiw	r26, 0x02	; 2
    1dee:	4d 91       	ld	r20, X+
    1df0:	5c 91       	ld	r21, X
    1df2:	13 97       	sbiw	r26, 0x03	; 3
    1df4:	81 e4       	ldi	r24, 0x41	; 65
    1df6:	91 e2       	ldi	r25, 0x21	; 33
    1df8:	01 c0       	rjmp	.+2      	; 0x1dfc <pvPortMalloc+0xda>
    1dfa:	cd 01       	movw	r24, r26
    1dfc:	ec 01       	movw	r28, r24
    1dfe:	a8 81       	ld	r26, Y
    1e00:	b9 81       	ldd	r27, Y+1	; 0x01
    1e02:	12 96       	adiw	r26, 0x02	; 2
    1e04:	2d 91       	ld	r18, X+
    1e06:	3c 91       	ld	r19, X
    1e08:	13 97       	sbiw	r26, 0x03	; 3
    1e0a:	24 17       	cp	r18, r20
    1e0c:	35 07       	cpc	r19, r21
    1e0e:	a8 f3       	brcs	.-22     	; 0x1dfa <pvPortMalloc+0xd8>
    1e10:	eb 01       	movw	r28, r22
    1e12:	a8 83       	st	Y, r26
    1e14:	b9 83       	std	Y+1, r27	; 0x01
    1e16:	dc 01       	movw	r26, r24
    1e18:	6d 93       	st	X+, r22
    1e1a:	7c 93       	st	X, r23
    1e1c:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <__data_start>
    1e20:	90 91 01 20 	lds	r25, 0x2001	; 0x802001 <__data_start+0x1>
    1e24:	22 81       	ldd	r18, Z+2	; 0x02
    1e26:	33 81       	ldd	r19, Z+3	; 0x03
    1e28:	82 1b       	sub	r24, r18
    1e2a:	93 0b       	sbc	r25, r19
    1e2c:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <__data_start>
    1e30:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <__data_start+0x1>
    1e34:	08 c0       	rjmp	.+16     	; 0x1e46 <pvPortMalloc+0x124>
    1e36:	00 e0       	ldi	r16, 0x00	; 0
    1e38:	10 e0       	ldi	r17, 0x00	; 0
    1e3a:	05 c0       	rjmp	.+10     	; 0x1e46 <pvPortMalloc+0x124>
    1e3c:	00 e0       	ldi	r16, 0x00	; 0
    1e3e:	10 e0       	ldi	r17, 0x00	; 0
    1e40:	02 c0       	rjmp	.+4      	; 0x1e46 <pvPortMalloc+0x124>
    1e42:	00 e0       	ldi	r16, 0x00	; 0
    1e44:	10 e0       	ldi	r17, 0x00	; 0
    1e46:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    1e4a:	c8 01       	movw	r24, r16
    1e4c:	df 91       	pop	r29
    1e4e:	cf 91       	pop	r28
    1e50:	1f 91       	pop	r17
    1e52:	0f 91       	pop	r16
    1e54:	08 95       	ret

00001e56 <vPortFree>:
    1e56:	0f 93       	push	r16
    1e58:	1f 93       	push	r17
    1e5a:	cf 93       	push	r28
    1e5c:	df 93       	push	r29
    1e5e:	00 97       	sbiw	r24, 0x00	; 0
    1e60:	41 f1       	breq	.+80     	; 0x1eb2 <vPortFree+0x5c>
    1e62:	ec 01       	movw	r28, r24
    1e64:	8c 01       	movw	r16, r24
    1e66:	05 50       	subi	r16, 0x05	; 5
    1e68:	11 09       	sbc	r17, r1
    1e6a:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <vTaskSuspendAll>
    1e6e:	f8 01       	movw	r30, r16
    1e70:	42 81       	ldd	r20, Z+2	; 0x02
    1e72:	53 81       	ldd	r21, Z+3	; 0x03
    1e74:	a1 e4       	ldi	r26, 0x41	; 65
    1e76:	b1 e2       	ldi	r27, 0x21	; 33
    1e78:	01 c0       	rjmp	.+2      	; 0x1e7c <vPortFree+0x26>
    1e7a:	df 01       	movw	r26, r30
    1e7c:	ed 91       	ld	r30, X+
    1e7e:	fc 91       	ld	r31, X
    1e80:	11 97       	sbiw	r26, 0x01	; 1
    1e82:	22 81       	ldd	r18, Z+2	; 0x02
    1e84:	33 81       	ldd	r19, Z+3	; 0x03
    1e86:	24 17       	cp	r18, r20
    1e88:	35 07       	cpc	r19, r21
    1e8a:	b8 f3       	brcs	.-18     	; 0x1e7a <vPortFree+0x24>
    1e8c:	25 97       	sbiw	r28, 0x05	; 5
    1e8e:	e8 83       	st	Y, r30
    1e90:	f9 83       	std	Y+1, r31	; 0x01
    1e92:	0d 93       	st	X+, r16
    1e94:	1c 93       	st	X, r17
    1e96:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__data_start>
    1e9a:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__data_start+0x1>
    1e9e:	8a 81       	ldd	r24, Y+2	; 0x02
    1ea0:	9b 81       	ldd	r25, Y+3	; 0x03
    1ea2:	82 0f       	add	r24, r18
    1ea4:	93 1f       	adc	r25, r19
    1ea6:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <__data_start>
    1eaa:	90 93 01 20 	sts	0x2001, r25	; 0x802001 <__data_start+0x1>
    1eae:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    1eb2:	df 91       	pop	r29
    1eb4:	cf 91       	pop	r28
    1eb6:	1f 91       	pop	r17
    1eb8:	0f 91       	pop	r16
    1eba:	08 95       	ret

00001ebc <vListInitialise>:
    1ebc:	fc 01       	movw	r30, r24
    1ebe:	03 96       	adiw	r24, 0x03	; 3
    1ec0:	81 83       	std	Z+1, r24	; 0x01
    1ec2:	92 83       	std	Z+2, r25	; 0x02
    1ec4:	4f ef       	ldi	r20, 0xFF	; 255
    1ec6:	5f ef       	ldi	r21, 0xFF	; 255
    1ec8:	ba 01       	movw	r22, r20
    1eca:	43 83       	std	Z+3, r20	; 0x03
    1ecc:	54 83       	std	Z+4, r21	; 0x04
    1ece:	65 83       	std	Z+5, r22	; 0x05
    1ed0:	76 83       	std	Z+6, r23	; 0x06
    1ed2:	87 83       	std	Z+7, r24	; 0x07
    1ed4:	90 87       	std	Z+8, r25	; 0x08
    1ed6:	81 87       	std	Z+9, r24	; 0x09
    1ed8:	92 87       	std	Z+10, r25	; 0x0a
    1eda:	10 82       	st	Z, r1
    1edc:	08 95       	ret

00001ede <vListInitialiseItem>:
    1ede:	fc 01       	movw	r30, r24
    1ee0:	12 86       	std	Z+10, r1	; 0x0a
    1ee2:	13 86       	std	Z+11, r1	; 0x0b
    1ee4:	08 95       	ret

00001ee6 <vListInsertEnd>:
    1ee6:	cf 93       	push	r28
    1ee8:	df 93       	push	r29
    1eea:	fc 01       	movw	r30, r24
    1eec:	db 01       	movw	r26, r22
    1eee:	21 81       	ldd	r18, Z+1	; 0x01
    1ef0:	32 81       	ldd	r19, Z+2	; 0x02
    1ef2:	e9 01       	movw	r28, r18
    1ef4:	8c 81       	ldd	r24, Y+4	; 0x04
    1ef6:	9d 81       	ldd	r25, Y+5	; 0x05
    1ef8:	14 96       	adiw	r26, 0x04	; 4
    1efa:	8d 93       	st	X+, r24
    1efc:	9c 93       	st	X, r25
    1efe:	15 97       	sbiw	r26, 0x05	; 5
    1f00:	81 81       	ldd	r24, Z+1	; 0x01
    1f02:	92 81       	ldd	r25, Z+2	; 0x02
    1f04:	16 96       	adiw	r26, 0x06	; 6
    1f06:	8d 93       	st	X+, r24
    1f08:	9c 93       	st	X, r25
    1f0a:	17 97       	sbiw	r26, 0x07	; 7
    1f0c:	8c 81       	ldd	r24, Y+4	; 0x04
    1f0e:	9d 81       	ldd	r25, Y+5	; 0x05
    1f10:	ec 01       	movw	r28, r24
    1f12:	6e 83       	std	Y+6, r22	; 0x06
    1f14:	7f 83       	std	Y+7, r23	; 0x07
    1f16:	e9 01       	movw	r28, r18
    1f18:	6c 83       	std	Y+4, r22	; 0x04
    1f1a:	7d 83       	std	Y+5, r23	; 0x05
    1f1c:	61 83       	std	Z+1, r22	; 0x01
    1f1e:	72 83       	std	Z+2, r23	; 0x02
    1f20:	1a 96       	adiw	r26, 0x0a	; 10
    1f22:	ed 93       	st	X+, r30
    1f24:	fc 93       	st	X, r31
    1f26:	1b 97       	sbiw	r26, 0x0b	; 11
    1f28:	80 81       	ld	r24, Z
    1f2a:	8f 5f       	subi	r24, 0xFF	; 255
    1f2c:	80 83       	st	Z, r24
    1f2e:	df 91       	pop	r29
    1f30:	cf 91       	pop	r28
    1f32:	08 95       	ret

00001f34 <vListInsert>:
    1f34:	0f 93       	push	r16
    1f36:	1f 93       	push	r17
    1f38:	cf 93       	push	r28
    1f3a:	df 93       	push	r29
    1f3c:	eb 01       	movw	r28, r22
    1f3e:	08 81       	ld	r16, Y
    1f40:	19 81       	ldd	r17, Y+1	; 0x01
    1f42:	2a 81       	ldd	r18, Y+2	; 0x02
    1f44:	3b 81       	ldd	r19, Y+3	; 0x03
    1f46:	0f 3f       	cpi	r16, 0xFF	; 255
    1f48:	4f ef       	ldi	r20, 0xFF	; 255
    1f4a:	14 07       	cpc	r17, r20
    1f4c:	24 07       	cpc	r18, r20
    1f4e:	34 07       	cpc	r19, r20
    1f50:	31 f4       	brne	.+12     	; 0x1f5e <vListInsert+0x2a>
    1f52:	dc 01       	movw	r26, r24
    1f54:	19 96       	adiw	r26, 0x09	; 9
    1f56:	ed 91       	ld	r30, X+
    1f58:	fc 91       	ld	r31, X
    1f5a:	1a 97       	sbiw	r26, 0x0a	; 10
    1f5c:	1f c0       	rjmp	.+62     	; 0x1f9c <vListInsert+0x68>
    1f5e:	fc 01       	movw	r30, r24
    1f60:	33 96       	adiw	r30, 0x03	; 3
    1f62:	dc 01       	movw	r26, r24
    1f64:	17 96       	adiw	r26, 0x07	; 7
    1f66:	4d 91       	ld	r20, X+
    1f68:	5c 91       	ld	r21, X
    1f6a:	18 97       	sbiw	r26, 0x08	; 8
    1f6c:	da 01       	movw	r26, r20
    1f6e:	4d 91       	ld	r20, X+
    1f70:	5d 91       	ld	r21, X+
    1f72:	6d 91       	ld	r22, X+
    1f74:	7c 91       	ld	r23, X
    1f76:	04 17       	cp	r16, r20
    1f78:	15 07       	cpc	r17, r21
    1f7a:	26 07       	cpc	r18, r22
    1f7c:	37 07       	cpc	r19, r23
    1f7e:	70 f0       	brcs	.+28     	; 0x1f9c <vListInsert+0x68>
    1f80:	04 80       	ldd	r0, Z+4	; 0x04
    1f82:	f5 81       	ldd	r31, Z+5	; 0x05
    1f84:	e0 2d       	mov	r30, r0
    1f86:	a4 81       	ldd	r26, Z+4	; 0x04
    1f88:	b5 81       	ldd	r27, Z+5	; 0x05
    1f8a:	4d 91       	ld	r20, X+
    1f8c:	5d 91       	ld	r21, X+
    1f8e:	6d 91       	ld	r22, X+
    1f90:	7c 91       	ld	r23, X
    1f92:	04 17       	cp	r16, r20
    1f94:	15 07       	cpc	r17, r21
    1f96:	26 07       	cpc	r18, r22
    1f98:	37 07       	cpc	r19, r23
    1f9a:	90 f7       	brcc	.-28     	; 0x1f80 <vListInsert+0x4c>
    1f9c:	a4 81       	ldd	r26, Z+4	; 0x04
    1f9e:	b5 81       	ldd	r27, Z+5	; 0x05
    1fa0:	ac 83       	std	Y+4, r26	; 0x04
    1fa2:	bd 83       	std	Y+5, r27	; 0x05
    1fa4:	16 96       	adiw	r26, 0x06	; 6
    1fa6:	cd 93       	st	X+, r28
    1fa8:	dc 93       	st	X, r29
    1faa:	17 97       	sbiw	r26, 0x07	; 7
    1fac:	ee 83       	std	Y+6, r30	; 0x06
    1fae:	ff 83       	std	Y+7, r31	; 0x07
    1fb0:	c4 83       	std	Z+4, r28	; 0x04
    1fb2:	d5 83       	std	Z+5, r29	; 0x05
    1fb4:	8a 87       	std	Y+10, r24	; 0x0a
    1fb6:	9b 87       	std	Y+11, r25	; 0x0b
    1fb8:	fc 01       	movw	r30, r24
    1fba:	20 81       	ld	r18, Z
    1fbc:	2f 5f       	subi	r18, 0xFF	; 255
    1fbe:	20 83       	st	Z, r18
    1fc0:	df 91       	pop	r29
    1fc2:	cf 91       	pop	r28
    1fc4:	1f 91       	pop	r17
    1fc6:	0f 91       	pop	r16
    1fc8:	08 95       	ret

00001fca <vListRemove>:
    1fca:	fc 01       	movw	r30, r24
    1fcc:	a4 81       	ldd	r26, Z+4	; 0x04
    1fce:	b5 81       	ldd	r27, Z+5	; 0x05
    1fd0:	86 81       	ldd	r24, Z+6	; 0x06
    1fd2:	97 81       	ldd	r25, Z+7	; 0x07
    1fd4:	16 96       	adiw	r26, 0x06	; 6
    1fd6:	8d 93       	st	X+, r24
    1fd8:	9c 93       	st	X, r25
    1fda:	17 97       	sbiw	r26, 0x07	; 7
    1fdc:	a6 81       	ldd	r26, Z+6	; 0x06
    1fde:	b7 81       	ldd	r27, Z+7	; 0x07
    1fe0:	84 81       	ldd	r24, Z+4	; 0x04
    1fe2:	95 81       	ldd	r25, Z+5	; 0x05
    1fe4:	14 96       	adiw	r26, 0x04	; 4
    1fe6:	8d 93       	st	X+, r24
    1fe8:	9c 93       	st	X, r25
    1fea:	15 97       	sbiw	r26, 0x05	; 5
    1fec:	a2 85       	ldd	r26, Z+10	; 0x0a
    1fee:	b3 85       	ldd	r27, Z+11	; 0x0b
    1ff0:	11 96       	adiw	r26, 0x01	; 1
    1ff2:	8d 91       	ld	r24, X+
    1ff4:	9c 91       	ld	r25, X
    1ff6:	12 97       	sbiw	r26, 0x02	; 2
    1ff8:	e8 17       	cp	r30, r24
    1ffa:	f9 07       	cpc	r31, r25
    1ffc:	31 f4       	brne	.+12     	; 0x200a <vListRemove+0x40>
    1ffe:	86 81       	ldd	r24, Z+6	; 0x06
    2000:	97 81       	ldd	r25, Z+7	; 0x07
    2002:	11 96       	adiw	r26, 0x01	; 1
    2004:	8d 93       	st	X+, r24
    2006:	9c 93       	st	X, r25
    2008:	12 97       	sbiw	r26, 0x02	; 2
    200a:	12 86       	std	Z+10, r1	; 0x0a
    200c:	13 86       	std	Z+11, r1	; 0x0b
    200e:	8c 91       	ld	r24, X
    2010:	81 50       	subi	r24, 0x01	; 1
    2012:	8c 93       	st	X, r24
    2014:	08 95       	ret

00002016 <pxPortInitialiseStack>:
    2016:	80 93 e8 31 	sts	0x31E8, r24	; 0x8031e8 <portStackTopForTask>
    201a:	90 93 e9 31 	sts	0x31E9, r25	; 0x8031e9 <portStackTopForTask+0x1>
    201e:	31 e1       	ldi	r19, 0x11	; 17
    2020:	fc 01       	movw	r30, r24
    2022:	30 83       	st	Z, r19
    2024:	31 97       	sbiw	r30, 0x01	; 1
    2026:	22 e2       	ldi	r18, 0x22	; 34
    2028:	20 83       	st	Z, r18
    202a:	31 97       	sbiw	r30, 0x01	; 1
    202c:	a3 e3       	ldi	r26, 0x33	; 51
    202e:	a0 83       	st	Z, r26
    2030:	31 97       	sbiw	r30, 0x01	; 1
    2032:	60 83       	st	Z, r22
    2034:	31 97       	sbiw	r30, 0x01	; 1
    2036:	70 83       	st	Z, r23
    2038:	31 97       	sbiw	r30, 0x01	; 1
    203a:	10 82       	st	Z, r1
    203c:	31 97       	sbiw	r30, 0x01	; 1
    203e:	10 82       	st	Z, r1
    2040:	31 97       	sbiw	r30, 0x01	; 1
    2042:	60 e8       	ldi	r22, 0x80	; 128
    2044:	60 83       	st	Z, r22
    2046:	31 97       	sbiw	r30, 0x01	; 1
    2048:	10 82       	st	Z, r1
    204a:	31 97       	sbiw	r30, 0x01	; 1
    204c:	10 82       	st	Z, r1
    204e:	31 97       	sbiw	r30, 0x01	; 1
    2050:	10 82       	st	Z, r1
    2052:	31 97       	sbiw	r30, 0x01	; 1
    2054:	62 e0       	ldi	r22, 0x02	; 2
    2056:	60 83       	st	Z, r22
    2058:	31 97       	sbiw	r30, 0x01	; 1
    205a:	63 e0       	ldi	r22, 0x03	; 3
    205c:	60 83       	st	Z, r22
    205e:	31 97       	sbiw	r30, 0x01	; 1
    2060:	64 e0       	ldi	r22, 0x04	; 4
    2062:	60 83       	st	Z, r22
    2064:	31 97       	sbiw	r30, 0x01	; 1
    2066:	65 e0       	ldi	r22, 0x05	; 5
    2068:	60 83       	st	Z, r22
    206a:	31 97       	sbiw	r30, 0x01	; 1
    206c:	66 e0       	ldi	r22, 0x06	; 6
    206e:	60 83       	st	Z, r22
    2070:	31 97       	sbiw	r30, 0x01	; 1
    2072:	67 e0       	ldi	r22, 0x07	; 7
    2074:	60 83       	st	Z, r22
    2076:	31 97       	sbiw	r30, 0x01	; 1
    2078:	68 e0       	ldi	r22, 0x08	; 8
    207a:	60 83       	st	Z, r22
    207c:	31 97       	sbiw	r30, 0x01	; 1
    207e:	69 e0       	ldi	r22, 0x09	; 9
    2080:	60 83       	st	Z, r22
    2082:	31 97       	sbiw	r30, 0x01	; 1
    2084:	60 e1       	ldi	r22, 0x10	; 16
    2086:	60 83       	st	Z, r22
    2088:	31 97       	sbiw	r30, 0x01	; 1
    208a:	30 83       	st	Z, r19
    208c:	31 97       	sbiw	r30, 0x01	; 1
    208e:	32 e1       	ldi	r19, 0x12	; 18
    2090:	30 83       	st	Z, r19
    2092:	31 97       	sbiw	r30, 0x01	; 1
    2094:	33 e1       	ldi	r19, 0x13	; 19
    2096:	30 83       	st	Z, r19
    2098:	31 97       	sbiw	r30, 0x01	; 1
    209a:	34 e1       	ldi	r19, 0x14	; 20
    209c:	30 83       	st	Z, r19
    209e:	31 97       	sbiw	r30, 0x01	; 1
    20a0:	35 e1       	ldi	r19, 0x15	; 21
    20a2:	30 83       	st	Z, r19
    20a4:	31 97       	sbiw	r30, 0x01	; 1
    20a6:	36 e1       	ldi	r19, 0x16	; 22
    20a8:	30 83       	st	Z, r19
    20aa:	31 97       	sbiw	r30, 0x01	; 1
    20ac:	37 e1       	ldi	r19, 0x17	; 23
    20ae:	30 83       	st	Z, r19
    20b0:	31 97       	sbiw	r30, 0x01	; 1
    20b2:	38 e1       	ldi	r19, 0x18	; 24
    20b4:	30 83       	st	Z, r19
    20b6:	31 97       	sbiw	r30, 0x01	; 1
    20b8:	39 e1       	ldi	r19, 0x19	; 25
    20ba:	30 83       	st	Z, r19
    20bc:	31 97       	sbiw	r30, 0x01	; 1
    20be:	30 e2       	ldi	r19, 0x20	; 32
    20c0:	30 83       	st	Z, r19
    20c2:	31 97       	sbiw	r30, 0x01	; 1
    20c4:	31 e2       	ldi	r19, 0x21	; 33
    20c6:	30 83       	st	Z, r19
    20c8:	31 97       	sbiw	r30, 0x01	; 1
    20ca:	20 83       	st	Z, r18
    20cc:	31 97       	sbiw	r30, 0x01	; 1
    20ce:	23 e2       	ldi	r18, 0x23	; 35
    20d0:	20 83       	st	Z, r18
    20d2:	31 97       	sbiw	r30, 0x01	; 1
    20d4:	40 83       	st	Z, r20
    20d6:	31 97       	sbiw	r30, 0x01	; 1
    20d8:	50 83       	st	Z, r21
    20da:	31 97       	sbiw	r30, 0x01	; 1
    20dc:	26 e2       	ldi	r18, 0x26	; 38
    20de:	20 83       	st	Z, r18
    20e0:	31 97       	sbiw	r30, 0x01	; 1
    20e2:	27 e2       	ldi	r18, 0x27	; 39
    20e4:	20 83       	st	Z, r18
    20e6:	31 97       	sbiw	r30, 0x01	; 1
    20e8:	28 e2       	ldi	r18, 0x28	; 40
    20ea:	20 83       	st	Z, r18
    20ec:	31 97       	sbiw	r30, 0x01	; 1
    20ee:	29 e2       	ldi	r18, 0x29	; 41
    20f0:	20 83       	st	Z, r18
    20f2:	31 97       	sbiw	r30, 0x01	; 1
    20f4:	20 e3       	ldi	r18, 0x30	; 48
    20f6:	20 83       	st	Z, r18
    20f8:	31 97       	sbiw	r30, 0x01	; 1
    20fa:	21 e3       	ldi	r18, 0x31	; 49
    20fc:	20 83       	st	Z, r18
    20fe:	89 97       	sbiw	r24, 0x29	; 41
    2100:	08 95       	ret

00002102 <xPortStartScheduler>:
    2102:	8c e7       	ldi	r24, 0x7C	; 124
    2104:	80 93 69 0a 	sts	0x0A69, r24	; 0x800a69 <__TEXT_REGION_LENGTH__+0x700a69>
    2108:	8f ef       	ldi	r24, 0xFF	; 255
    210a:	80 93 68 0a 	sts	0x0A68, r24	; 0x800a68 <__TEXT_REGION_LENGTH__+0x700a68>
    210e:	81 e0       	ldi	r24, 0x01	; 1
    2110:	80 93 40 0a 	sts	0x0A40, r24	; 0x800a40 <__TEXT_REGION_LENGTH__+0x700a40>
    2114:	90 e1       	ldi	r25, 0x10	; 16
    2116:	90 93 41 0a 	sts	0x0A41, r25	; 0x800a41 <__TEXT_REGION_LENGTH__+0x700a41>
    211a:	80 93 47 0a 	sts	0x0A47, r24	; 0x800a47 <__TEXT_REGION_LENGTH__+0x700a47>
    211e:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2122:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2126:	cd 91       	ld	r28, X+
    2128:	cd bf       	out	0x3d, r28	; 61
    212a:	dd 91       	ld	r29, X+
    212c:	de bf       	out	0x3e, r29	; 62
    212e:	ff 91       	pop	r31
    2130:	ef 91       	pop	r30
    2132:	df 91       	pop	r29
    2134:	cf 91       	pop	r28
    2136:	bf 91       	pop	r27
    2138:	af 91       	pop	r26
    213a:	9f 91       	pop	r25
    213c:	8f 91       	pop	r24
    213e:	7f 91       	pop	r23
    2140:	6f 91       	pop	r22
    2142:	5f 91       	pop	r21
    2144:	4f 91       	pop	r20
    2146:	3f 91       	pop	r19
    2148:	2f 91       	pop	r18
    214a:	1f 91       	pop	r17
    214c:	0f 91       	pop	r16
    214e:	ff 90       	pop	r15
    2150:	ef 90       	pop	r14
    2152:	df 90       	pop	r13
    2154:	cf 90       	pop	r12
    2156:	bf 90       	pop	r11
    2158:	af 90       	pop	r10
    215a:	9f 90       	pop	r9
    215c:	8f 90       	pop	r8
    215e:	7f 90       	pop	r7
    2160:	6f 90       	pop	r6
    2162:	5f 90       	pop	r5
    2164:	4f 90       	pop	r4
    2166:	3f 90       	pop	r3
    2168:	2f 90       	pop	r2
    216a:	1f 90       	pop	r1
    216c:	0f 90       	pop	r0
    216e:	0c be       	out	0x3c, r0	; 60
    2170:	0f 90       	pop	r0
    2172:	0b be       	out	0x3b, r0	; 59
    2174:	0f 90       	pop	r0
    2176:	0f be       	out	0x3f, r0	; 63
    2178:	0f 90       	pop	r0
    217a:	08 95       	ret
    217c:	08 95       	ret

0000217e <vPortYield>:
    217e:	0f 92       	push	r0
    2180:	0f b6       	in	r0, 0x3f	; 63
    2182:	f8 94       	cli
    2184:	0f 92       	push	r0
    2186:	0b b6       	in	r0, 0x3b	; 59
    2188:	0f 92       	push	r0
    218a:	0c b6       	in	r0, 0x3c	; 60
    218c:	0f 92       	push	r0
    218e:	1f 92       	push	r1
    2190:	11 24       	eor	r1, r1
    2192:	2f 92       	push	r2
    2194:	3f 92       	push	r3
    2196:	4f 92       	push	r4
    2198:	5f 92       	push	r5
    219a:	6f 92       	push	r6
    219c:	7f 92       	push	r7
    219e:	8f 92       	push	r8
    21a0:	9f 92       	push	r9
    21a2:	af 92       	push	r10
    21a4:	bf 92       	push	r11
    21a6:	cf 92       	push	r12
    21a8:	df 92       	push	r13
    21aa:	ef 92       	push	r14
    21ac:	ff 92       	push	r15
    21ae:	0f 93       	push	r16
    21b0:	1f 93       	push	r17
    21b2:	2f 93       	push	r18
    21b4:	3f 93       	push	r19
    21b6:	4f 93       	push	r20
    21b8:	5f 93       	push	r21
    21ba:	6f 93       	push	r22
    21bc:	7f 93       	push	r23
    21be:	8f 93       	push	r24
    21c0:	9f 93       	push	r25
    21c2:	af 93       	push	r26
    21c4:	bf 93       	push	r27
    21c6:	cf 93       	push	r28
    21c8:	df 93       	push	r29
    21ca:	ef 93       	push	r30
    21cc:	ff 93       	push	r31
    21ce:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    21d2:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    21d6:	0d b6       	in	r0, 0x3d	; 61
    21d8:	0d 92       	st	X+, r0
    21da:	0e b6       	in	r0, 0x3e	; 62
    21dc:	0d 92       	st	X+, r0
    21de:	0e 94 e2 17 	call	0x2fc4	; 0x2fc4 <vTaskSwitchContext>
    21e2:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    21e6:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    21ea:	cd 91       	ld	r28, X+
    21ec:	cd bf       	out	0x3d, r28	; 61
    21ee:	dd 91       	ld	r29, X+
    21f0:	de bf       	out	0x3e, r29	; 62
    21f2:	ff 91       	pop	r31
    21f4:	ef 91       	pop	r30
    21f6:	df 91       	pop	r29
    21f8:	cf 91       	pop	r28
    21fa:	bf 91       	pop	r27
    21fc:	af 91       	pop	r26
    21fe:	9f 91       	pop	r25
    2200:	8f 91       	pop	r24
    2202:	7f 91       	pop	r23
    2204:	6f 91       	pop	r22
    2206:	5f 91       	pop	r21
    2208:	4f 91       	pop	r20
    220a:	3f 91       	pop	r19
    220c:	2f 91       	pop	r18
    220e:	1f 91       	pop	r17
    2210:	0f 91       	pop	r16
    2212:	ff 90       	pop	r15
    2214:	ef 90       	pop	r14
    2216:	df 90       	pop	r13
    2218:	cf 90       	pop	r12
    221a:	bf 90       	pop	r11
    221c:	af 90       	pop	r10
    221e:	9f 90       	pop	r9
    2220:	8f 90       	pop	r8
    2222:	7f 90       	pop	r7
    2224:	6f 90       	pop	r6
    2226:	5f 90       	pop	r5
    2228:	4f 90       	pop	r4
    222a:	3f 90       	pop	r3
    222c:	2f 90       	pop	r2
    222e:	1f 90       	pop	r1
    2230:	0f 90       	pop	r0
    2232:	0c be       	out	0x3c, r0	; 60
    2234:	0f 90       	pop	r0
    2236:	0b be       	out	0x3b, r0	; 59
    2238:	0f 90       	pop	r0
    223a:	0f be       	out	0x3f, r0	; 63
    223c:	0f 90       	pop	r0
    223e:	08 95       	ret

00002240 <vPortYieldFromTick>:
    2240:	0f 92       	push	r0
    2242:	0f b6       	in	r0, 0x3f	; 63
    2244:	f8 94       	cli
    2246:	0f 92       	push	r0
    2248:	0b b6       	in	r0, 0x3b	; 59
    224a:	0f 92       	push	r0
    224c:	0c b6       	in	r0, 0x3c	; 60
    224e:	0f 92       	push	r0
    2250:	1f 92       	push	r1
    2252:	11 24       	eor	r1, r1
    2254:	2f 92       	push	r2
    2256:	3f 92       	push	r3
    2258:	4f 92       	push	r4
    225a:	5f 92       	push	r5
    225c:	6f 92       	push	r6
    225e:	7f 92       	push	r7
    2260:	8f 92       	push	r8
    2262:	9f 92       	push	r9
    2264:	af 92       	push	r10
    2266:	bf 92       	push	r11
    2268:	cf 92       	push	r12
    226a:	df 92       	push	r13
    226c:	ef 92       	push	r14
    226e:	ff 92       	push	r15
    2270:	0f 93       	push	r16
    2272:	1f 93       	push	r17
    2274:	2f 93       	push	r18
    2276:	3f 93       	push	r19
    2278:	4f 93       	push	r20
    227a:	5f 93       	push	r21
    227c:	6f 93       	push	r22
    227e:	7f 93       	push	r23
    2280:	8f 93       	push	r24
    2282:	9f 93       	push	r25
    2284:	af 93       	push	r26
    2286:	bf 93       	push	r27
    2288:	cf 93       	push	r28
    228a:	df 93       	push	r29
    228c:	ef 93       	push	r30
    228e:	ff 93       	push	r31
    2290:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2294:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2298:	0d b6       	in	r0, 0x3d	; 61
    229a:	0d 92       	st	X+, r0
    229c:	0e b6       	in	r0, 0x3e	; 62
    229e:	0d 92       	st	X+, r0
    22a0:	0e 94 c4 15 	call	0x2b88	; 0x2b88 <vTaskIncrementTick>
    22a4:	0e 94 e2 17 	call	0x2fc4	; 0x2fc4 <vTaskSwitchContext>
    22a8:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    22ac:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    22b0:	cd 91       	ld	r28, X+
    22b2:	cd bf       	out	0x3d, r28	; 61
    22b4:	dd 91       	ld	r29, X+
    22b6:	de bf       	out	0x3e, r29	; 62
    22b8:	ff 91       	pop	r31
    22ba:	ef 91       	pop	r30
    22bc:	df 91       	pop	r29
    22be:	cf 91       	pop	r28
    22c0:	bf 91       	pop	r27
    22c2:	af 91       	pop	r26
    22c4:	9f 91       	pop	r25
    22c6:	8f 91       	pop	r24
    22c8:	7f 91       	pop	r23
    22ca:	6f 91       	pop	r22
    22cc:	5f 91       	pop	r21
    22ce:	4f 91       	pop	r20
    22d0:	3f 91       	pop	r19
    22d2:	2f 91       	pop	r18
    22d4:	1f 91       	pop	r17
    22d6:	0f 91       	pop	r16
    22d8:	ff 90       	pop	r15
    22da:	ef 90       	pop	r14
    22dc:	df 90       	pop	r13
    22de:	cf 90       	pop	r12
    22e0:	bf 90       	pop	r11
    22e2:	af 90       	pop	r10
    22e4:	9f 90       	pop	r9
    22e6:	8f 90       	pop	r8
    22e8:	7f 90       	pop	r7
    22ea:	6f 90       	pop	r6
    22ec:	5f 90       	pop	r5
    22ee:	4f 90       	pop	r4
    22f0:	3f 90       	pop	r3
    22f2:	2f 90       	pop	r2
    22f4:	1f 90       	pop	r1
    22f6:	0f 90       	pop	r0
    22f8:	0c be       	out	0x3c, r0	; 60
    22fa:	0f 90       	pop	r0
    22fc:	0b be       	out	0x3b, r0	; 59
    22fe:	0f 90       	pop	r0
    2300:	0f be       	out	0x3f, r0	; 63
    2302:	0f 90       	pop	r0
    2304:	08 95       	ret

00002306 <__vector_55>:
    2306:	e0 e0       	ldi	r30, 0x00	; 0
    2308:	f9 e0       	ldi	r31, 0x09	; 9
    230a:	80 a5       	ldd	r24, Z+40	; 0x28
    230c:	91 a5       	ldd	r25, Z+41	; 0x29
    230e:	81 50       	subi	r24, 0x01	; 1
    2310:	93 48       	sbci	r25, 0x83	; 131
    2312:	80 a7       	std	Z+40, r24	; 0x28
    2314:	91 a7       	std	Z+41, r25	; 0x29
    2316:	0e 94 20 11 	call	0x2240	; 0x2240 <vPortYieldFromTick>
    231a:	18 95       	reti

0000231c <prvCopyDataToQueue>:
    231c:	cf 93       	push	r28
    231e:	df 93       	push	r29
    2320:	ec 01       	movw	r28, r24
    2322:	88 a1       	ldd	r24, Y+32	; 0x20
    2324:	81 11       	cpse	r24, r1
    2326:	0b c0       	rjmp	.+22     	; 0x233e <prvCopyDataToQueue+0x22>
    2328:	88 81       	ld	r24, Y
    232a:	99 81       	ldd	r25, Y+1	; 0x01
    232c:	89 2b       	or	r24, r25
    232e:	e1 f5       	brne	.+120    	; 0x23a8 <prvCopyDataToQueue+0x8c>
    2330:	8a 81       	ldd	r24, Y+2	; 0x02
    2332:	9b 81       	ldd	r25, Y+3	; 0x03
    2334:	0e 94 9d 19 	call	0x333a	; 0x333a <vTaskPriorityDisinherit>
    2338:	1a 82       	std	Y+2, r1	; 0x02
    233a:	1b 82       	std	Y+3, r1	; 0x03
    233c:	35 c0       	rjmp	.+106    	; 0x23a8 <prvCopyDataToQueue+0x8c>
    233e:	41 11       	cpse	r20, r1
    2340:	17 c0       	rjmp	.+46     	; 0x2370 <prvCopyDataToQueue+0x54>
    2342:	48 2f       	mov	r20, r24
    2344:	50 e0       	ldi	r21, 0x00	; 0
    2346:	8c 81       	ldd	r24, Y+4	; 0x04
    2348:	9d 81       	ldd	r25, Y+5	; 0x05
    234a:	0e 94 62 22 	call	0x44c4	; 0x44c4 <memcpy>
    234e:	28 a1       	ldd	r18, Y+32	; 0x20
    2350:	8c 81       	ldd	r24, Y+4	; 0x04
    2352:	9d 81       	ldd	r25, Y+5	; 0x05
    2354:	82 0f       	add	r24, r18
    2356:	91 1d       	adc	r25, r1
    2358:	8c 83       	std	Y+4, r24	; 0x04
    235a:	9d 83       	std	Y+5, r25	; 0x05
    235c:	2a 81       	ldd	r18, Y+2	; 0x02
    235e:	3b 81       	ldd	r19, Y+3	; 0x03
    2360:	82 17       	cp	r24, r18
    2362:	93 07       	cpc	r25, r19
    2364:	08 f1       	brcs	.+66     	; 0x23a8 <prvCopyDataToQueue+0x8c>
    2366:	88 81       	ld	r24, Y
    2368:	99 81       	ldd	r25, Y+1	; 0x01
    236a:	8c 83       	std	Y+4, r24	; 0x04
    236c:	9d 83       	std	Y+5, r25	; 0x05
    236e:	1c c0       	rjmp	.+56     	; 0x23a8 <prvCopyDataToQueue+0x8c>
    2370:	48 2f       	mov	r20, r24
    2372:	50 e0       	ldi	r21, 0x00	; 0
    2374:	8e 81       	ldd	r24, Y+6	; 0x06
    2376:	9f 81       	ldd	r25, Y+7	; 0x07
    2378:	0e 94 62 22 	call	0x44c4	; 0x44c4 <memcpy>
    237c:	88 a1       	ldd	r24, Y+32	; 0x20
    237e:	90 e0       	ldi	r25, 0x00	; 0
    2380:	91 95       	neg	r25
    2382:	81 95       	neg	r24
    2384:	91 09       	sbc	r25, r1
    2386:	2e 81       	ldd	r18, Y+6	; 0x06
    2388:	3f 81       	ldd	r19, Y+7	; 0x07
    238a:	28 0f       	add	r18, r24
    238c:	39 1f       	adc	r19, r25
    238e:	2e 83       	std	Y+6, r18	; 0x06
    2390:	3f 83       	std	Y+7, r19	; 0x07
    2392:	48 81       	ld	r20, Y
    2394:	59 81       	ldd	r21, Y+1	; 0x01
    2396:	24 17       	cp	r18, r20
    2398:	35 07       	cpc	r19, r21
    239a:	30 f4       	brcc	.+12     	; 0x23a8 <prvCopyDataToQueue+0x8c>
    239c:	2a 81       	ldd	r18, Y+2	; 0x02
    239e:	3b 81       	ldd	r19, Y+3	; 0x03
    23a0:	82 0f       	add	r24, r18
    23a2:	93 1f       	adc	r25, r19
    23a4:	8e 83       	std	Y+6, r24	; 0x06
    23a6:	9f 83       	std	Y+7, r25	; 0x07
    23a8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    23aa:	8f 5f       	subi	r24, 0xFF	; 255
    23ac:	8e 8f       	std	Y+30, r24	; 0x1e
    23ae:	df 91       	pop	r29
    23b0:	cf 91       	pop	r28
    23b2:	08 95       	ret

000023b4 <prvCopyDataFromQueue>:
    23b4:	fc 01       	movw	r30, r24
    23b6:	80 81       	ld	r24, Z
    23b8:	91 81       	ldd	r25, Z+1	; 0x01
    23ba:	00 97       	sbiw	r24, 0x00	; 0
    23bc:	a1 f0       	breq	.+40     	; 0x23e6 <prvCopyDataFromQueue+0x32>
    23be:	40 a1       	ldd	r20, Z+32	; 0x20
    23c0:	50 e0       	ldi	r21, 0x00	; 0
    23c2:	26 81       	ldd	r18, Z+6	; 0x06
    23c4:	37 81       	ldd	r19, Z+7	; 0x07
    23c6:	24 0f       	add	r18, r20
    23c8:	35 1f       	adc	r19, r21
    23ca:	26 83       	std	Z+6, r18	; 0x06
    23cc:	37 83       	std	Z+7, r19	; 0x07
    23ce:	a2 81       	ldd	r26, Z+2	; 0x02
    23d0:	b3 81       	ldd	r27, Z+3	; 0x03
    23d2:	2a 17       	cp	r18, r26
    23d4:	3b 07       	cpc	r19, r27
    23d6:	10 f0       	brcs	.+4      	; 0x23dc <prvCopyDataFromQueue+0x28>
    23d8:	86 83       	std	Z+6, r24	; 0x06
    23da:	97 83       	std	Z+7, r25	; 0x07
    23dc:	cb 01       	movw	r24, r22
    23de:	66 81       	ldd	r22, Z+6	; 0x06
    23e0:	77 81       	ldd	r23, Z+7	; 0x07
    23e2:	0e 94 62 22 	call	0x44c4	; 0x44c4 <memcpy>
    23e6:	08 95       	ret

000023e8 <prvUnlockQueue>:
    23e8:	0f 93       	push	r16
    23ea:	1f 93       	push	r17
    23ec:	cf 93       	push	r28
    23ee:	df 93       	push	r29
    23f0:	ec 01       	movw	r28, r24
    23f2:	0f b6       	in	r0, 0x3f	; 63
    23f4:	f8 94       	cli
    23f6:	0f 92       	push	r0
    23f8:	8a a1       	ldd	r24, Y+34	; 0x22
    23fa:	18 16       	cp	r1, r24
    23fc:	b4 f4       	brge	.+44     	; 0x242a <prvUnlockQueue+0x42>
    23fe:	8b 89       	ldd	r24, Y+19	; 0x13
    2400:	81 11       	cpse	r24, r1
    2402:	05 c0       	rjmp	.+10     	; 0x240e <prvUnlockQueue+0x26>
    2404:	12 c0       	rjmp	.+36     	; 0x242a <prvUnlockQueue+0x42>
    2406:	8b 89       	ldd	r24, Y+19	; 0x13
    2408:	81 11       	cpse	r24, r1
    240a:	04 c0       	rjmp	.+8      	; 0x2414 <prvUnlockQueue+0x2c>
    240c:	0e c0       	rjmp	.+28     	; 0x242a <prvUnlockQueue+0x42>
    240e:	8e 01       	movw	r16, r28
    2410:	0d 5e       	subi	r16, 0xED	; 237
    2412:	1f 4f       	sbci	r17, 0xFF	; 255
    2414:	c8 01       	movw	r24, r16
    2416:	0e 94 69 18 	call	0x30d2	; 0x30d2 <xTaskRemoveFromEventList>
    241a:	81 11       	cpse	r24, r1
    241c:	0e 94 26 19 	call	0x324c	; 0x324c <vTaskMissedYield>
    2420:	8a a1       	ldd	r24, Y+34	; 0x22
    2422:	81 50       	subi	r24, 0x01	; 1
    2424:	8a a3       	std	Y+34, r24	; 0x22
    2426:	18 16       	cp	r1, r24
    2428:	74 f3       	brlt	.-36     	; 0x2406 <prvUnlockQueue+0x1e>
    242a:	8f ef       	ldi	r24, 0xFF	; 255
    242c:	8a a3       	std	Y+34, r24	; 0x22
    242e:	0f 90       	pop	r0
    2430:	0f be       	out	0x3f, r0	; 63
    2432:	0f b6       	in	r0, 0x3f	; 63
    2434:	f8 94       	cli
    2436:	0f 92       	push	r0
    2438:	89 a1       	ldd	r24, Y+33	; 0x21
    243a:	18 16       	cp	r1, r24
    243c:	b4 f4       	brge	.+44     	; 0x246a <prvUnlockQueue+0x82>
    243e:	88 85       	ldd	r24, Y+8	; 0x08
    2440:	81 11       	cpse	r24, r1
    2442:	05 c0       	rjmp	.+10     	; 0x244e <prvUnlockQueue+0x66>
    2444:	12 c0       	rjmp	.+36     	; 0x246a <prvUnlockQueue+0x82>
    2446:	88 85       	ldd	r24, Y+8	; 0x08
    2448:	81 11       	cpse	r24, r1
    244a:	04 c0       	rjmp	.+8      	; 0x2454 <prvUnlockQueue+0x6c>
    244c:	0e c0       	rjmp	.+28     	; 0x246a <prvUnlockQueue+0x82>
    244e:	8e 01       	movw	r16, r28
    2450:	08 5f       	subi	r16, 0xF8	; 248
    2452:	1f 4f       	sbci	r17, 0xFF	; 255
    2454:	c8 01       	movw	r24, r16
    2456:	0e 94 69 18 	call	0x30d2	; 0x30d2 <xTaskRemoveFromEventList>
    245a:	81 11       	cpse	r24, r1
    245c:	0e 94 26 19 	call	0x324c	; 0x324c <vTaskMissedYield>
    2460:	89 a1       	ldd	r24, Y+33	; 0x21
    2462:	81 50       	subi	r24, 0x01	; 1
    2464:	89 a3       	std	Y+33, r24	; 0x21
    2466:	18 16       	cp	r1, r24
    2468:	74 f3       	brlt	.-36     	; 0x2446 <prvUnlockQueue+0x5e>
    246a:	8f ef       	ldi	r24, 0xFF	; 255
    246c:	89 a3       	std	Y+33, r24	; 0x21
    246e:	0f 90       	pop	r0
    2470:	0f be       	out	0x3f, r0	; 63
    2472:	df 91       	pop	r29
    2474:	cf 91       	pop	r28
    2476:	1f 91       	pop	r17
    2478:	0f 91       	pop	r16
    247a:	08 95       	ret

0000247c <xQueueGenericReset>:
    247c:	1f 93       	push	r17
    247e:	cf 93       	push	r28
    2480:	df 93       	push	r29
    2482:	61 30       	cpi	r22, 0x01	; 1
    2484:	59 f0       	breq	.+22     	; 0x249c <xQueueGenericReset+0x20>
    2486:	fc 01       	movw	r30, r24
    2488:	23 89       	ldd	r18, Z+19	; 0x13
    248a:	30 85       	ldd	r19, Z+8	; 0x08
    248c:	31 11       	cpse	r19, r1
    248e:	2c c0       	rjmp	.+88     	; 0x24e8 <xQueueGenericReset+0x6c>
    2490:	11 e0       	ldi	r17, 0x01	; 1
    2492:	21 11       	cpse	r18, r1
    2494:	10 e0       	ldi	r17, 0x00	; 0
    2496:	21 11       	cpse	r18, r1
    2498:	28 c0       	rjmp	.+80     	; 0x24ea <xQueueGenericReset+0x6e>
    249a:	01 c0       	rjmp	.+2      	; 0x249e <xQueueGenericReset+0x22>
    249c:	11 e0       	ldi	r17, 0x01	; 1
    249e:	ec 01       	movw	r28, r24
    24a0:	48 81       	ld	r20, Y
    24a2:	59 81       	ldd	r21, Y+1	; 0x01
    24a4:	28 a1       	ldd	r18, Y+32	; 0x20
    24a6:	30 e0       	ldi	r19, 0x00	; 0
    24a8:	6f 8d       	ldd	r22, Y+31	; 0x1f
    24aa:	62 9f       	mul	r22, r18
    24ac:	c0 01       	movw	r24, r0
    24ae:	63 9f       	mul	r22, r19
    24b0:	90 0d       	add	r25, r0
    24b2:	11 24       	eor	r1, r1
    24b4:	ba 01       	movw	r22, r20
    24b6:	68 0f       	add	r22, r24
    24b8:	79 1f       	adc	r23, r25
    24ba:	6a 83       	std	Y+2, r22	; 0x02
    24bc:	7b 83       	std	Y+3, r23	; 0x03
    24be:	1e 8e       	std	Y+30, r1	; 0x1e
    24c0:	4c 83       	std	Y+4, r20	; 0x04
    24c2:	5d 83       	std	Y+5, r21	; 0x05
    24c4:	82 1b       	sub	r24, r18
    24c6:	93 0b       	sbc	r25, r19
    24c8:	84 0f       	add	r24, r20
    24ca:	95 1f       	adc	r25, r21
    24cc:	8e 83       	std	Y+6, r24	; 0x06
    24ce:	9f 83       	std	Y+7, r25	; 0x07
    24d0:	8f ef       	ldi	r24, 0xFF	; 255
    24d2:	89 a3       	std	Y+33, r24	; 0x21
    24d4:	8a a3       	std	Y+34, r24	; 0x22
    24d6:	ce 01       	movw	r24, r28
    24d8:	08 96       	adiw	r24, 0x08	; 8
    24da:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <vListInitialise>
    24de:	ce 01       	movw	r24, r28
    24e0:	43 96       	adiw	r24, 0x13	; 19
    24e2:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <vListInitialise>
    24e6:	01 c0       	rjmp	.+2      	; 0x24ea <xQueueGenericReset+0x6e>
    24e8:	10 e0       	ldi	r17, 0x00	; 0
    24ea:	81 2f       	mov	r24, r17
    24ec:	df 91       	pop	r29
    24ee:	cf 91       	pop	r28
    24f0:	1f 91       	pop	r17
    24f2:	08 95       	ret

000024f4 <xQueueGenericCreate>:
    24f4:	0f 93       	push	r16
    24f6:	1f 93       	push	r17
    24f8:	cf 93       	push	r28
    24fa:	df 93       	push	r29
    24fc:	88 23       	and	r24, r24
    24fe:	01 f1       	breq	.+64     	; 0x2540 <xQueueGenericCreate+0x4c>
    2500:	06 2f       	mov	r16, r22
    2502:	18 2f       	mov	r17, r24
    2504:	83 e2       	ldi	r24, 0x23	; 35
    2506:	90 e0       	ldi	r25, 0x00	; 0
    2508:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <pvPortMalloc>
    250c:	ec 01       	movw	r28, r24
    250e:	89 2b       	or	r24, r25
    2510:	c9 f0       	breq	.+50     	; 0x2544 <xQueueGenericCreate+0x50>
    2512:	10 9f       	mul	r17, r16
    2514:	c0 01       	movw	r24, r0
    2516:	11 24       	eor	r1, r1
    2518:	01 96       	adiw	r24, 0x01	; 1
    251a:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <pvPortMalloc>
    251e:	88 83       	st	Y, r24
    2520:	99 83       	std	Y+1, r25	; 0x01
    2522:	89 2b       	or	r24, r25
    2524:	39 f0       	breq	.+14     	; 0x2534 <xQueueGenericCreate+0x40>
    2526:	1f 8f       	std	Y+31, r17	; 0x1f
    2528:	08 a3       	std	Y+32, r16	; 0x20
    252a:	61 e0       	ldi	r22, 0x01	; 1
    252c:	ce 01       	movw	r24, r28
    252e:	0e 94 3e 12 	call	0x247c	; 0x247c <xQueueGenericReset>
    2532:	08 c0       	rjmp	.+16     	; 0x2544 <xQueueGenericCreate+0x50>
    2534:	ce 01       	movw	r24, r28
    2536:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <vPortFree>
    253a:	c0 e0       	ldi	r28, 0x00	; 0
    253c:	d0 e0       	ldi	r29, 0x00	; 0
    253e:	02 c0       	rjmp	.+4      	; 0x2544 <xQueueGenericCreate+0x50>
    2540:	c0 e0       	ldi	r28, 0x00	; 0
    2542:	d0 e0       	ldi	r29, 0x00	; 0
    2544:	ce 01       	movw	r24, r28
    2546:	df 91       	pop	r29
    2548:	cf 91       	pop	r28
    254a:	1f 91       	pop	r17
    254c:	0f 91       	pop	r16
    254e:	08 95       	ret

00002550 <xQueueGenericSend>:
    2550:	af 92       	push	r10
    2552:	bf 92       	push	r11
    2554:	cf 92       	push	r12
    2556:	df 92       	push	r13
    2558:	ef 92       	push	r14
    255a:	ff 92       	push	r15
    255c:	0f 93       	push	r16
    255e:	1f 93       	push	r17
    2560:	cf 93       	push	r28
    2562:	df 93       	push	r29
    2564:	cd b7       	in	r28, 0x3d	; 61
    2566:	de b7       	in	r29, 0x3e	; 62
    2568:	29 97       	sbiw	r28, 0x09	; 9
    256a:	cd bf       	out	0x3d, r28	; 61
    256c:	de bf       	out	0x3e, r29	; 62
    256e:	7c 01       	movw	r14, r24
    2570:	5b 01       	movw	r10, r22
    2572:	2e 83       	std	Y+6, r18	; 0x06
    2574:	3f 83       	std	Y+7, r19	; 0x07
    2576:	48 87       	std	Y+8, r20	; 0x08
    2578:	59 87       	std	Y+9, r21	; 0x09
    257a:	10 e0       	ldi	r17, 0x00	; 0
    257c:	6c 01       	movw	r12, r24
    257e:	88 e0       	ldi	r24, 0x08	; 8
    2580:	c8 0e       	add	r12, r24
    2582:	d1 1c       	adc	r13, r1
    2584:	0f b6       	in	r0, 0x3f	; 63
    2586:	f8 94       	cli
    2588:	0f 92       	push	r0
    258a:	f7 01       	movw	r30, r14
    258c:	96 8d       	ldd	r25, Z+30	; 0x1e
    258e:	87 8d       	ldd	r24, Z+31	; 0x1f
    2590:	98 17       	cp	r25, r24
    2592:	a8 f4       	brcc	.+42     	; 0x25be <xQueueGenericSend+0x6e>
    2594:	40 2f       	mov	r20, r16
    2596:	b5 01       	movw	r22, r10
    2598:	c7 01       	movw	r24, r14
    259a:	0e 94 8e 11 	call	0x231c	; 0x231c <prvCopyDataToQueue>
    259e:	f7 01       	movw	r30, r14
    25a0:	83 89       	ldd	r24, Z+19	; 0x13
    25a2:	88 23       	and	r24, r24
    25a4:	41 f0       	breq	.+16     	; 0x25b6 <xQueueGenericSend+0x66>
    25a6:	c7 01       	movw	r24, r14
    25a8:	43 96       	adiw	r24, 0x13	; 19
    25aa:	0e 94 69 18 	call	0x30d2	; 0x30d2 <xTaskRemoveFromEventList>
    25ae:	81 30       	cpi	r24, 0x01	; 1
    25b0:	11 f4       	brne	.+4      	; 0x25b6 <xQueueGenericSend+0x66>
    25b2:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    25b6:	0f 90       	pop	r0
    25b8:	0f be       	out	0x3f, r0	; 63
    25ba:	81 e0       	ldi	r24, 0x01	; 1
    25bc:	56 c0       	rjmp	.+172    	; 0x266a <xQueueGenericSend+0x11a>
    25be:	8e 81       	ldd	r24, Y+6	; 0x06
    25c0:	9f 81       	ldd	r25, Y+7	; 0x07
    25c2:	a8 85       	ldd	r26, Y+8	; 0x08
    25c4:	b9 85       	ldd	r27, Y+9	; 0x09
    25c6:	89 2b       	or	r24, r25
    25c8:	8a 2b       	or	r24, r26
    25ca:	8b 2b       	or	r24, r27
    25cc:	21 f4       	brne	.+8      	; 0x25d6 <xQueueGenericSend+0x86>
    25ce:	0f 90       	pop	r0
    25d0:	0f be       	out	0x3f, r0	; 63
    25d2:	80 e0       	ldi	r24, 0x00	; 0
    25d4:	4a c0       	rjmp	.+148    	; 0x266a <xQueueGenericSend+0x11a>
    25d6:	11 11       	cpse	r17, r1
    25d8:	05 c0       	rjmp	.+10     	; 0x25e4 <xQueueGenericSend+0x94>
    25da:	ce 01       	movw	r24, r28
    25dc:	01 96       	adiw	r24, 0x01	; 1
    25de:	0e 94 a8 18 	call	0x3150	; 0x3150 <vTaskSetTimeOutState>
    25e2:	11 e0       	ldi	r17, 0x01	; 1
    25e4:	0f 90       	pop	r0
    25e6:	0f be       	out	0x3f, r0	; 63
    25e8:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <vTaskSuspendAll>
    25ec:	0f b6       	in	r0, 0x3f	; 63
    25ee:	f8 94       	cli
    25f0:	0f 92       	push	r0
    25f2:	f7 01       	movw	r30, r14
    25f4:	81 a1       	ldd	r24, Z+33	; 0x21
    25f6:	8f 3f       	cpi	r24, 0xFF	; 255
    25f8:	09 f4       	brne	.+2      	; 0x25fc <xQueueGenericSend+0xac>
    25fa:	11 a2       	std	Z+33, r1	; 0x21
    25fc:	f7 01       	movw	r30, r14
    25fe:	82 a1       	ldd	r24, Z+34	; 0x22
    2600:	8f 3f       	cpi	r24, 0xFF	; 255
    2602:	09 f4       	brne	.+2      	; 0x2606 <xQueueGenericSend+0xb6>
    2604:	12 a2       	std	Z+34, r1	; 0x22
    2606:	0f 90       	pop	r0
    2608:	0f be       	out	0x3f, r0	; 63
    260a:	be 01       	movw	r22, r28
    260c:	6a 5f       	subi	r22, 0xFA	; 250
    260e:	7f 4f       	sbci	r23, 0xFF	; 255
    2610:	ce 01       	movw	r24, r28
    2612:	01 96       	adiw	r24, 0x01	; 1
    2614:	0e 94 b9 18 	call	0x3172	; 0x3172 <xTaskCheckForTimeOut>
    2618:	81 11       	cpse	r24, r1
    261a:	21 c0       	rjmp	.+66     	; 0x265e <xQueueGenericSend+0x10e>
    261c:	0f b6       	in	r0, 0x3f	; 63
    261e:	f8 94       	cli
    2620:	0f 92       	push	r0
    2622:	f7 01       	movw	r30, r14
    2624:	96 8d       	ldd	r25, Z+30	; 0x1e
    2626:	0f 90       	pop	r0
    2628:	0f be       	out	0x3f, r0	; 63
    262a:	87 8d       	ldd	r24, Z+31	; 0x1f
    262c:	98 13       	cpse	r25, r24
    262e:	11 c0       	rjmp	.+34     	; 0x2652 <xQueueGenericSend+0x102>
    2630:	4e 81       	ldd	r20, Y+6	; 0x06
    2632:	5f 81       	ldd	r21, Y+7	; 0x07
    2634:	68 85       	ldd	r22, Y+8	; 0x08
    2636:	79 85       	ldd	r23, Y+9	; 0x09
    2638:	c6 01       	movw	r24, r12
    263a:	0e 94 3f 18 	call	0x307e	; 0x307e <vTaskPlaceOnEventList>
    263e:	c7 01       	movw	r24, r14
    2640:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <prvUnlockQueue>
    2644:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    2648:	81 11       	cpse	r24, r1
    264a:	9c cf       	rjmp	.-200    	; 0x2584 <xQueueGenericSend+0x34>
    264c:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    2650:	99 cf       	rjmp	.-206    	; 0x2584 <xQueueGenericSend+0x34>
    2652:	c7 01       	movw	r24, r14
    2654:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <prvUnlockQueue>
    2658:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    265c:	93 cf       	rjmp	.-218    	; 0x2584 <xQueueGenericSend+0x34>
    265e:	c7 01       	movw	r24, r14
    2660:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <prvUnlockQueue>
    2664:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    2668:	80 e0       	ldi	r24, 0x00	; 0
    266a:	29 96       	adiw	r28, 0x09	; 9
    266c:	cd bf       	out	0x3d, r28	; 61
    266e:	de bf       	out	0x3e, r29	; 62
    2670:	df 91       	pop	r29
    2672:	cf 91       	pop	r28
    2674:	1f 91       	pop	r17
    2676:	0f 91       	pop	r16
    2678:	ff 90       	pop	r15
    267a:	ef 90       	pop	r14
    267c:	df 90       	pop	r13
    267e:	cf 90       	pop	r12
    2680:	bf 90       	pop	r11
    2682:	af 90       	pop	r10
    2684:	08 95       	ret

00002686 <xQueueGenericReceive>:
    2686:	af 92       	push	r10
    2688:	bf 92       	push	r11
    268a:	cf 92       	push	r12
    268c:	df 92       	push	r13
    268e:	ef 92       	push	r14
    2690:	ff 92       	push	r15
    2692:	0f 93       	push	r16
    2694:	1f 93       	push	r17
    2696:	cf 93       	push	r28
    2698:	df 93       	push	r29
    269a:	cd b7       	in	r28, 0x3d	; 61
    269c:	de b7       	in	r29, 0x3e	; 62
    269e:	29 97       	sbiw	r28, 0x09	; 9
    26a0:	cd bf       	out	0x3d, r28	; 61
    26a2:	de bf       	out	0x3e, r29	; 62
    26a4:	7c 01       	movw	r14, r24
    26a6:	5b 01       	movw	r10, r22
    26a8:	2e 83       	std	Y+6, r18	; 0x06
    26aa:	3f 83       	std	Y+7, r19	; 0x07
    26ac:	48 87       	std	Y+8, r20	; 0x08
    26ae:	59 87       	std	Y+9, r21	; 0x09
    26b0:	10 e0       	ldi	r17, 0x00	; 0
    26b2:	6c 01       	movw	r12, r24
    26b4:	83 e1       	ldi	r24, 0x13	; 19
    26b6:	c8 0e       	add	r12, r24
    26b8:	d1 1c       	adc	r13, r1
    26ba:	0f b6       	in	r0, 0x3f	; 63
    26bc:	f8 94       	cli
    26be:	0f 92       	push	r0
    26c0:	f7 01       	movw	r30, r14
    26c2:	86 8d       	ldd	r24, Z+30	; 0x1e
    26c4:	88 23       	and	r24, r24
    26c6:	99 f1       	breq	.+102    	; 0x272e <xQueueGenericReceive+0xa8>
    26c8:	c6 80       	ldd	r12, Z+6	; 0x06
    26ca:	d7 80       	ldd	r13, Z+7	; 0x07
    26cc:	b5 01       	movw	r22, r10
    26ce:	c7 01       	movw	r24, r14
    26d0:	0e 94 da 11 	call	0x23b4	; 0x23b4 <prvCopyDataFromQueue>
    26d4:	01 11       	cpse	r16, r1
    26d6:	1a c0       	rjmp	.+52     	; 0x270c <xQueueGenericReceive+0x86>
    26d8:	f7 01       	movw	r30, r14
    26da:	86 8d       	ldd	r24, Z+30	; 0x1e
    26dc:	81 50       	subi	r24, 0x01	; 1
    26de:	86 8f       	std	Z+30, r24	; 0x1e
    26e0:	80 81       	ld	r24, Z
    26e2:	91 81       	ldd	r25, Z+1	; 0x01
    26e4:	89 2b       	or	r24, r25
    26e6:	29 f4       	brne	.+10     	; 0x26f2 <xQueueGenericReceive+0x6c>
    26e8:	0e 94 43 19 	call	0x3286	; 0x3286 <xTaskGetCurrentTaskHandle>
    26ec:	f7 01       	movw	r30, r14
    26ee:	82 83       	std	Z+2, r24	; 0x02
    26f0:	93 83       	std	Z+3, r25	; 0x03
    26f2:	f7 01       	movw	r30, r14
    26f4:	80 85       	ldd	r24, Z+8	; 0x08
    26f6:	88 23       	and	r24, r24
    26f8:	b1 f0       	breq	.+44     	; 0x2726 <xQueueGenericReceive+0xa0>
    26fa:	c7 01       	movw	r24, r14
    26fc:	08 96       	adiw	r24, 0x08	; 8
    26fe:	0e 94 69 18 	call	0x30d2	; 0x30d2 <xTaskRemoveFromEventList>
    2702:	81 30       	cpi	r24, 0x01	; 1
    2704:	81 f4       	brne	.+32     	; 0x2726 <xQueueGenericReceive+0xa0>
    2706:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    270a:	0d c0       	rjmp	.+26     	; 0x2726 <xQueueGenericReceive+0xa0>
    270c:	f7 01       	movw	r30, r14
    270e:	c6 82       	std	Z+6, r12	; 0x06
    2710:	d7 82       	std	Z+7, r13	; 0x07
    2712:	83 89       	ldd	r24, Z+19	; 0x13
    2714:	88 23       	and	r24, r24
    2716:	39 f0       	breq	.+14     	; 0x2726 <xQueueGenericReceive+0xa0>
    2718:	c7 01       	movw	r24, r14
    271a:	43 96       	adiw	r24, 0x13	; 19
    271c:	0e 94 69 18 	call	0x30d2	; 0x30d2 <xTaskRemoveFromEventList>
    2720:	81 11       	cpse	r24, r1
    2722:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    2726:	0f 90       	pop	r0
    2728:	0f be       	out	0x3f, r0	; 63
    272a:	81 e0       	ldi	r24, 0x01	; 1
    272c:	62 c0       	rjmp	.+196    	; 0x27f2 <xQueueGenericReceive+0x16c>
    272e:	8e 81       	ldd	r24, Y+6	; 0x06
    2730:	9f 81       	ldd	r25, Y+7	; 0x07
    2732:	a8 85       	ldd	r26, Y+8	; 0x08
    2734:	b9 85       	ldd	r27, Y+9	; 0x09
    2736:	89 2b       	or	r24, r25
    2738:	8a 2b       	or	r24, r26
    273a:	8b 2b       	or	r24, r27
    273c:	21 f4       	brne	.+8      	; 0x2746 <xQueueGenericReceive+0xc0>
    273e:	0f 90       	pop	r0
    2740:	0f be       	out	0x3f, r0	; 63
    2742:	80 e0       	ldi	r24, 0x00	; 0
    2744:	56 c0       	rjmp	.+172    	; 0x27f2 <xQueueGenericReceive+0x16c>
    2746:	11 11       	cpse	r17, r1
    2748:	05 c0       	rjmp	.+10     	; 0x2754 <xQueueGenericReceive+0xce>
    274a:	ce 01       	movw	r24, r28
    274c:	01 96       	adiw	r24, 0x01	; 1
    274e:	0e 94 a8 18 	call	0x3150	; 0x3150 <vTaskSetTimeOutState>
    2752:	11 e0       	ldi	r17, 0x01	; 1
    2754:	0f 90       	pop	r0
    2756:	0f be       	out	0x3f, r0	; 63
    2758:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <vTaskSuspendAll>
    275c:	0f b6       	in	r0, 0x3f	; 63
    275e:	f8 94       	cli
    2760:	0f 92       	push	r0
    2762:	f7 01       	movw	r30, r14
    2764:	81 a1       	ldd	r24, Z+33	; 0x21
    2766:	8f 3f       	cpi	r24, 0xFF	; 255
    2768:	09 f4       	brne	.+2      	; 0x276c <xQueueGenericReceive+0xe6>
    276a:	11 a2       	std	Z+33, r1	; 0x21
    276c:	f7 01       	movw	r30, r14
    276e:	82 a1       	ldd	r24, Z+34	; 0x22
    2770:	8f 3f       	cpi	r24, 0xFF	; 255
    2772:	09 f4       	brne	.+2      	; 0x2776 <xQueueGenericReceive+0xf0>
    2774:	12 a2       	std	Z+34, r1	; 0x22
    2776:	0f 90       	pop	r0
    2778:	0f be       	out	0x3f, r0	; 63
    277a:	be 01       	movw	r22, r28
    277c:	6a 5f       	subi	r22, 0xFA	; 250
    277e:	7f 4f       	sbci	r23, 0xFF	; 255
    2780:	ce 01       	movw	r24, r28
    2782:	01 96       	adiw	r24, 0x01	; 1
    2784:	0e 94 b9 18 	call	0x3172	; 0x3172 <xTaskCheckForTimeOut>
    2788:	81 11       	cpse	r24, r1
    278a:	2d c0       	rjmp	.+90     	; 0x27e6 <xQueueGenericReceive+0x160>
    278c:	0f b6       	in	r0, 0x3f	; 63
    278e:	f8 94       	cli
    2790:	0f 92       	push	r0
    2792:	f7 01       	movw	r30, r14
    2794:	86 8d       	ldd	r24, Z+30	; 0x1e
    2796:	0f 90       	pop	r0
    2798:	0f be       	out	0x3f, r0	; 63
    279a:	81 11       	cpse	r24, r1
    279c:	1e c0       	rjmp	.+60     	; 0x27da <xQueueGenericReceive+0x154>
    279e:	80 81       	ld	r24, Z
    27a0:	91 81       	ldd	r25, Z+1	; 0x01
    27a2:	89 2b       	or	r24, r25
    27a4:	49 f4       	brne	.+18     	; 0x27b8 <xQueueGenericReceive+0x132>
    27a6:	0f b6       	in	r0, 0x3f	; 63
    27a8:	f8 94       	cli
    27aa:	0f 92       	push	r0
    27ac:	82 81       	ldd	r24, Z+2	; 0x02
    27ae:	93 81       	ldd	r25, Z+3	; 0x03
    27b0:	0e 94 48 19 	call	0x3290	; 0x3290 <vTaskPriorityInherit>
    27b4:	0f 90       	pop	r0
    27b6:	0f be       	out	0x3f, r0	; 63
    27b8:	4e 81       	ldd	r20, Y+6	; 0x06
    27ba:	5f 81       	ldd	r21, Y+7	; 0x07
    27bc:	68 85       	ldd	r22, Y+8	; 0x08
    27be:	79 85       	ldd	r23, Y+9	; 0x09
    27c0:	c6 01       	movw	r24, r12
    27c2:	0e 94 3f 18 	call	0x307e	; 0x307e <vTaskPlaceOnEventList>
    27c6:	c7 01       	movw	r24, r14
    27c8:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <prvUnlockQueue>
    27cc:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    27d0:	81 11       	cpse	r24, r1
    27d2:	73 cf       	rjmp	.-282    	; 0x26ba <xQueueGenericReceive+0x34>
    27d4:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    27d8:	70 cf       	rjmp	.-288    	; 0x26ba <xQueueGenericReceive+0x34>
    27da:	c7 01       	movw	r24, r14
    27dc:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <prvUnlockQueue>
    27e0:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    27e4:	6a cf       	rjmp	.-300    	; 0x26ba <xQueueGenericReceive+0x34>
    27e6:	c7 01       	movw	r24, r14
    27e8:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <prvUnlockQueue>
    27ec:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    27f0:	80 e0       	ldi	r24, 0x00	; 0
    27f2:	29 96       	adiw	r28, 0x09	; 9
    27f4:	cd bf       	out	0x3d, r28	; 61
    27f6:	de bf       	out	0x3e, r29	; 62
    27f8:	df 91       	pop	r29
    27fa:	cf 91       	pop	r28
    27fc:	1f 91       	pop	r17
    27fe:	0f 91       	pop	r16
    2800:	ff 90       	pop	r15
    2802:	ef 90       	pop	r14
    2804:	df 90       	pop	r13
    2806:	cf 90       	pop	r12
    2808:	bf 90       	pop	r11
    280a:	af 90       	pop	r10
    280c:	08 95       	ret

0000280e <uxQueueMessagesWaiting>:
    280e:	0f b6       	in	r0, 0x3f	; 63
    2810:	f8 94       	cli
    2812:	0f 92       	push	r0
    2814:	fc 01       	movw	r30, r24
    2816:	86 8d       	ldd	r24, Z+30	; 0x1e
    2818:	0f 90       	pop	r0
    281a:	0f be       	out	0x3f, r0	; 63
    281c:	08 95       	ret

0000281e <prvIdleTask>:
    281e:	c8 e7       	ldi	r28, 0x78	; 120
    2820:	d1 e3       	ldi	r29, 0x31	; 49
    2822:	88 81       	ld	r24, Y
    2824:	82 30       	cpi	r24, 0x02	; 2
    2826:	e8 f3       	brcs	.-6      	; 0x2822 <prvIdleTask+0x4>
    2828:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    282c:	fa cf       	rjmp	.-12     	; 0x2822 <prvIdleTask+0x4>

0000282e <prvAddCurrentTaskToDelayedList>:
    282e:	cf 92       	push	r12
    2830:	df 92       	push	r13
    2832:	ef 92       	push	r14
    2834:	ff 92       	push	r15
    2836:	6b 01       	movw	r12, r22
    2838:	7c 01       	movw	r14, r24
    283a:	e0 91 a4 31 	lds	r30, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    283e:	f0 91 a5 31 	lds	r31, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2842:	62 83       	std	Z+2, r22	; 0x02
    2844:	73 83       	std	Z+3, r23	; 0x03
    2846:	84 83       	std	Z+4, r24	; 0x04
    2848:	95 83       	std	Z+5, r25	; 0x05
    284a:	80 91 4c 31 	lds	r24, 0x314C	; 0x80314c <xTickCount>
    284e:	90 91 4d 31 	lds	r25, 0x314D	; 0x80314d <xTickCount+0x1>
    2852:	a0 91 4e 31 	lds	r26, 0x314E	; 0x80314e <xTickCount+0x2>
    2856:	b0 91 4f 31 	lds	r27, 0x314F	; 0x80314f <xTickCount+0x3>
    285a:	c8 16       	cp	r12, r24
    285c:	d9 06       	cpc	r13, r25
    285e:	ea 06       	cpc	r14, r26
    2860:	fb 06       	cpc	r15, r27
    2862:	68 f4       	brcc	.+26     	; 0x287e <prvAddCurrentTaskToDelayedList+0x50>
    2864:	60 91 a4 31 	lds	r22, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2868:	70 91 a5 31 	lds	r23, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    286c:	80 91 5e 31 	lds	r24, 0x315E	; 0x80315e <pxOverflowDelayedTaskList>
    2870:	90 91 5f 31 	lds	r25, 0x315F	; 0x80315f <pxOverflowDelayedTaskList+0x1>
    2874:	6e 5f       	subi	r22, 0xFE	; 254
    2876:	7f 4f       	sbci	r23, 0xFF	; 255
    2878:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <vListInsert>
    287c:	21 c0       	rjmp	.+66     	; 0x28c0 <prvAddCurrentTaskToDelayedList+0x92>
    287e:	60 91 a4 31 	lds	r22, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2882:	70 91 a5 31 	lds	r23, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2886:	80 91 60 31 	lds	r24, 0x3160	; 0x803160 <pxDelayedTaskList>
    288a:	90 91 61 31 	lds	r25, 0x3161	; 0x803161 <pxDelayedTaskList+0x1>
    288e:	6e 5f       	subi	r22, 0xFE	; 254
    2890:	7f 4f       	sbci	r23, 0xFF	; 255
    2892:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <vListInsert>
    2896:	80 91 02 20 	lds	r24, 0x2002	; 0x802002 <xNextTaskUnblockTime>
    289a:	90 91 03 20 	lds	r25, 0x2003	; 0x802003 <xNextTaskUnblockTime+0x1>
    289e:	a0 91 04 20 	lds	r26, 0x2004	; 0x802004 <xNextTaskUnblockTime+0x2>
    28a2:	b0 91 05 20 	lds	r27, 0x2005	; 0x802005 <xNextTaskUnblockTime+0x3>
    28a6:	c8 16       	cp	r12, r24
    28a8:	d9 06       	cpc	r13, r25
    28aa:	ea 06       	cpc	r14, r26
    28ac:	fb 06       	cpc	r15, r27
    28ae:	40 f4       	brcc	.+16     	; 0x28c0 <prvAddCurrentTaskToDelayedList+0x92>
    28b0:	c0 92 02 20 	sts	0x2002, r12	; 0x802002 <xNextTaskUnblockTime>
    28b4:	d0 92 03 20 	sts	0x2003, r13	; 0x802003 <xNextTaskUnblockTime+0x1>
    28b8:	e0 92 04 20 	sts	0x2004, r14	; 0x802004 <xNextTaskUnblockTime+0x2>
    28bc:	f0 92 05 20 	sts	0x2005, r15	; 0x802005 <xNextTaskUnblockTime+0x3>
    28c0:	ff 90       	pop	r15
    28c2:	ef 90       	pop	r14
    28c4:	df 90       	pop	r13
    28c6:	cf 90       	pop	r12
    28c8:	08 95       	ret

000028ca <xTaskGenericCreate>:
    28ca:	4f 92       	push	r4
    28cc:	5f 92       	push	r5
    28ce:	6f 92       	push	r6
    28d0:	7f 92       	push	r7
    28d2:	8f 92       	push	r8
    28d4:	9f 92       	push	r9
    28d6:	af 92       	push	r10
    28d8:	bf 92       	push	r11
    28da:	cf 92       	push	r12
    28dc:	df 92       	push	r13
    28de:	ef 92       	push	r14
    28e0:	ff 92       	push	r15
    28e2:	0f 93       	push	r16
    28e4:	1f 93       	push	r17
    28e6:	cf 93       	push	r28
    28e8:	df 93       	push	r29
    28ea:	5c 01       	movw	r10, r24
    28ec:	4b 01       	movw	r8, r22
    28ee:	3a 01       	movw	r6, r20
    28f0:	29 01       	movw	r4, r18
    28f2:	88 e2       	ldi	r24, 0x28	; 40
    28f4:	90 e0       	ldi	r25, 0x00	; 0
    28f6:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <pvPortMalloc>
    28fa:	ec 01       	movw	r28, r24
    28fc:	89 2b       	or	r24, r25
    28fe:	09 f4       	brne	.+2      	; 0x2902 <xTaskGenericCreate+0x38>
    2900:	d4 c0       	rjmp	.+424    	; 0x2aaa <xTaskGenericCreate+0x1e0>
    2902:	c1 14       	cp	r12, r1
    2904:	d1 04       	cpc	r13, r1
    2906:	09 f0       	breq	.+2      	; 0x290a <xTaskGenericCreate+0x40>
    2908:	cc c0       	rjmp	.+408    	; 0x2aa2 <xTaskGenericCreate+0x1d8>
    290a:	c3 01       	movw	r24, r6
    290c:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <pvPortMalloc>
    2910:	8b 8f       	std	Y+27, r24	; 0x1b
    2912:	9c 8f       	std	Y+28, r25	; 0x1c
    2914:	00 97       	sbiw	r24, 0x00	; 0
    2916:	21 f4       	brne	.+8      	; 0x2920 <xTaskGenericCreate+0x56>
    2918:	ce 01       	movw	r24, r28
    291a:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <vPortFree>
    291e:	c5 c0       	rjmp	.+394    	; 0x2aaa <xTaskGenericCreate+0x1e0>
    2920:	a3 01       	movw	r20, r6
    2922:	61 e1       	ldi	r22, 0x11	; 17
    2924:	70 e0       	ldi	r23, 0x00	; 0
    2926:	0e 94 6b 22 	call	0x44d6	; 0x44d6 <memset>
    292a:	93 01       	movw	r18, r6
    292c:	21 50       	subi	r18, 0x01	; 1
    292e:	31 09       	sbc	r19, r1
    2930:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2932:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2934:	3c 01       	movw	r6, r24
    2936:	62 0e       	add	r6, r18
    2938:	73 1e       	adc	r7, r19
    293a:	4a e0       	ldi	r20, 0x0A	; 10
    293c:	50 e0       	ldi	r21, 0x00	; 0
    293e:	b4 01       	movw	r22, r8
    2940:	ce 01       	movw	r24, r28
    2942:	4d 96       	adiw	r24, 0x1d	; 29
    2944:	0e 94 72 22 	call	0x44e4	; 0x44e4 <strncpy>
    2948:	1e a2       	std	Y+38, r1	; 0x26
    294a:	10 2f       	mov	r17, r16
    294c:	04 30       	cpi	r16, 0x04	; 4
    294e:	08 f0       	brcs	.+2      	; 0x2952 <xTaskGenericCreate+0x88>
    2950:	13 e0       	ldi	r17, 0x03	; 3
    2952:	1a 8f       	std	Y+26, r17	; 0x1a
    2954:	1f a3       	std	Y+39, r17	; 0x27
    2956:	6e 01       	movw	r12, r28
    2958:	22 e0       	ldi	r18, 0x02	; 2
    295a:	c2 0e       	add	r12, r18
    295c:	d1 1c       	adc	r13, r1
    295e:	c6 01       	movw	r24, r12
    2960:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <vListInitialiseItem>
    2964:	ce 01       	movw	r24, r28
    2966:	0e 96       	adiw	r24, 0x0e	; 14
    2968:	0e 94 6f 0f 	call	0x1ede	; 0x1ede <vListInitialiseItem>
    296c:	ca 87       	std	Y+10, r28	; 0x0a
    296e:	db 87       	std	Y+11, r29	; 0x0b
    2970:	84 e0       	ldi	r24, 0x04	; 4
    2972:	90 e0       	ldi	r25, 0x00	; 0
    2974:	a0 e0       	ldi	r26, 0x00	; 0
    2976:	b0 e0       	ldi	r27, 0x00	; 0
    2978:	81 1b       	sub	r24, r17
    297a:	91 09       	sbc	r25, r1
    297c:	a1 09       	sbc	r26, r1
    297e:	b1 09       	sbc	r27, r1
    2980:	8e 87       	std	Y+14, r24	; 0x0e
    2982:	9f 87       	std	Y+15, r25	; 0x0f
    2984:	a8 8b       	std	Y+16, r26	; 0x10
    2986:	b9 8b       	std	Y+17, r27	; 0x11
    2988:	ce 8b       	std	Y+22, r28	; 0x16
    298a:	df 8b       	std	Y+23, r29	; 0x17
    298c:	a2 01       	movw	r20, r4
    298e:	b5 01       	movw	r22, r10
    2990:	c3 01       	movw	r24, r6
    2992:	0e 94 0b 10 	call	0x2016	; 0x2016 <pxPortInitialiseStack>
    2996:	88 83       	st	Y, r24
    2998:	99 83       	std	Y+1, r25	; 0x01
    299a:	e1 14       	cp	r14, r1
    299c:	f1 04       	cpc	r15, r1
    299e:	19 f0       	breq	.+6      	; 0x29a6 <xTaskGenericCreate+0xdc>
    29a0:	f7 01       	movw	r30, r14
    29a2:	c0 83       	st	Z, r28
    29a4:	d1 83       	std	Z+1, r29	; 0x01
    29a6:	0f b6       	in	r0, 0x3f	; 63
    29a8:	f8 94       	cli
    29aa:	0f 92       	push	r0
    29ac:	80 91 50 31 	lds	r24, 0x3150	; 0x803150 <uxCurrentNumberOfTasks>
    29b0:	8f 5f       	subi	r24, 0xFF	; 255
    29b2:	80 93 50 31 	sts	0x3150, r24	; 0x803150 <uxCurrentNumberOfTasks>
    29b6:	80 91 a4 31 	lds	r24, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    29ba:	90 91 a5 31 	lds	r25, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    29be:	89 2b       	or	r24, r25
    29c0:	89 f5       	brne	.+98     	; 0x2a24 <xTaskGenericCreate+0x15a>
    29c2:	c0 93 a4 31 	sts	0x31A4, r28	; 0x8031a4 <pxCurrentTCB>
    29c6:	d0 93 a5 31 	sts	0x31A5, r29	; 0x8031a5 <pxCurrentTCB+0x1>
    29ca:	80 91 50 31 	lds	r24, 0x3150	; 0x803150 <uxCurrentNumberOfTasks>
    29ce:	81 30       	cpi	r24, 0x01	; 1
    29d0:	c1 f5       	brne	.+112    	; 0x2a42 <xTaskGenericCreate+0x178>
    29d2:	88 e7       	ldi	r24, 0x78	; 120
    29d4:	91 e3       	ldi	r25, 0x31	; 49
    29d6:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <vListInitialise>
    29da:	83 e8       	ldi	r24, 0x83	; 131
    29dc:	91 e3       	ldi	r25, 0x31	; 49
    29de:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <vListInitialise>
    29e2:	8e e8       	ldi	r24, 0x8E	; 142
    29e4:	91 e3       	ldi	r25, 0x31	; 49
    29e6:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <vListInitialise>
    29ea:	89 e9       	ldi	r24, 0x99	; 153
    29ec:	91 e3       	ldi	r25, 0x31	; 49
    29ee:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <vListInitialise>
    29f2:	8d e6       	ldi	r24, 0x6D	; 109
    29f4:	91 e3       	ldi	r25, 0x31	; 49
    29f6:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <vListInitialise>
    29fa:	82 e6       	ldi	r24, 0x62	; 98
    29fc:	91 e3       	ldi	r25, 0x31	; 49
    29fe:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <vListInitialise>
    2a02:	83 e5       	ldi	r24, 0x53	; 83
    2a04:	91 e3       	ldi	r25, 0x31	; 49
    2a06:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <vListInitialise>
    2a0a:	8d e6       	ldi	r24, 0x6D	; 109
    2a0c:	91 e3       	ldi	r25, 0x31	; 49
    2a0e:	80 93 60 31 	sts	0x3160, r24	; 0x803160 <pxDelayedTaskList>
    2a12:	90 93 61 31 	sts	0x3161, r25	; 0x803161 <pxDelayedTaskList+0x1>
    2a16:	82 e6       	ldi	r24, 0x62	; 98
    2a18:	91 e3       	ldi	r25, 0x31	; 49
    2a1a:	80 93 5e 31 	sts	0x315E, r24	; 0x80315e <pxOverflowDelayedTaskList>
    2a1e:	90 93 5f 31 	sts	0x315F, r25	; 0x80315f <pxOverflowDelayedTaskList+0x1>
    2a22:	0f c0       	rjmp	.+30     	; 0x2a42 <xTaskGenericCreate+0x178>
    2a24:	80 91 49 31 	lds	r24, 0x3149	; 0x803149 <xSchedulerRunning>
    2a28:	81 11       	cpse	r24, r1
    2a2a:	0b c0       	rjmp	.+22     	; 0x2a42 <xTaskGenericCreate+0x178>
    2a2c:	e0 91 a4 31 	lds	r30, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2a30:	f0 91 a5 31 	lds	r31, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2a34:	82 8d       	ldd	r24, Z+26	; 0x1a
    2a36:	08 17       	cp	r16, r24
    2a38:	20 f0       	brcs	.+8      	; 0x2a42 <xTaskGenericCreate+0x178>
    2a3a:	c0 93 a4 31 	sts	0x31A4, r28	; 0x8031a4 <pxCurrentTCB>
    2a3e:	d0 93 a5 31 	sts	0x31A5, r29	; 0x8031a5 <pxCurrentTCB+0x1>
    2a42:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2a44:	90 91 4b 31 	lds	r25, 0x314B	; 0x80314b <uxTopUsedPriority>
    2a48:	98 17       	cp	r25, r24
    2a4a:	10 f4       	brcc	.+4      	; 0x2a50 <xTaskGenericCreate+0x186>
    2a4c:	80 93 4b 31 	sts	0x314B, r24	; 0x80314b <uxTopUsedPriority>
    2a50:	90 91 44 31 	lds	r25, 0x3144	; 0x803144 <uxTaskNumber>
    2a54:	9f 5f       	subi	r25, 0xFF	; 255
    2a56:	90 93 44 31 	sts	0x3144, r25	; 0x803144 <uxTaskNumber>
    2a5a:	90 91 4a 31 	lds	r25, 0x314A	; 0x80314a <uxTopReadyPriority>
    2a5e:	98 17       	cp	r25, r24
    2a60:	10 f4       	brcc	.+4      	; 0x2a66 <xTaskGenericCreate+0x19c>
    2a62:	80 93 4a 31 	sts	0x314A, r24	; 0x80314a <uxTopReadyPriority>
    2a66:	fb e0       	ldi	r31, 0x0B	; 11
    2a68:	8f 9f       	mul	r24, r31
    2a6a:	c0 01       	movw	r24, r0
    2a6c:	11 24       	eor	r1, r1
    2a6e:	b6 01       	movw	r22, r12
    2a70:	88 58       	subi	r24, 0x88	; 136
    2a72:	9e 4c       	sbci	r25, 0xCE	; 206
    2a74:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <vListInsertEnd>
    2a78:	0f 90       	pop	r0
    2a7a:	0f be       	out	0x3f, r0	; 63
    2a7c:	80 91 49 31 	lds	r24, 0x3149	; 0x803149 <xSchedulerRunning>
    2a80:	88 23       	and	r24, r24
    2a82:	59 f0       	breq	.+22     	; 0x2a9a <xTaskGenericCreate+0x1d0>
    2a84:	e0 91 a4 31 	lds	r30, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2a88:	f0 91 a5 31 	lds	r31, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2a8c:	82 8d       	ldd	r24, Z+26	; 0x1a
    2a8e:	80 17       	cp	r24, r16
    2a90:	30 f4       	brcc	.+12     	; 0x2a9e <xTaskGenericCreate+0x1d4>
    2a92:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    2a96:	81 e0       	ldi	r24, 0x01	; 1
    2a98:	09 c0       	rjmp	.+18     	; 0x2aac <xTaskGenericCreate+0x1e2>
    2a9a:	81 e0       	ldi	r24, 0x01	; 1
    2a9c:	07 c0       	rjmp	.+14     	; 0x2aac <xTaskGenericCreate+0x1e2>
    2a9e:	81 e0       	ldi	r24, 0x01	; 1
    2aa0:	05 c0       	rjmp	.+10     	; 0x2aac <xTaskGenericCreate+0x1e2>
    2aa2:	cb 8e       	std	Y+27, r12	; 0x1b
    2aa4:	dc 8e       	std	Y+28, r13	; 0x1c
    2aa6:	c6 01       	movw	r24, r12
    2aa8:	3b cf       	rjmp	.-394    	; 0x2920 <xTaskGenericCreate+0x56>
    2aaa:	8f ef       	ldi	r24, 0xFF	; 255
    2aac:	df 91       	pop	r29
    2aae:	cf 91       	pop	r28
    2ab0:	1f 91       	pop	r17
    2ab2:	0f 91       	pop	r16
    2ab4:	ff 90       	pop	r15
    2ab6:	ef 90       	pop	r14
    2ab8:	df 90       	pop	r13
    2aba:	cf 90       	pop	r12
    2abc:	bf 90       	pop	r11
    2abe:	af 90       	pop	r10
    2ac0:	9f 90       	pop	r9
    2ac2:	8f 90       	pop	r8
    2ac4:	7f 90       	pop	r7
    2ac6:	6f 90       	pop	r6
    2ac8:	5f 90       	pop	r5
    2aca:	4f 90       	pop	r4
    2acc:	08 95       	ret

00002ace <uxTaskPriorityGet>:
    2ace:	0f b6       	in	r0, 0x3f	; 63
    2ad0:	f8 94       	cli
    2ad2:	0f 92       	push	r0
    2ad4:	00 97       	sbiw	r24, 0x00	; 0
    2ad6:	21 f4       	brne	.+8      	; 0x2ae0 <uxTaskPriorityGet+0x12>
    2ad8:	80 91 a4 31 	lds	r24, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2adc:	90 91 a5 31 	lds	r25, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2ae0:	0f 90       	pop	r0
    2ae2:	0f be       	out	0x3f, r0	; 63
    2ae4:	fc 01       	movw	r30, r24
    2ae6:	82 8d       	ldd	r24, Z+26	; 0x1a
    2ae8:	08 95       	ret

00002aea <vTaskStartScheduler>:
    2aea:	af 92       	push	r10
    2aec:	bf 92       	push	r11
    2aee:	cf 92       	push	r12
    2af0:	df 92       	push	r13
    2af2:	ef 92       	push	r14
    2af4:	ff 92       	push	r15
    2af6:	0f 93       	push	r16
    2af8:	a1 2c       	mov	r10, r1
    2afa:	b1 2c       	mov	r11, r1
    2afc:	c1 2c       	mov	r12, r1
    2afe:	d1 2c       	mov	r13, r1
    2b00:	0f 2e       	mov	r0, r31
    2b02:	f1 e5       	ldi	r31, 0x51	; 81
    2b04:	ef 2e       	mov	r14, r31
    2b06:	f1 e3       	ldi	r31, 0x31	; 49
    2b08:	ff 2e       	mov	r15, r31
    2b0a:	f0 2d       	mov	r31, r0
    2b0c:	00 e0       	ldi	r16, 0x00	; 0
    2b0e:	20 e0       	ldi	r18, 0x00	; 0
    2b10:	30 e0       	ldi	r19, 0x00	; 0
    2b12:	44 e6       	ldi	r20, 0x64	; 100
    2b14:	50 e0       	ldi	r21, 0x00	; 0
    2b16:	6b e7       	ldi	r22, 0x7B	; 123
    2b18:	70 e2       	ldi	r23, 0x20	; 32
    2b1a:	8f e0       	ldi	r24, 0x0F	; 15
    2b1c:	94 e1       	ldi	r25, 0x14	; 20
    2b1e:	0e 94 65 14 	call	0x28ca	; 0x28ca <xTaskGenericCreate>
    2b22:	81 30       	cpi	r24, 0x01	; 1
    2b24:	69 f4       	brne	.+26     	; 0x2b40 <vTaskStartScheduler+0x56>
    2b26:	f8 94       	cli
    2b28:	80 93 49 31 	sts	0x3149, r24	; 0x803149 <xSchedulerRunning>
    2b2c:	10 92 4c 31 	sts	0x314C, r1	; 0x80314c <xTickCount>
    2b30:	10 92 4d 31 	sts	0x314D, r1	; 0x80314d <xTickCount+0x1>
    2b34:	10 92 4e 31 	sts	0x314E, r1	; 0x80314e <xTickCount+0x2>
    2b38:	10 92 4f 31 	sts	0x314F, r1	; 0x80314f <xTickCount+0x3>
    2b3c:	0e 94 81 10 	call	0x2102	; 0x2102 <xPortStartScheduler>
    2b40:	0f 91       	pop	r16
    2b42:	ff 90       	pop	r15
    2b44:	ef 90       	pop	r14
    2b46:	df 90       	pop	r13
    2b48:	cf 90       	pop	r12
    2b4a:	bf 90       	pop	r11
    2b4c:	af 90       	pop	r10
    2b4e:	08 95       	ret

00002b50 <vTaskSuspendAll>:
    2b50:	80 91 48 31 	lds	r24, 0x3148	; 0x803148 <uxSchedulerSuspended>
    2b54:	8f 5f       	subi	r24, 0xFF	; 255
    2b56:	80 93 48 31 	sts	0x3148, r24	; 0x803148 <uxSchedulerSuspended>
    2b5a:	08 95       	ret

00002b5c <xTaskGetTickCount>:
    2b5c:	0f b6       	in	r0, 0x3f	; 63
    2b5e:	f8 94       	cli
    2b60:	0f 92       	push	r0
    2b62:	60 91 4c 31 	lds	r22, 0x314C	; 0x80314c <xTickCount>
    2b66:	70 91 4d 31 	lds	r23, 0x314D	; 0x80314d <xTickCount+0x1>
    2b6a:	80 91 4e 31 	lds	r24, 0x314E	; 0x80314e <xTickCount+0x2>
    2b6e:	90 91 4f 31 	lds	r25, 0x314F	; 0x80314f <xTickCount+0x3>
    2b72:	0f 90       	pop	r0
    2b74:	0f be       	out	0x3f, r0	; 63
    2b76:	08 95       	ret

00002b78 <pcTaskGetTaskName>:
    2b78:	00 97       	sbiw	r24, 0x00	; 0
    2b7a:	21 f4       	brne	.+8      	; 0x2b84 <pcTaskGetTaskName+0xc>
    2b7c:	80 91 a4 31 	lds	r24, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2b80:	90 91 a5 31 	lds	r25, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2b84:	4d 96       	adiw	r24, 0x1d	; 29
    2b86:	08 95       	ret

00002b88 <vTaskIncrementTick>:
    2b88:	ff 92       	push	r15
    2b8a:	0f 93       	push	r16
    2b8c:	1f 93       	push	r17
    2b8e:	cf 93       	push	r28
    2b90:	df 93       	push	r29
    2b92:	80 91 48 31 	lds	r24, 0x3148	; 0x803148 <uxSchedulerSuspended>
    2b96:	81 11       	cpse	r24, r1
    2b98:	ed c0       	rjmp	.+474    	; 0x2d74 <vTaskIncrementTick+0x1ec>
    2b9a:	80 91 4c 31 	lds	r24, 0x314C	; 0x80314c <xTickCount>
    2b9e:	90 91 4d 31 	lds	r25, 0x314D	; 0x80314d <xTickCount+0x1>
    2ba2:	a0 91 4e 31 	lds	r26, 0x314E	; 0x80314e <xTickCount+0x2>
    2ba6:	b0 91 4f 31 	lds	r27, 0x314F	; 0x80314f <xTickCount+0x3>
    2baa:	01 96       	adiw	r24, 0x01	; 1
    2bac:	a1 1d       	adc	r26, r1
    2bae:	b1 1d       	adc	r27, r1
    2bb0:	80 93 4c 31 	sts	0x314C, r24	; 0x80314c <xTickCount>
    2bb4:	90 93 4d 31 	sts	0x314D, r25	; 0x80314d <xTickCount+0x1>
    2bb8:	a0 93 4e 31 	sts	0x314E, r26	; 0x80314e <xTickCount+0x2>
    2bbc:	b0 93 4f 31 	sts	0x314F, r27	; 0x80314f <xTickCount+0x3>
    2bc0:	80 91 4c 31 	lds	r24, 0x314C	; 0x80314c <xTickCount>
    2bc4:	90 91 4d 31 	lds	r25, 0x314D	; 0x80314d <xTickCount+0x1>
    2bc8:	a0 91 4e 31 	lds	r26, 0x314E	; 0x80314e <xTickCount+0x2>
    2bcc:	b0 91 4f 31 	lds	r27, 0x314F	; 0x80314f <xTickCount+0x3>
    2bd0:	89 2b       	or	r24, r25
    2bd2:	8a 2b       	or	r24, r26
    2bd4:	8b 2b       	or	r24, r27
    2bd6:	f1 f5       	brne	.+124    	; 0x2c54 <vTaskIncrementTick+0xcc>
    2bd8:	80 91 60 31 	lds	r24, 0x3160	; 0x803160 <pxDelayedTaskList>
    2bdc:	90 91 61 31 	lds	r25, 0x3161	; 0x803161 <pxDelayedTaskList+0x1>
    2be0:	20 91 5e 31 	lds	r18, 0x315E	; 0x80315e <pxOverflowDelayedTaskList>
    2be4:	30 91 5f 31 	lds	r19, 0x315F	; 0x80315f <pxOverflowDelayedTaskList+0x1>
    2be8:	20 93 60 31 	sts	0x3160, r18	; 0x803160 <pxDelayedTaskList>
    2bec:	30 93 61 31 	sts	0x3161, r19	; 0x803161 <pxDelayedTaskList+0x1>
    2bf0:	80 93 5e 31 	sts	0x315E, r24	; 0x80315e <pxOverflowDelayedTaskList>
    2bf4:	90 93 5f 31 	sts	0x315F, r25	; 0x80315f <pxOverflowDelayedTaskList+0x1>
    2bf8:	80 91 45 31 	lds	r24, 0x3145	; 0x803145 <xNumOfOverflows>
    2bfc:	8f 5f       	subi	r24, 0xFF	; 255
    2bfe:	80 93 45 31 	sts	0x3145, r24	; 0x803145 <xNumOfOverflows>
    2c02:	e0 91 60 31 	lds	r30, 0x3160	; 0x803160 <pxDelayedTaskList>
    2c06:	f0 91 61 31 	lds	r31, 0x3161	; 0x803161 <pxDelayedTaskList+0x1>
    2c0a:	80 81       	ld	r24, Z
    2c0c:	81 11       	cpse	r24, r1
    2c0e:	0c c0       	rjmp	.+24     	; 0x2c28 <vTaskIncrementTick+0xa0>
    2c10:	8f ef       	ldi	r24, 0xFF	; 255
    2c12:	9f ef       	ldi	r25, 0xFF	; 255
    2c14:	dc 01       	movw	r26, r24
    2c16:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <xNextTaskUnblockTime>
    2c1a:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <xNextTaskUnblockTime+0x1>
    2c1e:	a0 93 04 20 	sts	0x2004, r26	; 0x802004 <xNextTaskUnblockTime+0x2>
    2c22:	b0 93 05 20 	sts	0x2005, r27	; 0x802005 <xNextTaskUnblockTime+0x3>
    2c26:	16 c0       	rjmp	.+44     	; 0x2c54 <vTaskIncrementTick+0xcc>
    2c28:	e0 91 60 31 	lds	r30, 0x3160	; 0x803160 <pxDelayedTaskList>
    2c2c:	f0 91 61 31 	lds	r31, 0x3161	; 0x803161 <pxDelayedTaskList+0x1>
    2c30:	07 80       	ldd	r0, Z+7	; 0x07
    2c32:	f0 85       	ldd	r31, Z+8	; 0x08
    2c34:	e0 2d       	mov	r30, r0
    2c36:	00 84       	ldd	r0, Z+8	; 0x08
    2c38:	f1 85       	ldd	r31, Z+9	; 0x09
    2c3a:	e0 2d       	mov	r30, r0
    2c3c:	82 81       	ldd	r24, Z+2	; 0x02
    2c3e:	93 81       	ldd	r25, Z+3	; 0x03
    2c40:	a4 81       	ldd	r26, Z+4	; 0x04
    2c42:	b5 81       	ldd	r27, Z+5	; 0x05
    2c44:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <xNextTaskUnblockTime>
    2c48:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <xNextTaskUnblockTime+0x1>
    2c4c:	a0 93 04 20 	sts	0x2004, r26	; 0x802004 <xNextTaskUnblockTime+0x2>
    2c50:	b0 93 05 20 	sts	0x2005, r27	; 0x802005 <xNextTaskUnblockTime+0x3>
    2c54:	40 91 4c 31 	lds	r20, 0x314C	; 0x80314c <xTickCount>
    2c58:	50 91 4d 31 	lds	r21, 0x314D	; 0x80314d <xTickCount+0x1>
    2c5c:	60 91 4e 31 	lds	r22, 0x314E	; 0x80314e <xTickCount+0x2>
    2c60:	70 91 4f 31 	lds	r23, 0x314F	; 0x80314f <xTickCount+0x3>
    2c64:	80 91 02 20 	lds	r24, 0x2002	; 0x802002 <xNextTaskUnblockTime>
    2c68:	90 91 03 20 	lds	r25, 0x2003	; 0x802003 <xNextTaskUnblockTime+0x1>
    2c6c:	a0 91 04 20 	lds	r26, 0x2004	; 0x802004 <xNextTaskUnblockTime+0x2>
    2c70:	b0 91 05 20 	lds	r27, 0x2005	; 0x802005 <xNextTaskUnblockTime+0x3>
    2c74:	48 17       	cp	r20, r24
    2c76:	59 07       	cpc	r21, r25
    2c78:	6a 07       	cpc	r22, r26
    2c7a:	7b 07       	cpc	r23, r27
    2c7c:	08 f4       	brcc	.+2      	; 0x2c80 <vTaskIncrementTick+0xf8>
    2c7e:	7f c0       	rjmp	.+254    	; 0x2d7e <vTaskIncrementTick+0x1f6>
    2c80:	e0 91 60 31 	lds	r30, 0x3160	; 0x803160 <pxDelayedTaskList>
    2c84:	f0 91 61 31 	lds	r31, 0x3161	; 0x803161 <pxDelayedTaskList+0x1>
    2c88:	80 81       	ld	r24, Z
    2c8a:	88 23       	and	r24, r24
    2c8c:	f9 f0       	breq	.+62     	; 0x2ccc <vTaskIncrementTick+0x144>
    2c8e:	e0 91 60 31 	lds	r30, 0x3160	; 0x803160 <pxDelayedTaskList>
    2c92:	f0 91 61 31 	lds	r31, 0x3161	; 0x803161 <pxDelayedTaskList+0x1>
    2c96:	07 80       	ldd	r0, Z+7	; 0x07
    2c98:	f0 85       	ldd	r31, Z+8	; 0x08
    2c9a:	e0 2d       	mov	r30, r0
    2c9c:	c0 85       	ldd	r28, Z+8	; 0x08
    2c9e:	d1 85       	ldd	r29, Z+9	; 0x09
    2ca0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ca2:	9b 81       	ldd	r25, Y+3	; 0x03
    2ca4:	ac 81       	ldd	r26, Y+4	; 0x04
    2ca6:	bd 81       	ldd	r27, Y+5	; 0x05
    2ca8:	40 91 4c 31 	lds	r20, 0x314C	; 0x80314c <xTickCount>
    2cac:	50 91 4d 31 	lds	r21, 0x314D	; 0x80314d <xTickCount+0x1>
    2cb0:	60 91 4e 31 	lds	r22, 0x314E	; 0x80314e <xTickCount+0x2>
    2cb4:	70 91 4f 31 	lds	r23, 0x314F	; 0x80314f <xTickCount+0x3>
    2cb8:	48 17       	cp	r20, r24
    2cba:	59 07       	cpc	r21, r25
    2cbc:	6a 07       	cpc	r22, r26
    2cbe:	7b 07       	cpc	r23, r27
    2cc0:	58 f1       	brcs	.+86     	; 0x2d18 <vTaskIncrementTick+0x190>
    2cc2:	0f 2e       	mov	r0, r31
    2cc4:	fb e0       	ldi	r31, 0x0B	; 11
    2cc6:	ff 2e       	mov	r15, r31
    2cc8:	f0 2d       	mov	r31, r0
    2cca:	2f c0       	rjmp	.+94     	; 0x2d2a <vTaskIncrementTick+0x1a2>
    2ccc:	8f ef       	ldi	r24, 0xFF	; 255
    2cce:	9f ef       	ldi	r25, 0xFF	; 255
    2cd0:	dc 01       	movw	r26, r24
    2cd2:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <xNextTaskUnblockTime>
    2cd6:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <xNextTaskUnblockTime+0x1>
    2cda:	a0 93 04 20 	sts	0x2004, r26	; 0x802004 <xNextTaskUnblockTime+0x2>
    2cde:	b0 93 05 20 	sts	0x2005, r27	; 0x802005 <xNextTaskUnblockTime+0x3>
    2ce2:	4d c0       	rjmp	.+154    	; 0x2d7e <vTaskIncrementTick+0x1f6>
    2ce4:	e0 91 60 31 	lds	r30, 0x3160	; 0x803160 <pxDelayedTaskList>
    2ce8:	f0 91 61 31 	lds	r31, 0x3161	; 0x803161 <pxDelayedTaskList+0x1>
    2cec:	07 80       	ldd	r0, Z+7	; 0x07
    2cee:	f0 85       	ldd	r31, Z+8	; 0x08
    2cf0:	e0 2d       	mov	r30, r0
    2cf2:	c0 85       	ldd	r28, Z+8	; 0x08
    2cf4:	d1 85       	ldd	r29, Z+9	; 0x09
    2cf6:	8a 81       	ldd	r24, Y+2	; 0x02
    2cf8:	9b 81       	ldd	r25, Y+3	; 0x03
    2cfa:	ac 81       	ldd	r26, Y+4	; 0x04
    2cfc:	bd 81       	ldd	r27, Y+5	; 0x05
    2cfe:	40 91 4c 31 	lds	r20, 0x314C	; 0x80314c <xTickCount>
    2d02:	50 91 4d 31 	lds	r21, 0x314D	; 0x80314d <xTickCount+0x1>
    2d06:	60 91 4e 31 	lds	r22, 0x314E	; 0x80314e <xTickCount+0x2>
    2d0a:	70 91 4f 31 	lds	r23, 0x314F	; 0x80314f <xTickCount+0x3>
    2d0e:	48 17       	cp	r20, r24
    2d10:	59 07       	cpc	r21, r25
    2d12:	6a 07       	cpc	r22, r26
    2d14:	7b 07       	cpc	r23, r27
    2d16:	48 f4       	brcc	.+18     	; 0x2d2a <vTaskIncrementTick+0x1a2>
    2d18:	80 93 02 20 	sts	0x2002, r24	; 0x802002 <xNextTaskUnblockTime>
    2d1c:	90 93 03 20 	sts	0x2003, r25	; 0x802003 <xNextTaskUnblockTime+0x1>
    2d20:	a0 93 04 20 	sts	0x2004, r26	; 0x802004 <xNextTaskUnblockTime+0x2>
    2d24:	b0 93 05 20 	sts	0x2005, r27	; 0x802005 <xNextTaskUnblockTime+0x3>
    2d28:	2a c0       	rjmp	.+84     	; 0x2d7e <vTaskIncrementTick+0x1f6>
    2d2a:	8e 01       	movw	r16, r28
    2d2c:	0e 5f       	subi	r16, 0xFE	; 254
    2d2e:	1f 4f       	sbci	r17, 0xFF	; 255
    2d30:	c8 01       	movw	r24, r16
    2d32:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    2d36:	88 8d       	ldd	r24, Y+24	; 0x18
    2d38:	99 8d       	ldd	r25, Y+25	; 0x19
    2d3a:	89 2b       	or	r24, r25
    2d3c:	21 f0       	breq	.+8      	; 0x2d46 <vTaskIncrementTick+0x1be>
    2d3e:	ce 01       	movw	r24, r28
    2d40:	0e 96       	adiw	r24, 0x0e	; 14
    2d42:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    2d46:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2d48:	90 91 4a 31 	lds	r25, 0x314A	; 0x80314a <uxTopReadyPriority>
    2d4c:	98 17       	cp	r25, r24
    2d4e:	10 f4       	brcc	.+4      	; 0x2d54 <vTaskIncrementTick+0x1cc>
    2d50:	80 93 4a 31 	sts	0x314A, r24	; 0x80314a <uxTopReadyPriority>
    2d54:	f8 9e       	mul	r15, r24
    2d56:	c0 01       	movw	r24, r0
    2d58:	11 24       	eor	r1, r1
    2d5a:	b8 01       	movw	r22, r16
    2d5c:	88 58       	subi	r24, 0x88	; 136
    2d5e:	9e 4c       	sbci	r25, 0xCE	; 206
    2d60:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <vListInsertEnd>
    2d64:	e0 91 60 31 	lds	r30, 0x3160	; 0x803160 <pxDelayedTaskList>
    2d68:	f0 91 61 31 	lds	r31, 0x3161	; 0x803161 <pxDelayedTaskList+0x1>
    2d6c:	80 81       	ld	r24, Z
    2d6e:	81 11       	cpse	r24, r1
    2d70:	b9 cf       	rjmp	.-142    	; 0x2ce4 <vTaskIncrementTick+0x15c>
    2d72:	ac cf       	rjmp	.-168    	; 0x2ccc <vTaskIncrementTick+0x144>
    2d74:	80 91 47 31 	lds	r24, 0x3147	; 0x803147 <uxMissedTicks>
    2d78:	8f 5f       	subi	r24, 0xFF	; 255
    2d7a:	80 93 47 31 	sts	0x3147, r24	; 0x803147 <uxMissedTicks>
    2d7e:	df 91       	pop	r29
    2d80:	cf 91       	pop	r28
    2d82:	1f 91       	pop	r17
    2d84:	0f 91       	pop	r16
    2d86:	ff 90       	pop	r15
    2d88:	08 95       	ret

00002d8a <xTaskResumeAll>:
    2d8a:	cf 92       	push	r12
    2d8c:	df 92       	push	r13
    2d8e:	ef 92       	push	r14
    2d90:	ff 92       	push	r15
    2d92:	0f 93       	push	r16
    2d94:	1f 93       	push	r17
    2d96:	cf 93       	push	r28
    2d98:	df 93       	push	r29
    2d9a:	0f b6       	in	r0, 0x3f	; 63
    2d9c:	f8 94       	cli
    2d9e:	0f 92       	push	r0
    2da0:	80 91 48 31 	lds	r24, 0x3148	; 0x803148 <uxSchedulerSuspended>
    2da4:	81 50       	subi	r24, 0x01	; 1
    2da6:	80 93 48 31 	sts	0x3148, r24	; 0x803148 <uxSchedulerSuspended>
    2daa:	80 91 48 31 	lds	r24, 0x3148	; 0x803148 <uxSchedulerSuspended>
    2dae:	81 11       	cpse	r24, r1
    2db0:	60 c0       	rjmp	.+192    	; 0x2e72 <xTaskResumeAll+0xe8>
    2db2:	80 91 50 31 	lds	r24, 0x3150	; 0x803150 <uxCurrentNumberOfTasks>
    2db6:	81 11       	cpse	r24, r1
    2db8:	2c c0       	rjmp	.+88     	; 0x2e12 <xTaskResumeAll+0x88>
    2dba:	5e c0       	rjmp	.+188    	; 0x2e78 <xTaskResumeAll+0xee>
    2dbc:	d7 01       	movw	r26, r14
    2dbe:	17 96       	adiw	r26, 0x07	; 7
    2dc0:	ed 91       	ld	r30, X+
    2dc2:	fc 91       	ld	r31, X
    2dc4:	18 97       	sbiw	r26, 0x08	; 8
    2dc6:	c0 85       	ldd	r28, Z+8	; 0x08
    2dc8:	d1 85       	ldd	r29, Z+9	; 0x09
    2dca:	ce 01       	movw	r24, r28
    2dcc:	0e 96       	adiw	r24, 0x0e	; 14
    2dce:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    2dd2:	8e 01       	movw	r16, r28
    2dd4:	0e 5f       	subi	r16, 0xFE	; 254
    2dd6:	1f 4f       	sbci	r17, 0xFF	; 255
    2dd8:	c8 01       	movw	r24, r16
    2dda:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    2dde:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2de0:	90 91 4a 31 	lds	r25, 0x314A	; 0x80314a <uxTopReadyPriority>
    2de4:	98 17       	cp	r25, r24
    2de6:	10 f4       	brcc	.+4      	; 0x2dec <xTaskResumeAll+0x62>
    2de8:	80 93 4a 31 	sts	0x314A, r24	; 0x80314a <uxTopReadyPriority>
    2dec:	d8 9e       	mul	r13, r24
    2dee:	c0 01       	movw	r24, r0
    2df0:	11 24       	eor	r1, r1
    2df2:	b8 01       	movw	r22, r16
    2df4:	88 58       	subi	r24, 0x88	; 136
    2df6:	9e 4c       	sbci	r25, 0xCE	; 206
    2df8:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <vListInsertEnd>
    2dfc:	e0 91 a4 31 	lds	r30, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2e00:	f0 91 a5 31 	lds	r31, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2e04:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2e06:	82 8d       	ldd	r24, Z+26	; 0x1a
    2e08:	98 17       	cp	r25, r24
    2e0a:	70 f0       	brcs	.+28     	; 0x2e28 <xTaskResumeAll+0x9e>
    2e0c:	cc 24       	eor	r12, r12
    2e0e:	c3 94       	inc	r12
    2e10:	0b c0       	rjmp	.+22     	; 0x2e28 <xTaskResumeAll+0x9e>
    2e12:	c1 2c       	mov	r12, r1
    2e14:	0f 2e       	mov	r0, r31
    2e16:	f3 e5       	ldi	r31, 0x53	; 83
    2e18:	ef 2e       	mov	r14, r31
    2e1a:	f1 e3       	ldi	r31, 0x31	; 49
    2e1c:	ff 2e       	mov	r15, r31
    2e1e:	f0 2d       	mov	r31, r0
    2e20:	0f 2e       	mov	r0, r31
    2e22:	fb e0       	ldi	r31, 0x0B	; 11
    2e24:	df 2e       	mov	r13, r31
    2e26:	f0 2d       	mov	r31, r0
    2e28:	f7 01       	movw	r30, r14
    2e2a:	80 81       	ld	r24, Z
    2e2c:	81 11       	cpse	r24, r1
    2e2e:	c6 cf       	rjmp	.-116    	; 0x2dbc <xTaskResumeAll+0x32>
    2e30:	80 91 47 31 	lds	r24, 0x3147	; 0x803147 <uxMissedTicks>
    2e34:	88 23       	and	r24, r24
    2e36:	81 f0       	breq	.+32     	; 0x2e58 <xTaskResumeAll+0xce>
    2e38:	80 91 47 31 	lds	r24, 0x3147	; 0x803147 <uxMissedTicks>
    2e3c:	88 23       	and	r24, r24
    2e3e:	99 f0       	breq	.+38     	; 0x2e66 <xTaskResumeAll+0xdc>
    2e40:	0e 94 c4 15 	call	0x2b88	; 0x2b88 <vTaskIncrementTick>
    2e44:	80 91 47 31 	lds	r24, 0x3147	; 0x803147 <uxMissedTicks>
    2e48:	81 50       	subi	r24, 0x01	; 1
    2e4a:	80 93 47 31 	sts	0x3147, r24	; 0x803147 <uxMissedTicks>
    2e4e:	80 91 47 31 	lds	r24, 0x3147	; 0x803147 <uxMissedTicks>
    2e52:	81 11       	cpse	r24, r1
    2e54:	f5 cf       	rjmp	.-22     	; 0x2e40 <xTaskResumeAll+0xb6>
    2e56:	07 c0       	rjmp	.+14     	; 0x2e66 <xTaskResumeAll+0xdc>
    2e58:	f1 e0       	ldi	r31, 0x01	; 1
    2e5a:	cf 16       	cp	r12, r31
    2e5c:	21 f0       	breq	.+8      	; 0x2e66 <xTaskResumeAll+0xdc>
    2e5e:	80 91 46 31 	lds	r24, 0x3146	; 0x803146 <xMissedYield>
    2e62:	81 30       	cpi	r24, 0x01	; 1
    2e64:	41 f4       	brne	.+16     	; 0x2e76 <xTaskResumeAll+0xec>
    2e66:	10 92 46 31 	sts	0x3146, r1	; 0x803146 <xMissedYield>
    2e6a:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    2e6e:	81 e0       	ldi	r24, 0x01	; 1
    2e70:	03 c0       	rjmp	.+6      	; 0x2e78 <xTaskResumeAll+0xee>
    2e72:	80 e0       	ldi	r24, 0x00	; 0
    2e74:	01 c0       	rjmp	.+2      	; 0x2e78 <xTaskResumeAll+0xee>
    2e76:	80 e0       	ldi	r24, 0x00	; 0
    2e78:	0f 90       	pop	r0
    2e7a:	0f be       	out	0x3f, r0	; 63
    2e7c:	df 91       	pop	r29
    2e7e:	cf 91       	pop	r28
    2e80:	1f 91       	pop	r17
    2e82:	0f 91       	pop	r16
    2e84:	ff 90       	pop	r15
    2e86:	ef 90       	pop	r14
    2e88:	df 90       	pop	r13
    2e8a:	cf 90       	pop	r12
    2e8c:	08 95       	ret

00002e8e <vTaskDelayUntil>:
    2e8e:	cf 92       	push	r12
    2e90:	df 92       	push	r13
    2e92:	ef 92       	push	r14
    2e94:	ff 92       	push	r15
    2e96:	cf 93       	push	r28
    2e98:	df 93       	push	r29
    2e9a:	ec 01       	movw	r28, r24
    2e9c:	6a 01       	movw	r12, r20
    2e9e:	7b 01       	movw	r14, r22
    2ea0:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <vTaskSuspendAll>
    2ea4:	88 81       	ld	r24, Y
    2ea6:	99 81       	ldd	r25, Y+1	; 0x01
    2ea8:	aa 81       	ldd	r26, Y+2	; 0x02
    2eaa:	bb 81       	ldd	r27, Y+3	; 0x03
    2eac:	c8 0e       	add	r12, r24
    2eae:	d9 1e       	adc	r13, r25
    2eb0:	ea 1e       	adc	r14, r26
    2eb2:	fb 1e       	adc	r15, r27
    2eb4:	40 91 4c 31 	lds	r20, 0x314C	; 0x80314c <xTickCount>
    2eb8:	50 91 4d 31 	lds	r21, 0x314D	; 0x80314d <xTickCount+0x1>
    2ebc:	60 91 4e 31 	lds	r22, 0x314E	; 0x80314e <xTickCount+0x2>
    2ec0:	70 91 4f 31 	lds	r23, 0x314F	; 0x80314f <xTickCount+0x3>
    2ec4:	48 17       	cp	r20, r24
    2ec6:	59 07       	cpc	r21, r25
    2ec8:	6a 07       	cpc	r22, r26
    2eca:	7b 07       	cpc	r23, r27
    2ecc:	b8 f4       	brcc	.+46     	; 0x2efc <vTaskDelayUntil+0x6e>
    2ece:	c8 16       	cp	r12, r24
    2ed0:	d9 06       	cpc	r13, r25
    2ed2:	ea 06       	cpc	r14, r26
    2ed4:	fb 06       	cpc	r15, r27
    2ed6:	e0 f5       	brcc	.+120    	; 0x2f50 <vTaskDelayUntil+0xc2>
    2ed8:	80 91 4c 31 	lds	r24, 0x314C	; 0x80314c <xTickCount>
    2edc:	90 91 4d 31 	lds	r25, 0x314D	; 0x80314d <xTickCount+0x1>
    2ee0:	a0 91 4e 31 	lds	r26, 0x314E	; 0x80314e <xTickCount+0x2>
    2ee4:	b0 91 4f 31 	lds	r27, 0x314F	; 0x80314f <xTickCount+0x3>
    2ee8:	c8 82       	st	Y, r12
    2eea:	d9 82       	std	Y+1, r13	; 0x01
    2eec:	ea 82       	std	Y+2, r14	; 0x02
    2eee:	fb 82       	std	Y+3, r15	; 0x03
    2ef0:	8c 15       	cp	r24, r12
    2ef2:	9d 05       	cpc	r25, r13
    2ef4:	ae 05       	cpc	r26, r14
    2ef6:	bf 05       	cpc	r27, r15
    2ef8:	f8 f4       	brcc	.+62     	; 0x2f38 <vTaskDelayUntil+0xaa>
    2efa:	13 c0       	rjmp	.+38     	; 0x2f22 <vTaskDelayUntil+0x94>
    2efc:	c8 16       	cp	r12, r24
    2efe:	d9 06       	cpc	r13, r25
    2f00:	ea 06       	cpc	r14, r26
    2f02:	fb 06       	cpc	r15, r27
    2f04:	00 f1       	brcs	.+64     	; 0x2f46 <vTaskDelayUntil+0xb8>
    2f06:	80 91 4c 31 	lds	r24, 0x314C	; 0x80314c <xTickCount>
    2f0a:	90 91 4d 31 	lds	r25, 0x314D	; 0x80314d <xTickCount+0x1>
    2f0e:	a0 91 4e 31 	lds	r26, 0x314E	; 0x80314e <xTickCount+0x2>
    2f12:	b0 91 4f 31 	lds	r27, 0x314F	; 0x80314f <xTickCount+0x3>
    2f16:	8c 15       	cp	r24, r12
    2f18:	9d 05       	cpc	r25, r13
    2f1a:	ae 05       	cpc	r26, r14
    2f1c:	bf 05       	cpc	r27, r15
    2f1e:	98 f0       	brcs	.+38     	; 0x2f46 <vTaskDelayUntil+0xb8>
    2f20:	17 c0       	rjmp	.+46     	; 0x2f50 <vTaskDelayUntil+0xc2>
    2f22:	80 91 a4 31 	lds	r24, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2f26:	90 91 a5 31 	lds	r25, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2f2a:	02 96       	adiw	r24, 0x02	; 2
    2f2c:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    2f30:	c7 01       	movw	r24, r14
    2f32:	b6 01       	movw	r22, r12
    2f34:	0e 94 17 14 	call	0x282e	; 0x282e <prvAddCurrentTaskToDelayedList>
    2f38:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    2f3c:	81 11       	cpse	r24, r1
    2f3e:	0d c0       	rjmp	.+26     	; 0x2f5a <vTaskDelayUntil+0xcc>
    2f40:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    2f44:	0a c0       	rjmp	.+20     	; 0x2f5a <vTaskDelayUntil+0xcc>
    2f46:	c8 82       	st	Y, r12
    2f48:	d9 82       	std	Y+1, r13	; 0x01
    2f4a:	ea 82       	std	Y+2, r14	; 0x02
    2f4c:	fb 82       	std	Y+3, r15	; 0x03
    2f4e:	e9 cf       	rjmp	.-46     	; 0x2f22 <vTaskDelayUntil+0x94>
    2f50:	c8 82       	st	Y, r12
    2f52:	d9 82       	std	Y+1, r13	; 0x01
    2f54:	ea 82       	std	Y+2, r14	; 0x02
    2f56:	fb 82       	std	Y+3, r15	; 0x03
    2f58:	ef cf       	rjmp	.-34     	; 0x2f38 <vTaskDelayUntil+0xaa>
    2f5a:	df 91       	pop	r29
    2f5c:	cf 91       	pop	r28
    2f5e:	ff 90       	pop	r15
    2f60:	ef 90       	pop	r14
    2f62:	df 90       	pop	r13
    2f64:	cf 90       	pop	r12
    2f66:	08 95       	ret

00002f68 <vTaskDelay>:
    2f68:	cf 92       	push	r12
    2f6a:	df 92       	push	r13
    2f6c:	ef 92       	push	r14
    2f6e:	ff 92       	push	r15
    2f70:	6b 01       	movw	r12, r22
    2f72:	7c 01       	movw	r14, r24
    2f74:	67 2b       	or	r22, r23
    2f76:	68 2b       	or	r22, r24
    2f78:	69 2b       	or	r22, r25
    2f7a:	e9 f0       	breq	.+58     	; 0x2fb6 <vTaskDelay+0x4e>
    2f7c:	0e 94 a8 15 	call	0x2b50	; 0x2b50 <vTaskSuspendAll>
    2f80:	80 91 4c 31 	lds	r24, 0x314C	; 0x80314c <xTickCount>
    2f84:	90 91 4d 31 	lds	r25, 0x314D	; 0x80314d <xTickCount+0x1>
    2f88:	a0 91 4e 31 	lds	r26, 0x314E	; 0x80314e <xTickCount+0x2>
    2f8c:	b0 91 4f 31 	lds	r27, 0x314F	; 0x80314f <xTickCount+0x3>
    2f90:	c8 0e       	add	r12, r24
    2f92:	d9 1e       	adc	r13, r25
    2f94:	ea 1e       	adc	r14, r26
    2f96:	fb 1e       	adc	r15, r27
    2f98:	80 91 a4 31 	lds	r24, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    2f9c:	90 91 a5 31 	lds	r25, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    2fa0:	02 96       	adiw	r24, 0x02	; 2
    2fa2:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    2fa6:	c7 01       	movw	r24, r14
    2fa8:	b6 01       	movw	r22, r12
    2faa:	0e 94 17 14 	call	0x282e	; 0x282e <prvAddCurrentTaskToDelayedList>
    2fae:	0e 94 c5 16 	call	0x2d8a	; 0x2d8a <xTaskResumeAll>
    2fb2:	81 11       	cpse	r24, r1
    2fb4:	02 c0       	rjmp	.+4      	; 0x2fba <vTaskDelay+0x52>
    2fb6:	0e 94 bf 10 	call	0x217e	; 0x217e <vPortYield>
    2fba:	ff 90       	pop	r15
    2fbc:	ef 90       	pop	r14
    2fbe:	df 90       	pop	r13
    2fc0:	cf 90       	pop	r12
    2fc2:	08 95       	ret

00002fc4 <vTaskSwitchContext>:
    2fc4:	80 91 48 31 	lds	r24, 0x3148	; 0x803148 <uxSchedulerSuspended>
    2fc8:	81 11       	cpse	r24, r1
    2fca:	0c c0       	rjmp	.+24     	; 0x2fe4 <vTaskSwitchContext+0x20>
    2fcc:	e0 91 4a 31 	lds	r30, 0x314A	; 0x80314a <uxTopReadyPriority>
    2fd0:	4b e0       	ldi	r20, 0x0B	; 11
    2fd2:	e4 9f       	mul	r30, r20
    2fd4:	f0 01       	movw	r30, r0
    2fd6:	11 24       	eor	r1, r1
    2fd8:	e8 58       	subi	r30, 0x88	; 136
    2fda:	fe 4c       	sbci	r31, 0xCE	; 206
    2fdc:	80 81       	ld	r24, Z
    2fde:	88 23       	and	r24, r24
    2fe0:	29 f0       	breq	.+10     	; 0x2fec <vTaskSwitchContext+0x28>
    2fe2:	14 c0       	rjmp	.+40     	; 0x300c <vTaskSwitchContext+0x48>
    2fe4:	81 e0       	ldi	r24, 0x01	; 1
    2fe6:	80 93 46 31 	sts	0x3146, r24	; 0x803146 <xMissedYield>
    2fea:	08 95       	ret
    2fec:	9b e0       	ldi	r25, 0x0B	; 11
    2fee:	80 91 4a 31 	lds	r24, 0x314A	; 0x80314a <uxTopReadyPriority>
    2ff2:	81 50       	subi	r24, 0x01	; 1
    2ff4:	80 93 4a 31 	sts	0x314A, r24	; 0x80314a <uxTopReadyPriority>
    2ff8:	e0 91 4a 31 	lds	r30, 0x314A	; 0x80314a <uxTopReadyPriority>
    2ffc:	9e 9f       	mul	r25, r30
    2ffe:	f0 01       	movw	r30, r0
    3000:	11 24       	eor	r1, r1
    3002:	e8 58       	subi	r30, 0x88	; 136
    3004:	fe 4c       	sbci	r31, 0xCE	; 206
    3006:	80 81       	ld	r24, Z
    3008:	88 23       	and	r24, r24
    300a:	89 f3       	breq	.-30     	; 0x2fee <vTaskSwitchContext+0x2a>
    300c:	80 91 4a 31 	lds	r24, 0x314A	; 0x80314a <uxTopReadyPriority>
    3010:	28 2f       	mov	r18, r24
    3012:	30 e0       	ldi	r19, 0x00	; 0
    3014:	4b e0       	ldi	r20, 0x0B	; 11
    3016:	84 9f       	mul	r24, r20
    3018:	c0 01       	movw	r24, r0
    301a:	11 24       	eor	r1, r1
    301c:	dc 01       	movw	r26, r24
    301e:	a8 58       	subi	r26, 0x88	; 136
    3020:	be 4c       	sbci	r27, 0xCE	; 206
    3022:	11 96       	adiw	r26, 0x01	; 1
    3024:	ed 91       	ld	r30, X+
    3026:	fc 91       	ld	r31, X
    3028:	12 97       	sbiw	r26, 0x02	; 2
    302a:	04 80       	ldd	r0, Z+4	; 0x04
    302c:	f5 81       	ldd	r31, Z+5	; 0x05
    302e:	e0 2d       	mov	r30, r0
    3030:	11 96       	adiw	r26, 0x01	; 1
    3032:	ed 93       	st	X+, r30
    3034:	fc 93       	st	X, r31
    3036:	12 97       	sbiw	r26, 0x02	; 2
    3038:	85 58       	subi	r24, 0x85	; 133
    303a:	9e 4c       	sbci	r25, 0xCE	; 206
    303c:	e8 17       	cp	r30, r24
    303e:	f9 07       	cpc	r31, r25
    3040:	61 f4       	brne	.+24     	; 0x305a <vTaskSwitchContext+0x96>
    3042:	84 81       	ldd	r24, Z+4	; 0x04
    3044:	95 81       	ldd	r25, Z+5	; 0x05
    3046:	4b e0       	ldi	r20, 0x0B	; 11
    3048:	42 9f       	mul	r20, r18
    304a:	f0 01       	movw	r30, r0
    304c:	43 9f       	mul	r20, r19
    304e:	f0 0d       	add	r31, r0
    3050:	11 24       	eor	r1, r1
    3052:	e8 58       	subi	r30, 0x88	; 136
    3054:	fe 4c       	sbci	r31, 0xCE	; 206
    3056:	81 83       	std	Z+1, r24	; 0x01
    3058:	92 83       	std	Z+2, r25	; 0x02
    305a:	8b e0       	ldi	r24, 0x0B	; 11
    305c:	82 9f       	mul	r24, r18
    305e:	f0 01       	movw	r30, r0
    3060:	83 9f       	mul	r24, r19
    3062:	f0 0d       	add	r31, r0
    3064:	11 24       	eor	r1, r1
    3066:	e8 58       	subi	r30, 0x88	; 136
    3068:	fe 4c       	sbci	r31, 0xCE	; 206
    306a:	01 80       	ldd	r0, Z+1	; 0x01
    306c:	f2 81       	ldd	r31, Z+2	; 0x02
    306e:	e0 2d       	mov	r30, r0
    3070:	80 85       	ldd	r24, Z+8	; 0x08
    3072:	91 85       	ldd	r25, Z+9	; 0x09
    3074:	80 93 a4 31 	sts	0x31A4, r24	; 0x8031a4 <pxCurrentTCB>
    3078:	90 93 a5 31 	sts	0x31A5, r25	; 0x8031a5 <pxCurrentTCB+0x1>
    307c:	08 95       	ret

0000307e <vTaskPlaceOnEventList>:
    307e:	cf 92       	push	r12
    3080:	df 92       	push	r13
    3082:	ef 92       	push	r14
    3084:	ff 92       	push	r15
    3086:	6a 01       	movw	r12, r20
    3088:	7b 01       	movw	r14, r22
    308a:	60 91 a4 31 	lds	r22, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    308e:	70 91 a5 31 	lds	r23, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    3092:	62 5f       	subi	r22, 0xF2	; 242
    3094:	7f 4f       	sbci	r23, 0xFF	; 255
    3096:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <vListInsert>
    309a:	80 91 a4 31 	lds	r24, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    309e:	90 91 a5 31 	lds	r25, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    30a2:	02 96       	adiw	r24, 0x02	; 2
    30a4:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    30a8:	80 91 4c 31 	lds	r24, 0x314C	; 0x80314c <xTickCount>
    30ac:	90 91 4d 31 	lds	r25, 0x314D	; 0x80314d <xTickCount+0x1>
    30b0:	a0 91 4e 31 	lds	r26, 0x314E	; 0x80314e <xTickCount+0x2>
    30b4:	b0 91 4f 31 	lds	r27, 0x314F	; 0x80314f <xTickCount+0x3>
    30b8:	bc 01       	movw	r22, r24
    30ba:	cd 01       	movw	r24, r26
    30bc:	6c 0d       	add	r22, r12
    30be:	7d 1d       	adc	r23, r13
    30c0:	8e 1d       	adc	r24, r14
    30c2:	9f 1d       	adc	r25, r15
    30c4:	0e 94 17 14 	call	0x282e	; 0x282e <prvAddCurrentTaskToDelayedList>
    30c8:	ff 90       	pop	r15
    30ca:	ef 90       	pop	r14
    30cc:	df 90       	pop	r13
    30ce:	cf 90       	pop	r12
    30d0:	08 95       	ret

000030d2 <xTaskRemoveFromEventList>:
    30d2:	0f 93       	push	r16
    30d4:	1f 93       	push	r17
    30d6:	cf 93       	push	r28
    30d8:	df 93       	push	r29
    30da:	dc 01       	movw	r26, r24
    30dc:	17 96       	adiw	r26, 0x07	; 7
    30de:	ed 91       	ld	r30, X+
    30e0:	fc 91       	ld	r31, X
    30e2:	18 97       	sbiw	r26, 0x08	; 8
    30e4:	c0 85       	ldd	r28, Z+8	; 0x08
    30e6:	d1 85       	ldd	r29, Z+9	; 0x09
    30e8:	8e 01       	movw	r16, r28
    30ea:	02 5f       	subi	r16, 0xF2	; 242
    30ec:	1f 4f       	sbci	r17, 0xFF	; 255
    30ee:	c8 01       	movw	r24, r16
    30f0:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    30f4:	80 91 48 31 	lds	r24, 0x3148	; 0x803148 <uxSchedulerSuspended>
    30f8:	81 11       	cpse	r24, r1
    30fa:	16 c0       	rjmp	.+44     	; 0x3128 <xTaskRemoveFromEventList+0x56>
    30fc:	0c 50       	subi	r16, 0x0C	; 12
    30fe:	11 09       	sbc	r17, r1
    3100:	c8 01       	movw	r24, r16
    3102:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    3106:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3108:	90 91 4a 31 	lds	r25, 0x314A	; 0x80314a <uxTopReadyPriority>
    310c:	98 17       	cp	r25, r24
    310e:	10 f4       	brcc	.+4      	; 0x3114 <xTaskRemoveFromEventList+0x42>
    3110:	80 93 4a 31 	sts	0x314A, r24	; 0x80314a <uxTopReadyPriority>
    3114:	bb e0       	ldi	r27, 0x0B	; 11
    3116:	8b 9f       	mul	r24, r27
    3118:	c0 01       	movw	r24, r0
    311a:	11 24       	eor	r1, r1
    311c:	b8 01       	movw	r22, r16
    311e:	88 58       	subi	r24, 0x88	; 136
    3120:	9e 4c       	sbci	r25, 0xCE	; 206
    3122:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <vListInsertEnd>
    3126:	05 c0       	rjmp	.+10     	; 0x3132 <xTaskRemoveFromEventList+0x60>
    3128:	b8 01       	movw	r22, r16
    312a:	83 e5       	ldi	r24, 0x53	; 83
    312c:	91 e3       	ldi	r25, 0x31	; 49
    312e:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <vListInsertEnd>
    3132:	e0 91 a4 31 	lds	r30, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    3136:	f0 91 a5 31 	lds	r31, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    313a:	81 e0       	ldi	r24, 0x01	; 1
    313c:	2a 8d       	ldd	r18, Y+26	; 0x1a
    313e:	92 8d       	ldd	r25, Z+26	; 0x1a
    3140:	29 17       	cp	r18, r25
    3142:	08 f4       	brcc	.+2      	; 0x3146 <xTaskRemoveFromEventList+0x74>
    3144:	80 e0       	ldi	r24, 0x00	; 0
    3146:	df 91       	pop	r29
    3148:	cf 91       	pop	r28
    314a:	1f 91       	pop	r17
    314c:	0f 91       	pop	r16
    314e:	08 95       	ret

00003150 <vTaskSetTimeOutState>:
    3150:	20 91 45 31 	lds	r18, 0x3145	; 0x803145 <xNumOfOverflows>
    3154:	fc 01       	movw	r30, r24
    3156:	20 83       	st	Z, r18
    3158:	40 91 4c 31 	lds	r20, 0x314C	; 0x80314c <xTickCount>
    315c:	50 91 4d 31 	lds	r21, 0x314D	; 0x80314d <xTickCount+0x1>
    3160:	60 91 4e 31 	lds	r22, 0x314E	; 0x80314e <xTickCount+0x2>
    3164:	70 91 4f 31 	lds	r23, 0x314F	; 0x80314f <xTickCount+0x3>
    3168:	41 83       	std	Z+1, r20	; 0x01
    316a:	52 83       	std	Z+2, r21	; 0x02
    316c:	63 83       	std	Z+3, r22	; 0x03
    316e:	74 83       	std	Z+4, r23	; 0x04
    3170:	08 95       	ret

00003172 <xTaskCheckForTimeOut>:
    3172:	8f 92       	push	r8
    3174:	9f 92       	push	r9
    3176:	af 92       	push	r10
    3178:	bf 92       	push	r11
    317a:	cf 92       	push	r12
    317c:	df 92       	push	r13
    317e:	ef 92       	push	r14
    3180:	ff 92       	push	r15
    3182:	0f 93       	push	r16
    3184:	1f 93       	push	r17
    3186:	cf 93       	push	r28
    3188:	df 93       	push	r29
    318a:	fc 01       	movw	r30, r24
    318c:	0f b6       	in	r0, 0x3f	; 63
    318e:	f8 94       	cli
    3190:	0f 92       	push	r0
    3192:	80 91 45 31 	lds	r24, 0x3145	; 0x803145 <xNumOfOverflows>
    3196:	90 81       	ld	r25, Z
    3198:	98 17       	cp	r25, r24
    319a:	89 f0       	breq	.+34     	; 0x31be <xTaskCheckForTimeOut+0x4c>
    319c:	80 91 4c 31 	lds	r24, 0x314C	; 0x80314c <xTickCount>
    31a0:	90 91 4d 31 	lds	r25, 0x314D	; 0x80314d <xTickCount+0x1>
    31a4:	a0 91 4e 31 	lds	r26, 0x314E	; 0x80314e <xTickCount+0x2>
    31a8:	b0 91 4f 31 	lds	r27, 0x314F	; 0x80314f <xTickCount+0x3>
    31ac:	01 81       	ldd	r16, Z+1	; 0x01
    31ae:	12 81       	ldd	r17, Z+2	; 0x02
    31b0:	23 81       	ldd	r18, Z+3	; 0x03
    31b2:	34 81       	ldd	r19, Z+4	; 0x04
    31b4:	80 17       	cp	r24, r16
    31b6:	91 07       	cpc	r25, r17
    31b8:	a2 07       	cpc	r26, r18
    31ba:	b3 07       	cpc	r27, r19
    31bc:	a8 f5       	brcc	.+106    	; 0x3228 <xTaskCheckForTimeOut+0xb6>
    31be:	80 91 4c 31 	lds	r24, 0x314C	; 0x80314c <xTickCount>
    31c2:	90 91 4d 31 	lds	r25, 0x314D	; 0x80314d <xTickCount+0x1>
    31c6:	a0 91 4e 31 	lds	r26, 0x314E	; 0x80314e <xTickCount+0x2>
    31ca:	b0 91 4f 31 	lds	r27, 0x314F	; 0x80314f <xTickCount+0x3>
    31ce:	c1 80       	ldd	r12, Z+1	; 0x01
    31d0:	d2 80       	ldd	r13, Z+2	; 0x02
    31d2:	e3 80       	ldd	r14, Z+3	; 0x03
    31d4:	f4 80       	ldd	r15, Z+4	; 0x04
    31d6:	eb 01       	movw	r28, r22
    31d8:	08 81       	ld	r16, Y
    31da:	19 81       	ldd	r17, Y+1	; 0x01
    31dc:	2a 81       	ldd	r18, Y+2	; 0x02
    31de:	3b 81       	ldd	r19, Y+3	; 0x03
    31e0:	8c 19       	sub	r24, r12
    31e2:	9d 09       	sbc	r25, r13
    31e4:	ae 09       	sbc	r26, r14
    31e6:	bf 09       	sbc	r27, r15
    31e8:	80 17       	cp	r24, r16
    31ea:	91 07       	cpc	r25, r17
    31ec:	a2 07       	cpc	r26, r18
    31ee:	b3 07       	cpc	r27, r19
    31f0:	e8 f4       	brcc	.+58     	; 0x322c <xTaskCheckForTimeOut+0xba>
    31f2:	cf 01       	movw	r24, r30
    31f4:	80 90 4c 31 	lds	r8, 0x314C	; 0x80314c <xTickCount>
    31f8:	90 90 4d 31 	lds	r9, 0x314D	; 0x80314d <xTickCount+0x1>
    31fc:	a0 90 4e 31 	lds	r10, 0x314E	; 0x80314e <xTickCount+0x2>
    3200:	b0 90 4f 31 	lds	r11, 0x314F	; 0x80314f <xTickCount+0x3>
    3204:	b5 01       	movw	r22, r10
    3206:	a4 01       	movw	r20, r8
    3208:	4c 19       	sub	r20, r12
    320a:	5d 09       	sbc	r21, r13
    320c:	6e 09       	sbc	r22, r14
    320e:	7f 09       	sbc	r23, r15
    3210:	04 1b       	sub	r16, r20
    3212:	15 0b       	sbc	r17, r21
    3214:	26 0b       	sbc	r18, r22
    3216:	37 0b       	sbc	r19, r23
    3218:	08 83       	st	Y, r16
    321a:	19 83       	std	Y+1, r17	; 0x01
    321c:	2a 83       	std	Y+2, r18	; 0x02
    321e:	3b 83       	std	Y+3, r19	; 0x03
    3220:	0e 94 a8 18 	call	0x3150	; 0x3150 <vTaskSetTimeOutState>
    3224:	80 e0       	ldi	r24, 0x00	; 0
    3226:	03 c0       	rjmp	.+6      	; 0x322e <xTaskCheckForTimeOut+0xbc>
    3228:	81 e0       	ldi	r24, 0x01	; 1
    322a:	01 c0       	rjmp	.+2      	; 0x322e <xTaskCheckForTimeOut+0xbc>
    322c:	81 e0       	ldi	r24, 0x01	; 1
    322e:	0f 90       	pop	r0
    3230:	0f be       	out	0x3f, r0	; 63
    3232:	df 91       	pop	r29
    3234:	cf 91       	pop	r28
    3236:	1f 91       	pop	r17
    3238:	0f 91       	pop	r16
    323a:	ff 90       	pop	r15
    323c:	ef 90       	pop	r14
    323e:	df 90       	pop	r13
    3240:	cf 90       	pop	r12
    3242:	bf 90       	pop	r11
    3244:	af 90       	pop	r10
    3246:	9f 90       	pop	r9
    3248:	8f 90       	pop	r8
    324a:	08 95       	ret

0000324c <vTaskMissedYield>:
    324c:	81 e0       	ldi	r24, 0x01	; 1
    324e:	80 93 46 31 	sts	0x3146, r24	; 0x803146 <xMissedYield>
    3252:	08 95       	ret

00003254 <uxTaskGetStackHighWaterMark>:
    3254:	00 97       	sbiw	r24, 0x00	; 0
    3256:	21 f4       	brne	.+8      	; 0x3260 <uxTaskGetStackHighWaterMark+0xc>
    3258:	80 91 a4 31 	lds	r24, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    325c:	90 91 a5 31 	lds	r25, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    3260:	dc 01       	movw	r26, r24
    3262:	5b 96       	adiw	r26, 0x1b	; 27
    3264:	ed 91       	ld	r30, X+
    3266:	fc 91       	ld	r31, X
    3268:	5c 97       	sbiw	r26, 0x1c	; 28
    326a:	80 81       	ld	r24, Z
    326c:	81 31       	cpi	r24, 0x11	; 17
    326e:	41 f4       	brne	.+16     	; 0x3280 <uxTaskGetStackHighWaterMark+0x2c>
    3270:	31 96       	adiw	r30, 0x01	; 1
    3272:	80 e0       	ldi	r24, 0x00	; 0
    3274:	90 e0       	ldi	r25, 0x00	; 0
    3276:	01 96       	adiw	r24, 0x01	; 1
    3278:	21 91       	ld	r18, Z+
    327a:	21 31       	cpi	r18, 0x11	; 17
    327c:	e1 f3       	breq	.-8      	; 0x3276 <uxTaskGetStackHighWaterMark+0x22>
    327e:	08 95       	ret
    3280:	80 e0       	ldi	r24, 0x00	; 0
    3282:	90 e0       	ldi	r25, 0x00	; 0
    3284:	08 95       	ret

00003286 <xTaskGetCurrentTaskHandle>:
    3286:	80 91 a4 31 	lds	r24, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    328a:	90 91 a5 31 	lds	r25, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    328e:	08 95       	ret

00003290 <vTaskPriorityInherit>:
    3290:	0f 93       	push	r16
    3292:	1f 93       	push	r17
    3294:	cf 93       	push	r28
    3296:	df 93       	push	r29
    3298:	fc 01       	movw	r30, r24
    329a:	22 8d       	ldd	r18, Z+26	; 0x1a
    329c:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    32a0:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    32a4:	5a 96       	adiw	r26, 0x1a	; 26
    32a6:	8c 91       	ld	r24, X
    32a8:	28 17       	cp	r18, r24
    32aa:	08 f0       	brcs	.+2      	; 0x32ae <vTaskPriorityInherit+0x1e>
    32ac:	41 c0       	rjmp	.+130    	; 0x3330 <vTaskPriorityInherit+0xa0>
    32ae:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    32b2:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    32b6:	5a 96       	adiw	r26, 0x1a	; 26
    32b8:	3c 91       	ld	r19, X
    32ba:	84 e0       	ldi	r24, 0x04	; 4
    32bc:	90 e0       	ldi	r25, 0x00	; 0
    32be:	a0 e0       	ldi	r26, 0x00	; 0
    32c0:	b0 e0       	ldi	r27, 0x00	; 0
    32c2:	83 1b       	sub	r24, r19
    32c4:	91 09       	sbc	r25, r1
    32c6:	a1 09       	sbc	r26, r1
    32c8:	b1 09       	sbc	r27, r1
    32ca:	86 87       	std	Z+14, r24	; 0x0e
    32cc:	97 87       	std	Z+15, r25	; 0x0f
    32ce:	a0 8b       	std	Z+16, r26	; 0x10
    32d0:	b1 8b       	std	Z+17, r27	; 0x11
    32d2:	8b e0       	ldi	r24, 0x0B	; 11
    32d4:	28 9f       	mul	r18, r24
    32d6:	90 01       	movw	r18, r0
    32d8:	11 24       	eor	r1, r1
    32da:	28 58       	subi	r18, 0x88	; 136
    32dc:	3e 4c       	sbci	r19, 0xCE	; 206
    32de:	84 85       	ldd	r24, Z+12	; 0x0c
    32e0:	95 85       	ldd	r25, Z+13	; 0x0d
    32e2:	82 17       	cp	r24, r18
    32e4:	93 07       	cpc	r25, r19
    32e6:	e9 f4       	brne	.+58     	; 0x3322 <vTaskPriorityInherit+0x92>
    32e8:	8f 01       	movw	r16, r30
    32ea:	ef 01       	movw	r28, r30
    32ec:	22 96       	adiw	r28, 0x02	; 2
    32ee:	ce 01       	movw	r24, r28
    32f0:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    32f4:	e0 91 a4 31 	lds	r30, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    32f8:	f0 91 a5 31 	lds	r31, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    32fc:	82 8d       	ldd	r24, Z+26	; 0x1a
    32fe:	f8 01       	movw	r30, r16
    3300:	82 8f       	std	Z+26, r24	; 0x1a
    3302:	90 91 4a 31 	lds	r25, 0x314A	; 0x80314a <uxTopReadyPriority>
    3306:	98 17       	cp	r25, r24
    3308:	10 f4       	brcc	.+4      	; 0x330e <vTaskPriorityInherit+0x7e>
    330a:	80 93 4a 31 	sts	0x314A, r24	; 0x80314a <uxTopReadyPriority>
    330e:	fb e0       	ldi	r31, 0x0B	; 11
    3310:	8f 9f       	mul	r24, r31
    3312:	c0 01       	movw	r24, r0
    3314:	11 24       	eor	r1, r1
    3316:	be 01       	movw	r22, r28
    3318:	88 58       	subi	r24, 0x88	; 136
    331a:	9e 4c       	sbci	r25, 0xCE	; 206
    331c:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <vListInsertEnd>
    3320:	07 c0       	rjmp	.+14     	; 0x3330 <vTaskPriorityInherit+0xa0>
    3322:	a0 91 a4 31 	lds	r26, 0x31A4	; 0x8031a4 <pxCurrentTCB>
    3326:	b0 91 a5 31 	lds	r27, 0x31A5	; 0x8031a5 <pxCurrentTCB+0x1>
    332a:	5a 96       	adiw	r26, 0x1a	; 26
    332c:	8c 91       	ld	r24, X
    332e:	82 8f       	std	Z+26, r24	; 0x1a
    3330:	df 91       	pop	r29
    3332:	cf 91       	pop	r28
    3334:	1f 91       	pop	r17
    3336:	0f 91       	pop	r16
    3338:	08 95       	ret

0000333a <vTaskPriorityDisinherit>:
    333a:	0f 93       	push	r16
    333c:	1f 93       	push	r17
    333e:	cf 93       	push	r28
    3340:	df 93       	push	r29
    3342:	00 97       	sbiw	r24, 0x00	; 0
    3344:	49 f1       	breq	.+82     	; 0x3398 <vTaskPriorityDisinherit+0x5e>
    3346:	fc 01       	movw	r30, r24
    3348:	32 8d       	ldd	r19, Z+26	; 0x1a
    334a:	27 a1       	ldd	r18, Z+39	; 0x27
    334c:	32 17       	cp	r19, r18
    334e:	21 f1       	breq	.+72     	; 0x3398 <vTaskPriorityDisinherit+0x5e>
    3350:	ec 01       	movw	r28, r24
    3352:	8c 01       	movw	r16, r24
    3354:	0e 5f       	subi	r16, 0xFE	; 254
    3356:	1f 4f       	sbci	r17, 0xFF	; 255
    3358:	c8 01       	movw	r24, r16
    335a:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <vListRemove>
    335e:	8f a1       	ldd	r24, Y+39	; 0x27
    3360:	8a 8f       	std	Y+26, r24	; 0x1a
    3362:	44 e0       	ldi	r20, 0x04	; 4
    3364:	50 e0       	ldi	r21, 0x00	; 0
    3366:	60 e0       	ldi	r22, 0x00	; 0
    3368:	70 e0       	ldi	r23, 0x00	; 0
    336a:	48 1b       	sub	r20, r24
    336c:	51 09       	sbc	r21, r1
    336e:	61 09       	sbc	r22, r1
    3370:	71 09       	sbc	r23, r1
    3372:	4e 87       	std	Y+14, r20	; 0x0e
    3374:	5f 87       	std	Y+15, r21	; 0x0f
    3376:	68 8b       	std	Y+16, r22	; 0x10
    3378:	79 8b       	std	Y+17, r23	; 0x11
    337a:	90 91 4a 31 	lds	r25, 0x314A	; 0x80314a <uxTopReadyPriority>
    337e:	98 17       	cp	r25, r24
    3380:	10 f4       	brcc	.+4      	; 0x3386 <vTaskPriorityDisinherit+0x4c>
    3382:	80 93 4a 31 	sts	0x314A, r24	; 0x80314a <uxTopReadyPriority>
    3386:	fb e0       	ldi	r31, 0x0B	; 11
    3388:	8f 9f       	mul	r24, r31
    338a:	c0 01       	movw	r24, r0
    338c:	11 24       	eor	r1, r1
    338e:	b8 01       	movw	r22, r16
    3390:	88 58       	subi	r24, 0x88	; 136
    3392:	9e 4c       	sbci	r25, 0xCE	; 206
    3394:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <vListInsertEnd>
    3398:	df 91       	pop	r29
    339a:	cf 91       	pop	r28
    339c:	1f 91       	pop	r17
    339e:	0f 91       	pop	r16
    33a0:	08 95       	ret

000033a2 <_ZN8frt_task22_call_users_run_methodEPS_>:
    33a2:	ec 01       	movw	r28, r24
    33a4:	e8 81       	ld	r30, Y
    33a6:	f9 81       	ldd	r31, Y+1	; 0x01
    33a8:	01 90       	ld	r0, Z+
    33aa:	f0 81       	ld	r31, Z
    33ac:	e0 2d       	mov	r30, r0
    33ae:	19 95       	eicall
    33b0:	1a 82       	std	Y+2, r1	; 0x02
    33b2:	1b 82       	std	Y+3, r1	; 0x03
    33b4:	6f ef       	ldi	r22, 0xFF	; 255
    33b6:	7f ef       	ldi	r23, 0xFF	; 255
    33b8:	cb 01       	movw	r24, r22
    33ba:	0e 94 b4 17 	call	0x2f68	; 0x2f68 <vTaskDelay>
    33be:	fa cf       	rjmp	.-12     	; 0x33b4 <_ZN8frt_task22_call_users_run_methodEPS_+0x12>

000033c0 <_ZN8frt_taskC1EPKchjP8emstream>:
    33c0:	4f 92       	push	r4
    33c2:	5f 92       	push	r5
    33c4:	6f 92       	push	r6
    33c6:	7f 92       	push	r7
    33c8:	8f 92       	push	r8
    33ca:	9f 92       	push	r9
    33cc:	af 92       	push	r10
    33ce:	bf 92       	push	r11
    33d0:	cf 92       	push	r12
    33d2:	df 92       	push	r13
    33d4:	ef 92       	push	r14
    33d6:	ff 92       	push	r15
    33d8:	0f 93       	push	r16
    33da:	1f 93       	push	r17
    33dc:	cf 93       	push	r28
    33de:	df 93       	push	r29
    33e0:	cd b7       	in	r28, 0x3d	; 61
    33e2:	de b7       	in	r29, 0x3e	; 62
    33e4:	2a 97       	sbiw	r28, 0x0a	; 10
    33e6:	cd bf       	out	0x3d, r28	; 61
    33e8:	de bf       	out	0x3e, r29	; 62
    33ea:	4c 01       	movw	r8, r24
    33ec:	29 01       	movw	r4, r18
    33ee:	38 01       	movw	r6, r16
    33f0:	84 e8       	ldi	r24, 0x84	; 132
    33f2:	90 e2       	ldi	r25, 0x20	; 32
    33f4:	f4 01       	movw	r30, r8
    33f6:	80 83       	st	Z, r24
    33f8:	91 83       	std	Z+1, r25	; 0x01
    33fa:	fb 01       	movw	r30, r22
    33fc:	80 81       	ld	r24, Z
    33fe:	88 23       	and	r24, r24
    3400:	69 f0       	breq	.+26     	; 0x341c <_ZN8frt_taskC1EPKchjP8emstream+0x5c>
    3402:	de 01       	movw	r26, r28
    3404:	11 96       	adiw	r26, 0x01	; 1
    3406:	31 96       	adiw	r30, 0x01	; 1
    3408:	90 e0       	ldi	r25, 0x00	; 0
    340a:	02 c0       	rjmp	.+4      	; 0x3410 <_ZN8frt_taskC1EPKchjP8emstream+0x50>
    340c:	99 30       	cpi	r25, 0x09	; 9
    340e:	39 f0       	breq	.+14     	; 0x341e <_ZN8frt_taskC1EPKchjP8emstream+0x5e>
    3410:	9f 5f       	subi	r25, 0xFF	; 255
    3412:	8d 93       	st	X+, r24
    3414:	81 91       	ld	r24, Z+
    3416:	81 11       	cpse	r24, r1
    3418:	f9 cf       	rjmp	.-14     	; 0x340c <_ZN8frt_taskC1EPKchjP8emstream+0x4c>
    341a:	01 c0       	rjmp	.+2      	; 0x341e <_ZN8frt_taskC1EPKchjP8emstream+0x5e>
    341c:	90 e0       	ldi	r25, 0x00	; 0
    341e:	e1 e0       	ldi	r30, 0x01	; 1
    3420:	f0 e0       	ldi	r31, 0x00	; 0
    3422:	ec 0f       	add	r30, r28
    3424:	fd 1f       	adc	r31, r29
    3426:	e9 0f       	add	r30, r25
    3428:	f1 1d       	adc	r31, r1
    342a:	10 82       	st	Z, r1
    342c:	74 01       	movw	r14, r8
    342e:	f2 e0       	ldi	r31, 0x02	; 2
    3430:	ef 0e       	add	r14, r31
    3432:	f1 1c       	adc	r15, r1
    3434:	a1 2c       	mov	r10, r1
    3436:	b1 2c       	mov	r11, r1
    3438:	c1 2c       	mov	r12, r1
    343a:	d1 2c       	mov	r13, r1
    343c:	04 2f       	mov	r16, r20
    343e:	94 01       	movw	r18, r8
    3440:	a2 01       	movw	r20, r4
    3442:	be 01       	movw	r22, r28
    3444:	6f 5f       	subi	r22, 0xFF	; 255
    3446:	7f 4f       	sbci	r23, 0xFF	; 255
    3448:	89 eb       	ldi	r24, 0xB9	; 185
    344a:	91 e0       	ldi	r25, 0x01	; 1
    344c:	0e 94 65 14 	call	0x28ca	; 0x28ca <xTaskGenericCreate>
    3450:	f4 01       	movw	r30, r8
    3452:	66 82       	std	Z+6, r6	; 0x06
    3454:	77 82       	std	Z+7, r7	; 0x07
    3456:	40 86       	std	Z+8, r4	; 0x08
    3458:	51 86       	std	Z+9, r5	; 0x09
    345a:	20 91 a6 31 	lds	r18, 0x31A6	; 0x8031a6 <last_created_task_pointer>
    345e:	30 91 a7 31 	lds	r19, 0x31A7	; 0x8031a7 <last_created_task_pointer+0x1>
    3462:	24 83       	std	Z+4, r18	; 0x04
    3464:	35 83       	std	Z+5, r19	; 0x05
    3466:	80 92 a6 31 	sts	0x31A6, r8	; 0x8031a6 <last_created_task_pointer>
    346a:	90 92 a7 31 	sts	0x31A7, r9	; 0x8031a7 <last_created_task_pointer+0x1>
    346e:	14 86       	std	Z+12, r1	; 0x0c
    3470:	15 86       	std	Z+13, r1	; 0x0d
    3472:	40 90 e8 31 	lds	r4, 0x31E8	; 0x8031e8 <portStackTopForTask>
    3476:	50 90 e9 31 	lds	r5, 0x31E9	; 0x8031e9 <portStackTopForTask+0x1>
    347a:	ff ef       	ldi	r31, 0xFF	; 255
    347c:	4f 1a       	sub	r4, r31
    347e:	5f 0a       	sbc	r5, r31
    3480:	40 92 e8 31 	sts	0x31E8, r4	; 0x8031e8 <portStackTopForTask>
    3484:	50 92 e9 31 	sts	0x31E9, r5	; 0x8031e9 <portStackTopForTask+0x1>
    3488:	f4 01       	movw	r30, r8
    348a:	42 86       	std	Z+10, r4	; 0x0a
    348c:	53 86       	std	Z+11, r5	; 0x0b
    348e:	16 86       	std	Z+14, r1	; 0x0e
    3490:	17 86       	std	Z+15, r1	; 0x0f
    3492:	10 8a       	std	Z+16, r1	; 0x10
    3494:	11 8a       	std	Z+17, r1	; 0x11
    3496:	61 14       	cp	r6, r1
    3498:	71 04       	cpc	r7, r1
    349a:	09 f4       	brne	.+2      	; 0x349e <_ZN8frt_taskC1EPKchjP8emstream+0xde>
    349c:	44 c0       	rjmp	.+136    	; 0x3526 <_ZN8frt_taskC1EPKchjP8emstream+0x166>
    349e:	81 30       	cpi	r24, 0x01	; 1
    34a0:	79 f5       	brne	.+94     	; 0x3500 <_ZN8frt_taskC1EPKchjP8emstream+0x140>
    34a2:	6a e0       	ldi	r22, 0x0A	; 10
    34a4:	c3 01       	movw	r24, r6
    34a6:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    34aa:	7c 01       	movw	r14, r24
    34ac:	69 ef       	ldi	r22, 0xF9	; 249
    34ae:	72 e0       	ldi	r23, 0x02	; 2
    34b0:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    34b4:	be 01       	movw	r22, r28
    34b6:	6f 5f       	subi	r22, 0xFF	; 255
    34b8:	7f 4f       	sbci	r23, 0xFF	; 255
    34ba:	c7 01       	movw	r24, r14
    34bc:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    34c0:	6a e0       	ldi	r22, 0x0A	; 10
    34c2:	c7 01       	movw	r24, r14
    34c4:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    34c8:	7c 01       	movw	r14, r24
    34ca:	60 ef       	ldi	r22, 0xF0	; 240
    34cc:	72 e0       	ldi	r23, 0x02	; 2
    34ce:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    34d2:	6a e0       	ldi	r22, 0x0A	; 10
    34d4:	c7 01       	movw	r24, r14
    34d6:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    34da:	7c 01       	movw	r14, r24
    34dc:	62 ee       	ldi	r22, 0xE2	; 226
    34de:	72 e0       	ldi	r23, 0x02	; 2
    34e0:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    34e4:	63 e0       	ldi	r22, 0x03	; 3
    34e6:	c7 01       	movw	r24, r14
    34e8:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    34ec:	b2 01       	movw	r22, r4
    34ee:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <_ZN8emstreamlsEj>
    34f2:	62 e0       	ldi	r22, 0x02	; 2
    34f4:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    34f8:	66 e0       	ldi	r22, 0x06	; 6
    34fa:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    34fe:	13 c0       	rjmp	.+38     	; 0x3526 <_ZN8frt_taskC1EPKchjP8emstream+0x166>
    3500:	6a e0       	ldi	r22, 0x0A	; 10
    3502:	c3 01       	movw	r24, r6
    3504:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    3508:	4c 01       	movw	r8, r24
    350a:	6d ec       	ldi	r22, 0xCD	; 205
    350c:	72 e0       	ldi	r23, 0x02	; 2
    350e:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    3512:	be 01       	movw	r22, r28
    3514:	6f 5f       	subi	r22, 0xFF	; 255
    3516:	7f 4f       	sbci	r23, 0xFF	; 255
    3518:	c4 01       	movw	r24, r8
    351a:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    351e:	66 e0       	ldi	r22, 0x06	; 6
    3520:	c4 01       	movw	r24, r8
    3522:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    3526:	2a 96       	adiw	r28, 0x0a	; 10
    3528:	cd bf       	out	0x3d, r28	; 61
    352a:	de bf       	out	0x3e, r29	; 62
    352c:	df 91       	pop	r29
    352e:	cf 91       	pop	r28
    3530:	1f 91       	pop	r17
    3532:	0f 91       	pop	r16
    3534:	ff 90       	pop	r15
    3536:	ef 90       	pop	r14
    3538:	df 90       	pop	r13
    353a:	cf 90       	pop	r12
    353c:	bf 90       	pop	r11
    353e:	af 90       	pop	r10
    3540:	9f 90       	pop	r9
    3542:	8f 90       	pop	r8
    3544:	7f 90       	pop	r7
    3546:	6f 90       	pop	r6
    3548:	5f 90       	pop	r5
    354a:	4f 90       	pop	r4
    354c:	08 95       	ret

0000354e <_ZN8frt_task12print_statusER8emstream>:
    354e:	8f 92       	push	r8
    3550:	9f 92       	push	r9
    3552:	af 92       	push	r10
    3554:	bf 92       	push	r11
    3556:	cf 92       	push	r12
    3558:	df 92       	push	r13
    355a:	ef 92       	push	r14
    355c:	ff 92       	push	r15
    355e:	0f 93       	push	r16
    3560:	1f 93       	push	r17
    3562:	cf 93       	push	r28
    3564:	df 93       	push	r29
    3566:	ec 01       	movw	r28, r24
    3568:	8b 01       	movw	r16, r22
    356a:	8a 81       	ldd	r24, Y+2	; 0x02
    356c:	9b 81       	ldd	r25, Y+3	; 0x03
    356e:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <pcTaskGetTaskName>
    3572:	bc 01       	movw	r22, r24
    3574:	c8 01       	movw	r24, r16
    3576:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    357a:	d8 01       	movw	r26, r16
    357c:	ed 91       	ld	r30, X+
    357e:	fc 91       	ld	r31, X
    3580:	02 80       	ldd	r0, Z+2	; 0x02
    3582:	f3 81       	ldd	r31, Z+3	; 0x03
    3584:	e0 2d       	mov	r30, r0
    3586:	69 e0       	ldi	r22, 0x09	; 9
    3588:	c8 01       	movw	r24, r16
    358a:	19 95       	eicall
    358c:	8a 81       	ldd	r24, Y+2	; 0x02
    358e:	9b 81       	ldd	r25, Y+3	; 0x03
    3590:	0e 94 bc 15 	call	0x2b78	; 0x2b78 <pcTaskGetTaskName>
    3594:	fc 01       	movw	r30, r24
    3596:	01 90       	ld	r0, Z+
    3598:	00 20       	and	r0, r0
    359a:	e9 f7       	brne	.-6      	; 0x3596 <_ZN8frt_task12print_statusER8emstream+0x48>
    359c:	31 97       	sbiw	r30, 0x01	; 1
    359e:	e8 1b       	sub	r30, r24
    35a0:	f9 0b       	sbc	r31, r25
    35a2:	38 97       	sbiw	r30, 0x08	; 8
    35a4:	48 f4       	brcc	.+18     	; 0x35b8 <_ZN8frt_task12print_statusER8emstream+0x6a>
    35a6:	d8 01       	movw	r26, r16
    35a8:	ed 91       	ld	r30, X+
    35aa:	fc 91       	ld	r31, X
    35ac:	02 80       	ldd	r0, Z+2	; 0x02
    35ae:	f3 81       	ldd	r31, Z+3	; 0x03
    35b0:	e0 2d       	mov	r30, r0
    35b2:	69 e0       	ldi	r22, 0x09	; 9
    35b4:	c8 01       	movw	r24, r16
    35b6:	19 95       	eicall
    35b8:	ce 84       	ldd	r12, Y+14	; 0x0e
    35ba:	df 84       	ldd	r13, Y+15	; 0x0f
    35bc:	e8 88       	ldd	r14, Y+16	; 0x10
    35be:	f9 88       	ldd	r15, Y+17	; 0x11
    35c0:	a8 84       	ldd	r10, Y+8	; 0x08
    35c2:	b9 84       	ldd	r11, Y+9	; 0x09
    35c4:	8a 81       	ldd	r24, Y+2	; 0x02
    35c6:	9b 81       	ldd	r25, Y+3	; 0x03
    35c8:	0e 94 2a 19 	call	0x3254	; 0x3254 <uxTaskGetStackHighWaterMark>
    35cc:	98 2e       	mov	r9, r24
    35ce:	8c 84       	ldd	r8, Y+12	; 0x0c
    35d0:	8a 81       	ldd	r24, Y+2	; 0x02
    35d2:	9b 81       	ldd	r25, Y+3	; 0x03
    35d4:	0e 94 67 15 	call	0x2ace	; 0x2ace <uxTaskPriorityGet>
    35d8:	68 2f       	mov	r22, r24
    35da:	c8 01       	movw	r24, r16
    35dc:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <_ZN8emstreamlsEh>
    35e0:	6a e0       	ldi	r22, 0x0A	; 10
    35e2:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    35e6:	ec 01       	movw	r28, r24
    35e8:	6f e6       	ldi	r22, 0x6F	; 111
    35ea:	73 e0       	ldi	r23, 0x03	; 3
    35ec:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    35f0:	68 2d       	mov	r22, r8
    35f2:	ce 01       	movw	r24, r28
    35f4:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <_ZN8emstreamlsEh>
    35f8:	6a e0       	ldi	r22, 0x0A	; 10
    35fa:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    35fe:	ec 01       	movw	r28, r24
    3600:	6d e6       	ldi	r22, 0x6D	; 109
    3602:	73 e0       	ldi	r23, 0x03	; 3
    3604:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    3608:	69 2d       	mov	r22, r9
    360a:	ce 01       	movw	r24, r28
    360c:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <_ZN8emstreamlsEh>
    3610:	6a e0       	ldi	r22, 0x0A	; 10
    3612:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    3616:	ec 01       	movw	r28, r24
    3618:	6b e6       	ldi	r22, 0x6B	; 107
    361a:	73 e0       	ldi	r23, 0x03	; 3
    361c:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    3620:	b5 01       	movw	r22, r10
    3622:	ce 01       	movw	r24, r28
    3624:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <_ZN8emstreamlsEj>
    3628:	6a e0       	ldi	r22, 0x0A	; 10
    362a:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    362e:	ec 01       	movw	r28, r24
    3630:	69 e6       	ldi	r22, 0x69	; 105
    3632:	73 e0       	ldi	r23, 0x03	; 3
    3634:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    3638:	6a e0       	ldi	r22, 0x0A	; 10
    363a:	ce 01       	movw	r24, r28
    363c:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    3640:	ec 01       	movw	r28, r24
    3642:	67 e6       	ldi	r22, 0x67	; 103
    3644:	73 e0       	ldi	r23, 0x03	; 3
    3646:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    364a:	b7 01       	movw	r22, r14
    364c:	a6 01       	movw	r20, r12
    364e:	ce 01       	movw	r24, r28
    3650:	0e 94 56 1d 	call	0x3aac	; 0x3aac <_ZN8emstreamlsEm>
    3654:	df 91       	pop	r29
    3656:	cf 91       	pop	r28
    3658:	1f 91       	pop	r17
    365a:	0f 91       	pop	r16
    365c:	ff 90       	pop	r15
    365e:	ef 90       	pop	r14
    3660:	df 90       	pop	r13
    3662:	cf 90       	pop	r12
    3664:	bf 90       	pop	r11
    3666:	af 90       	pop	r10
    3668:	9f 90       	pop	r9
    366a:	8f 90       	pop	r8
    366c:	08 95       	ret

0000366e <_ZN14frt_text_queue7getcharEv>:
    366e:	0f 93       	push	r16
    3670:	cf 93       	push	r28
    3672:	df 93       	push	r29
    3674:	1f 92       	push	r1
    3676:	cd b7       	in	r28, 0x3d	; 61
    3678:	de b7       	in	r29, 0x3e	; 62
    367a:	00 e0       	ldi	r16, 0x00	; 0
    367c:	2f ef       	ldi	r18, 0xFF	; 255
    367e:	3f ef       	ldi	r19, 0xFF	; 255
    3680:	a9 01       	movw	r20, r18
    3682:	be 01       	movw	r22, r28
    3684:	6f 5f       	subi	r22, 0xFF	; 255
    3686:	7f 4f       	sbci	r23, 0xFF	; 255
    3688:	fc 01       	movw	r30, r24
    368a:	80 85       	ldd	r24, Z+8	; 0x08
    368c:	91 85       	ldd	r25, Z+9	; 0x09
    368e:	0e 94 43 13 	call	0x2686	; 0x2686 <xQueueGenericReceive>
    3692:	81 30       	cpi	r24, 0x01	; 1
    3694:	19 f4       	brne	.+6      	; 0x369c <_ZN14frt_text_queue7getcharEv+0x2e>
    3696:	89 81       	ldd	r24, Y+1	; 0x01
    3698:	90 e0       	ldi	r25, 0x00	; 0
    369a:	02 c0       	rjmp	.+4      	; 0x36a0 <_ZN14frt_text_queue7getcharEv+0x32>
    369c:	8f ef       	ldi	r24, 0xFF	; 255
    369e:	9f ef       	ldi	r25, 0xFF	; 255
    36a0:	0f 90       	pop	r0
    36a2:	df 91       	pop	r29
    36a4:	cf 91       	pop	r28
    36a6:	0f 91       	pop	r16
    36a8:	08 95       	ret

000036aa <_ZN14frt_text_queue14check_for_charEv>:
    36aa:	fc 01       	movw	r30, r24
    36ac:	80 85       	ldd	r24, Z+8	; 0x08
    36ae:	91 85       	ldd	r25, Z+9	; 0x09
    36b0:	0e 94 07 14 	call	0x280e	; 0x280e <uxQueueMessagesWaiting>
    36b4:	91 e0       	ldi	r25, 0x01	; 1
    36b6:	81 11       	cpse	r24, r1
    36b8:	01 c0       	rjmp	.+2      	; 0x36bc <_ZN14frt_text_queue14check_for_charEv+0x12>
    36ba:	90 e0       	ldi	r25, 0x00	; 0
    36bc:	89 2f       	mov	r24, r25
    36be:	08 95       	ret

000036c0 <_ZN14frt_text_queue7putcharEc>:
    36c0:	0f 93       	push	r16
    36c2:	cf 93       	push	r28
    36c4:	df 93       	push	r29
    36c6:	1f 92       	push	r1
    36c8:	cd b7       	in	r28, 0x3d	; 61
    36ca:	de b7       	in	r29, 0x3e	; 62
    36cc:	69 83       	std	Y+1, r22	; 0x01
    36ce:	fc 01       	movw	r30, r24
    36d0:	22 85       	ldd	r18, Z+10	; 0x0a
    36d2:	33 85       	ldd	r19, Z+11	; 0x0b
    36d4:	44 85       	ldd	r20, Z+12	; 0x0c
    36d6:	55 85       	ldd	r21, Z+13	; 0x0d
    36d8:	00 e0       	ldi	r16, 0x00	; 0
    36da:	be 01       	movw	r22, r28
    36dc:	6f 5f       	subi	r22, 0xFF	; 255
    36de:	7f 4f       	sbci	r23, 0xFF	; 255
    36e0:	80 85       	ldd	r24, Z+8	; 0x08
    36e2:	91 85       	ldd	r25, Z+9	; 0x09
    36e4:	0e 94 a8 12 	call	0x2550	; 0x2550 <xQueueGenericSend>
    36e8:	91 e0       	ldi	r25, 0x01	; 1
    36ea:	81 11       	cpse	r24, r1
    36ec:	01 c0       	rjmp	.+2      	; 0x36f0 <_ZN14frt_text_queue7putcharEc+0x30>
    36ee:	90 e0       	ldi	r25, 0x00	; 0
    36f0:	89 2f       	mov	r24, r25
    36f2:	0f 90       	pop	r0
    36f4:	df 91       	pop	r29
    36f6:	cf 91       	pop	r28
    36f8:	0f 91       	pop	r16
    36fa:	08 95       	ret

000036fc <_ZN14frt_text_queueC1EjP8emstreamm>:
    36fc:	8f 92       	push	r8
    36fe:	9f 92       	push	r9
    3700:	bf 92       	push	r11
    3702:	cf 92       	push	r12
    3704:	df 92       	push	r13
    3706:	ef 92       	push	r14
    3708:	ff 92       	push	r15
    370a:	0f 93       	push	r16
    370c:	1f 93       	push	r17
    370e:	cf 93       	push	r28
    3710:	df 93       	push	r29
    3712:	ec 01       	movw	r28, r24
    3714:	b6 2e       	mov	r11, r22
    3716:	4a 01       	movw	r8, r20
    3718:	68 01       	movw	r12, r16
    371a:	79 01       	movw	r14, r18
    371c:	0e 94 6d 1c 	call	0x38da	; 0x38da <_ZN8emstreamC1Ev>
    3720:	8c e8       	ldi	r24, 0x8C	; 140
    3722:	90 e2       	ldi	r25, 0x20	; 32
    3724:	88 83       	st	Y, r24
    3726:	99 83       	std	Y+1, r25	; 0x01
    3728:	8e 86       	std	Y+14, r8	; 0x0e
    372a:	9f 86       	std	Y+15, r9	; 0x0f
    372c:	40 e0       	ldi	r20, 0x00	; 0
    372e:	61 e0       	ldi	r22, 0x01	; 1
    3730:	8b 2d       	mov	r24, r11
    3732:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <xQueueGenericCreate>
    3736:	88 87       	std	Y+8, r24	; 0x08
    3738:	99 87       	std	Y+9, r25	; 0x09
    373a:	ca 86       	std	Y+10, r12	; 0x0a
    373c:	db 86       	std	Y+11, r13	; 0x0b
    373e:	ec 86       	std	Y+12, r14	; 0x0c
    3740:	fd 86       	std	Y+13, r15	; 0x0d
    3742:	df 91       	pop	r29
    3744:	cf 91       	pop	r28
    3746:	1f 91       	pop	r17
    3748:	0f 91       	pop	r16
    374a:	ff 90       	pop	r15
    374c:	ef 90       	pop	r14
    374e:	df 90       	pop	r13
    3750:	cf 90       	pop	r12
    3752:	bf 90       	pop	r11
    3754:	9f 90       	pop	r9
    3756:	8f 90       	pop	r8
    3758:	08 95       	ret

0000375a <_Znwj>:
    375a:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <pvPortMalloc>
    375e:	08 95       	ret

00003760 <_Znaj>:
    3760:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <pvPortMalloc>
    3764:	08 95       	ret

00003766 <__cxa_pure_virtual>:
    3766:	08 95       	ret

00003768 <_ZN7base232C1EjP12USART_struct>:
    3768:	cf 93       	push	r28
    376a:	df 93       	push	r29
    376c:	fc 01       	movw	r30, r24
    376e:	da 01       	movw	r26, r20
    3770:	40 3a       	cpi	r20, 0xA0	; 160
    3772:	68 e0       	ldi	r22, 0x08	; 8
    3774:	56 07       	cpc	r21, r22
    3776:	49 f4       	brne	.+18     	; 0x378a <_ZN7base232C1EjP12USART_struct+0x22>
    3778:	80 e4       	ldi	r24, 0x40	; 64
    377a:	96 e0       	ldi	r25, 0x06	; 6
    377c:	82 83       	std	Z+2, r24	; 0x02
    377e:	93 83       	std	Z+3, r25	; 0x03
    3780:	82 e0       	ldi	r24, 0x02	; 2
    3782:	84 83       	std	Z+4, r24	; 0x04
    3784:	83 e0       	ldi	r24, 0x03	; 3
    3786:	85 83       	std	Z+5, r24	; 0x05
    3788:	4c c0       	rjmp	.+152    	; 0x3822 <_ZN7base232C1EjP12USART_struct+0xba>
    378a:	40 3b       	cpi	r20, 0xB0	; 176
    378c:	78 e0       	ldi	r23, 0x08	; 8
    378e:	57 07       	cpc	r21, r23
    3790:	49 f4       	brne	.+18     	; 0x37a4 <_ZN7base232C1EjP12USART_struct+0x3c>
    3792:	80 e4       	ldi	r24, 0x40	; 64
    3794:	96 e0       	ldi	r25, 0x06	; 6
    3796:	82 83       	std	Z+2, r24	; 0x02
    3798:	93 83       	std	Z+3, r25	; 0x03
    379a:	86 e0       	ldi	r24, 0x06	; 6
    379c:	84 83       	std	Z+4, r24	; 0x04
    379e:	87 e0       	ldi	r24, 0x07	; 7
    37a0:	85 83       	std	Z+5, r24	; 0x05
    37a2:	3f c0       	rjmp	.+126    	; 0x3822 <_ZN7base232C1EjP12USART_struct+0xba>
    37a4:	40 3a       	cpi	r20, 0xA0	; 160
    37a6:	89 e0       	ldi	r24, 0x09	; 9
    37a8:	58 07       	cpc	r21, r24
    37aa:	49 f4       	brne	.+18     	; 0x37be <_ZN7base232C1EjP12USART_struct+0x56>
    37ac:	80 e6       	ldi	r24, 0x60	; 96
    37ae:	96 e0       	ldi	r25, 0x06	; 6
    37b0:	82 83       	std	Z+2, r24	; 0x02
    37b2:	93 83       	std	Z+3, r25	; 0x03
    37b4:	82 e0       	ldi	r24, 0x02	; 2
    37b6:	84 83       	std	Z+4, r24	; 0x04
    37b8:	83 e0       	ldi	r24, 0x03	; 3
    37ba:	85 83       	std	Z+5, r24	; 0x05
    37bc:	32 c0       	rjmp	.+100    	; 0x3822 <_ZN7base232C1EjP12USART_struct+0xba>
    37be:	40 3b       	cpi	r20, 0xB0	; 176
    37c0:	69 e0       	ldi	r22, 0x09	; 9
    37c2:	56 07       	cpc	r21, r22
    37c4:	49 f4       	brne	.+18     	; 0x37d8 <_ZN7base232C1EjP12USART_struct+0x70>
    37c6:	80 e6       	ldi	r24, 0x60	; 96
    37c8:	96 e0       	ldi	r25, 0x06	; 6
    37ca:	82 83       	std	Z+2, r24	; 0x02
    37cc:	93 83       	std	Z+3, r25	; 0x03
    37ce:	86 e0       	ldi	r24, 0x06	; 6
    37d0:	84 83       	std	Z+4, r24	; 0x04
    37d2:	87 e0       	ldi	r24, 0x07	; 7
    37d4:	85 83       	std	Z+5, r24	; 0x05
    37d6:	25 c0       	rjmp	.+74     	; 0x3822 <_ZN7base232C1EjP12USART_struct+0xba>
    37d8:	40 3a       	cpi	r20, 0xA0	; 160
    37da:	7a e0       	ldi	r23, 0x0A	; 10
    37dc:	57 07       	cpc	r21, r23
    37de:	49 f4       	brne	.+18     	; 0x37f2 <_ZN7base232C1EjP12USART_struct+0x8a>
    37e0:	80 e8       	ldi	r24, 0x80	; 128
    37e2:	96 e0       	ldi	r25, 0x06	; 6
    37e4:	82 83       	std	Z+2, r24	; 0x02
    37e6:	93 83       	std	Z+3, r25	; 0x03
    37e8:	82 e0       	ldi	r24, 0x02	; 2
    37ea:	84 83       	std	Z+4, r24	; 0x04
    37ec:	83 e0       	ldi	r24, 0x03	; 3
    37ee:	85 83       	std	Z+5, r24	; 0x05
    37f0:	18 c0       	rjmp	.+48     	; 0x3822 <_ZN7base232C1EjP12USART_struct+0xba>
    37f2:	40 3b       	cpi	r20, 0xB0	; 176
    37f4:	8a e0       	ldi	r24, 0x0A	; 10
    37f6:	58 07       	cpc	r21, r24
    37f8:	49 f4       	brne	.+18     	; 0x380c <_ZN7base232C1EjP12USART_struct+0xa4>
    37fa:	80 e8       	ldi	r24, 0x80	; 128
    37fc:	96 e0       	ldi	r25, 0x06	; 6
    37fe:	82 83       	std	Z+2, r24	; 0x02
    3800:	93 83       	std	Z+3, r25	; 0x03
    3802:	86 e0       	ldi	r24, 0x06	; 6
    3804:	84 83       	std	Z+4, r24	; 0x04
    3806:	87 e0       	ldi	r24, 0x07	; 7
    3808:	85 83       	std	Z+5, r24	; 0x05
    380a:	0b c0       	rjmp	.+22     	; 0x3822 <_ZN7base232C1EjP12USART_struct+0xba>
    380c:	40 3a       	cpi	r20, 0xA0	; 160
    380e:	5b 40       	sbci	r21, 0x0B	; 11
    3810:	41 f4       	brne	.+16     	; 0x3822 <_ZN7base232C1EjP12USART_struct+0xba>
    3812:	80 ea       	ldi	r24, 0xA0	; 160
    3814:	96 e0       	ldi	r25, 0x06	; 6
    3816:	82 83       	std	Z+2, r24	; 0x02
    3818:	93 83       	std	Z+3, r25	; 0x03
    381a:	82 e0       	ldi	r24, 0x02	; 2
    381c:	84 83       	std	Z+4, r24	; 0x04
    381e:	83 e0       	ldi	r24, 0x03	; 3
    3820:	85 83       	std	Z+5, r24	; 0x05
    3822:	a6 83       	std	Z+6, r26	; 0x06
    3824:	b7 83       	std	Z+7, r27	; 0x07
    3826:	cd 01       	movw	r24, r26
    3828:	01 96       	adiw	r24, 0x01	; 1
    382a:	80 87       	std	Z+8, r24	; 0x08
    382c:	91 87       	std	Z+9, r25	; 0x09
    382e:	03 96       	adiw	r24, 0x03	; 3
    3830:	82 87       	std	Z+10, r24	; 0x0a
    3832:	93 87       	std	Z+11, r25	; 0x0b
    3834:	25 81       	ldd	r18, Z+5	; 0x05
    3836:	c2 81       	ldd	r28, Z+2	; 0x02
    3838:	d3 81       	ldd	r29, Z+3	; 0x03
    383a:	4c 81       	ldd	r20, Y+4	; 0x04
    383c:	81 e0       	ldi	r24, 0x01	; 1
    383e:	90 e0       	ldi	r25, 0x00	; 0
    3840:	bc 01       	movw	r22, r24
    3842:	02 c0       	rjmp	.+4      	; 0x3848 <_ZN7base232C1EjP12USART_struct+0xe0>
    3844:	66 0f       	add	r22, r22
    3846:	77 1f       	adc	r23, r23
    3848:	2a 95       	dec	r18
    384a:	e2 f7       	brpl	.-8      	; 0x3844 <_ZN7base232C1EjP12USART_struct+0xdc>
    384c:	9b 01       	movw	r18, r22
    384e:	24 2b       	or	r18, r20
    3850:	2c 83       	std	Y+4, r18	; 0x04
    3852:	25 81       	ldd	r18, Z+5	; 0x05
    3854:	c2 81       	ldd	r28, Z+2	; 0x02
    3856:	d3 81       	ldd	r29, Z+3	; 0x03
    3858:	48 81       	ld	r20, Y
    385a:	bc 01       	movw	r22, r24
    385c:	02 c0       	rjmp	.+4      	; 0x3862 <_ZN7base232C1EjP12USART_struct+0xfa>
    385e:	66 0f       	add	r22, r22
    3860:	77 1f       	adc	r23, r23
    3862:	2a 95       	dec	r18
    3864:	e2 f7       	brpl	.-8      	; 0x385e <_ZN7base232C1EjP12USART_struct+0xf6>
    3866:	9b 01       	movw	r18, r22
    3868:	24 2b       	or	r18, r20
    386a:	28 83       	st	Y, r18
    386c:	34 81       	ldd	r19, Z+4	; 0x04
    386e:	c2 81       	ldd	r28, Z+2	; 0x02
    3870:	d3 81       	ldd	r29, Z+3	; 0x03
    3872:	28 81       	ld	r18, Y
    3874:	02 c0       	rjmp	.+4      	; 0x387a <_ZN7base232C1EjP12USART_struct+0x112>
    3876:	88 0f       	add	r24, r24
    3878:	99 1f       	adc	r25, r25
    387a:	3a 95       	dec	r19
    387c:	e2 f7       	brpl	.-8      	; 0x3876 <_ZN7base232C1EjP12USART_struct+0x10e>
    387e:	80 95       	com	r24
    3880:	90 95       	com	r25
    3882:	82 23       	and	r24, r18
    3884:	88 83       	st	Y, r24
    3886:	80 e1       	ldi	r24, 0x10	; 16
    3888:	13 96       	adiw	r26, 0x03	; 3
    388a:	8c 93       	st	X, r24
    388c:	13 97       	sbiw	r26, 0x03	; 3
    388e:	83 e0       	ldi	r24, 0x03	; 3
    3890:	15 96       	adiw	r26, 0x05	; 5
    3892:	8c 93       	st	X, r24
    3894:	15 97       	sbiw	r26, 0x05	; 5
    3896:	80 ef       	ldi	r24, 0xF0	; 240
    3898:	17 96       	adiw	r26, 0x07	; 7
    389a:	8c 93       	st	X, r24
    389c:	17 97       	sbiw	r26, 0x07	; 7
    389e:	81 e2       	ldi	r24, 0x21	; 33
    38a0:	16 96       	adiw	r26, 0x06	; 6
    38a2:	8c 93       	st	X, r24
    38a4:	16 97       	sbiw	r26, 0x06	; 6
    38a6:	88 e1       	ldi	r24, 0x18	; 24
    38a8:	14 96       	adiw	r26, 0x04	; 4
    38aa:	8c 93       	st	X, r24
    38ac:	80 e8       	ldi	r24, 0x80	; 128
    38ae:	85 87       	std	Z+13, r24	; 0x0d
    38b0:	80 e4       	ldi	r24, 0x40	; 64
    38b2:	86 87       	std	Z+14, r24	; 0x0e
    38b4:	80 e2       	ldi	r24, 0x20	; 32
    38b6:	84 87       	std	Z+12, r24	; 0x0c
    38b8:	06 80       	ldd	r0, Z+6	; 0x06
    38ba:	f7 81       	ldd	r31, Z+7	; 0x07
    38bc:	e0 2d       	mov	r30, r0
    38be:	80 81       	ld	r24, Z
    38c0:	80 81       	ld	r24, Z
    38c2:	df 91       	pop	r29
    38c4:	cf 91       	pop	r28
    38c6:	08 95       	ret

000038c8 <_ZN8emstream13ready_to_sendEv>:
    38c8:	81 e0       	ldi	r24, 0x01	; 1
    38ca:	08 95       	ret

000038cc <_ZN8emstream7getcharEv>:
    38cc:	80 e0       	ldi	r24, 0x00	; 0
    38ce:	90 e0       	ldi	r25, 0x00	; 0
    38d0:	08 95       	ret

000038d2 <_ZN8emstream14check_for_charEv>:
    38d2:	80 e0       	ldi	r24, 0x00	; 0
    38d4:	08 95       	ret

000038d6 <_ZN8emstream12transmit_nowEv>:
    38d6:	08 95       	ret

000038d8 <_ZN8emstream12clear_screenEv>:
    38d8:	08 95       	ret

000038da <_ZN8emstreamC1Ev>:
    38da:	fc 01       	movw	r30, r24
    38dc:	8c e9       	ldi	r24, 0x9C	; 156
    38de:	90 e2       	ldi	r25, 0x20	; 32
    38e0:	80 83       	st	Z, r24
    38e2:	91 83       	std	Z+1, r25	; 0x01
    38e4:	8a e0       	ldi	r24, 0x0A	; 10
    38e6:	82 83       	std	Z+2, r24	; 0x02
    38e8:	13 82       	std	Z+3, r1	; 0x03
    38ea:	83 e0       	ldi	r24, 0x03	; 3
    38ec:	85 83       	std	Z+5, r24	; 0x05
    38ee:	14 82       	std	Z+4, r1	; 0x04
    38f0:	16 82       	std	Z+6, r1	; 0x06
    38f2:	17 82       	std	Z+7, r1	; 0x07
    38f4:	08 95       	ret

000038f6 <_ZN8emstream4putsEPKc>:
    38f6:	0f 93       	push	r16
    38f8:	1f 93       	push	r17
    38fa:	cf 93       	push	r28
    38fc:	df 93       	push	r29
    38fe:	8c 01       	movw	r16, r24
    3900:	fb 01       	movw	r30, r22
    3902:	dc 01       	movw	r26, r24
    3904:	14 96       	adiw	r26, 0x04	; 4
    3906:	8c 91       	ld	r24, X
    3908:	81 11       	cpse	r24, r1
    390a:	04 c0       	rjmp	.+8      	; 0x3914 <_ZN8emstream4putsEPKc+0x1e>
    390c:	60 81       	ld	r22, Z
    390e:	61 11       	cpse	r22, r1
    3910:	17 c0       	rjmp	.+46     	; 0x3940 <_ZN8emstream4putsEPKc+0x4a>
    3912:	23 c0       	rjmp	.+70     	; 0x395a <_ZN8emstream4putsEPKc+0x64>
    3914:	d8 01       	movw	r26, r16
    3916:	14 96       	adiw	r26, 0x04	; 4
    3918:	1c 92       	st	X, r1
    391a:	eb 01       	movw	r28, r22
    391c:	21 96       	adiw	r28, 0x01	; 1
    391e:	64 91       	lpm	r22, Z
    3920:	66 23       	and	r22, r22
    3922:	d9 f0       	breq	.+54     	; 0x395a <_ZN8emstream4putsEPKc+0x64>
    3924:	d8 01       	movw	r26, r16
    3926:	ed 91       	ld	r30, X+
    3928:	fc 91       	ld	r31, X
    392a:	02 80       	ldd	r0, Z+2	; 0x02
    392c:	f3 81       	ldd	r31, Z+3	; 0x03
    392e:	e0 2d       	mov	r30, r0
    3930:	c8 01       	movw	r24, r16
    3932:	19 95       	eicall
    3934:	fe 01       	movw	r30, r28
    3936:	64 91       	lpm	r22, Z
    3938:	21 96       	adiw	r28, 0x01	; 1
    393a:	61 11       	cpse	r22, r1
    393c:	f3 cf       	rjmp	.-26     	; 0x3924 <_ZN8emstream4putsEPKc+0x2e>
    393e:	0d c0       	rjmp	.+26     	; 0x395a <_ZN8emstream4putsEPKc+0x64>
    3940:	ef 01       	movw	r28, r30
    3942:	21 96       	adiw	r28, 0x01	; 1
    3944:	d8 01       	movw	r26, r16
    3946:	ed 91       	ld	r30, X+
    3948:	fc 91       	ld	r31, X
    394a:	02 80       	ldd	r0, Z+2	; 0x02
    394c:	f3 81       	ldd	r31, Z+3	; 0x03
    394e:	e0 2d       	mov	r30, r0
    3950:	c8 01       	movw	r24, r16
    3952:	19 95       	eicall
    3954:	69 91       	ld	r22, Y+
    3956:	61 11       	cpse	r22, r1
    3958:	f5 cf       	rjmp	.-22     	; 0x3944 <_ZN8emstream4putsEPKc+0x4e>
    395a:	df 91       	pop	r29
    395c:	cf 91       	pop	r28
    395e:	1f 91       	pop	r17
    3960:	0f 91       	pop	r16
    3962:	08 95       	ret

00003964 <_ZN8emstreamlsE15ser_manipulator>:
    3964:	cf 93       	push	r28
    3966:	df 93       	push	r29
    3968:	ec 01       	movw	r28, r24
    396a:	86 2f       	mov	r24, r22
    396c:	90 e0       	ldi	r25, 0x00	; 0
    396e:	8b 30       	cpi	r24, 0x0B	; 11
    3970:	91 05       	cpc	r25, r1
    3972:	d8 f5       	brcc	.+118    	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    3974:	fc 01       	movw	r30, r24
    3976:	88 27       	eor	r24, r24
    3978:	eb 5f       	subi	r30, 0xFB	; 251
    397a:	fe 4f       	sbci	r31, 0xFE	; 254
    397c:	8f 4f       	sbci	r24, 0xFF	; 255
    397e:	0c 94 37 22 	jmp	0x446e	; 0x446e <__tablejump2__>
    3982:	82 e0       	ldi	r24, 0x02	; 2
    3984:	8a 83       	std	Y+2, r24	; 0x02
    3986:	31 c0       	rjmp	.+98     	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    3988:	88 e0       	ldi	r24, 0x08	; 8
    398a:	8a 83       	std	Y+2, r24	; 0x02
    398c:	2e c0       	rjmp	.+92     	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    398e:	8a e0       	ldi	r24, 0x0A	; 10
    3990:	8a 83       	std	Y+2, r24	; 0x02
    3992:	2b c0       	rjmp	.+86     	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    3994:	80 e1       	ldi	r24, 0x10	; 16
    3996:	8a 83       	std	Y+2, r24	; 0x02
    3998:	28 c0       	rjmp	.+80     	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    399a:	81 e0       	ldi	r24, 0x01	; 1
    399c:	8b 83       	std	Y+3, r24	; 0x03
    399e:	25 c0       	rjmp	.+74     	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    39a0:	1b 82       	std	Y+3, r1	; 0x03
    39a2:	23 c0       	rjmp	.+70     	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    39a4:	e8 81       	ld	r30, Y
    39a6:	f9 81       	ldd	r31, Y+1	; 0x01
    39a8:	02 80       	ldd	r0, Z+2	; 0x02
    39aa:	f3 81       	ldd	r31, Z+3	; 0x03
    39ac:	e0 2d       	mov	r30, r0
    39ae:	6d e0       	ldi	r22, 0x0D	; 13
    39b0:	ce 01       	movw	r24, r28
    39b2:	19 95       	eicall
    39b4:	e8 81       	ld	r30, Y
    39b6:	f9 81       	ldd	r31, Y+1	; 0x01
    39b8:	02 80       	ldd	r0, Z+2	; 0x02
    39ba:	f3 81       	ldd	r31, Z+3	; 0x03
    39bc:	e0 2d       	mov	r30, r0
    39be:	6a e0       	ldi	r22, 0x0A	; 10
    39c0:	ce 01       	movw	r24, r28
    39c2:	19 95       	eicall
    39c4:	12 c0       	rjmp	.+36     	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    39c6:	e8 81       	ld	r30, Y
    39c8:	f9 81       	ldd	r31, Y+1	; 0x01
    39ca:	02 84       	ldd	r0, Z+10	; 0x0a
    39cc:	f3 85       	ldd	r31, Z+11	; 0x0b
    39ce:	e0 2d       	mov	r30, r0
    39d0:	ce 01       	movw	r24, r28
    39d2:	19 95       	eicall
    39d4:	0a c0       	rjmp	.+20     	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    39d6:	e8 81       	ld	r30, Y
    39d8:	f9 81       	ldd	r31, Y+1	; 0x01
    39da:	00 84       	ldd	r0, Z+8	; 0x08
    39dc:	f1 85       	ldd	r31, Z+9	; 0x09
    39de:	e0 2d       	mov	r30, r0
    39e0:	ce 01       	movw	r24, r28
    39e2:	19 95       	eicall
    39e4:	02 c0       	rjmp	.+4      	; 0x39ea <_ZN8emstreamlsE15ser_manipulator+0x86>
    39e6:	81 e0       	ldi	r24, 0x01	; 1
    39e8:	8c 83       	std	Y+4, r24	; 0x04
    39ea:	ce 01       	movw	r24, r28
    39ec:	df 91       	pop	r29
    39ee:	cf 91       	pop	r28
    39f0:	08 95       	ret

000039f2 <_ZN8emstreamlsEi>:
    39f2:	0f 93       	push	r16
    39f4:	1f 93       	push	r17
    39f6:	cf 93       	push	r28
    39f8:	df 93       	push	r29
    39fa:	cd b7       	in	r28, 0x3d	; 61
    39fc:	de b7       	in	r29, 0x3e	; 62
    39fe:	61 97       	sbiw	r28, 0x11	; 17
    3a00:	cd bf       	out	0x3d, r28	; 61
    3a02:	de bf       	out	0x3e, r29	; 62
    3a04:	8c 01       	movw	r16, r24
    3a06:	9b 01       	movw	r18, r22
    3a08:	fc 01       	movw	r30, r24
    3a0a:	92 81       	ldd	r25, Z+2	; 0x02
    3a0c:	9a 30       	cpi	r25, 0x0A	; 10
    3a0e:	21 f0       	breq	.+8      	; 0x3a18 <_ZN8emstreamlsEi+0x26>
    3a10:	c8 01       	movw	r24, r16
    3a12:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <_ZN8emstreamlsEj>
    3a16:	0d c0       	rjmp	.+26     	; 0x3a32 <_ZN8emstreamlsEi+0x40>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    3a18:	4a e0       	ldi	r20, 0x0A	; 10
    3a1a:	be 01       	movw	r22, r28
    3a1c:	6f 5f       	subi	r22, 0xFF	; 255
    3a1e:	7f 4f       	sbci	r23, 0xFF	; 255
    3a20:	c9 01       	movw	r24, r18
    3a22:	0e 94 81 22 	call	0x4502	; 0x4502 <__itoa_ncheck>
    3a26:	be 01       	movw	r22, r28
    3a28:	6f 5f       	subi	r22, 0xFF	; 255
    3a2a:	7f 4f       	sbci	r23, 0xFF	; 255
    3a2c:	c8 01       	movw	r24, r16
    3a2e:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    3a32:	c8 01       	movw	r24, r16
    3a34:	61 96       	adiw	r28, 0x11	; 17
    3a36:	cd bf       	out	0x3d, r28	; 61
    3a38:	de bf       	out	0x3e, r29	; 62
    3a3a:	df 91       	pop	r29
    3a3c:	cf 91       	pop	r28
    3a3e:	1f 91       	pop	r17
    3a40:	0f 91       	pop	r16
    3a42:	08 95       	ret

00003a44 <_ZN8emstreamlsEj>:
    3a44:	ff 92       	push	r15
    3a46:	0f 93       	push	r16
    3a48:	1f 93       	push	r17
    3a4a:	cf 93       	push	r28
    3a4c:	df 93       	push	r29
    3a4e:	cd b7       	in	r28, 0x3d	; 61
    3a50:	de b7       	in	r29, 0x3e	; 62
    3a52:	61 97       	sbiw	r28, 0x11	; 17
    3a54:	cd bf       	out	0x3d, r28	; 61
    3a56:	de bf       	out	0x3e, r29	; 62
    3a58:	8c 01       	movw	r16, r24
    3a5a:	f6 2e       	mov	r15, r22
    3a5c:	97 2f       	mov	r25, r23
    3a5e:	f8 01       	movw	r30, r16
    3a60:	42 81       	ldd	r20, Z+2	; 0x02
    3a62:	40 31       	cpi	r20, 0x10	; 16
    3a64:	21 f0       	breq	.+8      	; 0x3a6e <_ZN8emstreamlsEj+0x2a>
    3a66:	48 30       	cpi	r20, 0x08	; 8
    3a68:	11 f0       	breq	.+4      	; 0x3a6e <_ZN8emstreamlsEj+0x2a>
    3a6a:	42 30       	cpi	r20, 0x02	; 2
    3a6c:	41 f4       	brne	.+16     	; 0x3a7e <_ZN8emstreamlsEj+0x3a>
    3a6e:	69 2f       	mov	r22, r25
    3a70:	c8 01       	movw	r24, r16
    3a72:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <_ZN8emstreamlsEh>
    3a76:	6f 2d       	mov	r22, r15
    3a78:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <_ZN8emstreamlsEh>
    3a7c:	0d c0       	rjmp	.+26     	; 0x3a98 <_ZN8emstreamlsEj+0x54>
extern __inline__ __ATTR_GNU_INLINE__
char *utoa (unsigned int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__utoa (unsigned int, char *, int);
	return __utoa (__val, __s, __radix);
    3a7e:	50 e0       	ldi	r21, 0x00	; 0
    3a80:	be 01       	movw	r22, r28
    3a82:	6f 5f       	subi	r22, 0xFF	; 255
    3a84:	7f 4f       	sbci	r23, 0xFF	; 255
    3a86:	8f 2d       	mov	r24, r15
    3a88:	0e 94 b9 22 	call	0x4572	; 0x4572 <utoa>
    3a8c:	be 01       	movw	r22, r28
    3a8e:	6f 5f       	subi	r22, 0xFF	; 255
    3a90:	7f 4f       	sbci	r23, 0xFF	; 255
    3a92:	c8 01       	movw	r24, r16
    3a94:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    3a98:	c8 01       	movw	r24, r16
    3a9a:	61 96       	adiw	r28, 0x11	; 17
    3a9c:	cd bf       	out	0x3d, r28	; 61
    3a9e:	de bf       	out	0x3e, r29	; 62
    3aa0:	df 91       	pop	r29
    3aa2:	cf 91       	pop	r28
    3aa4:	1f 91       	pop	r17
    3aa6:	0f 91       	pop	r16
    3aa8:	ff 90       	pop	r15
    3aaa:	08 95       	ret

00003aac <_ZN8emstreamlsEm>:
    3aac:	df 92       	push	r13
    3aae:	ef 92       	push	r14
    3ab0:	ff 92       	push	r15
    3ab2:	0f 93       	push	r16
    3ab4:	1f 93       	push	r17
    3ab6:	cf 93       	push	r28
    3ab8:	df 93       	push	r29
    3aba:	cd b7       	in	r28, 0x3d	; 61
    3abc:	de b7       	in	r29, 0x3e	; 62
    3abe:	a1 97       	sbiw	r28, 0x21	; 33
    3ac0:	cd bf       	out	0x3d, r28	; 61
    3ac2:	de bf       	out	0x3e, r29	; 62
    3ac4:	8c 01       	movw	r16, r24
    3ac6:	d4 2e       	mov	r13, r20
    3ac8:	e5 2e       	mov	r14, r21
    3aca:	f6 2e       	mov	r15, r22
    3acc:	97 2f       	mov	r25, r23
    3ace:	f8 01       	movw	r30, r16
    3ad0:	22 81       	ldd	r18, Z+2	; 0x02
    3ad2:	20 31       	cpi	r18, 0x10	; 16
    3ad4:	21 f0       	breq	.+8      	; 0x3ade <_ZN8emstreamlsEm+0x32>
    3ad6:	28 30       	cpi	r18, 0x08	; 8
    3ad8:	11 f0       	breq	.+4      	; 0x3ade <_ZN8emstreamlsEm+0x32>
    3ada:	22 30       	cpi	r18, 0x02	; 2
    3adc:	71 f4       	brne	.+28     	; 0x3afa <_ZN8emstreamlsEm+0x4e>
    3ade:	69 2f       	mov	r22, r25
    3ae0:	c8 01       	movw	r24, r16
    3ae2:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <_ZN8emstreamlsEh>
    3ae6:	6f 2d       	mov	r22, r15
    3ae8:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <_ZN8emstreamlsEh>
    3aec:	6e 2d       	mov	r22, r14
    3aee:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <_ZN8emstreamlsEh>
    3af2:	6d 2d       	mov	r22, r13
    3af4:	0e 94 98 1d 	call	0x3b30	; 0x3b30 <_ZN8emstreamlsEh>
    3af8:	0f c0       	rjmp	.+30     	; 0x3b18 <_ZN8emstreamlsEm+0x6c>
extern __inline__ __ATTR_GNU_INLINE__
char *ultoa (unsigned long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__ultoa (unsigned long, char *, int);
	return __ultoa (__val, __s, __radix);
    3afa:	30 e0       	ldi	r19, 0x00	; 0
    3afc:	ae 01       	movw	r20, r28
    3afe:	4f 5f       	subi	r20, 0xFF	; 255
    3b00:	5f 4f       	sbci	r21, 0xFF	; 255
    3b02:	6d 2d       	mov	r22, r13
    3b04:	7e 2d       	mov	r23, r14
    3b06:	8f 2d       	mov	r24, r15
    3b08:	0e 94 8c 22 	call	0x4518	; 0x4518 <ultoa>
    3b0c:	be 01       	movw	r22, r28
    3b0e:	6f 5f       	subi	r22, 0xFF	; 255
    3b10:	7f 4f       	sbci	r23, 0xFF	; 255
    3b12:	c8 01       	movw	r24, r16
    3b14:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    3b18:	c8 01       	movw	r24, r16
    3b1a:	a1 96       	adiw	r28, 0x21	; 33
    3b1c:	cd bf       	out	0x3d, r28	; 61
    3b1e:	de bf       	out	0x3e, r29	; 62
    3b20:	df 91       	pop	r29
    3b22:	cf 91       	pop	r28
    3b24:	1f 91       	pop	r17
    3b26:	0f 91       	pop	r16
    3b28:	ff 90       	pop	r15
    3b2a:	ef 90       	pop	r14
    3b2c:	df 90       	pop	r13
    3b2e:	08 95       	ret

00003b30 <_ZN8emstreamlsEh>:
    3b30:	cf 92       	push	r12
    3b32:	df 92       	push	r13
    3b34:	ef 92       	push	r14
    3b36:	ff 92       	push	r15
    3b38:	0f 93       	push	r16
    3b3a:	1f 93       	push	r17
    3b3c:	cf 93       	push	r28
    3b3e:	df 93       	push	r29
    3b40:	cd b7       	in	r28, 0x3d	; 61
    3b42:	de b7       	in	r29, 0x3e	; 62
    3b44:	29 97       	sbiw	r28, 0x09	; 9
    3b46:	cd bf       	out	0x3d, r28	; 61
    3b48:	de bf       	out	0x3e, r29	; 62
    3b4a:	8c 01       	movw	r16, r24
    3b4c:	e6 2e       	mov	r14, r22
    3b4e:	dc 01       	movw	r26, r24
    3b50:	13 96       	adiw	r26, 0x03	; 3
    3b52:	8c 91       	ld	r24, X
    3b54:	13 97       	sbiw	r26, 0x03	; 3
    3b56:	88 23       	and	r24, r24
    3b58:	41 f0       	breq	.+16     	; 0x3b6a <_ZN8emstreamlsEh+0x3a>
    3b5a:	ed 91       	ld	r30, X+
    3b5c:	fc 91       	ld	r31, X
    3b5e:	02 80       	ldd	r0, Z+2	; 0x02
    3b60:	f3 81       	ldd	r31, Z+3	; 0x03
    3b62:	e0 2d       	mov	r30, r0
    3b64:	c8 01       	movw	r24, r16
    3b66:	19 95       	eicall
    3b68:	56 c0       	rjmp	.+172    	; 0x3c16 <_ZN8emstreamlsEh+0xe6>
    3b6a:	f8 01       	movw	r30, r16
    3b6c:	42 81       	ldd	r20, Z+2	; 0x02
    3b6e:	42 30       	cpi	r20, 0x02	; 2
    3b70:	19 f5       	brne	.+70     	; 0x3bb8 <_ZN8emstreamlsEh+0x88>
    3b72:	68 94       	set
    3b74:	cc 24       	eor	r12, r12
    3b76:	c3 f8       	bld	r12, 3
    3b78:	d1 2c       	mov	r13, r1
    3b7a:	68 94       	set
    3b7c:	ff 24       	eor	r15, r15
    3b7e:	f7 f8       	bld	r15, 7
    3b80:	8e 2d       	mov	r24, r14
    3b82:	8f 21       	and	r24, r15
    3b84:	51 f0       	breq	.+20     	; 0x3b9a <_ZN8emstreamlsEh+0x6a>
    3b86:	d8 01       	movw	r26, r16
    3b88:	ed 91       	ld	r30, X+
    3b8a:	fc 91       	ld	r31, X
    3b8c:	02 80       	ldd	r0, Z+2	; 0x02
    3b8e:	f3 81       	ldd	r31, Z+3	; 0x03
    3b90:	e0 2d       	mov	r30, r0
    3b92:	61 e3       	ldi	r22, 0x31	; 49
    3b94:	c8 01       	movw	r24, r16
    3b96:	19 95       	eicall
    3b98:	09 c0       	rjmp	.+18     	; 0x3bac <_ZN8emstreamlsEh+0x7c>
    3b9a:	d8 01       	movw	r26, r16
    3b9c:	ed 91       	ld	r30, X+
    3b9e:	fc 91       	ld	r31, X
    3ba0:	02 80       	ldd	r0, Z+2	; 0x02
    3ba2:	f3 81       	ldd	r31, Z+3	; 0x03
    3ba4:	e0 2d       	mov	r30, r0
    3ba6:	60 e3       	ldi	r22, 0x30	; 48
    3ba8:	c8 01       	movw	r24, r16
    3baa:	19 95       	eicall
    3bac:	f6 94       	lsr	r15
    3bae:	b1 e0       	ldi	r27, 0x01	; 1
    3bb0:	cb 1a       	sub	r12, r27
    3bb2:	d1 08       	sbc	r13, r1
    3bb4:	29 f7       	brne	.-54     	; 0x3b80 <_ZN8emstreamlsEh+0x50>
    3bb6:	2f c0       	rjmp	.+94     	; 0x3c16 <_ZN8emstreamlsEh+0xe6>
    3bb8:	40 31       	cpi	r20, 0x10	; 16
    3bba:	f9 f4       	brne	.+62     	; 0x3bfa <_ZN8emstreamlsEh+0xca>
    3bbc:	62 95       	swap	r22
    3bbe:	6f 70       	andi	r22, 0x0F	; 15
    3bc0:	01 90       	ld	r0, Z+
    3bc2:	f0 81       	ld	r31, Z
    3bc4:	e0 2d       	mov	r30, r0
    3bc6:	02 80       	ldd	r0, Z+2	; 0x02
    3bc8:	f3 81       	ldd	r31, Z+3	; 0x03
    3bca:	e0 2d       	mov	r30, r0
    3bcc:	6a 30       	cpi	r22, 0x0A	; 10
    3bce:	10 f0       	brcs	.+4      	; 0x3bd4 <_ZN8emstreamlsEh+0xa4>
    3bd0:	69 5c       	subi	r22, 0xC9	; 201
    3bd2:	01 c0       	rjmp	.+2      	; 0x3bd6 <_ZN8emstreamlsEh+0xa6>
    3bd4:	60 5d       	subi	r22, 0xD0	; 208
    3bd6:	c8 01       	movw	r24, r16
    3bd8:	19 95       	eicall
    3bda:	6e 2d       	mov	r22, r14
    3bdc:	6f 70       	andi	r22, 0x0F	; 15
    3bde:	d8 01       	movw	r26, r16
    3be0:	ed 91       	ld	r30, X+
    3be2:	fc 91       	ld	r31, X
    3be4:	02 80       	ldd	r0, Z+2	; 0x02
    3be6:	f3 81       	ldd	r31, Z+3	; 0x03
    3be8:	e0 2d       	mov	r30, r0
    3bea:	6a 30       	cpi	r22, 0x0A	; 10
    3bec:	10 f0       	brcs	.+4      	; 0x3bf2 <_ZN8emstreamlsEh+0xc2>
    3bee:	69 5c       	subi	r22, 0xC9	; 201
    3bf0:	01 c0       	rjmp	.+2      	; 0x3bf4 <_ZN8emstreamlsEh+0xc4>
    3bf2:	60 5d       	subi	r22, 0xD0	; 208
    3bf4:	c8 01       	movw	r24, r16
    3bf6:	19 95       	eicall
    3bf8:	0e c0       	rjmp	.+28     	; 0x3c16 <_ZN8emstreamlsEh+0xe6>
extern __inline__ __ATTR_GNU_INLINE__
char *utoa (unsigned int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__utoa (unsigned int, char *, int);
	return __utoa (__val, __s, __radix);
    3bfa:	50 e0       	ldi	r21, 0x00	; 0
    3bfc:	be 01       	movw	r22, r28
    3bfe:	6f 5f       	subi	r22, 0xFF	; 255
    3c00:	7f 4f       	sbci	r23, 0xFF	; 255
    3c02:	8e 2d       	mov	r24, r14
    3c04:	90 e0       	ldi	r25, 0x00	; 0
    3c06:	0e 94 b9 22 	call	0x4572	; 0x4572 <utoa>
    3c0a:	be 01       	movw	r22, r28
    3c0c:	6f 5f       	subi	r22, 0xFF	; 255
    3c0e:	7f 4f       	sbci	r23, 0xFF	; 255
    3c10:	c8 01       	movw	r24, r16
    3c12:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    3c16:	c8 01       	movw	r24, r16
    3c18:	29 96       	adiw	r28, 0x09	; 9
    3c1a:	cd bf       	out	0x3d, r28	; 61
    3c1c:	de bf       	out	0x3e, r29	; 62
    3c1e:	df 91       	pop	r29
    3c20:	cf 91       	pop	r28
    3c22:	1f 91       	pop	r17
    3c24:	0f 91       	pop	r16
    3c26:	ff 90       	pop	r15
    3c28:	ef 90       	pop	r14
    3c2a:	df 90       	pop	r13
    3c2c:	cf 90       	pop	r12
    3c2e:	08 95       	ret

00003c30 <_ZN5rs2327putcharEc>:
    3c30:	dc 01       	movw	r26, r24
    3c32:	50 96       	adiw	r26, 0x10	; 16
    3c34:	ed 91       	ld	r30, X+
    3c36:	fc 91       	ld	r31, X
    3c38:	51 97       	sbiw	r26, 0x11	; 17
    3c3a:	80 81       	ld	r24, Z
    3c3c:	54 96       	adiw	r26, 0x14	; 20
    3c3e:	4c 91       	ld	r20, X
    3c40:	54 97       	sbiw	r26, 0x14	; 20
    3c42:	84 23       	and	r24, r20
    3c44:	29 f0       	breq	.+10     	; 0x3c50 <_ZN5rs2327putcharEc+0x20>
    3c46:	09 c0       	rjmp	.+18     	; 0x3c5a <_ZN5rs2327putcharEc+0x2a>
    3c48:	21 50       	subi	r18, 0x01	; 1
    3c4a:	31 09       	sbc	r19, r1
    3c4c:	19 f4       	brne	.+6      	; 0x3c54 <_ZN5rs2327putcharEc+0x24>
    3c4e:	12 c0       	rjmp	.+36     	; 0x3c74 <_ZN5rs2327putcharEc+0x44>
    3c50:	21 e2       	ldi	r18, 0x21	; 33
    3c52:	3e e4       	ldi	r19, 0x4E	; 78
    3c54:	90 81       	ld	r25, Z
    3c56:	94 23       	and	r25, r20
    3c58:	b9 f3       	breq	.-18     	; 0x3c48 <_ZN5rs2327putcharEc+0x18>
    3c5a:	90 81       	ld	r25, Z
    3c5c:	56 96       	adiw	r26, 0x16	; 22
    3c5e:	8c 91       	ld	r24, X
    3c60:	56 97       	sbiw	r26, 0x16	; 22
    3c62:	89 2b       	or	r24, r25
    3c64:	80 83       	st	Z, r24
    3c66:	1e 96       	adiw	r26, 0x0e	; 14
    3c68:	ed 91       	ld	r30, X+
    3c6a:	fc 91       	ld	r31, X
    3c6c:	1f 97       	sbiw	r26, 0x0f	; 15
    3c6e:	60 83       	st	Z, r22
    3c70:	81 e0       	ldi	r24, 0x01	; 1
    3c72:	08 95       	ret
    3c74:	80 e0       	ldi	r24, 0x00	; 0
    3c76:	08 95       	ret

00003c78 <_ZN5rs2327getcharEv>:
    3c78:	cf 93       	push	r28
    3c7a:	df 93       	push	r29
    3c7c:	fc 01       	movw	r30, r24
    3c7e:	c1 8d       	ldd	r28, Z+25	; 0x19
    3c80:	d2 8d       	ldd	r29, Z+26	; 0x1a
    3c82:	28 81       	ld	r18, Y
    3c84:	39 81       	ldd	r19, Y+1	; 0x01
    3c86:	a3 8d       	ldd	r26, Z+27	; 0x1b
    3c88:	b4 8d       	ldd	r27, Z+28	; 0x1c
    3c8a:	4d 91       	ld	r20, X+
    3c8c:	5c 91       	ld	r21, X
    3c8e:	24 17       	cp	r18, r20
    3c90:	35 07       	cpc	r19, r21
    3c92:	e9 f3       	breq	.-6      	; 0x3c8e <_ZN5rs2327getcharEv+0x16>
    3c94:	a7 89       	ldd	r26, Z+23	; 0x17
    3c96:	b0 8d       	ldd	r27, Z+24	; 0x18
    3c98:	0d 90       	ld	r0, X+
    3c9a:	bc 91       	ld	r27, X
    3c9c:	a0 2d       	mov	r26, r0
    3c9e:	a2 0f       	add	r26, r18
    3ca0:	b3 1f       	adc	r27, r19
    3ca2:	8c 91       	ld	r24, X
    3ca4:	2f 5f       	subi	r18, 0xFF	; 255
    3ca6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ca8:	28 83       	st	Y, r18
    3caa:	39 83       	std	Y+1, r19	; 0x01
    3cac:	24 36       	cpi	r18, 0x64	; 100
    3cae:	31 05       	cpc	r19, r1
    3cb0:	28 f0       	brcs	.+10     	; 0x3cbc <_ZN5rs2327getcharEv+0x44>
    3cb2:	01 8c       	ldd	r0, Z+25	; 0x19
    3cb4:	f2 8d       	ldd	r31, Z+26	; 0x1a
    3cb6:	e0 2d       	mov	r30, r0
    3cb8:	10 82       	st	Z, r1
    3cba:	11 82       	std	Z+1, r1	; 0x01
    3cbc:	90 e0       	ldi	r25, 0x00	; 0
    3cbe:	df 91       	pop	r29
    3cc0:	cf 91       	pop	r28
    3cc2:	08 95       	ret

00003cc4 <_ZN5rs23214check_for_charEv>:
    3cc4:	cf 93       	push	r28
    3cc6:	df 93       	push	r29
    3cc8:	ec 01       	movw	r28, r24
    3cca:	a9 8d       	ldd	r26, Y+25	; 0x19
    3ccc:	ba 8d       	ldd	r27, Y+26	; 0x1a
    3cce:	eb 8d       	ldd	r30, Y+27	; 0x1b
    3cd0:	fc 8d       	ldd	r31, Y+28	; 0x1c
    3cd2:	81 e0       	ldi	r24, 0x01	; 1
    3cd4:	4d 91       	ld	r20, X+
    3cd6:	5c 91       	ld	r21, X
    3cd8:	20 81       	ld	r18, Z
    3cda:	31 81       	ldd	r19, Z+1	; 0x01
    3cdc:	42 17       	cp	r20, r18
    3cde:	53 07       	cpc	r21, r19
    3ce0:	09 f4       	brne	.+2      	; 0x3ce4 <_ZN5rs23214check_for_charEv+0x20>
    3ce2:	80 e0       	ldi	r24, 0x00	; 0
    3ce4:	df 91       	pop	r29
    3ce6:	cf 91       	pop	r28
    3ce8:	08 95       	ret

00003cea <_ZN5rs23212clear_screenEv>:
    3cea:	dc 01       	movw	r26, r24
    3cec:	ed 91       	ld	r30, X+
    3cee:	fc 91       	ld	r31, X
    3cf0:	02 80       	ldd	r0, Z+2	; 0x02
    3cf2:	f3 81       	ldd	r31, Z+3	; 0x03
    3cf4:	e0 2d       	mov	r30, r0
    3cf6:	6c e0       	ldi	r22, 0x0C	; 12
    3cf8:	19 95       	eicall
    3cfa:	08 95       	ret

00003cfc <_ZN5rs232C1EjP12USART_struct>:
    3cfc:	ef 92       	push	r14
    3cfe:	ff 92       	push	r15
    3d00:	0f 93       	push	r16
    3d02:	1f 93       	push	r17
    3d04:	cf 93       	push	r28
    3d06:	df 93       	push	r29
    3d08:	ec 01       	movw	r28, r24
    3d0a:	7b 01       	movw	r14, r22
    3d0c:	8a 01       	movw	r16, r20
    3d0e:	0e 94 6d 1c 	call	0x38da	; 0x38da <_ZN8emstreamC1Ev>
    3d12:	a8 01       	movw	r20, r16
    3d14:	b7 01       	movw	r22, r14
    3d16:	ce 01       	movw	r24, r28
    3d18:	08 96       	adiw	r24, 0x08	; 8
    3d1a:	0e 94 b4 1b 	call	0x3768	; 0x3768 <_ZN7base232C1EjP12USART_struct>
    3d1e:	8c ea       	ldi	r24, 0xAC	; 172
    3d20:	90 e2       	ldi	r25, 0x20	; 32
    3d22:	88 83       	st	Y, r24
    3d24:	99 83       	std	Y+1, r25	; 0x01
    3d26:	00 3a       	cpi	r16, 0xA0	; 160
    3d28:	88 e0       	ldi	r24, 0x08	; 8
    3d2a:	18 07       	cpc	r17, r24
    3d2c:	69 f4       	brne	.+26     	; 0x3d48 <_ZN5rs232C1EjP12USART_struct+0x4c>
    3d2e:	80 ed       	ldi	r24, 0xD0	; 208
    3d30:	91 e3       	ldi	r25, 0x31	; 49
    3d32:	8f 8b       	std	Y+23, r24	; 0x17
    3d34:	98 8f       	std	Y+24, r25	; 0x18
    3d36:	82 ec       	ldi	r24, 0xC2	; 194
    3d38:	91 e3       	ldi	r25, 0x31	; 49
    3d3a:	89 8f       	std	Y+25, r24	; 0x19
    3d3c:	9a 8f       	std	Y+26, r25	; 0x1a
    3d3e:	84 eb       	ldi	r24, 0xB4	; 180
    3d40:	91 e3       	ldi	r25, 0x31	; 49
    3d42:	8b 8f       	std	Y+27, r24	; 0x1b
    3d44:	9c 8f       	std	Y+28, r25	; 0x1c
    3d46:	64 c0       	rjmp	.+200    	; 0x3e10 <_ZN5rs232C1EjP12USART_struct+0x114>
    3d48:	00 3b       	cpi	r16, 0xB0	; 176
    3d4a:	e8 e0       	ldi	r30, 0x08	; 8
    3d4c:	1e 07       	cpc	r17, r30
    3d4e:	69 f4       	brne	.+26     	; 0x3d6a <_ZN5rs232C1EjP12USART_struct+0x6e>
    3d50:	8e ec       	ldi	r24, 0xCE	; 206
    3d52:	91 e3       	ldi	r25, 0x31	; 49
    3d54:	8f 8b       	std	Y+23, r24	; 0x17
    3d56:	98 8f       	std	Y+24, r25	; 0x18
    3d58:	80 ec       	ldi	r24, 0xC0	; 192
    3d5a:	91 e3       	ldi	r25, 0x31	; 49
    3d5c:	89 8f       	std	Y+25, r24	; 0x19
    3d5e:	9a 8f       	std	Y+26, r25	; 0x1a
    3d60:	82 eb       	ldi	r24, 0xB2	; 178
    3d62:	91 e3       	ldi	r25, 0x31	; 49
    3d64:	8b 8f       	std	Y+27, r24	; 0x1b
    3d66:	9c 8f       	std	Y+28, r25	; 0x1c
    3d68:	53 c0       	rjmp	.+166    	; 0x3e10 <_ZN5rs232C1EjP12USART_struct+0x114>
    3d6a:	00 3a       	cpi	r16, 0xA0	; 160
    3d6c:	f9 e0       	ldi	r31, 0x09	; 9
    3d6e:	1f 07       	cpc	r17, r31
    3d70:	69 f4       	brne	.+26     	; 0x3d8c <_ZN5rs232C1EjP12USART_struct+0x90>
    3d72:	8c ec       	ldi	r24, 0xCC	; 204
    3d74:	91 e3       	ldi	r25, 0x31	; 49
    3d76:	8f 8b       	std	Y+23, r24	; 0x17
    3d78:	98 8f       	std	Y+24, r25	; 0x18
    3d7a:	8e eb       	ldi	r24, 0xBE	; 190
    3d7c:	91 e3       	ldi	r25, 0x31	; 49
    3d7e:	89 8f       	std	Y+25, r24	; 0x19
    3d80:	9a 8f       	std	Y+26, r25	; 0x1a
    3d82:	80 eb       	ldi	r24, 0xB0	; 176
    3d84:	91 e3       	ldi	r25, 0x31	; 49
    3d86:	8b 8f       	std	Y+27, r24	; 0x1b
    3d88:	9c 8f       	std	Y+28, r25	; 0x1c
    3d8a:	42 c0       	rjmp	.+132    	; 0x3e10 <_ZN5rs232C1EjP12USART_struct+0x114>
    3d8c:	00 3b       	cpi	r16, 0xB0	; 176
    3d8e:	89 e0       	ldi	r24, 0x09	; 9
    3d90:	18 07       	cpc	r17, r24
    3d92:	69 f4       	brne	.+26     	; 0x3dae <_ZN5rs232C1EjP12USART_struct+0xb2>
    3d94:	8a ec       	ldi	r24, 0xCA	; 202
    3d96:	91 e3       	ldi	r25, 0x31	; 49
    3d98:	8f 8b       	std	Y+23, r24	; 0x17
    3d9a:	98 8f       	std	Y+24, r25	; 0x18
    3d9c:	8c eb       	ldi	r24, 0xBC	; 188
    3d9e:	91 e3       	ldi	r25, 0x31	; 49
    3da0:	89 8f       	std	Y+25, r24	; 0x19
    3da2:	9a 8f       	std	Y+26, r25	; 0x1a
    3da4:	8e ea       	ldi	r24, 0xAE	; 174
    3da6:	91 e3       	ldi	r25, 0x31	; 49
    3da8:	8b 8f       	std	Y+27, r24	; 0x1b
    3daa:	9c 8f       	std	Y+28, r25	; 0x1c
    3dac:	31 c0       	rjmp	.+98     	; 0x3e10 <_ZN5rs232C1EjP12USART_struct+0x114>
    3dae:	00 3a       	cpi	r16, 0xA0	; 160
    3db0:	ea e0       	ldi	r30, 0x0A	; 10
    3db2:	1e 07       	cpc	r17, r30
    3db4:	69 f4       	brne	.+26     	; 0x3dd0 <_ZN5rs232C1EjP12USART_struct+0xd4>
    3db6:	88 ec       	ldi	r24, 0xC8	; 200
    3db8:	91 e3       	ldi	r25, 0x31	; 49
    3dba:	8f 8b       	std	Y+23, r24	; 0x17
    3dbc:	98 8f       	std	Y+24, r25	; 0x18
    3dbe:	8a eb       	ldi	r24, 0xBA	; 186
    3dc0:	91 e3       	ldi	r25, 0x31	; 49
    3dc2:	89 8f       	std	Y+25, r24	; 0x19
    3dc4:	9a 8f       	std	Y+26, r25	; 0x1a
    3dc6:	8c ea       	ldi	r24, 0xAC	; 172
    3dc8:	91 e3       	ldi	r25, 0x31	; 49
    3dca:	8b 8f       	std	Y+27, r24	; 0x1b
    3dcc:	9c 8f       	std	Y+28, r25	; 0x1c
    3dce:	20 c0       	rjmp	.+64     	; 0x3e10 <_ZN5rs232C1EjP12USART_struct+0x114>
    3dd0:	00 3b       	cpi	r16, 0xB0	; 176
    3dd2:	fa e0       	ldi	r31, 0x0A	; 10
    3dd4:	1f 07       	cpc	r17, r31
    3dd6:	69 f4       	brne	.+26     	; 0x3df2 <_ZN5rs232C1EjP12USART_struct+0xf6>
    3dd8:	86 ec       	ldi	r24, 0xC6	; 198
    3dda:	91 e3       	ldi	r25, 0x31	; 49
    3ddc:	8f 8b       	std	Y+23, r24	; 0x17
    3dde:	98 8f       	std	Y+24, r25	; 0x18
    3de0:	88 eb       	ldi	r24, 0xB8	; 184
    3de2:	91 e3       	ldi	r25, 0x31	; 49
    3de4:	89 8f       	std	Y+25, r24	; 0x19
    3de6:	9a 8f       	std	Y+26, r25	; 0x1a
    3de8:	8a ea       	ldi	r24, 0xAA	; 170
    3dea:	91 e3       	ldi	r25, 0x31	; 49
    3dec:	8b 8f       	std	Y+27, r24	; 0x1b
    3dee:	9c 8f       	std	Y+28, r25	; 0x1c
    3df0:	0f c0       	rjmp	.+30     	; 0x3e10 <_ZN5rs232C1EjP12USART_struct+0x114>
    3df2:	00 3a       	cpi	r16, 0xA0	; 160
    3df4:	1b 40       	sbci	r17, 0x0B	; 11
    3df6:	61 f4       	brne	.+24     	; 0x3e10 <_ZN5rs232C1EjP12USART_struct+0x114>
    3df8:	84 ec       	ldi	r24, 0xC4	; 196
    3dfa:	91 e3       	ldi	r25, 0x31	; 49
    3dfc:	8f 8b       	std	Y+23, r24	; 0x17
    3dfe:	98 8f       	std	Y+24, r25	; 0x18
    3e00:	86 eb       	ldi	r24, 0xB6	; 182
    3e02:	91 e3       	ldi	r25, 0x31	; 49
    3e04:	89 8f       	std	Y+25, r24	; 0x19
    3e06:	9a 8f       	std	Y+26, r25	; 0x1a
    3e08:	88 ea       	ldi	r24, 0xA8	; 168
    3e0a:	91 e3       	ldi	r25, 0x31	; 49
    3e0c:	8b 8f       	std	Y+27, r24	; 0x1b
    3e0e:	9c 8f       	std	Y+28, r25	; 0x1c
    3e10:	0f 89       	ldd	r16, Y+23	; 0x17
    3e12:	18 8d       	ldd	r17, Y+24	; 0x18
    3e14:	84 e6       	ldi	r24, 0x64	; 100
    3e16:	90 e0       	ldi	r25, 0x00	; 0
    3e18:	0e 94 b0 1b 	call	0x3760	; 0x3760 <_Znaj>
    3e1c:	f8 01       	movw	r30, r16
    3e1e:	80 83       	st	Z, r24
    3e20:	91 83       	std	Z+1, r25	; 0x01
    3e22:	e9 8d       	ldd	r30, Y+25	; 0x19
    3e24:	fa 8d       	ldd	r31, Y+26	; 0x1a
    3e26:	10 82       	st	Z, r1
    3e28:	11 82       	std	Z+1, r1	; 0x01
    3e2a:	eb 8d       	ldd	r30, Y+27	; 0x1b
    3e2c:	fc 8d       	ldd	r31, Y+28	; 0x1c
    3e2e:	10 82       	st	Z, r1
    3e30:	11 82       	std	Z+1, r1	; 0x01
    3e32:	df 91       	pop	r29
    3e34:	cf 91       	pop	r28
    3e36:	1f 91       	pop	r17
    3e38:	0f 91       	pop	r16
    3e3a:	ff 90       	pop	r15
    3e3c:	ef 90       	pop	r14
    3e3e:	08 95       	ret

00003e40 <__vector_25>:
    3e40:	1f 92       	push	r1
    3e42:	0f 92       	push	r0
    3e44:	0f b6       	in	r0, 0x3f	; 63
    3e46:	0f 92       	push	r0
    3e48:	11 24       	eor	r1, r1
    3e4a:	0b b6       	in	r0, 0x3b	; 59
    3e4c:	0f 92       	push	r0
    3e4e:	2f 93       	push	r18
    3e50:	3f 93       	push	r19
    3e52:	8f 93       	push	r24
    3e54:	9f 93       	push	r25
    3e56:	ef 93       	push	r30
    3e58:	ff 93       	push	r31
    3e5a:	20 91 a0 08 	lds	r18, 0x08A0	; 0x8008a0 <__TEXT_REGION_LENGTH__+0x7008a0>
    3e5e:	e0 91 d0 31 	lds	r30, 0x31D0	; 0x8031d0 <rcvC0_buffer>
    3e62:	f0 91 d1 31 	lds	r31, 0x31D1	; 0x8031d1 <rcvC0_buffer+0x1>
    3e66:	80 91 b4 31 	lds	r24, 0x31B4	; 0x8031b4 <rcvC0_write_index>
    3e6a:	90 91 b5 31 	lds	r25, 0x31B5	; 0x8031b5 <rcvC0_write_index+0x1>
    3e6e:	e8 0f       	add	r30, r24
    3e70:	f9 1f       	adc	r31, r25
    3e72:	20 83       	st	Z, r18
    3e74:	80 91 b4 31 	lds	r24, 0x31B4	; 0x8031b4 <rcvC0_write_index>
    3e78:	90 91 b5 31 	lds	r25, 0x31B5	; 0x8031b5 <rcvC0_write_index+0x1>
    3e7c:	01 96       	adiw	r24, 0x01	; 1
    3e7e:	84 36       	cpi	r24, 0x64	; 100
    3e80:	91 05       	cpc	r25, r1
    3e82:	60 f4       	brcc	.+24     	; 0x3e9c <__vector_25+0x5c>
    3e84:	80 93 b4 31 	sts	0x31B4, r24	; 0x8031b4 <rcvC0_write_index>
    3e88:	90 93 b5 31 	sts	0x31B5, r25	; 0x8031b5 <rcvC0_write_index+0x1>
    3e8c:	20 91 c2 31 	lds	r18, 0x31C2	; 0x8031c2 <rcvC0_read_index>
    3e90:	30 91 c3 31 	lds	r19, 0x31C3	; 0x8031c3 <rcvC0_read_index+0x1>
    3e94:	82 17       	cp	r24, r18
    3e96:	93 07       	cpc	r25, r19
    3e98:	f1 f4       	brne	.+60     	; 0x3ed6 <__vector_25+0x96>
    3e9a:	0c c0       	rjmp	.+24     	; 0x3eb4 <__vector_25+0x74>
    3e9c:	10 92 b4 31 	sts	0x31B4, r1	; 0x8031b4 <rcvC0_write_index>
    3ea0:	10 92 b5 31 	sts	0x31B5, r1	; 0x8031b5 <rcvC0_write_index+0x1>
    3ea4:	80 91 c2 31 	lds	r24, 0x31C2	; 0x8031c2 <rcvC0_read_index>
    3ea8:	90 91 c3 31 	lds	r25, 0x31C3	; 0x8031c3 <rcvC0_read_index+0x1>
    3eac:	18 16       	cp	r1, r24
    3eae:	19 06       	cpc	r1, r25
    3eb0:	91 f4       	brne	.+36     	; 0x3ed6 <__vector_25+0x96>
    3eb2:	0e c0       	rjmp	.+28     	; 0x3ed0 <__vector_25+0x90>
    3eb4:	01 96       	adiw	r24, 0x01	; 1
    3eb6:	84 36       	cpi	r24, 0x64	; 100
    3eb8:	91 05       	cpc	r25, r1
    3eba:	28 f4       	brcc	.+10     	; 0x3ec6 <__vector_25+0x86>
    3ebc:	80 93 c2 31 	sts	0x31C2, r24	; 0x8031c2 <rcvC0_read_index>
    3ec0:	90 93 c3 31 	sts	0x31C3, r25	; 0x8031c3 <rcvC0_read_index+0x1>
    3ec4:	08 c0       	rjmp	.+16     	; 0x3ed6 <__vector_25+0x96>
    3ec6:	10 92 c2 31 	sts	0x31C2, r1	; 0x8031c2 <rcvC0_read_index>
    3eca:	10 92 c3 31 	sts	0x31C3, r1	; 0x8031c3 <rcvC0_read_index+0x1>
    3ece:	03 c0       	rjmp	.+6      	; 0x3ed6 <__vector_25+0x96>
    3ed0:	81 e0       	ldi	r24, 0x01	; 1
    3ed2:	90 e0       	ldi	r25, 0x00	; 0
    3ed4:	f3 cf       	rjmp	.-26     	; 0x3ebc <__vector_25+0x7c>
    3ed6:	ff 91       	pop	r31
    3ed8:	ef 91       	pop	r30
    3eda:	9f 91       	pop	r25
    3edc:	8f 91       	pop	r24
    3ede:	3f 91       	pop	r19
    3ee0:	2f 91       	pop	r18
    3ee2:	0f 90       	pop	r0
    3ee4:	0b be       	out	0x3b, r0	; 59
    3ee6:	0f 90       	pop	r0
    3ee8:	0f be       	out	0x3f, r0	; 63
    3eea:	0f 90       	pop	r0
    3eec:	1f 90       	pop	r1
    3eee:	18 95       	reti

00003ef0 <__vector_28>:
    3ef0:	1f 92       	push	r1
    3ef2:	0f 92       	push	r0
    3ef4:	0f b6       	in	r0, 0x3f	; 63
    3ef6:	0f 92       	push	r0
    3ef8:	11 24       	eor	r1, r1
    3efa:	0b b6       	in	r0, 0x3b	; 59
    3efc:	0f 92       	push	r0
    3efe:	2f 93       	push	r18
    3f00:	3f 93       	push	r19
    3f02:	8f 93       	push	r24
    3f04:	9f 93       	push	r25
    3f06:	ef 93       	push	r30
    3f08:	ff 93       	push	r31
    3f0a:	20 91 b0 08 	lds	r18, 0x08B0	; 0x8008b0 <__TEXT_REGION_LENGTH__+0x7008b0>
    3f0e:	e0 91 ce 31 	lds	r30, 0x31CE	; 0x8031ce <rcvC1_buffer>
    3f12:	f0 91 cf 31 	lds	r31, 0x31CF	; 0x8031cf <rcvC1_buffer+0x1>
    3f16:	80 91 b2 31 	lds	r24, 0x31B2	; 0x8031b2 <rcvC1_write_index>
    3f1a:	90 91 b3 31 	lds	r25, 0x31B3	; 0x8031b3 <rcvC1_write_index+0x1>
    3f1e:	e8 0f       	add	r30, r24
    3f20:	f9 1f       	adc	r31, r25
    3f22:	20 83       	st	Z, r18
    3f24:	80 91 b2 31 	lds	r24, 0x31B2	; 0x8031b2 <rcvC1_write_index>
    3f28:	90 91 b3 31 	lds	r25, 0x31B3	; 0x8031b3 <rcvC1_write_index+0x1>
    3f2c:	01 96       	adiw	r24, 0x01	; 1
    3f2e:	84 36       	cpi	r24, 0x64	; 100
    3f30:	91 05       	cpc	r25, r1
    3f32:	60 f4       	brcc	.+24     	; 0x3f4c <__vector_28+0x5c>
    3f34:	80 93 b2 31 	sts	0x31B2, r24	; 0x8031b2 <rcvC1_write_index>
    3f38:	90 93 b3 31 	sts	0x31B3, r25	; 0x8031b3 <rcvC1_write_index+0x1>
    3f3c:	20 91 c0 31 	lds	r18, 0x31C0	; 0x8031c0 <rcvC1_read_index>
    3f40:	30 91 c1 31 	lds	r19, 0x31C1	; 0x8031c1 <rcvC1_read_index+0x1>
    3f44:	82 17       	cp	r24, r18
    3f46:	93 07       	cpc	r25, r19
    3f48:	f1 f4       	brne	.+60     	; 0x3f86 <__vector_28+0x96>
    3f4a:	0c c0       	rjmp	.+24     	; 0x3f64 <__vector_28+0x74>
    3f4c:	10 92 b2 31 	sts	0x31B2, r1	; 0x8031b2 <rcvC1_write_index>
    3f50:	10 92 b3 31 	sts	0x31B3, r1	; 0x8031b3 <rcvC1_write_index+0x1>
    3f54:	80 91 c0 31 	lds	r24, 0x31C0	; 0x8031c0 <rcvC1_read_index>
    3f58:	90 91 c1 31 	lds	r25, 0x31C1	; 0x8031c1 <rcvC1_read_index+0x1>
    3f5c:	18 16       	cp	r1, r24
    3f5e:	19 06       	cpc	r1, r25
    3f60:	91 f4       	brne	.+36     	; 0x3f86 <__vector_28+0x96>
    3f62:	0e c0       	rjmp	.+28     	; 0x3f80 <__vector_28+0x90>
    3f64:	01 96       	adiw	r24, 0x01	; 1
    3f66:	84 36       	cpi	r24, 0x64	; 100
    3f68:	91 05       	cpc	r25, r1
    3f6a:	28 f4       	brcc	.+10     	; 0x3f76 <__vector_28+0x86>
    3f6c:	80 93 c0 31 	sts	0x31C0, r24	; 0x8031c0 <rcvC1_read_index>
    3f70:	90 93 c1 31 	sts	0x31C1, r25	; 0x8031c1 <rcvC1_read_index+0x1>
    3f74:	08 c0       	rjmp	.+16     	; 0x3f86 <__vector_28+0x96>
    3f76:	10 92 c0 31 	sts	0x31C0, r1	; 0x8031c0 <rcvC1_read_index>
    3f7a:	10 92 c1 31 	sts	0x31C1, r1	; 0x8031c1 <rcvC1_read_index+0x1>
    3f7e:	03 c0       	rjmp	.+6      	; 0x3f86 <__vector_28+0x96>
    3f80:	81 e0       	ldi	r24, 0x01	; 1
    3f82:	90 e0       	ldi	r25, 0x00	; 0
    3f84:	f3 cf       	rjmp	.-26     	; 0x3f6c <__vector_28+0x7c>
    3f86:	ff 91       	pop	r31
    3f88:	ef 91       	pop	r30
    3f8a:	9f 91       	pop	r25
    3f8c:	8f 91       	pop	r24
    3f8e:	3f 91       	pop	r19
    3f90:	2f 91       	pop	r18
    3f92:	0f 90       	pop	r0
    3f94:	0b be       	out	0x3b, r0	; 59
    3f96:	0f 90       	pop	r0
    3f98:	0f be       	out	0x3f, r0	; 63
    3f9a:	0f 90       	pop	r0
    3f9c:	1f 90       	pop	r1
    3f9e:	18 95       	reti

00003fa0 <__vector_88>:
    3fa0:	1f 92       	push	r1
    3fa2:	0f 92       	push	r0
    3fa4:	0f b6       	in	r0, 0x3f	; 63
    3fa6:	0f 92       	push	r0
    3fa8:	11 24       	eor	r1, r1
    3faa:	0b b6       	in	r0, 0x3b	; 59
    3fac:	0f 92       	push	r0
    3fae:	2f 93       	push	r18
    3fb0:	3f 93       	push	r19
    3fb2:	8f 93       	push	r24
    3fb4:	9f 93       	push	r25
    3fb6:	ef 93       	push	r30
    3fb8:	ff 93       	push	r31
    3fba:	20 91 a0 09 	lds	r18, 0x09A0	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
    3fbe:	e0 91 cc 31 	lds	r30, 0x31CC	; 0x8031cc <rcvD0_buffer>
    3fc2:	f0 91 cd 31 	lds	r31, 0x31CD	; 0x8031cd <rcvD0_buffer+0x1>
    3fc6:	80 91 b0 31 	lds	r24, 0x31B0	; 0x8031b0 <rcvD0_write_index>
    3fca:	90 91 b1 31 	lds	r25, 0x31B1	; 0x8031b1 <rcvD0_write_index+0x1>
    3fce:	e8 0f       	add	r30, r24
    3fd0:	f9 1f       	adc	r31, r25
    3fd2:	20 83       	st	Z, r18
    3fd4:	80 91 b0 31 	lds	r24, 0x31B0	; 0x8031b0 <rcvD0_write_index>
    3fd8:	90 91 b1 31 	lds	r25, 0x31B1	; 0x8031b1 <rcvD0_write_index+0x1>
    3fdc:	01 96       	adiw	r24, 0x01	; 1
    3fde:	84 36       	cpi	r24, 0x64	; 100
    3fe0:	91 05       	cpc	r25, r1
    3fe2:	60 f4       	brcc	.+24     	; 0x3ffc <__vector_88+0x5c>
    3fe4:	80 93 b0 31 	sts	0x31B0, r24	; 0x8031b0 <rcvD0_write_index>
    3fe8:	90 93 b1 31 	sts	0x31B1, r25	; 0x8031b1 <rcvD0_write_index+0x1>
    3fec:	20 91 be 31 	lds	r18, 0x31BE	; 0x8031be <rcvD0_read_index>
    3ff0:	30 91 bf 31 	lds	r19, 0x31BF	; 0x8031bf <rcvD0_read_index+0x1>
    3ff4:	82 17       	cp	r24, r18
    3ff6:	93 07       	cpc	r25, r19
    3ff8:	f1 f4       	brne	.+60     	; 0x4036 <__stack+0x37>
    3ffa:	0c c0       	rjmp	.+24     	; 0x4014 <__stack+0x15>
    3ffc:	10 92 b0 31 	sts	0x31B0, r1	; 0x8031b0 <rcvD0_write_index>
    4000:	10 92 b1 31 	sts	0x31B1, r1	; 0x8031b1 <rcvD0_write_index+0x1>
    4004:	80 91 be 31 	lds	r24, 0x31BE	; 0x8031be <rcvD0_read_index>
    4008:	90 91 bf 31 	lds	r25, 0x31BF	; 0x8031bf <rcvD0_read_index+0x1>
    400c:	18 16       	cp	r1, r24
    400e:	19 06       	cpc	r1, r25
    4010:	91 f4       	brne	.+36     	; 0x4036 <__stack+0x37>
    4012:	0e c0       	rjmp	.+28     	; 0x4030 <__stack+0x31>
    4014:	01 96       	adiw	r24, 0x01	; 1
    4016:	84 36       	cpi	r24, 0x64	; 100
    4018:	91 05       	cpc	r25, r1
    401a:	28 f4       	brcc	.+10     	; 0x4026 <__stack+0x27>
    401c:	80 93 be 31 	sts	0x31BE, r24	; 0x8031be <rcvD0_read_index>
    4020:	90 93 bf 31 	sts	0x31BF, r25	; 0x8031bf <rcvD0_read_index+0x1>
    4024:	08 c0       	rjmp	.+16     	; 0x4036 <__stack+0x37>
    4026:	10 92 be 31 	sts	0x31BE, r1	; 0x8031be <rcvD0_read_index>
    402a:	10 92 bf 31 	sts	0x31BF, r1	; 0x8031bf <rcvD0_read_index+0x1>
    402e:	03 c0       	rjmp	.+6      	; 0x4036 <__stack+0x37>
    4030:	81 e0       	ldi	r24, 0x01	; 1
    4032:	90 e0       	ldi	r25, 0x00	; 0
    4034:	f3 cf       	rjmp	.-26     	; 0x401c <__stack+0x1d>
    4036:	ff 91       	pop	r31
    4038:	ef 91       	pop	r30
    403a:	9f 91       	pop	r25
    403c:	8f 91       	pop	r24
    403e:	3f 91       	pop	r19
    4040:	2f 91       	pop	r18
    4042:	0f 90       	pop	r0
    4044:	0b be       	out	0x3b, r0	; 59
    4046:	0f 90       	pop	r0
    4048:	0f be       	out	0x3f, r0	; 63
    404a:	0f 90       	pop	r0
    404c:	1f 90       	pop	r1
    404e:	18 95       	reti

00004050 <__vector_91>:
    4050:	1f 92       	push	r1
    4052:	0f 92       	push	r0
    4054:	0f b6       	in	r0, 0x3f	; 63
    4056:	0f 92       	push	r0
    4058:	11 24       	eor	r1, r1
    405a:	0b b6       	in	r0, 0x3b	; 59
    405c:	0f 92       	push	r0
    405e:	2f 93       	push	r18
    4060:	3f 93       	push	r19
    4062:	8f 93       	push	r24
    4064:	9f 93       	push	r25
    4066:	ef 93       	push	r30
    4068:	ff 93       	push	r31
    406a:	20 91 b0 09 	lds	r18, 0x09B0	; 0x8009b0 <__TEXT_REGION_LENGTH__+0x7009b0>
    406e:	e0 91 ca 31 	lds	r30, 0x31CA	; 0x8031ca <rcvD1_buffer>
    4072:	f0 91 cb 31 	lds	r31, 0x31CB	; 0x8031cb <rcvD1_buffer+0x1>
    4076:	80 91 ae 31 	lds	r24, 0x31AE	; 0x8031ae <rcvD1_write_index>
    407a:	90 91 af 31 	lds	r25, 0x31AF	; 0x8031af <rcvD1_write_index+0x1>
    407e:	e8 0f       	add	r30, r24
    4080:	f9 1f       	adc	r31, r25
    4082:	20 83       	st	Z, r18
    4084:	80 91 ae 31 	lds	r24, 0x31AE	; 0x8031ae <rcvD1_write_index>
    4088:	90 91 af 31 	lds	r25, 0x31AF	; 0x8031af <rcvD1_write_index+0x1>
    408c:	01 96       	adiw	r24, 0x01	; 1
    408e:	84 36       	cpi	r24, 0x64	; 100
    4090:	91 05       	cpc	r25, r1
    4092:	60 f4       	brcc	.+24     	; 0x40ac <__vector_91+0x5c>
    4094:	80 93 ae 31 	sts	0x31AE, r24	; 0x8031ae <rcvD1_write_index>
    4098:	90 93 af 31 	sts	0x31AF, r25	; 0x8031af <rcvD1_write_index+0x1>
    409c:	20 91 bc 31 	lds	r18, 0x31BC	; 0x8031bc <rcvD1_read_index>
    40a0:	30 91 bd 31 	lds	r19, 0x31BD	; 0x8031bd <rcvD1_read_index+0x1>
    40a4:	82 17       	cp	r24, r18
    40a6:	93 07       	cpc	r25, r19
    40a8:	f1 f4       	brne	.+60     	; 0x40e6 <__vector_91+0x96>
    40aa:	0c c0       	rjmp	.+24     	; 0x40c4 <__vector_91+0x74>
    40ac:	10 92 ae 31 	sts	0x31AE, r1	; 0x8031ae <rcvD1_write_index>
    40b0:	10 92 af 31 	sts	0x31AF, r1	; 0x8031af <rcvD1_write_index+0x1>
    40b4:	80 91 bc 31 	lds	r24, 0x31BC	; 0x8031bc <rcvD1_read_index>
    40b8:	90 91 bd 31 	lds	r25, 0x31BD	; 0x8031bd <rcvD1_read_index+0x1>
    40bc:	18 16       	cp	r1, r24
    40be:	19 06       	cpc	r1, r25
    40c0:	91 f4       	brne	.+36     	; 0x40e6 <__vector_91+0x96>
    40c2:	0e c0       	rjmp	.+28     	; 0x40e0 <__vector_91+0x90>
    40c4:	01 96       	adiw	r24, 0x01	; 1
    40c6:	84 36       	cpi	r24, 0x64	; 100
    40c8:	91 05       	cpc	r25, r1
    40ca:	28 f4       	brcc	.+10     	; 0x40d6 <__vector_91+0x86>
    40cc:	80 93 bc 31 	sts	0x31BC, r24	; 0x8031bc <rcvD1_read_index>
    40d0:	90 93 bd 31 	sts	0x31BD, r25	; 0x8031bd <rcvD1_read_index+0x1>
    40d4:	08 c0       	rjmp	.+16     	; 0x40e6 <__vector_91+0x96>
    40d6:	10 92 bc 31 	sts	0x31BC, r1	; 0x8031bc <rcvD1_read_index>
    40da:	10 92 bd 31 	sts	0x31BD, r1	; 0x8031bd <rcvD1_read_index+0x1>
    40de:	03 c0       	rjmp	.+6      	; 0x40e6 <__vector_91+0x96>
    40e0:	81 e0       	ldi	r24, 0x01	; 1
    40e2:	90 e0       	ldi	r25, 0x00	; 0
    40e4:	f3 cf       	rjmp	.-26     	; 0x40cc <__vector_91+0x7c>
    40e6:	ff 91       	pop	r31
    40e8:	ef 91       	pop	r30
    40ea:	9f 91       	pop	r25
    40ec:	8f 91       	pop	r24
    40ee:	3f 91       	pop	r19
    40f0:	2f 91       	pop	r18
    40f2:	0f 90       	pop	r0
    40f4:	0b be       	out	0x3b, r0	; 59
    40f6:	0f 90       	pop	r0
    40f8:	0f be       	out	0x3f, r0	; 63
    40fa:	0f 90       	pop	r0
    40fc:	1f 90       	pop	r1
    40fe:	18 95       	reti

00004100 <__vector_58>:
    4100:	1f 92       	push	r1
    4102:	0f 92       	push	r0
    4104:	0f b6       	in	r0, 0x3f	; 63
    4106:	0f 92       	push	r0
    4108:	11 24       	eor	r1, r1
    410a:	0b b6       	in	r0, 0x3b	; 59
    410c:	0f 92       	push	r0
    410e:	2f 93       	push	r18
    4110:	3f 93       	push	r19
    4112:	8f 93       	push	r24
    4114:	9f 93       	push	r25
    4116:	ef 93       	push	r30
    4118:	ff 93       	push	r31
    411a:	20 91 a0 0a 	lds	r18, 0x0AA0	; 0x800aa0 <__TEXT_REGION_LENGTH__+0x700aa0>
    411e:	e0 91 c8 31 	lds	r30, 0x31C8	; 0x8031c8 <rcvE0_buffer>
    4122:	f0 91 c9 31 	lds	r31, 0x31C9	; 0x8031c9 <rcvE0_buffer+0x1>
    4126:	80 91 ac 31 	lds	r24, 0x31AC	; 0x8031ac <rcvE0_write_index>
    412a:	90 91 ad 31 	lds	r25, 0x31AD	; 0x8031ad <rcvE0_write_index+0x1>
    412e:	e8 0f       	add	r30, r24
    4130:	f9 1f       	adc	r31, r25
    4132:	20 83       	st	Z, r18
    4134:	80 91 ac 31 	lds	r24, 0x31AC	; 0x8031ac <rcvE0_write_index>
    4138:	90 91 ad 31 	lds	r25, 0x31AD	; 0x8031ad <rcvE0_write_index+0x1>
    413c:	01 96       	adiw	r24, 0x01	; 1
    413e:	84 36       	cpi	r24, 0x64	; 100
    4140:	91 05       	cpc	r25, r1
    4142:	60 f4       	brcc	.+24     	; 0x415c <__vector_58+0x5c>
    4144:	80 93 ac 31 	sts	0x31AC, r24	; 0x8031ac <rcvE0_write_index>
    4148:	90 93 ad 31 	sts	0x31AD, r25	; 0x8031ad <rcvE0_write_index+0x1>
    414c:	20 91 ba 31 	lds	r18, 0x31BA	; 0x8031ba <rcvE0_read_index>
    4150:	30 91 bb 31 	lds	r19, 0x31BB	; 0x8031bb <rcvE0_read_index+0x1>
    4154:	82 17       	cp	r24, r18
    4156:	93 07       	cpc	r25, r19
    4158:	f1 f4       	brne	.+60     	; 0x4196 <__vector_58+0x96>
    415a:	0c c0       	rjmp	.+24     	; 0x4174 <__vector_58+0x74>
    415c:	10 92 ac 31 	sts	0x31AC, r1	; 0x8031ac <rcvE0_write_index>
    4160:	10 92 ad 31 	sts	0x31AD, r1	; 0x8031ad <rcvE0_write_index+0x1>
    4164:	80 91 ba 31 	lds	r24, 0x31BA	; 0x8031ba <rcvE0_read_index>
    4168:	90 91 bb 31 	lds	r25, 0x31BB	; 0x8031bb <rcvE0_read_index+0x1>
    416c:	18 16       	cp	r1, r24
    416e:	19 06       	cpc	r1, r25
    4170:	91 f4       	brne	.+36     	; 0x4196 <__vector_58+0x96>
    4172:	0e c0       	rjmp	.+28     	; 0x4190 <__vector_58+0x90>
    4174:	01 96       	adiw	r24, 0x01	; 1
    4176:	84 36       	cpi	r24, 0x64	; 100
    4178:	91 05       	cpc	r25, r1
    417a:	28 f4       	brcc	.+10     	; 0x4186 <__vector_58+0x86>
    417c:	80 93 ba 31 	sts	0x31BA, r24	; 0x8031ba <rcvE0_read_index>
    4180:	90 93 bb 31 	sts	0x31BB, r25	; 0x8031bb <rcvE0_read_index+0x1>
    4184:	08 c0       	rjmp	.+16     	; 0x4196 <__vector_58+0x96>
    4186:	10 92 ba 31 	sts	0x31BA, r1	; 0x8031ba <rcvE0_read_index>
    418a:	10 92 bb 31 	sts	0x31BB, r1	; 0x8031bb <rcvE0_read_index+0x1>
    418e:	03 c0       	rjmp	.+6      	; 0x4196 <__vector_58+0x96>
    4190:	81 e0       	ldi	r24, 0x01	; 1
    4192:	90 e0       	ldi	r25, 0x00	; 0
    4194:	f3 cf       	rjmp	.-26     	; 0x417c <__vector_58+0x7c>
    4196:	ff 91       	pop	r31
    4198:	ef 91       	pop	r30
    419a:	9f 91       	pop	r25
    419c:	8f 91       	pop	r24
    419e:	3f 91       	pop	r19
    41a0:	2f 91       	pop	r18
    41a2:	0f 90       	pop	r0
    41a4:	0b be       	out	0x3b, r0	; 59
    41a6:	0f 90       	pop	r0
    41a8:	0f be       	out	0x3f, r0	; 63
    41aa:	0f 90       	pop	r0
    41ac:	1f 90       	pop	r1
    41ae:	18 95       	reti

000041b0 <__vector_61>:
    41b0:	1f 92       	push	r1
    41b2:	0f 92       	push	r0
    41b4:	0f b6       	in	r0, 0x3f	; 63
    41b6:	0f 92       	push	r0
    41b8:	11 24       	eor	r1, r1
    41ba:	0b b6       	in	r0, 0x3b	; 59
    41bc:	0f 92       	push	r0
    41be:	2f 93       	push	r18
    41c0:	3f 93       	push	r19
    41c2:	8f 93       	push	r24
    41c4:	9f 93       	push	r25
    41c6:	ef 93       	push	r30
    41c8:	ff 93       	push	r31
    41ca:	20 91 b0 0a 	lds	r18, 0x0AB0	; 0x800ab0 <__TEXT_REGION_LENGTH__+0x700ab0>
    41ce:	e0 91 c6 31 	lds	r30, 0x31C6	; 0x8031c6 <rcvE1_buffer>
    41d2:	f0 91 c7 31 	lds	r31, 0x31C7	; 0x8031c7 <rcvE1_buffer+0x1>
    41d6:	80 91 aa 31 	lds	r24, 0x31AA	; 0x8031aa <rcvE1_write_index>
    41da:	90 91 ab 31 	lds	r25, 0x31AB	; 0x8031ab <rcvE1_write_index+0x1>
    41de:	e8 0f       	add	r30, r24
    41e0:	f9 1f       	adc	r31, r25
    41e2:	20 83       	st	Z, r18
    41e4:	80 91 aa 31 	lds	r24, 0x31AA	; 0x8031aa <rcvE1_write_index>
    41e8:	90 91 ab 31 	lds	r25, 0x31AB	; 0x8031ab <rcvE1_write_index+0x1>
    41ec:	01 96       	adiw	r24, 0x01	; 1
    41ee:	84 36       	cpi	r24, 0x64	; 100
    41f0:	91 05       	cpc	r25, r1
    41f2:	60 f4       	brcc	.+24     	; 0x420c <__vector_61+0x5c>
    41f4:	80 93 aa 31 	sts	0x31AA, r24	; 0x8031aa <rcvE1_write_index>
    41f8:	90 93 ab 31 	sts	0x31AB, r25	; 0x8031ab <rcvE1_write_index+0x1>
    41fc:	20 91 b8 31 	lds	r18, 0x31B8	; 0x8031b8 <rcvE1_read_index>
    4200:	30 91 b9 31 	lds	r19, 0x31B9	; 0x8031b9 <rcvE1_read_index+0x1>
    4204:	82 17       	cp	r24, r18
    4206:	93 07       	cpc	r25, r19
    4208:	f1 f4       	brne	.+60     	; 0x4246 <__vector_61+0x96>
    420a:	0c c0       	rjmp	.+24     	; 0x4224 <__vector_61+0x74>
    420c:	10 92 aa 31 	sts	0x31AA, r1	; 0x8031aa <rcvE1_write_index>
    4210:	10 92 ab 31 	sts	0x31AB, r1	; 0x8031ab <rcvE1_write_index+0x1>
    4214:	80 91 b8 31 	lds	r24, 0x31B8	; 0x8031b8 <rcvE1_read_index>
    4218:	90 91 b9 31 	lds	r25, 0x31B9	; 0x8031b9 <rcvE1_read_index+0x1>
    421c:	18 16       	cp	r1, r24
    421e:	19 06       	cpc	r1, r25
    4220:	91 f4       	brne	.+36     	; 0x4246 <__vector_61+0x96>
    4222:	0e c0       	rjmp	.+28     	; 0x4240 <__vector_61+0x90>
    4224:	01 96       	adiw	r24, 0x01	; 1
    4226:	84 36       	cpi	r24, 0x64	; 100
    4228:	91 05       	cpc	r25, r1
    422a:	28 f4       	brcc	.+10     	; 0x4236 <__vector_61+0x86>
    422c:	80 93 b8 31 	sts	0x31B8, r24	; 0x8031b8 <rcvE1_read_index>
    4230:	90 93 b9 31 	sts	0x31B9, r25	; 0x8031b9 <rcvE1_read_index+0x1>
    4234:	08 c0       	rjmp	.+16     	; 0x4246 <__vector_61+0x96>
    4236:	10 92 b8 31 	sts	0x31B8, r1	; 0x8031b8 <rcvE1_read_index>
    423a:	10 92 b9 31 	sts	0x31B9, r1	; 0x8031b9 <rcvE1_read_index+0x1>
    423e:	03 c0       	rjmp	.+6      	; 0x4246 <__vector_61+0x96>
    4240:	81 e0       	ldi	r24, 0x01	; 1
    4242:	90 e0       	ldi	r25, 0x00	; 0
    4244:	f3 cf       	rjmp	.-26     	; 0x422c <__vector_61+0x7c>
    4246:	ff 91       	pop	r31
    4248:	ef 91       	pop	r30
    424a:	9f 91       	pop	r25
    424c:	8f 91       	pop	r24
    424e:	3f 91       	pop	r19
    4250:	2f 91       	pop	r18
    4252:	0f 90       	pop	r0
    4254:	0b be       	out	0x3b, r0	; 59
    4256:	0f 90       	pop	r0
    4258:	0f be       	out	0x3f, r0	; 63
    425a:	0f 90       	pop	r0
    425c:	1f 90       	pop	r1
    425e:	18 95       	reti

00004260 <__vector_119>:
    4260:	1f 92       	push	r1
    4262:	0f 92       	push	r0
    4264:	0f b6       	in	r0, 0x3f	; 63
    4266:	0f 92       	push	r0
    4268:	11 24       	eor	r1, r1
    426a:	0b b6       	in	r0, 0x3b	; 59
    426c:	0f 92       	push	r0
    426e:	2f 93       	push	r18
    4270:	3f 93       	push	r19
    4272:	8f 93       	push	r24
    4274:	9f 93       	push	r25
    4276:	ef 93       	push	r30
    4278:	ff 93       	push	r31
    427a:	20 91 a0 0b 	lds	r18, 0x0BA0	; 0x800ba0 <__TEXT_REGION_LENGTH__+0x700ba0>
    427e:	e0 91 c4 31 	lds	r30, 0x31C4	; 0x8031c4 <rcvF0_buffer>
    4282:	f0 91 c5 31 	lds	r31, 0x31C5	; 0x8031c5 <rcvF0_buffer+0x1>
    4286:	80 91 a8 31 	lds	r24, 0x31A8	; 0x8031a8 <rcvF0_write_index>
    428a:	90 91 a9 31 	lds	r25, 0x31A9	; 0x8031a9 <rcvF0_write_index+0x1>
    428e:	e8 0f       	add	r30, r24
    4290:	f9 1f       	adc	r31, r25
    4292:	20 83       	st	Z, r18
    4294:	80 91 a8 31 	lds	r24, 0x31A8	; 0x8031a8 <rcvF0_write_index>
    4298:	90 91 a9 31 	lds	r25, 0x31A9	; 0x8031a9 <rcvF0_write_index+0x1>
    429c:	01 96       	adiw	r24, 0x01	; 1
    429e:	84 36       	cpi	r24, 0x64	; 100
    42a0:	91 05       	cpc	r25, r1
    42a2:	60 f4       	brcc	.+24     	; 0x42bc <__vector_119+0x5c>
    42a4:	80 93 a8 31 	sts	0x31A8, r24	; 0x8031a8 <rcvF0_write_index>
    42a8:	90 93 a9 31 	sts	0x31A9, r25	; 0x8031a9 <rcvF0_write_index+0x1>
    42ac:	20 91 b6 31 	lds	r18, 0x31B6	; 0x8031b6 <rcvF0_read_index>
    42b0:	30 91 b7 31 	lds	r19, 0x31B7	; 0x8031b7 <rcvF0_read_index+0x1>
    42b4:	82 17       	cp	r24, r18
    42b6:	93 07       	cpc	r25, r19
    42b8:	f1 f4       	brne	.+60     	; 0x42f6 <__vector_119+0x96>
    42ba:	0c c0       	rjmp	.+24     	; 0x42d4 <__vector_119+0x74>
    42bc:	10 92 a8 31 	sts	0x31A8, r1	; 0x8031a8 <rcvF0_write_index>
    42c0:	10 92 a9 31 	sts	0x31A9, r1	; 0x8031a9 <rcvF0_write_index+0x1>
    42c4:	80 91 b6 31 	lds	r24, 0x31B6	; 0x8031b6 <rcvF0_read_index>
    42c8:	90 91 b7 31 	lds	r25, 0x31B7	; 0x8031b7 <rcvF0_read_index+0x1>
    42cc:	18 16       	cp	r1, r24
    42ce:	19 06       	cpc	r1, r25
    42d0:	91 f4       	brne	.+36     	; 0x42f6 <__vector_119+0x96>
    42d2:	0e c0       	rjmp	.+28     	; 0x42f0 <__vector_119+0x90>
    42d4:	01 96       	adiw	r24, 0x01	; 1
    42d6:	84 36       	cpi	r24, 0x64	; 100
    42d8:	91 05       	cpc	r25, r1
    42da:	28 f4       	brcc	.+10     	; 0x42e6 <__vector_119+0x86>
    42dc:	80 93 b6 31 	sts	0x31B6, r24	; 0x8031b6 <rcvF0_read_index>
    42e0:	90 93 b7 31 	sts	0x31B7, r25	; 0x8031b7 <rcvF0_read_index+0x1>
    42e4:	08 c0       	rjmp	.+16     	; 0x42f6 <__vector_119+0x96>
    42e6:	10 92 b6 31 	sts	0x31B6, r1	; 0x8031b6 <rcvF0_read_index>
    42ea:	10 92 b7 31 	sts	0x31B7, r1	; 0x8031b7 <rcvF0_read_index+0x1>
    42ee:	03 c0       	rjmp	.+6      	; 0x42f6 <__vector_119+0x96>
    42f0:	81 e0       	ldi	r24, 0x01	; 1
    42f2:	90 e0       	ldi	r25, 0x00	; 0
    42f4:	f3 cf       	rjmp	.-26     	; 0x42dc <__vector_119+0x7c>
    42f6:	ff 91       	pop	r31
    42f8:	ef 91       	pop	r30
    42fa:	9f 91       	pop	r25
    42fc:	8f 91       	pop	r24
    42fe:	3f 91       	pop	r19
    4300:	2f 91       	pop	r18
    4302:	0f 90       	pop	r0
    4304:	0b be       	out	0x3b, r0	; 59
    4306:	0f 90       	pop	r0
    4308:	0f be       	out	0x3f, r0	; 63
    430a:	0f 90       	pop	r0
    430c:	1f 90       	pop	r1
    430e:	18 95       	reti

00004310 <main>:
 *  reset.
 *  @return This is a real-time microcontroller program which doesn't return. Ever.
 */

int main (void)
{
    4310:	0f 93       	push	r16
    4312:	1f 93       	push	r17
    4314:	cf 93       	push	r28
    4316:	df 93       	push	r29
    4318:	cd b7       	in	r28, 0x3d	; 61
    431a:	de b7       	in	r29, 0x3e	; 62
    431c:	ea 97       	sbiw	r28, 0x3a	; 58
    431e:	cd bf       	out	0x3d, r28	; 61
    4320:	de bf       	out	0x3e, r29	; 62
	cli();
    4322:	f8 94       	cli
	// Configure the system clock to use internal oscillator at 32 MHz
	config_SYSCLOCK();
    4324:	0e 94 1b 06 	call	0xc36	; 0xc36 <_Z15config_SYSCLOCKv>
	
	//check clock output
	PORTD.OUTCLR = PIN7_bm;
    4328:	e0 e6       	ldi	r30, 0x60	; 96
    432a:	f6 e0       	ldi	r31, 0x06	; 6
    432c:	80 e8       	ldi	r24, 0x80	; 128
    432e:	86 83       	std	Z+6, r24	; 0x06
	PORTD.DIRSET = PIN7_bm;						//configure PD7 for output
    4330:	81 83       	std	Z+1, r24	; 0x01
	PORTCFG.CLKEVOUT = PORTCFG_CLKOUT_PD7_gc; //configure clock to output on PD7
    4332:	82 e0       	ldi	r24, 0x02	; 2
    4334:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
	
	// Disable the watchdog timer unless it's needed later. This is important because
	// sometimes the watchdog timer may have been left on...and it tends to stay on	 
	wdt_disable ();
    4338:	9d ef       	ldi	r25, 0xFD	; 253
    433a:	88 ed       	ldi	r24, 0xD8	; 216
    433c:	08 b6       	in	r0, 0x38	; 56
    433e:	18 be       	out	0x38, r1	; 56
    4340:	84 bf       	out	0x34, r24	; 52
    4342:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
    4346:	08 be       	out	0x38, r0	; 56

	// Configure a serial port which can be used by a task to print debugging infor-
	// mation, or to allow user interaction, or for whatever use is appropriate.  The
	// serial port will be used by the user interface task after setup is complete and
	// the task scheduler has been started by the function vTaskStartScheduler()
	rs232 ser_dev(0,&USARTD0); // Create a serial device on USART E0
    4348:	40 ea       	ldi	r20, 0xA0	; 160
    434a:	59 e0       	ldi	r21, 0x09	; 9
    434c:	60 e0       	ldi	r22, 0x00	; 0
    434e:	70 e0       	ldi	r23, 0x00	; 0
    4350:	ce 01       	movw	r24, r28
    4352:	01 96       	adiw	r24, 0x01	; 1
    4354:	0e 94 7e 1e 	call	0x3cfc	; 0x3cfc <_ZN5rs232C1EjP12USART_struct>
	
	rs232 wifi_ser(1,&USARTC1); // Create a serial device for the Wifi Module
    4358:	40 eb       	ldi	r20, 0xB0	; 176
    435a:	58 e0       	ldi	r21, 0x08	; 8
    435c:	61 e0       	ldi	r22, 0x01	; 1
    435e:	70 e0       	ldi	r23, 0x00	; 0
    4360:	ce 01       	movw	r24, r28
    4362:	4e 96       	adiw	r24, 0x1e	; 30
    4364:	0e 94 7e 1e 	call	0x3cfc	; 0x3cfc <_ZN5rs232C1EjP12USART_struct>
	
	ser_dev << clrscr << "FreeRTOS Xmega Testing Program" << endl << endl;
    4368:	67 e0       	ldi	r22, 0x07	; 7
    436a:	ce 01       	movw	r24, r28
    436c:	01 96       	adiw	r24, 0x01	; 1
    436e:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    4372:	8c 01       	movw	r16, r24
    4374:	68 eb       	ldi	r22, 0xB8	; 184
    4376:	70 e2       	ldi	r23, 0x20	; 32
    4378:	0e 94 7b 1c 	call	0x38f6	; 0x38f6 <_ZN8emstream4putsEPKc>
    437c:	66 e0       	ldi	r22, 0x06	; 6
    437e:	c8 01       	movw	r24, r16
    4380:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
    4384:	66 e0       	ldi	r22, 0x06	; 6
    4386:	0e 94 b2 1c 	call	0x3964	; 0x3964 <_ZN8emstreamlsE15ser_manipulator>
	// of the task transitions.
	new task_LED ("LED BLINKER", task_priority (1), 260, &ser_dev);*/

	// The LED blinking task is also low priority and is used to test the timing accuracy
	// of the task transitions.
	new task_motor ("MOTOR TASK", task_priority (1), 1000, &ser_dev);
    438a:	82 e1       	ldi	r24, 0x12	; 18
    438c:	90 e0       	ldi	r25, 0x00	; 0
    438e:	0e 94 ad 1b 	call	0x375a	; 0x375a <_Znwj>
    4392:	8e 01       	movw	r16, r28
    4394:	0f 5f       	subi	r16, 0xFF	; 255
    4396:	1f 4f       	sbci	r17, 0xFF	; 255
    4398:	28 ee       	ldi	r18, 0xE8	; 232
    439a:	33 e0       	ldi	r19, 0x03	; 3
    439c:	41 e0       	ldi	r20, 0x01	; 1
    439e:	67 ed       	ldi	r22, 0xD7	; 215
    43a0:	70 e2       	ldi	r23, 0x20	; 32
    43a2:	0e 94 f6 05 	call	0xbec	; 0xbec <_ZN10task_motorC1EPKchjP8emstream>
	new FollowInstructions ("FOLLOW INST", task_priority(5), 200, &wifi_ser);
    43a6:	86 e1       	ldi	r24, 0x16	; 22
    43a8:	90 e0       	ldi	r25, 0x00	; 0
    43aa:	0e 94 ad 1b 	call	0x375a	; 0x375a <_Znwj>
    43ae:	03 5e       	subi	r16, 0xE3	; 227
    43b0:	1f 4f       	sbci	r17, 0xFF	; 255
    43b2:	28 ec       	ldi	r18, 0xC8	; 200
    43b4:	30 e0       	ldi	r19, 0x00	; 0
    43b6:	44 e0       	ldi	r20, 0x04	; 4
    43b8:	62 ee       	ldi	r22, 0xE2	; 226
    43ba:	70 e2       	ldi	r23, 0x20	; 32
    43bc:	0e 94 4a 02 	call	0x494	; 0x494 <_ZN18FollowInstructionsC1EPKchjP8emstream>
	
	// Enable high - low level interrupts and enable global interrupts
	PMIC_CTRL = (1 << PMIC_HILVLEN_bp | 1 << PMIC_MEDLVLEN_bp | 1 << PMIC_LOLVLEN_bp);
    43c0:	87 e0       	ldi	r24, 0x07	; 7
    43c2:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
	sei();
    43c6:	78 94       	sei
	
	// Here's where the RTOS scheduler is started up. It should never exit as long as
	// power is on and the microcontroller isn't rebooted
	vTaskStartScheduler ();
    43c8:	0e 94 75 15 	call	0x2aea	; 0x2aea <vTaskStartScheduler>
    43cc:	80 e0       	ldi	r24, 0x00	; 0
    43ce:	90 e0       	ldi	r25, 0x00	; 0
    43d0:	ea 96       	adiw	r28, 0x3a	; 58
    43d2:	cd bf       	out	0x3d, r28	; 61
    43d4:	de bf       	out	0x3e, r29	; 62
    43d6:	df 91       	pop	r29
    43d8:	cf 91       	pop	r28
    43da:	1f 91       	pop	r17
    43dc:	0f 91       	pop	r16
    43de:	08 95       	ret

000043e0 <_GLOBAL__sub_I_print_ser_queue>:
    43e0:	0f 93       	push	r16
    43e2:	1f 93       	push	r17
#include "task_LED.h"                      // Header for user interface task
#include "task_motor.h"                      // Header for motor task
#include "FollowInstructions.h"


frt_text_queue print_ser_queue (32, NULL, 10);
    43e4:	0a e0       	ldi	r16, 0x0A	; 10
    43e6:	10 e0       	ldi	r17, 0x00	; 0
    43e8:	20 e0       	ldi	r18, 0x00	; 0
    43ea:	30 e0       	ldi	r19, 0x00	; 0
    43ec:	40 e0       	ldi	r20, 0x00	; 0
    43ee:	50 e0       	ldi	r21, 0x00	; 0
    43f0:	60 e2       	ldi	r22, 0x20	; 32
    43f2:	70 e0       	ldi	r23, 0x00	; 0
    43f4:	82 ed       	ldi	r24, 0xD2	; 210
    43f6:	91 e3       	ldi	r25, 0x31	; 49
    43f8:	0e 94 7e 1b 	call	0x36fc	; 0x36fc <_ZN14frt_text_queueC1EjP8emstreamm>
	sei();
	
	// Here's where the RTOS scheduler is started up. It should never exit as long as
	// power is on and the microcontroller isn't rebooted
	vTaskStartScheduler ();
    43fc:	1f 91       	pop	r17
    43fe:	0f 91       	pop	r16
    4400:	08 95       	ret

00004402 <__divmodhi4>:
    4402:	97 fb       	bst	r25, 7
    4404:	07 2e       	mov	r0, r23
    4406:	16 f4       	brtc	.+4      	; 0x440c <__divmodhi4+0xa>
    4408:	00 94       	com	r0
    440a:	07 d0       	rcall	.+14     	; 0x441a <__divmodhi4_neg1>
    440c:	77 fd       	sbrc	r23, 7
    440e:	09 d0       	rcall	.+18     	; 0x4422 <__divmodhi4_neg2>
    4410:	0e 94 4e 22 	call	0x449c	; 0x449c <__udivmodhi4>
    4414:	07 fc       	sbrc	r0, 7
    4416:	05 d0       	rcall	.+10     	; 0x4422 <__divmodhi4_neg2>
    4418:	3e f4       	brtc	.+14     	; 0x4428 <__divmodhi4_exit>

0000441a <__divmodhi4_neg1>:
    441a:	90 95       	com	r25
    441c:	81 95       	neg	r24
    441e:	9f 4f       	sbci	r25, 0xFF	; 255
    4420:	08 95       	ret

00004422 <__divmodhi4_neg2>:
    4422:	70 95       	com	r23
    4424:	61 95       	neg	r22
    4426:	7f 4f       	sbci	r23, 0xFF	; 255

00004428 <__divmodhi4_exit>:
    4428:	08 95       	ret

0000442a <__udivmodsi4>:
    442a:	a1 e2       	ldi	r26, 0x21	; 33
    442c:	1a 2e       	mov	r1, r26
    442e:	aa 1b       	sub	r26, r26
    4430:	bb 1b       	sub	r27, r27
    4432:	fd 01       	movw	r30, r26
    4434:	0d c0       	rjmp	.+26     	; 0x4450 <__udivmodsi4_ep>

00004436 <__udivmodsi4_loop>:
    4436:	aa 1f       	adc	r26, r26
    4438:	bb 1f       	adc	r27, r27
    443a:	ee 1f       	adc	r30, r30
    443c:	ff 1f       	adc	r31, r31
    443e:	a2 17       	cp	r26, r18
    4440:	b3 07       	cpc	r27, r19
    4442:	e4 07       	cpc	r30, r20
    4444:	f5 07       	cpc	r31, r21
    4446:	20 f0       	brcs	.+8      	; 0x4450 <__udivmodsi4_ep>
    4448:	a2 1b       	sub	r26, r18
    444a:	b3 0b       	sbc	r27, r19
    444c:	e4 0b       	sbc	r30, r20
    444e:	f5 0b       	sbc	r31, r21

00004450 <__udivmodsi4_ep>:
    4450:	66 1f       	adc	r22, r22
    4452:	77 1f       	adc	r23, r23
    4454:	88 1f       	adc	r24, r24
    4456:	99 1f       	adc	r25, r25
    4458:	1a 94       	dec	r1
    445a:	69 f7       	brne	.-38     	; 0x4436 <__udivmodsi4_loop>
    445c:	60 95       	com	r22
    445e:	70 95       	com	r23
    4460:	80 95       	com	r24
    4462:	90 95       	com	r25
    4464:	9b 01       	movw	r18, r22
    4466:	ac 01       	movw	r20, r24
    4468:	bd 01       	movw	r22, r26
    446a:	cf 01       	movw	r24, r30
    446c:	08 95       	ret

0000446e <__tablejump2__>:
    446e:	ee 0f       	add	r30, r30
    4470:	ff 1f       	adc	r31, r31
    4472:	88 1f       	adc	r24, r24
    4474:	8b bf       	out	0x3b, r24	; 59
    4476:	07 90       	elpm	r0, Z+
    4478:	f6 91       	elpm	r31, Z
    447a:	e0 2d       	mov	r30, r0
    447c:	19 94       	eijmp

0000447e <__umulhisi3>:
    447e:	a2 9f       	mul	r26, r18
    4480:	b0 01       	movw	r22, r0
    4482:	b3 9f       	mul	r27, r19
    4484:	c0 01       	movw	r24, r0
    4486:	a3 9f       	mul	r26, r19
    4488:	70 0d       	add	r23, r0
    448a:	81 1d       	adc	r24, r1
    448c:	11 24       	eor	r1, r1
    448e:	91 1d       	adc	r25, r1
    4490:	b2 9f       	mul	r27, r18
    4492:	70 0d       	add	r23, r0
    4494:	81 1d       	adc	r24, r1
    4496:	11 24       	eor	r1, r1
    4498:	91 1d       	adc	r25, r1
    449a:	08 95       	ret

0000449c <__udivmodhi4>:
    449c:	aa 1b       	sub	r26, r26
    449e:	bb 1b       	sub	r27, r27
    44a0:	51 e1       	ldi	r21, 0x11	; 17
    44a2:	07 c0       	rjmp	.+14     	; 0x44b2 <__udivmodhi4_ep>

000044a4 <__udivmodhi4_loop>:
    44a4:	aa 1f       	adc	r26, r26
    44a6:	bb 1f       	adc	r27, r27
    44a8:	a6 17       	cp	r26, r22
    44aa:	b7 07       	cpc	r27, r23
    44ac:	10 f0       	brcs	.+4      	; 0x44b2 <__udivmodhi4_ep>
    44ae:	a6 1b       	sub	r26, r22
    44b0:	b7 0b       	sbc	r27, r23

000044b2 <__udivmodhi4_ep>:
    44b2:	88 1f       	adc	r24, r24
    44b4:	99 1f       	adc	r25, r25
    44b6:	5a 95       	dec	r21
    44b8:	a9 f7       	brne	.-22     	; 0x44a4 <__udivmodhi4_loop>
    44ba:	80 95       	com	r24
    44bc:	90 95       	com	r25
    44be:	bc 01       	movw	r22, r24
    44c0:	cd 01       	movw	r24, r26
    44c2:	08 95       	ret

000044c4 <memcpy>:
    44c4:	fb 01       	movw	r30, r22
    44c6:	dc 01       	movw	r26, r24
    44c8:	02 c0       	rjmp	.+4      	; 0x44ce <memcpy+0xa>
    44ca:	01 90       	ld	r0, Z+
    44cc:	0d 92       	st	X+, r0
    44ce:	41 50       	subi	r20, 0x01	; 1
    44d0:	50 40       	sbci	r21, 0x00	; 0
    44d2:	d8 f7       	brcc	.-10     	; 0x44ca <memcpy+0x6>
    44d4:	08 95       	ret

000044d6 <memset>:
    44d6:	dc 01       	movw	r26, r24
    44d8:	01 c0       	rjmp	.+2      	; 0x44dc <memset+0x6>
    44da:	6d 93       	st	X+, r22
    44dc:	41 50       	subi	r20, 0x01	; 1
    44de:	50 40       	sbci	r21, 0x00	; 0
    44e0:	e0 f7       	brcc	.-8      	; 0x44da <memset+0x4>
    44e2:	08 95       	ret

000044e4 <strncpy>:
    44e4:	fb 01       	movw	r30, r22
    44e6:	dc 01       	movw	r26, r24
    44e8:	41 50       	subi	r20, 0x01	; 1
    44ea:	50 40       	sbci	r21, 0x00	; 0
    44ec:	48 f0       	brcs	.+18     	; 0x4500 <strncpy+0x1c>
    44ee:	01 90       	ld	r0, Z+
    44f0:	0d 92       	st	X+, r0
    44f2:	00 20       	and	r0, r0
    44f4:	c9 f7       	brne	.-14     	; 0x44e8 <strncpy+0x4>
    44f6:	01 c0       	rjmp	.+2      	; 0x44fa <strncpy+0x16>
    44f8:	1d 92       	st	X+, r1
    44fa:	41 50       	subi	r20, 0x01	; 1
    44fc:	50 40       	sbci	r21, 0x00	; 0
    44fe:	e0 f7       	brcc	.-8      	; 0x44f8 <strncpy+0x14>
    4500:	08 95       	ret

00004502 <__itoa_ncheck>:
    4502:	bb 27       	eor	r27, r27
    4504:	4a 30       	cpi	r20, 0x0A	; 10
    4506:	31 f4       	brne	.+12     	; 0x4514 <__itoa_ncheck+0x12>
    4508:	99 23       	and	r25, r25
    450a:	22 f4       	brpl	.+8      	; 0x4514 <__itoa_ncheck+0x12>
    450c:	bd e2       	ldi	r27, 0x2D	; 45
    450e:	90 95       	com	r25
    4510:	81 95       	neg	r24
    4512:	9f 4f       	sbci	r25, 0xFF	; 255
    4514:	0c 94 c5 22 	jmp	0x458a	; 0x458a <__utoa_common>

00004518 <ultoa>:
    4518:	25 32       	cpi	r18, 0x25	; 37
    451a:	31 05       	cpc	r19, r1
    451c:	20 f4       	brcc	.+8      	; 0x4526 <ultoa+0xe>
    451e:	22 30       	cpi	r18, 0x02	; 2
    4520:	10 f0       	brcs	.+4      	; 0x4526 <ultoa+0xe>
    4522:	0c 94 97 22 	jmp	0x452e	; 0x452e <__ultoa_ncheck>
    4526:	fa 01       	movw	r30, r20
    4528:	10 82       	st	Z, r1
    452a:	ca 01       	movw	r24, r20
    452c:	08 95       	ret

0000452e <__ultoa_ncheck>:
    452e:	bb 27       	eor	r27, r27

00004530 <__ultoa_common>:
    4530:	fa 01       	movw	r30, r20
    4532:	a6 2f       	mov	r26, r22
    4534:	62 17       	cp	r22, r18
    4536:	71 05       	cpc	r23, r1
    4538:	81 05       	cpc	r24, r1
    453a:	91 05       	cpc	r25, r1
    453c:	33 0b       	sbc	r19, r19
    453e:	30 fb       	bst	r19, 0
    4540:	66 f0       	brts	.+24     	; 0x455a <__ultoa_common+0x2a>
    4542:	aa 27       	eor	r26, r26
    4544:	66 0f       	add	r22, r22
    4546:	77 1f       	adc	r23, r23
    4548:	88 1f       	adc	r24, r24
    454a:	99 1f       	adc	r25, r25
    454c:	aa 1f       	adc	r26, r26
    454e:	a2 17       	cp	r26, r18
    4550:	10 f0       	brcs	.+4      	; 0x4556 <__ultoa_common+0x26>
    4552:	a2 1b       	sub	r26, r18
    4554:	63 95       	inc	r22
    4556:	38 50       	subi	r19, 0x08	; 8
    4558:	a9 f7       	brne	.-22     	; 0x4544 <__ultoa_common+0x14>
    455a:	a0 5d       	subi	r26, 0xD0	; 208
    455c:	aa 33       	cpi	r26, 0x3A	; 58
    455e:	08 f0       	brcs	.+2      	; 0x4562 <__ultoa_common+0x32>
    4560:	a9 5d       	subi	r26, 0xD9	; 217
    4562:	a1 93       	st	Z+, r26
    4564:	36 f7       	brtc	.-52     	; 0x4532 <__ultoa_common+0x2>
    4566:	b1 11       	cpse	r27, r1
    4568:	b1 93       	st	Z+, r27
    456a:	10 82       	st	Z, r1
    456c:	ca 01       	movw	r24, r20
    456e:	0c 94 de 22 	jmp	0x45bc	; 0x45bc <strrev>

00004572 <utoa>:
    4572:	45 32       	cpi	r20, 0x25	; 37
    4574:	51 05       	cpc	r21, r1
    4576:	20 f4       	brcc	.+8      	; 0x4580 <utoa+0xe>
    4578:	42 30       	cpi	r20, 0x02	; 2
    457a:	10 f0       	brcs	.+4      	; 0x4580 <utoa+0xe>
    457c:	0c 94 c4 22 	jmp	0x4588	; 0x4588 <__utoa_ncheck>
    4580:	fb 01       	movw	r30, r22
    4582:	10 82       	st	Z, r1
    4584:	cb 01       	movw	r24, r22
    4586:	08 95       	ret

00004588 <__utoa_ncheck>:
    4588:	bb 27       	eor	r27, r27

0000458a <__utoa_common>:
    458a:	fb 01       	movw	r30, r22
    458c:	55 27       	eor	r21, r21
    458e:	aa 27       	eor	r26, r26
    4590:	88 0f       	add	r24, r24
    4592:	99 1f       	adc	r25, r25
    4594:	aa 1f       	adc	r26, r26
    4596:	a4 17       	cp	r26, r20
    4598:	10 f0       	brcs	.+4      	; 0x459e <__utoa_common+0x14>
    459a:	a4 1b       	sub	r26, r20
    459c:	83 95       	inc	r24
    459e:	50 51       	subi	r21, 0x10	; 16
    45a0:	b9 f7       	brne	.-18     	; 0x4590 <__utoa_common+0x6>
    45a2:	a0 5d       	subi	r26, 0xD0	; 208
    45a4:	aa 33       	cpi	r26, 0x3A	; 58
    45a6:	08 f0       	brcs	.+2      	; 0x45aa <__utoa_common+0x20>
    45a8:	a9 5d       	subi	r26, 0xD9	; 217
    45aa:	a1 93       	st	Z+, r26
    45ac:	00 97       	sbiw	r24, 0x00	; 0
    45ae:	79 f7       	brne	.-34     	; 0x458e <__utoa_common+0x4>
    45b0:	b1 11       	cpse	r27, r1
    45b2:	b1 93       	st	Z+, r27
    45b4:	11 92       	st	Z+, r1
    45b6:	cb 01       	movw	r24, r22
    45b8:	0c 94 de 22 	jmp	0x45bc	; 0x45bc <strrev>

000045bc <strrev>:
    45bc:	dc 01       	movw	r26, r24
    45be:	fc 01       	movw	r30, r24
    45c0:	67 2f       	mov	r22, r23
    45c2:	71 91       	ld	r23, Z+
    45c4:	77 23       	and	r23, r23
    45c6:	e1 f7       	brne	.-8      	; 0x45c0 <strrev+0x4>
    45c8:	32 97       	sbiw	r30, 0x02	; 2
    45ca:	04 c0       	rjmp	.+8      	; 0x45d4 <strrev+0x18>
    45cc:	7c 91       	ld	r23, X
    45ce:	6d 93       	st	X+, r22
    45d0:	70 83       	st	Z, r23
    45d2:	62 91       	ld	r22, -Z
    45d4:	ae 17       	cp	r26, r30
    45d6:	bf 07       	cpc	r27, r31
    45d8:	c8 f3       	brcs	.-14     	; 0x45cc <strrev+0x10>
    45da:	08 95       	ret

000045dc <_exit>:
    45dc:	f8 94       	cli

000045de <__stop_program>:
    45de:	ff cf       	rjmp	.-2      	; 0x45de <__stop_program>
